
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 4d87019, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/DATA/raw_designs/yosys_designs/svinterfaces/svinterface1_ref.v
Parsing SystemVerilog input from `/home/zhigang/DATA/raw_designs/yosys_designs/svinterfaces/svinterface1_ref.v' to AST representation.
Storing AST representation for module `$abstract\TopModule'.
Storing AST representation for module `$abstract\SubModule1'.
Storing AST representation for module `$abstract\SubModule2'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: $abstract\SubModule2
root of   0 design levels: $abstract\SubModule1
root of   0 design levels: $abstract\TopModule 
Automatically selected $abstract\SubModule2 as design top module.

2.2. Analyzing design hierarchy..
Top module:  $abstract\SubModule2

2.3. Analyzing design hierarchy..
Top module:  $abstract\SubModule2
Removing unused module `$abstract\SubModule1'.
Removing unused module `$abstract\TopModule'.
Removed 2 unused modules.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Executing AST frontend in derive mode using pre-parsed AST for module `\SubModule2'.
Generating RTLIL representation for module `\SubModule2'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/yosys_designs/svinterfaces/svinterface1_ref.v:93.5-102.8 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.

3.2. Analyzing design hierarchy..
Top module:  \SubModule2

3.3. Analyzing design hierarchy..
Top module:  \SubModule2
Removing unused module `$abstract\SubModule2'.
Removed 1 unused modules.

4. Executing PROC pass (convert processes to netlists).

4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/yosys_designs/svinterfaces/svinterface1_ref.v:93$1 in module SubModule2.
Removed a total of 0 dead cases.

4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 1 assignment to connection.

4.4. Executing PROC_INIT pass (extract init attributes).

4.5. Executing PROC_ARST pass (detect async resets in processes).

4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SubModule2.$proc$/home/zhigang/DATA/raw_designs/yosys_designs/svinterfaces/svinterface1_ref.v:93$1'.
     1/3: $3\u_MyInterfaceInSub3_other_setting[21:0]
     2/3: $2\u_MyInterfaceInSub3_other_setting[21:0]
     3/3: $1\u_MyInterfaceInSub3_other_setting[21:0]

4.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\SubModule2.\u_MyInterfaceInSub3_other_setting' from process `\SubModule2.$proc$/home/zhigang/DATA/raw_designs/yosys_designs/svinterfaces/svinterface1_ref.v:93$1'.

4.8. Executing PROC_DFF pass (convert process syncs to FFs).

4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 3 empty switches in `\SubModule2.$proc$/home/zhigang/DATA/raw_designs/yosys_designs/svinterfaces/svinterface1_ref.v:93$1'.
Removing empty process `SubModule2.$proc$/home/zhigang/DATA/raw_designs/yosys_designs/svinterfaces/svinterface1_ref.v:93$1'.
Cleaned up 3 empty switches.

4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module SubModule2.
<suppressed ~1 debug messages>

5. Executing OPT pass (performing simple optimizations).

5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SubModule2.

5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SubModule2'.
Removed a total of 0 cells.

5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SubModule2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$18.
    dead port 1/2 on $mux $procmux$12.
    dead port 1/2 on $mux $procmux$9.
Removed 3 multiplexer ports.
<suppressed ~1 debug messages>

5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SubModule2.
Performed a total of 0 changes.

5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SubModule2'.
Removed a total of 0 cells.

5.6. Executing OPT_DFF pass (perform DFF optimizations).

5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SubModule2..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SubModule2.

5.9. Rerunning OPT passes. (Maybe there is more to do..)

5.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SubModule2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

5.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SubModule2.
Performed a total of 0 changes.

5.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SubModule2'.
Removed a total of 0 cells.

5.13. Executing OPT_DFF pass (perform DFF optimizations).

5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SubModule2..

5.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SubModule2.

5.16. Finished OPT passes. (There is nothing left to do.)

6. Printing statistics.

=== SubModule2 ===

   Number of wires:                 14
   Number of wire bits:             97
   Number of public wires:           9
   Number of public wire bits:      50
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $eq                             2
     $logic_not                      1
     $mux                            3

End of script. Logfile hash: cf71d33b17, CPU: user 0.02s system 0.00s, MEM: 11.27 MB peak
Yosys 0.10+12 (git sha1 4d87019, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 59% 4x opt_expr (0 sec), 19% 2x opt_dff (0 sec), ...
