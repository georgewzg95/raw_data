
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v' to AST representation.
Generating RTLIL representation for module `\usbh_crc16'.
Generating RTLIL representation for module `\usbh_crc5'.
Generating RTLIL representation for module `\usbh_fifo'.
Warning: Replacing memory \ram with list of registers. See /home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:454
Generating RTLIL representation for module `\usbh_host'.
Generating RTLIL representation for module `\usbh_sie'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   1 design levels: usbh_sie            
root of   2 design levels: usbh_host           
root of   0 design levels: usbh_fifo           
root of   0 design levels: usbh_crc5           
root of   0 design levels: usbh_crc16          
Automatically selected usbh_host as design top module.

2.2. Analyzing design hierarchy..
Top module:  \usbh_host
Used module:     \usbh_fifo
Used module:     \usbh_sie
Used module:         \usbh_crc5
Used module:         \usbh_crc16

2.3. Analyzing design hierarchy..
Top module:  \usbh_host
Used module:     \usbh_fifo
Used module:     \usbh_sie
Used module:         \usbh_crc5
Used module:         \usbh_crc16
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 8 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2317$390 in module usbh_sie.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2223$386 in module usbh_sie.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2189$385 in module usbh_sie.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2183$383 in module usbh_sie.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2174$381 in module usbh_sie.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2168$380 in module usbh_sie.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2075$371 in module usbh_sie.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2063$366 in module usbh_sie.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2040$358 in module usbh_sie.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2010$354 in module usbh_sie.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1998$351 in module usbh_sie.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1976$334 in module usbh_sie.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1963$328 in module usbh_sie.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1951$324 in module usbh_sie.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1942$323 in module usbh_sie.
Marked 22 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1772$312 in module usbh_sie.
Marked 5 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1551$281 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1534$280 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1506$276 in module usbh_host.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1453$275 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1232$259 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1218$256 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1203$255 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1132$254 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1102$251 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1085$248 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1066$245 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1052$242 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1040$239 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1028$236 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1016$233 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1004$230 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:992$227 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:978$224 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:965$221 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:951$218 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:940$215 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:926$212 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:914$209 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:902$206 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:890$203 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:879$200 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:862$197 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:846$194 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:832$191 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:818$188 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:804$185 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:793$182 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:777$179 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:763$176 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:749$173 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:737$170 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:725$167 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:713$164 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:701$161 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:689$158 in module usbh_host.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:678$155 in module usbh_host.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:653$148 in module usbh_host.
Removed 1 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:0$145 in module usbh_fifo.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:0$145 in module usbh_fifo.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116 in module usbh_fifo.
Removed a total of 1 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 23 redundant assignments.
Promoted 7 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_i in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2223$386'.
Found async reset \rst_i in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2189$385'.
Found async reset \rst_i in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2183$383'.
Found async reset \rst_i in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2174$381'.
Found async reset \rst_i in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2168$380'.
Found async reset \rst_i in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2075$371'.
Found async reset \rst_i in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2063$366'.
Found async reset \rst_i in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2040$358'.
Found async reset \rst_i in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2010$354'.
Found async reset \rst_i in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1998$351'.
Found async reset \rst_i in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1976$334'.
Found async reset \rst_i in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1963$328'.
Found async reset \rst_i in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1951$324'.
Found async reset \rst_i in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1942$323'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1551$281'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1534$280'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1506$276'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1453$275'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1232$259'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1218$256'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1203$255'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1102$251'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1085$248'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1066$245'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1052$242'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1040$239'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1028$236'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1016$233'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1004$230'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:992$227'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:978$224'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:965$221'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:951$218'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:940$215'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:926$212'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:914$209'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:902$206'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:890$203'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:879$200'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:862$197'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:846$194'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:832$191'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:818$188'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:804$185'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:793$182'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:777$179'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:763$176'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:749$173'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:737$170'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:725$167'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:713$164'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:701$161'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:689$158'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:678$155'.
Found async reset \rst_i in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:653$148'.
Found async reset \rst_i in `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2317$390'.
     1/16: $8\utmi_data_r[7:0]
     2/16: $8\utmi_txvalid_r[0:0]
     3/16: $7\utmi_data_r[7:0]
     4/16: $7\utmi_txvalid_r[0:0]
     5/16: $6\utmi_data_r[7:0]
     6/16: $6\utmi_txvalid_r[0:0]
     7/16: $5\utmi_data_r[7:0]
     8/16: $5\utmi_txvalid_r[0:0]
     9/16: $4\utmi_data_r[7:0]
    10/16: $4\utmi_txvalid_r[0:0]
    11/16: $3\utmi_data_r[7:0]
    12/16: $3\utmi_txvalid_r[0:0]
    13/16: $2\utmi_data_r[7:0]
    14/16: $2\utmi_txvalid_r[0:0]
    15/16: $1\utmi_data_r[7:0]
    16/16: $1\utmi_txvalid_r[0:0]
Creating decoders for process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2223$386'.
     1/2: $0\crc_sum_q[15:0]
     2/2: $0\status_crc_err_q[0:0]
Creating decoders for process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2189$385'.
     1/1: $0\rx_active_q[3:0]
Creating decoders for process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2183$383'.
     1/1: $0\data_crc_q[1:0]
Creating decoders for process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2174$381'.
     1/1: $0\data_valid_q[3:0]
Creating decoders for process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2168$380'.
     1/1: $0\data_buffer_q[31:0]
Creating decoders for process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2075$371'.
     1/4: $0\status_response_q[7:0]
     2/4: $0\status_timeout_q[0:0]
     3/4: $0\status_rx_done_q[0:0]
     4/4: $0\status_tx_done_q[0:0]
Creating decoders for process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2063$366'.
     1/1: $0\wait_resp_q[0:0]
Creating decoders for process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2040$358'.
     1/2: $0\rx_time_en_q[0:0]
     2/2: $0\rx_time_q[2:0]
Creating decoders for process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2010$354'.
     1/4: $0\send_ack_q[0:0]
     2/4: $0\send_sof_q[0:0]
     3/4: $0\send_data1_q[0:0]
     4/4: $0\in_transfer_q[0:0]
Creating decoders for process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1998$351'.
     1/1: $0\start_ack_q[0:0]
Creating decoders for process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1976$334'.
     1/1: $0\byte_count_q[15:0]
Creating decoders for process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1963$328'.
     1/1: $0\last_tx_time_q[7:0]
Creating decoders for process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1951$324'.
     1/2: $0\token_q[15:0] [15:5]
     2/2: $0\token_q[15:0] [4:0]
Creating decoders for process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1942$323'.
     1/1: $0\state_q[3:0]
Creating decoders for process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1772$312'.
     1/22: $22\next_state_r[3:0]
     2/22: $21\next_state_r[3:0]
     3/22: $20\next_state_r[3:0]
     4/22: $19\next_state_r[3:0]
     5/22: $18\next_state_r[3:0]
     6/22: $17\next_state_r[3:0]
     7/22: $16\next_state_r[3:0]
     8/22: $15\next_state_r[3:0]
     9/22: $14\next_state_r[3:0]
    10/22: $13\next_state_r[3:0]
    11/22: $12\next_state_r[3:0]
    12/22: $11\next_state_r[3:0]
    13/22: $10\next_state_r[3:0]
    14/22: $9\next_state_r[3:0]
    15/22: $8\next_state_r[3:0]
    16/22: $7\next_state_r[3:0]
    17/22: $6\next_state_r[3:0]
    18/22: $5\next_state_r[3:0]
    19/22: $4\next_state_r[3:0]
    20/22: $3\next_state_r[3:0]
    21/22: $2\next_state_r[3:0]
    22/22: $1\next_state_r[3:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1551$281'.
     1/6: $0\intr_q[0:0]
     2/6: $0\err_cond_q[0:0]
     3/6: $0\device_det_q[0:0]
     4/6: $0\intr_err_q[0:0]
     5/6: $0\intr_sof_q[0:0]
     6/6: $0\intr_done_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1534$280'.
     1/1: $0\usb_err_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1506$276'.
     1/3: $0\sof_irq_q[0:0]
     2/3: $0\sof_time_q[15:0]
     3/3: $0\sof_value_q[10:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1453$275'.
     1/6: $0\resp_expected_q[0:0]
     2/6: $0\sof_transfer_q[0:0]
     3/6: $0\in_transfer_q[0:0]
     4/6: $0\transfer_start_q[0:0]
     5/6: $0\fifo_flush_q[0:0]
     6/6: $0\transfer_req_ack_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1232$259'.
     1/1: $0\bvalid_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1218$256'.
     1/1: $0\rd_data_q[31:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1203$255'.
     1/1: $0\rvalid_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1132$254'.
     1/16: $1\data_r[31:0] [31]
     2/16: $1\data_r[31:0] [4]
     3/16: $1\data_r[31:0] [23:16]
     4/16: $1\data_r[31:0] [28]
     5/16: $1\data_r[31:0] [29]
     6/16: $1\data_r[31:0] [15:9]
     7/16: $1\data_r[31:0] [8]
     8/16: $1\data_r[31:0] [30]
     9/16: $1\data_r[31:0] [1]
    10/16: $1\data_r[31:0] [7]
    11/16: $1\data_r[31:0] [2]
    12/16: $1\data_r[31:0] [5]
    13/16: $1\data_r[31:0] [27:24]
    14/16: $1\data_r[31:0] [3]
    15/16: $1\data_r[31:0] [6]
    16/16: $1\data_r[31:0] [0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1102$251'.
     1/1: $0\usb_rd_data_wr_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1085$248'.
     1/1: $0\usb_wr_data_wr_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1066$245'.
     1/1: $0\usb_rx_stat_wr_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1052$242'.
     1/1: $0\usb_xfer_token_ep_addr_q[3:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1040$239'.
     1/1: $0\usb_xfer_token_dev_addr_q[6:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1028$236'.
     1/1: $0\usb_xfer_token_pid_bits_q[7:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1016$233'.
     1/1: $0\usb_xfer_token_pid_datax_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1004$230'.
     1/1: $0\usb_xfer_token_ack_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:992$227'.
     1/1: $0\usb_xfer_token_in_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:978$224'.
     1/1: $0\usb_xfer_token_start_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:965$221'.
     1/1: $0\usb_xfer_token_wr_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:951$218'.
     1/1: $0\usb_xfer_data_tx_len_q[15:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:940$215'.
     1/1: $0\usb_xfer_data_wr_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:926$212'.
     1/1: $0\usb_irq_mask_sof_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:914$209'.
     1/1: $0\usb_irq_mask_done_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:902$206'.
     1/1: $0\usb_irq_mask_err_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:890$203'.
     1/1: $0\usb_irq_mask_device_detect_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:879$200'.
     1/1: $0\usb_irq_mask_wr_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:862$197'.
     1/1: $0\usb_irq_sts_wr_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:846$194'.
     1/1: $0\usb_irq_ack_sof_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:832$191'.
     1/1: $0\usb_irq_ack_done_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:818$188'.
     1/1: $0\usb_irq_ack_err_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:804$185'.
     1/1: $0\usb_irq_ack_device_detect_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:793$182'.
     1/1: $0\usb_irq_ack_wr_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:777$179'.
     1/1: $0\usb_status_wr_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:763$176'.
     1/1: $0\usb_ctrl_enable_sof_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:749$173'.
     1/1: $0\usb_ctrl_tx_flush_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:737$170'.
     1/1: $0\usb_ctrl_phy_opmode_q[1:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:725$167'.
     1/1: $0\usb_ctrl_phy_xcvrselect_q[1:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:713$164'.
     1/1: $0\usb_ctrl_phy_termselect_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:701$161'.
     1/1: $0\usb_ctrl_phy_dppulldown_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:689$158'.
     1/1: $0\usb_ctrl_phy_dmpulldown_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:678$155'.
     1/1: $0\usb_ctrl_wr_q[0:0]
Creating decoders for process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:653$148'.
     1/1: $0\wr_data_q[31:0]
Creating decoders for process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:0$145'.
     1/1: $1$mem2reg_rd$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:484$115_DATA[7:0]$147
Creating decoders for process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
     1/71: $2$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:454$114_ADDR[5:0]$123
     2/71: $2$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:454$114_DATA[7:0]$124
     3/71: $1$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:454$114_DATA[7:0]$120
     4/71: $1$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:454$114_ADDR[5:0]$119
     5/71: $0\ram[63][7:0]
     6/71: $0\ram[62][7:0]
     7/71: $0\ram[61][7:0]
     8/71: $0\ram[60][7:0]
     9/71: $0\ram[59][7:0]
    10/71: $0\ram[58][7:0]
    11/71: $0\ram[57][7:0]
    12/71: $0\ram[56][7:0]
    13/71: $0\ram[55][7:0]
    14/71: $0\ram[54][7:0]
    15/71: $0\ram[53][7:0]
    16/71: $0\ram[52][7:0]
    17/71: $0\ram[51][7:0]
    18/71: $0\ram[50][7:0]
    19/71: $0\ram[49][7:0]
    20/71: $0\ram[48][7:0]
    21/71: $0\ram[47][7:0]
    22/71: $0\ram[46][7:0]
    23/71: $0\ram[45][7:0]
    24/71: $0\ram[44][7:0]
    25/71: $0\ram[43][7:0]
    26/71: $0\ram[42][7:0]
    27/71: $0\ram[41][7:0]
    28/71: $0\ram[40][7:0]
    29/71: $0\ram[39][7:0]
    30/71: $0\ram[38][7:0]
    31/71: $0\ram[37][7:0]
    32/71: $0\ram[36][7:0]
    33/71: $0\ram[35][7:0]
    34/71: $0\ram[34][7:0]
    35/71: $0\ram[33][7:0]
    36/71: $0\ram[32][7:0]
    37/71: $0\ram[31][7:0]
    38/71: $0\ram[30][7:0]
    39/71: $0\ram[29][7:0]
    40/71: $0\ram[28][7:0]
    41/71: $0\ram[27][7:0]
    42/71: $0\ram[26][7:0]
    43/71: $0\ram[25][7:0]
    44/71: $0\ram[24][7:0]
    45/71: $0\ram[23][7:0]
    46/71: $0\ram[22][7:0]
    47/71: $0\ram[21][7:0]
    48/71: $0\ram[20][7:0]
    49/71: $0\ram[19][7:0]
    50/71: $0\ram[18][7:0]
    51/71: $0\ram[17][7:0]
    52/71: $0\ram[16][7:0]
    53/71: $0\ram[15][7:0]
    54/71: $0\ram[14][7:0]
    55/71: $0\ram[13][7:0]
    56/71: $0\ram[12][7:0]
    57/71: $0\ram[11][7:0]
    58/71: $0\ram[10][7:0]
    59/71: $0\ram[9][7:0]
    60/71: $0\ram[8][7:0]
    61/71: $0\ram[7][7:0]
    62/71: $0\ram[6][7:0]
    63/71: $0\ram[5][7:0]
    64/71: $0\ram[4][7:0]
    65/71: $0\ram[3][7:0]
    66/71: $0\ram[2][7:0]
    67/71: $0\ram[1][7:0]
    68/71: $0\ram[0][7:0]
    69/71: $0\count[6:0]
    70/71: $0\wr_ptr[5:0]
    71/71: $0\rd_ptr[5:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\usbh_sie.\utmi_txvalid_r' from process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2317$390'.
No latch inferred for signal `\usbh_sie.\utmi_data_r' from process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2317$390'.
No latch inferred for signal `\usbh_sie.\next_state_r' from process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1772$312'.
No latch inferred for signal `\usbh_host.\data_r' from process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1132$254'.
No latch inferred for signal `\usbh_fifo.$mem2reg_rd$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:484$115_DATA' from process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:0$145'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\usbh_sie.\status_crc_err_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2223$386'.
  created $adff cell `$procdff$3772' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\crc_sum_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2223$386'.
  created $adff cell `$procdff$3773' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\rx_active_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2189$385'.
  created $adff cell `$procdff$3774' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\data_crc_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2183$383'.
  created $adff cell `$procdff$3775' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\data_valid_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2174$381'.
  created $adff cell `$procdff$3776' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\data_buffer_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2168$380'.
  created $adff cell `$procdff$3777' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\status_tx_done_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2075$371'.
  created $adff cell `$procdff$3778' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\status_rx_done_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2075$371'.
  created $adff cell `$procdff$3779' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\status_timeout_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2075$371'.
  created $adff cell `$procdff$3780' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\status_response_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2075$371'.
  created $adff cell `$procdff$3781' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\wait_resp_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2063$366'.
  created $adff cell `$procdff$3782' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\rx_time_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2040$358'.
  created $adff cell `$procdff$3783' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\rx_time_en_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2040$358'.
  created $adff cell `$procdff$3784' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\in_transfer_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2010$354'.
  created $adff cell `$procdff$3785' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\send_data1_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2010$354'.
  created $adff cell `$procdff$3786' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\send_sof_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2010$354'.
  created $adff cell `$procdff$3787' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\send_ack_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2010$354'.
  created $adff cell `$procdff$3788' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\start_ack_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1998$351'.
  created $adff cell `$procdff$3789' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\byte_count_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1976$334'.
  created $adff cell `$procdff$3790' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\last_tx_time_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1963$328'.
  created $adff cell `$procdff$3791' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\token_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1951$324'.
  created $adff cell `$procdff$3792' with positive edge clock and positive level reset.
Creating register for signal `\usbh_sie.\state_q' using process `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1942$323'.
  created $adff cell `$procdff$3793' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\intr_done_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1551$281'.
  created $adff cell `$procdff$3794' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\intr_sof_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1551$281'.
  created $adff cell `$procdff$3795' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\intr_err_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1551$281'.
  created $adff cell `$procdff$3796' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\err_cond_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1551$281'.
  created $adff cell `$procdff$3797' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\intr_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1551$281'.
  created $adff cell `$procdff$3798' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\device_det_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1551$281'.
  created $adff cell `$procdff$3799' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_err_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1534$280'.
  created $adff cell `$procdff$3800' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\sof_value_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1506$276'.
  created $adff cell `$procdff$3801' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\sof_time_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1506$276'.
  created $adff cell `$procdff$3802' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\sof_irq_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1506$276'.
  created $adff cell `$procdff$3803' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\transfer_req_ack_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1453$275'.
  created $adff cell `$procdff$3804' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\fifo_flush_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1453$275'.
  created $adff cell `$procdff$3805' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\transfer_start_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1453$275'.
  created $adff cell `$procdff$3806' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\in_transfer_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1453$275'.
  created $adff cell `$procdff$3807' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\sof_transfer_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1453$275'.
  created $adff cell `$procdff$3808' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\resp_expected_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1453$275'.
  created $adff cell `$procdff$3809' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\bvalid_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1232$259'.
  created $adff cell `$procdff$3810' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\rd_data_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1218$256'.
  created $adff cell `$procdff$3811' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\rvalid_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1203$255'.
  created $adff cell `$procdff$3812' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_rd_data_wr_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1102$251'.
  created $adff cell `$procdff$3813' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_wr_data_wr_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1085$248'.
  created $adff cell `$procdff$3814' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_rx_stat_wr_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1066$245'.
  created $adff cell `$procdff$3815' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_xfer_token_ep_addr_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1052$242'.
  created $adff cell `$procdff$3816' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_xfer_token_dev_addr_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1040$239'.
  created $adff cell `$procdff$3817' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_xfer_token_pid_bits_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1028$236'.
  created $adff cell `$procdff$3818' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_xfer_token_pid_datax_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1016$233'.
  created $adff cell `$procdff$3819' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_xfer_token_ack_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1004$230'.
  created $adff cell `$procdff$3820' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_xfer_token_in_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:992$227'.
  created $adff cell `$procdff$3821' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_xfer_token_start_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:978$224'.
  created $adff cell `$procdff$3822' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_xfer_token_wr_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:965$221'.
  created $adff cell `$procdff$3823' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_xfer_data_tx_len_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:951$218'.
  created $adff cell `$procdff$3824' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_xfer_data_wr_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:940$215'.
  created $adff cell `$procdff$3825' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_irq_mask_sof_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:926$212'.
  created $adff cell `$procdff$3826' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_irq_mask_done_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:914$209'.
  created $adff cell `$procdff$3827' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_irq_mask_err_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:902$206'.
  created $adff cell `$procdff$3828' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_irq_mask_device_detect_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:890$203'.
  created $adff cell `$procdff$3829' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_irq_mask_wr_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:879$200'.
  created $adff cell `$procdff$3830' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_irq_sts_wr_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:862$197'.
  created $adff cell `$procdff$3831' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_irq_ack_sof_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:846$194'.
  created $adff cell `$procdff$3832' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_irq_ack_done_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:832$191'.
  created $adff cell `$procdff$3833' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_irq_ack_err_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:818$188'.
  created $adff cell `$procdff$3834' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_irq_ack_device_detect_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:804$185'.
  created $adff cell `$procdff$3835' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_irq_ack_wr_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:793$182'.
  created $adff cell `$procdff$3836' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_status_wr_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:777$179'.
  created $adff cell `$procdff$3837' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_ctrl_enable_sof_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:763$176'.
  created $adff cell `$procdff$3838' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_ctrl_tx_flush_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:749$173'.
  created $adff cell `$procdff$3839' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_ctrl_phy_opmode_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:737$170'.
  created $adff cell `$procdff$3840' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_ctrl_phy_xcvrselect_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:725$167'.
  created $adff cell `$procdff$3841' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_ctrl_phy_termselect_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:713$164'.
  created $adff cell `$procdff$3842' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_ctrl_phy_dppulldown_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:701$161'.
  created $adff cell `$procdff$3843' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_ctrl_phy_dmpulldown_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:689$158'.
  created $adff cell `$procdff$3844' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\usb_ctrl_wr_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:678$155'.
  created $adff cell `$procdff$3845' with positive edge clock and positive level reset.
Creating register for signal `\usbh_host.\wr_data_q' using process `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:653$148'.
  created $adff cell `$procdff$3846' with positive edge clock and positive level reset.
Creating register for signal `\usbh_fifo.\rd_ptr' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $adff cell `$procdff$3847' with positive edge clock and positive level reset.
Creating register for signal `\usbh_fifo.\wr_ptr' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $adff cell `$procdff$3848' with positive edge clock and positive level reset.
Creating register for signal `\usbh_fifo.\count' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $adff cell `$procdff$3849' with positive edge clock and positive level reset.
Creating register for signal `\usbh_fifo.\ram[0]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3852' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[1]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3855' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[2]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3858' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[3]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3861' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[4]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3864' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[5]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3867' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[6]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3870' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[7]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3873' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[8]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3876' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[9]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3879' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[10]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3882' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[11]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3885' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[12]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3888' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[13]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3891' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[14]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3894' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[15]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3897' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[16]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3900' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[17]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3903' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[18]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3906' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[19]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3909' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[20]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3912' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[21]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3915' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[22]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3918' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[23]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3921' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[24]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3924' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[25]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3927' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[26]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3930' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[27]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3933' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[28]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3936' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[29]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3939' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[30]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3942' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[31]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3945' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[32]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3948' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[33]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3951' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[34]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3954' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[35]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3957' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[36]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3960' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[37]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3963' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[38]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3966' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[39]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3969' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[40]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3972' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[41]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3975' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[42]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3978' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[43]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3981' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[44]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3984' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[45]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3987' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[46]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3990' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[47]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3993' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[48]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3996' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[49]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$3999' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[50]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$4002' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[51]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$4005' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[52]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$4008' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[53]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$4011' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[54]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$4014' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[55]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$4017' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[56]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$4020' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[57]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$4023' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[58]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$4026' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[59]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$4029' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[60]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$4032' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[61]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$4035' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[62]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$4038' with positive edge clock.
Creating register for signal `\usbh_fifo.\ram[63]' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $dff cell `$procdff$4041' with positive edge clock.
Creating register for signal `\usbh_fifo.$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:454$114_ADDR' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $adff cell `$procdff$4042' with positive edge clock and positive level reset.
Creating register for signal `\usbh_fifo.$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:454$114_DATA' using process `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
  created $adff cell `$procdff$4043' with positive edge clock and positive level reset.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 8 empty switches in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2317$390'.
Removing empty process `usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2317$390'.
Found and cleaned up 6 empty switches in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2223$386'.
Removing empty process `usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2223$386'.
Removing empty process `usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2189$385'.
Found and cleaned up 1 empty switch in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2183$383'.
Removing empty process `usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2183$383'.
Found and cleaned up 1 empty switch in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2174$381'.
Removing empty process `usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2174$381'.
Found and cleaned up 1 empty switch in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2168$380'.
Removing empty process `usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2168$380'.
Found and cleaned up 6 empty switches in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2075$371'.
Removing empty process `usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2075$371'.
Found and cleaned up 2 empty switches in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2063$366'.
Removing empty process `usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2063$366'.
Found and cleaned up 3 empty switches in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2040$358'.
Removing empty process `usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2040$358'.
Found and cleaned up 1 empty switch in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2010$354'.
Removing empty process `usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2010$354'.
Found and cleaned up 1 empty switch in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1998$351'.
Removing empty process `usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1998$351'.
Found and cleaned up 5 empty switches in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1976$334'.
Removing empty process `usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1976$334'.
Found and cleaned up 2 empty switches in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1963$328'.
Removing empty process `usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1963$328'.
Found and cleaned up 2 empty switches in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1951$324'.
Removing empty process `usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1951$324'.
Removing empty process `usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1942$323'.
Found and cleaned up 22 empty switches in `\usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1772$312'.
Removing empty process `usbh_sie.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1772$312'.
Found and cleaned up 8 empty switches in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1551$281'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1551$281'.
Found and cleaned up 2 empty switches in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1534$280'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1534$280'.
Found and cleaned up 2 empty switches in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1506$276'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1506$276'.
Found and cleaned up 5 empty switches in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1453$275'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1453$275'.
Found and cleaned up 2 empty switches in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1232$259'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1232$259'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1218$256'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1218$256'.
Found and cleaned up 2 empty switches in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1203$255'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1203$255'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1132$254'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1132$254'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1102$251'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1102$251'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1085$248'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1085$248'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1066$245'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1066$245'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1052$242'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1052$242'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1040$239'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1040$239'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1028$236'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1028$236'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1016$233'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1016$233'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1004$230'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1004$230'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:992$227'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:992$227'.
Found and cleaned up 2 empty switches in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:978$224'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:978$224'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:965$221'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:965$221'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:951$218'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:951$218'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:940$215'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:940$215'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:926$212'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:926$212'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:914$209'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:914$209'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:902$206'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:902$206'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:890$203'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:890$203'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:879$200'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:879$200'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:862$197'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:862$197'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:846$194'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:846$194'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:832$191'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:832$191'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:818$188'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:818$188'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:804$185'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:804$185'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:793$182'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:793$182'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:777$179'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:777$179'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:763$176'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:763$176'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:749$173'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:749$173'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:737$170'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:737$170'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:725$167'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:725$167'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:713$164'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:713$164'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:701$161'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:701$161'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:689$158'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:689$158'.
Found and cleaned up 1 empty switch in `\usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:678$155'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:678$155'.
Removing empty process `usbh_host.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:653$148'.
Found and cleaned up 1 empty switch in `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:0$145'.
Removing empty process `usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:0$145'.
Found and cleaned up 6 empty switches in `\usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
Removing empty process `usbh_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:434$116'.
Cleaned up 125 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbh_sie.
<suppressed ~21 debug messages>
Optimizing module usbh_host.
<suppressed ~17 debug messages>
Optimizing module usbh_fifo.
<suppressed ~3 debug messages>
Optimizing module usbh_crc5.
Optimizing module usbh_crc16.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbh_sie.
Optimizing module usbh_host.
Optimizing module usbh_fifo.
Optimizing module usbh_crc5.
Optimizing module usbh_crc16.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbh_sie'.
<suppressed ~237 debug messages>
Finding identical cells in module `\usbh_host'.
<suppressed ~324 debug messages>
Finding identical cells in module `\usbh_fifo'.
<suppressed ~24 debug messages>
Finding identical cells in module `\usbh_crc5'.
<suppressed ~18 debug messages>
Finding identical cells in module `\usbh_crc16'.
<suppressed ~42 debug messages>
Removed a total of 215 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbh_sie..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$832.
    dead port 2/2 on $mux $procmux$820.
    dead port 2/2 on $mux $procmux$810.
    dead port 2/2 on $mux $procmux$801.
    dead port 2/2 on $mux $procmux$793.
    dead port 1/2 on $mux $procmux$791.
    dead port 2/2 on $mux $procmux$782.
    dead port 2/2 on $mux $procmux$775.
    dead port 1/2 on $mux $procmux$773.
    dead port 2/2 on $mux $procmux$765.
    dead port 1/2 on $mux $procmux$763.
    dead port 1/2 on $mux $procmux$761.
    dead port 2/2 on $mux $procmux$752.
    dead port 1/2 on $mux $procmux$621.
    dead port 1/2 on $mux $procmux$615.
    dead port 1/2 on $mux $procmux$609.
    dead port 1/2 on $mux $procmux$606.
    dead port 1/2 on $mux $procmux$600.
    dead port 1/2 on $mux $procmux$597.
    dead port 1/2 on $mux $procmux$591.
    dead port 1/2 on $mux $procmux$588.
    dead port 1/2 on $mux $procmux$585.
    dead port 1/2 on $mux $procmux$579.
    dead port 1/2 on $mux $procmux$576.
    dead port 1/2 on $mux $procmux$573.
    dead port 1/2 on $mux $procmux$567.
    dead port 1/2 on $mux $procmux$564.
    dead port 1/2 on $mux $procmux$561.
    dead port 1/2 on $mux $procmux$558.
    dead port 1/2 on $mux $procmux$552.
    dead port 1/2 on $mux $procmux$549.
    dead port 1/2 on $mux $procmux$546.
    dead port 1/2 on $mux $procmux$543.
    dead port 1/2 on $mux $procmux$537.
    dead port 1/2 on $mux $procmux$534.
    dead port 1/2 on $mux $procmux$531.
    dead port 1/2 on $mux $procmux$528.
    dead port 1/2 on $mux $procmux$525.
    dead port 1/2 on $mux $procmux$519.
    dead port 1/2 on $mux $procmux$516.
    dead port 1/2 on $mux $procmux$513.
    dead port 1/2 on $mux $procmux$510.
    dead port 1/2 on $mux $procmux$507.
    dead port 1/2 on $mux $procmux$501.
    dead port 1/2 on $mux $procmux$498.
    dead port 1/2 on $mux $procmux$495.
    dead port 1/2 on $mux $procmux$492.
    dead port 1/2 on $mux $procmux$489.
    dead port 1/2 on $mux $procmux$486.
    dead port 1/2 on $mux $procmux$480.
    dead port 1/2 on $mux $procmux$477.
    dead port 1/2 on $mux $procmux$474.
    dead port 1/2 on $mux $procmux$471.
    dead port 1/2 on $mux $procmux$468.
    dead port 1/2 on $mux $procmux$465.
    dead port 1/2 on $mux $procmux$459.
    dead port 1/2 on $mux $procmux$456.
    dead port 1/2 on $mux $procmux$453.
    dead port 1/2 on $mux $procmux$450.
    dead port 1/2 on $mux $procmux$447.
    dead port 1/2 on $mux $procmux$444.
    dead port 1/2 on $mux $procmux$441.
    dead port 1/2 on $mux $procmux$435.
    dead port 1/2 on $mux $procmux$432.
    dead port 1/2 on $mux $procmux$429.
    dead port 1/2 on $mux $procmux$426.
    dead port 1/2 on $mux $procmux$423.
    dead port 1/2 on $mux $procmux$420.
    dead port 1/2 on $mux $procmux$417.
    dead port 2/2 on $mux $procmux$1026.
    dead port 2/2 on $mux $procmux$1008.
    dead port 2/2 on $mux $procmux$991.
    dead port 2/2 on $mux $procmux$975.
    dead port 2/2 on $mux $procmux$973.
    dead port 2/2 on $mux $procmux$956.
    dead port 2/2 on $mux $procmux$954.
    dead port 1/2 on $mux $procmux$952.
    dead port 2/2 on $mux $procmux$934.
    dead port 2/2 on $mux $procmux$845.
    dead port 2/2 on $mux $procmux$919.
    dead port 2/2 on $mux $procmux$917.
    dead port 2/2 on $mux $procmux$901.
    dead port 2/2 on $mux $procmux$887.
    dead port 1/2 on $mux $procmux$885.
    dead port 2/2 on $mux $procmux$834.
    dead port 2/2 on $mux $procmux$870.
    dead port 2/2 on $mux $procmux$857.
Running muxtree optimizer on module \usbh_host..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$1117: \transfer_start_q -> 1'1
      Replacing known input bits on port A of cell $procmux$1111: \transfer_start_q -> 1'0
      Replacing known input bits on port A of cell $procmux$1109: \transfer_start_q -> 1'0
  Analyzing evaluation results.
Running muxtree optimizer on module \usbh_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$1418.
    dead port 2/2 on $mux $procmux$1418.
    dead port 1/2 on $mux $procmux$1415.
    dead port 2/2 on $mux $procmux$1415.
Running muxtree optimizer on module \usbh_crc5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \usbh_crc16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 91 multiplexer ports.
<suppressed ~146 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbh_sie.
    New ctrl vector for $pmux cell $procmux$678: { $procmux$1031_CMP $auto$opt_reduce.cc:134:opt_mux$4045 }
    New ctrl vector for $pmux cell $procmux$633: { $procmux$1037_CMP $auto$opt_reduce.cc:134:opt_mux$4047 $procmux$1031_CMP }
  Optimizing cells in module \usbh_sie.
  Optimizing cells in module \usbh_host.
  Optimizing cells in module \usbh_fifo.
  Optimizing cells in module \usbh_crc5.
  Optimizing cells in module \usbh_crc16.
Performed a total of 2 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbh_sie'.
Finding identical cells in module `\usbh_host'.
<suppressed ~6 debug messages>
Finding identical cells in module `\usbh_fifo'.
Finding identical cells in module `\usbh_crc5'.
Finding identical cells in module `\usbh_crc16'.
Removed a total of 2 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$3783 ($adff) from module usbh_sie (D = $procmux$709_Y, Q = \rx_time_q).
Adding EN signal on $procdff$3784 ($adff) from module usbh_sie (D = $procmux$701_Y, Q = \rx_time_en_q).
Adding EN signal on $procdff$3781 ($adff) from module usbh_sie (D = $procmux$663_Y, Q = \status_response_q).
Adding EN signal on $procdff$3785 ($adff) from module usbh_sie (D = \in_transfer_i, Q = \in_transfer_q).
Adding EN signal on $procdff$3782 ($adff) from module usbh_sie (D = $procmux$695_Y, Q = \wait_resp_q).
Adding EN signal on $procdff$3786 ($adff) from module usbh_sie (D = \data_idx_i, Q = \send_data1_q).
Adding EN signal on $procdff$3787 ($adff) from module usbh_sie (D = \sof_transfer_i, Q = \send_sof_q).
Adding EN signal on $procdff$3788 ($adff) from module usbh_sie (D = $logic_and$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2029$357_Y, Q = \send_ack_q).
Adding EN signal on $procdff$3790 ($adff) from module usbh_sie (D = $procmux$733_Y, Q = \byte_count_q).
Adding EN signal on $procdff$3791 ($adff) from module usbh_sie (D = $procmux$738_Y, Q = \last_tx_time_q).
Adding EN signal on $procdff$3792 ($adff) from module usbh_sie (D = { \token_dev_i \token_ep_i }, Q = \token_q [15:5]).
Adding EN signal on $procdff$3792 ($adff) from module usbh_sie (D = $procmux$746_Y, Q = \token_q [4:0]).
Adding EN signal on $procdff$3793 ($adff) from module usbh_sie (D = $procmux$1029_Y, Q = \state_q).
Adding EN signal on $procdff$3772 ($adff) from module usbh_sie (D = $procmux$642_Y, Q = \status_crc_err_q).
Adding EN signal on $procdff$3773 ($adff) from module usbh_sie (D = $procmux$633_Y, Q = \crc_sum_q).
Adding EN signal on $procdff$3777 ($adff) from module usbh_sie (D = { \utmi_data_i \data_buffer_q [31:8] }, Q = \data_buffer_q).
Adding EN signal on $procdff$3778 ($adff) from module usbh_sie (D = $procmux$689_Y, Q = \status_tx_done_q).
Adding EN signal on $procdff$3780 ($adff) from module usbh_sie (D = $procmux$671_Y, Q = \status_timeout_q).
Adding EN signal on $procdff$3775 ($adff) from module usbh_sie (D = { $logic_not$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2187$384_Y \data_crc_q [1] }, Q = \data_crc_q).
Adding EN signal on $procdff$3776 ($adff) from module usbh_sie (D = { $and$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:2178$382_Y \data_valid_q [3:2] }, Q = \data_valid_q [3:1]).
Adding EN signal on $procdff$3779 ($adff) from module usbh_sie (D = $procmux$678_Y, Q = \status_rx_done_q).
Adding EN signal on $procdff$3838 ($adff) from module usbh_host (D = \cfg_wdata_i [0], Q = \usb_ctrl_enable_sof_q).
Adding EN signal on $procdff$3840 ($adff) from module usbh_host (D = \cfg_wdata_i [2:1], Q = \usb_ctrl_phy_opmode_q).
Adding EN signal on $procdff$3841 ($adff) from module usbh_host (D = \cfg_wdata_i [4:3], Q = \usb_ctrl_phy_xcvrselect_q).
Adding EN signal on $procdff$3842 ($adff) from module usbh_host (D = \cfg_wdata_i [5], Q = \usb_ctrl_phy_termselect_q).
Adding EN signal on $procdff$3843 ($adff) from module usbh_host (D = \cfg_wdata_i [6], Q = \usb_ctrl_phy_dppulldown_q).
Adding EN signal on $procdff$3844 ($adff) from module usbh_host (D = \cfg_wdata_i [7], Q = \usb_ctrl_phy_dmpulldown_q).
Adding EN signal on $procdff$3794 ($adff) from module usbh_host (D = $procmux$1061_Y, Q = \intr_done_q).
Adding EN signal on $procdff$3795 ($adff) from module usbh_host (D = $procmux$1056_Y, Q = \intr_sof_q).
Adding EN signal on $procdff$3796 ($adff) from module usbh_host (D = $procmux$1051_Y, Q = \intr_err_q).
Adding EN signal on $procdff$3799 ($adff) from module usbh_host (D = $procmux$1046_Y, Q = \device_det_q).
Adding EN signal on $procdff$3800 ($adff) from module usbh_host (D = $procmux$1066_Y, Q = \usb_err_q).
Adding EN signal on $procdff$3801 ($adff) from module usbh_host (D = $add$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_host_core.v:1517$277_Y, Q = \sof_value_q).
Adding EN signal on $procdff$3802 ($adff) from module usbh_host (D = $procmux$1074_Y, Q = \sof_time_q).
Adding EN signal on $procdff$3804 ($adff) from module usbh_host (D = $procmux$1139_Y, Q = \transfer_req_ack_q).
Adding EN signal on $procdff$3805 ($adff) from module usbh_host (D = $procmux$1129_Y, Q = \fifo_flush_q).
Adding EN signal on $procdff$3807 ($adff) from module usbh_host (D = $procmux$1104_Y, Q = \in_transfer_q).
Adding EN signal on $procdff$3808 ($adff) from module usbh_host (D = $procmux$1094_Y, Q = \sof_transfer_q).
Adding EN signal on $procdff$3809 ($adff) from module usbh_host (D = $procmux$1084_Y, Q = \resp_expected_q).
Adding EN signal on $procdff$3810 ($adff) from module usbh_host (D = $procmux$1144_Y, Q = \bvalid_q).
Adding EN signal on $procdff$3811 ($adff) from module usbh_host (D = { $procmux$1155_Y $procmux$1196_Y $procmux$1178_Y $procmux$1172_Y $procmux$1239_Y $procmux$1166_Y $procmux$1184_Y $procmux$1190_Y $procmux$1210_Y $procmux$1250_Y $procmux$1226_Y $procmux$1159_Y $procmux$1242_Y $procmux$1217_Y $procmux$1201_Y $procmux$1257_Y }, Q = \rd_data_q).
Adding EN signal on $procdff$3812 ($adff) from module usbh_host (D = $procmux$1151_Y, Q = \rvalid_q).
Adding EN signal on $procdff$3816 ($adff) from module usbh_host (D = \cfg_wdata_i [8:5], Q = \usb_xfer_token_ep_addr_q).
Adding EN signal on $procdff$3817 ($adff) from module usbh_host (D = \cfg_wdata_i [15:9], Q = \usb_xfer_token_dev_addr_q).
Adding EN signal on $procdff$3818 ($adff) from module usbh_host (D = \cfg_wdata_i [23:16], Q = \usb_xfer_token_pid_bits_q).
Adding EN signal on $procdff$3819 ($adff) from module usbh_host (D = \cfg_wdata_i [28], Q = \usb_xfer_token_pid_datax_q).
Adding EN signal on $procdff$3820 ($adff) from module usbh_host (D = \cfg_wdata_i [29], Q = \usb_xfer_token_ack_q).
Adding EN signal on $procdff$3821 ($adff) from module usbh_host (D = \cfg_wdata_i [30], Q = \usb_xfer_token_in_q).
Adding EN signal on $procdff$3822 ($adff) from module usbh_host (D = $procmux$1289_Y, Q = \usb_xfer_token_start_q).
Adding EN signal on $procdff$3824 ($adff) from module usbh_host (D = \cfg_wdata_i [15:0], Q = \usb_xfer_data_tx_len_q).
Adding EN signal on $procdff$3826 ($adff) from module usbh_host (D = \cfg_wdata_i [0], Q = \usb_irq_mask_sof_q).
Adding EN signal on $procdff$3827 ($adff) from module usbh_host (D = \cfg_wdata_i [1], Q = \usb_irq_mask_done_q).
Adding EN signal on $procdff$3828 ($adff) from module usbh_host (D = \cfg_wdata_i [2], Q = \usb_irq_mask_err_q).
Adding EN signal on $procdff$3829 ($adff) from module usbh_host (D = \cfg_wdata_i [3], Q = \usb_irq_mask_device_detect_q).
Adding EN signal on $procdff$4041 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[63]).
Adding EN signal on $procdff$4035 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[61]).
Setting constant 1-bit at position 0 on $procdff$4042 ($adff) from module usbh_fifo.
Setting constant 1-bit at position 1 on $procdff$4042 ($adff) from module usbh_fifo.
Setting constant 1-bit at position 2 on $procdff$4042 ($adff) from module usbh_fifo.
Setting constant 1-bit at position 3 on $procdff$4042 ($adff) from module usbh_fifo.
Setting constant 1-bit at position 4 on $procdff$4042 ($adff) from module usbh_fifo.
Setting constant 1-bit at position 5 on $procdff$4042 ($adff) from module usbh_fifo.
Setting constant 1-bit at position 0 on $procdff$4043 ($adff) from module usbh_fifo.
Setting constant 1-bit at position 1 on $procdff$4043 ($adff) from module usbh_fifo.
Setting constant 1-bit at position 2 on $procdff$4043 ($adff) from module usbh_fifo.
Setting constant 1-bit at position 3 on $procdff$4043 ($adff) from module usbh_fifo.
Setting constant 1-bit at position 4 on $procdff$4043 ($adff) from module usbh_fifo.
Setting constant 1-bit at position 5 on $procdff$4043 ($adff) from module usbh_fifo.
Setting constant 1-bit at position 6 on $procdff$4043 ($adff) from module usbh_fifo.
Setting constant 1-bit at position 7 on $procdff$4043 ($adff) from module usbh_fifo.
Adding EN signal on $procdff$4038 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[62]).
Adding EN signal on $procdff$4032 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[60]).
Adding EN signal on $procdff$3847 ($adff) from module usbh_fifo (D = $procmux$3770_Y, Q = \rd_ptr).
Adding EN signal on $procdff$3848 ($adff) from module usbh_fifo (D = $procmux$3766_Y, Q = \wr_ptr).
Adding EN signal on $procdff$3849 ($adff) from module usbh_fifo (D = $procmux$3761_Y, Q = \count).
Adding EN signal on $procdff$3852 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[0]).
Adding EN signal on $procdff$3855 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[1]).
Adding EN signal on $procdff$3858 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[2]).
Adding EN signal on $procdff$3861 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[3]).
Adding EN signal on $procdff$3864 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[4]).
Adding EN signal on $procdff$3867 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[5]).
Adding EN signal on $procdff$3870 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[6]).
Adding EN signal on $procdff$3873 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[7]).
Adding EN signal on $procdff$3876 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[8]).
Adding EN signal on $procdff$3879 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[9]).
Adding EN signal on $procdff$3882 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[10]).
Adding EN signal on $procdff$3885 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[11]).
Adding EN signal on $procdff$3888 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[12]).
Adding EN signal on $procdff$3891 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[13]).
Adding EN signal on $procdff$3894 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[14]).
Adding EN signal on $procdff$3897 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[15]).
Adding EN signal on $procdff$3900 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[16]).
Adding EN signal on $procdff$3903 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[17]).
Adding EN signal on $procdff$3906 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[18]).
Adding EN signal on $procdff$3909 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[19]).
Adding EN signal on $procdff$3912 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[20]).
Adding EN signal on $procdff$3915 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[21]).
Adding EN signal on $procdff$3918 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[22]).
Adding EN signal on $procdff$3921 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[23]).
Adding EN signal on $procdff$3924 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[24]).
Adding EN signal on $procdff$3927 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[25]).
Adding EN signal on $procdff$3930 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[26]).
Adding EN signal on $procdff$3933 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[27]).
Adding EN signal on $procdff$3936 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[28]).
Adding EN signal on $procdff$3939 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[29]).
Adding EN signal on $procdff$3942 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[30]).
Adding EN signal on $procdff$3945 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[31]).
Adding EN signal on $procdff$3948 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[32]).
Adding EN signal on $procdff$3951 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[33]).
Adding EN signal on $procdff$3954 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[34]).
Adding EN signal on $procdff$3957 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[35]).
Adding EN signal on $procdff$3960 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[36]).
Adding EN signal on $procdff$3963 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[37]).
Adding EN signal on $procdff$3966 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[38]).
Adding EN signal on $procdff$3969 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[39]).
Adding EN signal on $procdff$3972 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[40]).
Adding EN signal on $procdff$3975 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[41]).
Adding EN signal on $procdff$3978 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[42]).
Adding EN signal on $procdff$3981 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[43]).
Adding EN signal on $procdff$3984 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[44]).
Adding EN signal on $procdff$3987 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[45]).
Adding EN signal on $procdff$3990 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[46]).
Adding EN signal on $procdff$3993 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[47]).
Adding EN signal on $procdff$3996 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[48]).
Adding EN signal on $procdff$3999 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[49]).
Adding EN signal on $procdff$4002 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[50]).
Adding EN signal on $procdff$4005 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[51]).
Adding EN signal on $procdff$4008 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[52]).
Adding EN signal on $procdff$4011 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[53]).
Adding EN signal on $procdff$4014 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[54]).
Adding EN signal on $procdff$4017 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[55]).
Adding EN signal on $procdff$4020 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[56]).
Adding EN signal on $procdff$4023 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[57]).
Adding EN signal on $procdff$4026 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[58]).
Adding EN signal on $procdff$4029 ($dff) from module usbh_fifo (D = \data_i, Q = \ram[59]).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbh_sie..
Finding unused cells or wires in module \usbh_host..
Finding unused cells or wires in module \usbh_fifo..
Finding unused cells or wires in module \usbh_crc5..
Finding unused cells or wires in module \usbh_crc16..
Removed 242 unused cells and 1094 unused wires.
<suppressed ~254 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbh_crc16.
Optimizing module usbh_crc5.
Optimizing module usbh_fifo.
<suppressed ~3 debug messages>
Optimizing module usbh_host.
<suppressed ~14 debug messages>
Optimizing module usbh_sie.
<suppressed ~14 debug messages>

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbh_crc16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \usbh_crc5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \usbh_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \usbh_host..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \usbh_sie..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbh_crc16.
  Optimizing cells in module \usbh_crc5.
  Optimizing cells in module \usbh_fifo.
  Optimizing cells in module \usbh_host.
  Optimizing cells in module \usbh_sie.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbh_crc16'.
Finding identical cells in module `\usbh_crc5'.
Finding identical cells in module `\usbh_fifo'.
<suppressed ~192 debug messages>
Finding identical cells in module `\usbh_host'.
<suppressed ~51 debug messages>
Finding identical cells in module `\usbh_sie'.
<suppressed ~12 debug messages>
Removed a total of 85 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbh_crc16..
Finding unused cells or wires in module \usbh_crc5..
Finding unused cells or wires in module \usbh_fifo..
Finding unused cells or wires in module \usbh_host..
Finding unused cells or wires in module \usbh_sie..
Removed 1 unused cells and 85 unused wires.
<suppressed ~4 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbh_crc16.
Optimizing module usbh_crc5.
Optimizing module usbh_fifo.
Optimizing module usbh_host.
Optimizing module usbh_sie.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbh_crc16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \usbh_crc5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \usbh_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \usbh_host..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \usbh_sie..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~65 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbh_crc16.
  Optimizing cells in module \usbh_crc5.
  Optimizing cells in module \usbh_fifo.
  Optimizing cells in module \usbh_host.
  Optimizing cells in module \usbh_sie.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbh_crc16'.
Finding identical cells in module `\usbh_crc5'.
Finding identical cells in module `\usbh_fifo'.
Finding identical cells in module `\usbh_host'.
Finding identical cells in module `\usbh_sie'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbh_crc16..
Finding unused cells or wires in module \usbh_crc5..
Finding unused cells or wires in module \usbh_fifo..
Finding unused cells or wires in module \usbh_host..
Finding unused cells or wires in module \usbh_sie..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbh_crc16.
Optimizing module usbh_crc5.
Optimizing module usbh_fifo.
Optimizing module usbh_host.
Optimizing module usbh_sie.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== usbh_crc16 ===

   Number of wires:                 46
   Number of wire bits:             83
   Number of public wires:           3
   Number of public wire bits:      40
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 54
     $xor                           54

=== usbh_crc5 ===

   Number of wires:                 37
   Number of wire bits:             55
   Number of public wires:           3
   Number of public wire bits:      21
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 39
     $xor                           39

=== usbh_fifo ===

   Number of wires:                290
   Number of wire bits:            925
   Number of public wires:          76
   Number of public wire bits:     554
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                284
     $add                            3
     $adffe                          3
     $and                            4
     $dffe                          64
     $eq                           127
     $logic_not                      3
     $mux                            6
     $not                            5
     $pmux                           1
     $reduce_and                    64
     $reduce_bool                    3
     $sub                            1

=== usbh_host ===

   Number of wires:                250
   Number of wire bits:            739
   Number of public wires:         142
   Number of public wire bits:     576
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                182
     $add                            2
     $adff                          12
     $adffe                         32
     $and                            9
     $eq                            13
     $ge                             1
     $le                             1
     $logic_and                      9
     $logic_not                      4
     $logic_or                       4
     $mux                           48
     $ne                             4
     $not                            6
     $or                             5
     $pmux                          15
     $reduce_and                     2
     $reduce_bool                   12
     usbh_fifo                       2
     usbh_sie                        1

=== usbh_sie ===

   Number of wires:                241
   Number of wire bits:            841
   Number of public wires:          68
   Number of public wire bits:     313
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                212
     $add                            3
     $adff                           3
     $adffe                         21
     $and                            6
     $eq                            15
     $ge                             2
     $logic_and                     22
     $logic_not                      7
     $logic_or                       4
     $mux                           68
     $ne                            26
     $not                            1
     $pmux                           7
     $reduce_and                     7
     $reduce_bool                   12
     $reduce_or                      2
     $sub                            1
     $xor                            3
     usbh_crc16                      1
     usbh_crc5                       1

=== design hierarchy ===

   usbh_host                         1
     usbh_fifo                       2
     usbh_sie                        1
       usbh_crc16                    1
       usbh_crc5                     1

   Number of wires:               1154
   Number of wire bits:           3568
   Number of public wires:         368
   Number of public wire bits:    2058
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1050
     $add                           11
     $adff                          15
     $adffe                         59
     $and                           23
     $dffe                         128
     $eq                           282
     $ge                             3
     $le                             1
     $logic_and                     31
     $logic_not                     17
     $logic_or                       8
     $mux                          128
     $ne                            30
     $not                           17
     $or                             5
     $pmux                          24
     $reduce_and                   137
     $reduce_bool                   30
     $reduce_or                      2
     $sub                            3
     $xor                           96

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 3db24ed68b, CPU: user 0.51s system 0.02s, MEM: 20.13 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 29% 5x opt_expr (0 sec), 15% 4x opt_merge (0 sec), ...
