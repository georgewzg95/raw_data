
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v' to AST representation.
Generating RTLIL representation for module `\ack_counter'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:39.1-54.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\byte_count_module'.
Generating RTLIL representation for module `\CRC32_D64'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:151.1-154.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\CRC32_D8'.
Generating RTLIL representation for module `\TRANSMIT_TOP'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   1 design levels: TRANSMIT_TOP        
root of   0 design levels: CRC32_D8            
root of   0 design levels: CRC32_D64           
root of   0 design levels: byte_count_module   
root of   0 design levels: ack_counter         
Automatically selected TRANSMIT_TOP as design top module.

2.2. Analyzing design hierarchy..
Top module:  \TRANSMIT_TOP
Used module:     \byte_count_module
Used module:     \CRC32_D8
Used module:     \CRC32_D64
Used module:     \ack_counter

2.3. Analyzing design hierarchy..
Top module:  \TRANSMIT_TOP
Used module:     \byte_count_module
Used module:     \CRC32_D8
Used module:     \CRC32_D64
Used module:     \ack_counter
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 2 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
Cleaned up 2 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1961$1766 in module TRANSMIT_TOP.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1944$1762 in module TRANSMIT_TOP.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1918$1761 in module TRANSMIT_TOP.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1907$1760 in module TRANSMIT_TOP.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1889$1757 in module TRANSMIT_TOP.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1878$1756 in module TRANSMIT_TOP.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1865$1755 in module TRANSMIT_TOP.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1844$1754 in module TRANSMIT_TOP.
Marked 24 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753 in module TRANSMIT_TOP.
Marked 6 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752 in module TRANSMIT_TOP.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1375$1741 in module TRANSMIT_TOP.
Marked 5 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1313$1738 in module TRANSMIT_TOP.
Marked 7 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1277$1734 in module TRANSMIT_TOP.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1264$1733 in module TRANSMIT_TOP.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1245$1732 in module TRANSMIT_TOP.
Marked 7 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1207$1725 in module TRANSMIT_TOP.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1193$1724 in module TRANSMIT_TOP.
Marked 6 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1157$1723 in module TRANSMIT_TOP.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1140$1722 in module TRANSMIT_TOP.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1118$1721 in module TRANSMIT_TOP.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1066$1718 in module TRANSMIT_TOP.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1032$1714 in module TRANSMIT_TOP.
Marked 6 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:993$1707 in module TRANSMIT_TOP.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:982$1703 in module TRANSMIT_TOP.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:956$1702 in module TRANSMIT_TOP.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:943$1701 in module TRANSMIT_TOP.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:930$1699 in module TRANSMIT_TOP.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:453$1430 in module CRC32_D8.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:156$18 in module CRC32_D64.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:105$11 in module byte_count_module.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:75$8 in module ack_counter.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:57$5 in module ack_counter.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:39$1 in module ack_counter.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 54 redundant assignments.
Promoted 24 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1961$1766'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1944$1762'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1918$1761'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1889$1757'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1878$1756'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1865$1755'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1844$1754'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1375$1741'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1313$1738'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1277$1734'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1245$1732'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1207$1725'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1157$1723'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1140$1722'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1118$1721'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1066$1718'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1032$1714'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:993$1707'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:982$1703'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:956$1702'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:943$1701'.
Found async reset \reset_int in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:930$1699'.
Found async reset \RESET in `\CRC32_D8.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:453$1430'.
Found async reset \RESET in `\CRC32_D64.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:156$18'.
Found async reset \RESET in `\byte_count_module.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:105$11'.
Found async reset \reset in `\ack_counter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:75$8'.
Found async reset \reset in `\ack_counter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:57$5'.

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1961$1766'.
     1/1: $1\set_pause_stats[0:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1944$1762'.
     1/1: $0\length_register[15:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1918$1761'.
     1/4: $0\append_end_frame[0:0]
     2/4: $0\load_final_CRC[0:0]
     3/4: $0\append_reg[9:0] [9:1]
     4/4: $0\append_reg[9:0] [0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1907$1760'.
     1/1: $1\byte_count_stat[14:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1889$1757'.
     1/1: $0\final_byte_count[15:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1878$1756'.
     1/1: $0\byte_count_reg[15:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1865$1755'.
     1/2: $0\START_CRC8_DEL[0:0]
     2/2: $0\start_CRC8[0:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1844$1754'.
     1/6: $0\store_tx_data[63:0] [63:56]
     2/6: $0\store_tx_data_valid[7:0] [7]
     3/6: $0\store_CRC64[31:0]
     4/6: $0\store_tx_data[63:0] [55:0]
     5/6: $0\store_tx_data_valid[7:0] [6:0]
     6/6: $0\tx_data_int[7:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
     1/31: $0\TX_DATA_DEL14[63:0] [63:56]
     2/31: $0\OVERFLOW_DATA[63:0] [31:24]
     3/31: $0\OVERFLOW_DATA[63:0] [23:16]
     4/31: $0\TX_DATA_DEL14[63:0] [47:40]
     5/31: $0\TX_DATA_DEL14[63:0] [39:32]
     6/31: $0\TX_DATA_DEL14[63:0] [55:48]
     7/31: $0\OVERFLOW_DATA[63:0] [63:56]
     8/31: $0\OVERFLOW_DATA[63:0] [47:40]
     9/31: $0\TX_DATA_DEL14[63:0] [23:16]
    10/31: $0\TX_DATA_DEL14[63:0] [7:0]
    11/31: $0\OVERFLOW_DATA[63:0] [55:48]
    12/31: $0\OVERFLOW_DATA[63:0] [7:0]
    13/31: $0\OVERFLOW_DATA[63:0] [39:32]
    14/31: $0\TX_DATA_DEL14[63:0] [31:24]
    15/31: $0\TX_DATA_DEL14[63:0] [15:8]
    16/31: $0\TX_DATA_DEL15[63:0]
    17/31: $0\TX_DATA_DEL13[63:0]
    18/31: $0\TX_DATA_DEL12[63:0]
    19/31: $0\TX_DATA_DEL11[63:0]
    20/31: $0\TX_DATA_DEL10[63:0]
    21/31: $0\TX_DATA_DEL9[63:0]
    22/31: $0\TX_DATA_DEL8[63:0]
    23/31: $0\TX_DATA_DEL7[63:0]
    24/31: $0\TX_DATA_DEL6[63:0]
    25/31: $0\TX_DATA_DEL5[63:0]
    26/31: $0\TX_DATA_DEL4[63:0]
    27/31: $0\TX_DATA_DEL3[63:0]
    28/31: $0\TX_DATA_DEL2[63:0]
    29/31: $0\TX_DATA_DEL1[63:0]
    30/31: $0\OVERFLOW_DATA[63:0] [15:8]
    31/31: $0\TXD[63:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
     1/17: $0\TX_DATA_VALID_DEL15[7:0]
     2/17: $0\TX_DATA_VALID_DEL14[7:0]
     3/17: $0\TX_DATA_VALID_DEL13[7:0]
     4/17: $0\TX_DATA_VALID_DEL12[7:0]
     5/17: $0\TX_DATA_VALID_DEL11[7:0]
     6/17: $0\TX_DATA_VALID_DEL10[7:0]
     7/17: $0\TX_DATA_VALID_DEL9[7:0]
     8/17: $0\TX_DATA_VALID_DEL8[7:0]
     9/17: $0\TX_DATA_VALID_DEL7[7:0]
    10/17: $0\TX_DATA_VALID_DEL6[7:0]
    11/17: $0\TX_DATA_VALID_DEL5[7:0]
    12/17: $0\TX_DATA_VALID_DEL4[7:0]
    13/17: $0\TX_DATA_VALID_DEL3[7:0]
    14/17: $0\TX_DATA_VALID_DEL2[7:0]
    15/17: $0\TX_DATA_VALID_DEL1[7:0]
    16/17: $0\OVERFLOW_VALID[7:0]
    17/17: $0\TXC[7:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1375$1741'.
     1/9: $0\load_CRC8[0:0]
     2/9: $0\reset_err_pause[0:0]
     3/9: $0\transmit_pause_frame_valid[0:0]
     4/9: $0\append_start_pause_del[0:0]
     5/9: $0\append_start_pause[0:0]
     6/9: $0\transmit_pause_frame_del3[0:0]
     7/9: $0\transmit_pause_frame_del2[0:0]
     8/9: $0\transmit_pause_frame_del[0:0]
     9/9: $0\frame_start_del[0:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1313$1738'.
     1/1: $0\TX_DATA_REG[63:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1277$1734'.
     1/1: $0\TX_DATA_VALID_REG[7:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1264$1733'.
     1/1: $0\TX_DATA_VALID_DELAY[63:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1245$1732'.
     1/2: $0\store_pause_frame[15:0]
     2/2: $0\apply_pause_delay[0:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1207$1725'.
     1/1: $0\insert_error[0:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1193$1724'.
     1/1: $0\tx_undderrun_int[0:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1157$1723'.
     1/1: $0\MAX_FRAME_SIZE[15:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1140$1722'.
     1/1: $0\DELAY_ACK[15:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1118$1721'.
     1/6: $0\read_ifg_int[0:0]
     2/6: $0\reset_tx_int[0:0]
     3/6: $0\fcs_enabled_int[0:0]
     4/6: $0\tx_enabled_int[0:0]
     5/6: $0\jumbo_enabled_int[0:0]
     6/6: $0\vlan_enabled_int[0:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1099$1720'.
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1066$1718'.
     1/9: $0\txstatplus_int[24:0] [24]
     2/9: $0\txstatplus_int[24:0] [18:5]
     3/9: $0\txstatplus_int[24:0] [4]
     4/9: $0\txstatplus_int[24:0] [19]
     5/9: $0\txstatplus_int[24:0] [1]
     6/9: $0\txstatplus_int[24:0] [3]
     7/9: $0\txstatplus_int[24:0] [23:20]
     8/9: $0\txstatplus_int[24:0] [2]
     9/9: $0\txstatplus_int[24:0] [0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1032$1714'.
     1/1: $0\FRAME_START[0:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:993$1707'.
     1/3: $0\shift_pause_valid[7:0]
     2/3: $0\shift_pause_data[63:0]
     3/3: $0\shift_pause_valid_del[7:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:982$1703'.
     1/1: $0\pause_frame_counter[3:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:956$1702'.
     1/7: $0\store_transmit_pause_value[15:0]
     2/7: $0\TXC_PAUSE_DEL2[7:0]
     3/7: $0\TXC_PAUSE_DEL1[7:0]
     4/7: $0\TXC_PAUSE_DEL0[7:0]
     5/7: $0\TXD_PAUSE_DEL2[63:0]
     6/7: $0\TXD_PAUSE_DEL1[63:0]
     7/7: $0\TXD_PAUSE_DEL0[63:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:943$1701'.
     1/1: $0\set_pause_stats[0:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:930$1699'.
     1/1: $0\transmit_pause_frame[0:0]
Creating decoders for process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:923$1698'.
Creating decoders for process `\CRC32_D8.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:453$1430'.
     1/46: $3\CRC_OUT[31:0]
     2/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [31]
     3/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.$result[31:0]$1444
     4/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [30]
     5/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [29]
     6/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [28]
     7/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [27]
     8/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [26]
     9/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [25]
    10/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [24]
    11/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [23]
    12/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [22]
    13/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [21]
    14/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [20]
    15/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [19]
    16/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [18]
    17/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [17]
    18/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [16]
    19/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [15]
    20/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [14]
    21/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [13]
    22/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [12]
    23/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [11]
    24/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [10]
    25/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [9]
    26/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [8]
    27/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [7]
    28/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [6]
    29/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [5]
    30/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [4]
    31/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [3]
    32/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [2]
    33/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [1]
    34/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1449 [0]
    35/46: $2\CRC_OUT[31:0]
    36/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.C[31:0]$1448
    37/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.D[7:0]$1447
    38/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.CRC[31:0]$1446
    39/46: $2\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.Data[7:0]$1445
    40/46: $1\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC[31:0]$1442
    41/46: $1\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.C[31:0]$1441
    42/46: $1\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.D[7:0]$1440
    43/46: $1\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.CRC[31:0]$1439
    44/46: $1\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.Data[7:0]$1438
    45/46: $1\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.$result[31:0]$1437
    46/46: $1\CRC_OUT[31:0]
Creating decoders for process `\CRC32_D8.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:447$1429'.
Creating decoders for process `\CRC32_D64.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:156$18'.
     1/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [31]
     2/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [30]
     3/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [29]
     4/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [28]
     5/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [27]
     6/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [26]
     7/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [25]
     8/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [24]
     9/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [23]
    10/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [22]
    11/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [21]
    12/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [20]
    13/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [19]
    14/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [18]
    15/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [17]
    16/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [16]
    17/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [15]
    18/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [14]
    19/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [13]
    20/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [12]
    21/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [11]
    22/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [10]
    23/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [9]
    24/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [8]
    25/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [7]
    26/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [6]
    27/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [5]
    28/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [4]
    29/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [3]
    30/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [2]
    31/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [1]
    32/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$37 [0]
    33/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.$result[31:0]$32
    34/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.C[31:0]$36
    35/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.D[63:0]$35
    36/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.CRC[31:0]$34
    37/45: $2\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.Data[63:0]$33
    38/45: $1\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC[31:0]$30
    39/45: $1\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.C[31:0]$29
    40/45: $1\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.D[63:0]$28
    41/45: $1\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.CRC[31:0]$27
    42/45: $1\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.Data[63:0]$26
    43/45: $1\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.$result[31:0]$25
    44/45: $0\CRC_REG[31:0]
    45/45: $0\CRC_OUT[31:0]
Creating decoders for process `\CRC32_D64.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:151$17'.
Creating decoders for process `\byte_count_module.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:116$15'.
Creating decoders for process `\byte_count_module.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:105$11'.
     1/2: $2\counter[15:0]
     2/2: $1\counter[15:0]
Creating decoders for process `\ack_counter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:75$8'.
     1/2: $0\tx_ack[0:0]
     2/2: $0\start_count_del[0:0]
Creating decoders for process `\ack_counter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:57$5'.
     1/1: $0\counter[15:0]
Creating decoders for process `\ack_counter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:39$1'.
     1/1: $0\start_count[0:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\CRC32_D64.\startCRC' from process `\CRC32_D64.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:151$17'.
Latch inferred for signal `\ack_counter.\start_count' from process `\ack_counter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:39$1': $auto$proc_dlatch.cc:427:proc_dlatch$2884

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\TRANSMIT_TOP.\set_pause_stats' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1961$1766'.
  created $adff cell `$procdff$2885' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\length_register' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1944$1762'.
  created $adff cell `$procdff$2886' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\append_end_frame' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1918$1761'.
  created $adff cell `$procdff$2887' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\load_final_CRC' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1918$1761'.
  created $adff cell `$procdff$2888' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\append_reg' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1918$1761'.
  created $adff cell `$procdff$2889' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\byte_count_stat' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1907$1760'.
  created $dff cell `$procdff$2890' with positive edge clock.
Creating register for signal `\TRANSMIT_TOP.\final_byte_count' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1889$1757'.
  created $adff cell `$procdff$2891' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\byte_count_reg' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1878$1756'.
  created $adff cell `$procdff$2892' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\start_CRC8' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1865$1755'.
  created $adff cell `$procdff$2893' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\START_CRC8_DEL' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1865$1755'.
  created $adff cell `$procdff$2894' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\tx_data_int' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1844$1754'.
  created $adff cell `$procdff$2895' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\store_tx_data_valid' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1844$1754'.
  created $adff cell `$procdff$2896' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\store_tx_data' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1844$1754'.
  created $adff cell `$procdff$2897' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\store_CRC64' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1844$1754'.
  created $adff cell `$procdff$2898' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TXD' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
  created $dff cell `$procdff$2901' with positive edge clock.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_DEL1' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
  created $adff cell `$procdff$2902' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_DEL2' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
  created $adff cell `$procdff$2903' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_DEL3' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
  created $adff cell `$procdff$2904' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_DEL4' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
  created $adff cell `$procdff$2905' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_DEL5' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
  created $adff cell `$procdff$2906' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_DEL6' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
  created $adff cell `$procdff$2907' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_DEL7' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
  created $adff cell `$procdff$2908' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_DEL8' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
  created $adff cell `$procdff$2909' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_DEL9' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
  created $adff cell `$procdff$2910' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_DEL10' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
  created $adff cell `$procdff$2911' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_DEL11' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
  created $adff cell `$procdff$2912' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_DEL12' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
  created $adff cell `$procdff$2913' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_DEL13' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
  created $adff cell `$procdff$2914' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_DEL14' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
  created $adff cell `$procdff$2915' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_DEL15' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
  created $adff cell `$procdff$2916' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\OVERFLOW_DATA' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
  created $adff cell `$procdff$2917' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TXC' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
  created $dff cell `$procdff$2920' with positive edge clock.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_VALID_DEL1' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
  created $adff cell `$procdff$2921' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_VALID_DEL2' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
  created $adff cell `$procdff$2922' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_VALID_DEL3' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
  created $adff cell `$procdff$2923' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_VALID_DEL4' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
  created $adff cell `$procdff$2924' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_VALID_DEL5' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
  created $adff cell `$procdff$2925' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_VALID_DEL6' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
  created $adff cell `$procdff$2926' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_VALID_DEL7' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
  created $adff cell `$procdff$2927' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_VALID_DEL8' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
  created $adff cell `$procdff$2928' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_VALID_DEL9' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
  created $adff cell `$procdff$2929' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_VALID_DEL10' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
  created $adff cell `$procdff$2930' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_VALID_DEL11' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
  created $adff cell `$procdff$2931' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_VALID_DEL12' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
  created $adff cell `$procdff$2932' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_VALID_DEL13' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
  created $adff cell `$procdff$2933' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_VALID_DEL14' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
  created $adff cell `$procdff$2934' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_VALID_DEL15' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
  created $adff cell `$procdff$2935' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\OVERFLOW_VALID' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
  created $adff cell `$procdff$2936' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\frame_start_del' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1375$1741'.
  created $adff cell `$procdff$2937' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\transmit_pause_frame_del' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1375$1741'.
  created $adff cell `$procdff$2938' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\transmit_pause_frame_del2' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1375$1741'.
  created $adff cell `$procdff$2939' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\append_start_pause' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1375$1741'.
  created $adff cell `$procdff$2940' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\append_start_pause_del' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1375$1741'.
  created $adff cell `$procdff$2941' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\transmit_pause_frame_valid' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1375$1741'.
  created $adff cell `$procdff$2942' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\reset_err_pause' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1375$1741'.
  created $adff cell `$procdff$2943' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\load_CRC8' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1375$1741'.
  created $adff cell `$procdff$2944' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\transmit_pause_frame_del3' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1375$1741'.
  created $adff cell `$procdff$2945' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_REG' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1313$1738'.
  created $adff cell `$procdff$2946' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_VALID_REG' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1277$1734'.
  created $adff cell `$procdff$2947' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_DATA_VALID_DELAY' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1264$1733'.
  created $dff cell `$procdff$2948' with positive edge clock.
Creating register for signal `\TRANSMIT_TOP.\apply_pause_delay' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1245$1732'.
  created $adff cell `$procdff$2949' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\store_pause_frame' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1245$1732'.
  created $adff cell `$procdff$2950' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\insert_error' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1207$1725'.
  created $adff cell `$procdff$2951' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\tx_undderrun_int' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1193$1724'.
  created $dff cell `$procdff$2952' with positive edge clock.
Creating register for signal `\TRANSMIT_TOP.\MAX_FRAME_SIZE' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1157$1723'.
  created $adff cell `$procdff$2953' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\DELAY_ACK' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1140$1722'.
  created $adff cell `$procdff$2954' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\vlan_enabled_int' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1118$1721'.
  created $adff cell `$procdff$2955' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\jumbo_enabled_int' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1118$1721'.
  created $adff cell `$procdff$2956' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\tx_enabled_int' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1118$1721'.
  created $adff cell `$procdff$2957' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\fcs_enabled_int' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1118$1721'.
  created $adff cell `$procdff$2958' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\reset_tx_int' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1118$1721'.
  created $adff cell `$procdff$2959' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\read_ifg_int' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1118$1721'.
  created $adff cell `$procdff$2960' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TX_STATS_VALID' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1099$1720'.
  created $dff cell `$procdff$2961' with positive edge clock.
Creating register for signal `\TRANSMIT_TOP.\TXSTATREGPLUS' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1099$1720'.
  created $dff cell `$procdff$2962' with positive edge clock.
Creating register for signal `\TRANSMIT_TOP.\txstatplus_int' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1066$1718'.
  created $adff cell `$procdff$2963' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\FRAME_START' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1032$1714'.
  created $adff cell `$procdff$2964' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\shift_pause_data' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:993$1707'.
  created $adff cell `$procdff$2965' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\shift_pause_valid' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:993$1707'.
  created $adff cell `$procdff$2966' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\shift_pause_valid_del' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:993$1707'.
  created $adff cell `$procdff$2967' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\pause_frame_counter' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:982$1703'.
  created $adff cell `$procdff$2968' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TXD_PAUSE_DEL0' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:956$1702'.
  created $adff cell `$procdff$2969' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TXD_PAUSE_DEL1' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:956$1702'.
  created $adff cell `$procdff$2970' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TXD_PAUSE_DEL2' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:956$1702'.
  created $adff cell `$procdff$2971' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TXC_PAUSE_DEL0' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:956$1702'.
  created $adff cell `$procdff$2972' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TXC_PAUSE_DEL1' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:956$1702'.
  created $adff cell `$procdff$2973' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\TXC_PAUSE_DEL2' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:956$1702'.
  created $adff cell `$procdff$2974' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\store_transmit_pause_value' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:956$1702'.
  created $adff cell `$procdff$2975' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\set_pause_stats' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:943$1701'.
  created $adff cell `$procdff$2976' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\transmit_pause_frame' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:930$1699'.
  created $adff cell `$procdff$2977' with positive edge clock and positive level reset.
Creating register for signal `\TRANSMIT_TOP.\PAUSEVAL_DEL' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:923$1698'.
  created $dff cell `$procdff$2978' with positive edge clock.
Creating register for signal `\TRANSMIT_TOP.\PAUSEVAL_DEL1' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:923$1698'.
  created $dff cell `$procdff$2979' with positive edge clock.
Creating register for signal `\TRANSMIT_TOP.\PAUSEVAL_DEL2' using process `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:923$1698'.
  created $dff cell `$procdff$2980' with positive edge clock.
Creating register for signal `\CRC32_D8.\CRC_OUT' using process `\CRC32_D8.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:453$1430'.
  created $adff cell `$procdff$2981' with positive edge clock and positive level reset.
Creating register for signal `\CRC32_D8.\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.$result' using process `\CRC32_D8.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:453$1430'.
  created $adff cell `$procdff$2982' with positive edge clock and positive level reset.
Creating register for signal `\CRC32_D8.\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.Data' using process `\CRC32_D8.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:453$1430'.
  created $adff cell `$procdff$2983' with positive edge clock and positive level reset.
Creating register for signal `\CRC32_D8.\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.CRC' using process `\CRC32_D8.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:453$1430'.
  created $adff cell `$procdff$2984' with positive edge clock and positive level reset.
Creating register for signal `\CRC32_D8.\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.D' using process `\CRC32_D8.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:453$1430'.
  created $adff cell `$procdff$2985' with positive edge clock and positive level reset.
Creating register for signal `\CRC32_D8.\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.C' using process `\CRC32_D8.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:453$1430'.
  created $adff cell `$procdff$2986' with positive edge clock and positive level reset.
Creating register for signal `\CRC32_D8.\nextCRC32_D8$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:459$1428.NewCRC' using process `\CRC32_D8.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:453$1430'.
  created $adff cell `$procdff$2987' with positive edge clock and positive level reset.
Creating register for signal `\CRC32_D8.\start_int' using process `\CRC32_D8.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:447$1429'.
  created $dff cell `$procdff$2988' with positive edge clock.
Creating register for signal `\CRC32_D8.\data_int' using process `\CRC32_D8.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:447$1429'.
  created $dff cell `$procdff$2989' with positive edge clock.
Creating register for signal `\CRC32_D64.\CRC_OUT' using process `\CRC32_D64.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:156$18'.
  created $adff cell `$procdff$2990' with positive edge clock and positive level reset.
Creating register for signal `\CRC32_D64.\CRC_REG' using process `\CRC32_D64.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:156$18'.
  created $adff cell `$procdff$2991' with positive edge clock and positive level reset.
Creating register for signal `\CRC32_D64.\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.$result' using process `\CRC32_D64.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:156$18'.
  created $adff cell `$procdff$2992' with positive edge clock and positive level reset.
Creating register for signal `\CRC32_D64.\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.Data' using process `\CRC32_D64.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:156$18'.
  created $adff cell `$procdff$2993' with positive edge clock and positive level reset.
Creating register for signal `\CRC32_D64.\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.CRC' using process `\CRC32_D64.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:156$18'.
  created $adff cell `$procdff$2994' with positive edge clock and positive level reset.
Creating register for signal `\CRC32_D64.\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.D' using process `\CRC32_D64.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:156$18'.
  created $adff cell `$procdff$2995' with positive edge clock and positive level reset.
Creating register for signal `\CRC32_D64.\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.C' using process `\CRC32_D64.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:156$18'.
  created $adff cell `$procdff$2996' with positive edge clock and positive level reset.
Creating register for signal `\CRC32_D64.\nextCRC32_D64$func$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:164$16.NewCRC' using process `\CRC32_D64.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:156$18'.
  created $adff cell `$procdff$2997' with positive edge clock and positive level reset.
Creating register for signal `\byte_count_module.\BYTE_COUNTER' using process `\byte_count_module.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:116$15'.
  created $dff cell `$procdff$2998' with positive edge clock.
Creating register for signal `\byte_count_module.\counter' using process `\byte_count_module.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:105$11'.
  created $adff cell `$procdff$2999' with positive edge clock and positive level reset.
Creating register for signal `\ack_counter.\tx_ack' using process `\ack_counter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:75$8'.
  created $adff cell `$procdff$3000' with positive edge clock and positive level reset.
Creating register for signal `\ack_counter.\start_count_del' using process `\ack_counter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:75$8'.
  created $adff cell `$procdff$3001' with positive edge clock and positive level reset.
Creating register for signal `\ack_counter.\counter' using process `\ack_counter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:57$5'.
  created $adff cell `$procdff$3002' with positive edge clock and positive level reset.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 2 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1961$1766'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1961$1766'.
Found and cleaned up 2 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1944$1762'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1944$1762'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1918$1761'.
Found and cleaned up 1 empty switch in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1907$1760'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1907$1760'.
Found and cleaned up 3 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1889$1757'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1889$1757'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1878$1756'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1865$1755'.
Found and cleaned up 1 empty switch in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1844$1754'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1844$1754'.
Found and cleaned up 25 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1520$1753'.
Found and cleaned up 11 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1403$1752'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1375$1741'.
Found and cleaned up 5 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1313$1738'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1313$1738'.
Found and cleaned up 6 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1277$1734'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1277$1734'.
Found and cleaned up 1 empty switch in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1264$1733'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1264$1733'.
Found and cleaned up 2 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1245$1732'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1245$1732'.
Found and cleaned up 7 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1207$1725'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1207$1725'.
Found and cleaned up 3 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1193$1724'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1193$1724'.
Found and cleaned up 5 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1157$1723'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1157$1723'.
Found and cleaned up 2 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1140$1722'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1140$1722'.
Found and cleaned up 1 empty switch in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1118$1721'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1118$1721'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1099$1720'.
Found and cleaned up 5 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1066$1718'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1066$1718'.
Found and cleaned up 2 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1032$1714'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:1032$1714'.
Found and cleaned up 5 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:993$1707'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:993$1707'.
Found and cleaned up 1 empty switch in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:982$1703'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:982$1703'.
Found and cleaned up 1 empty switch in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:956$1702'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:956$1702'.
Found and cleaned up 2 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:943$1701'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:943$1701'.
Found and cleaned up 2 empty switches in `\TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:930$1699'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:930$1699'.
Removing empty process `TRANSMIT_TOP.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:923$1698'.
Found and cleaned up 2 empty switches in `\CRC32_D8.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:453$1430'.
Removing empty process `CRC32_D8.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:453$1430'.
Removing empty process `CRC32_D8.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:447$1429'.
Found and cleaned up 1 empty switch in `\CRC32_D64.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:156$18'.
Removing empty process `CRC32_D64.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:156$18'.
Removing empty process `CRC32_D64.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:151$17'.
Removing empty process `byte_count_module.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:116$15'.
Found and cleaned up 1 empty switch in `\byte_count_module.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:105$11'.
Removing empty process `byte_count_module.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:105$11'.
Removing empty process `ack_counter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:75$8'.
Found and cleaned up 2 empty switches in `\ack_counter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:57$5'.
Removing empty process `ack_counter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:57$5'.
Found and cleaned up 3 empty switches in `\ack_counter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:39$1'.
Removing empty process `ack_counter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:39$1'.
Cleaned up 104 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module TRANSMIT_TOP.
<suppressed ~23 debug messages>
Optimizing module CRC32_D8.
<suppressed ~2 debug messages>
Optimizing module CRC32_D64.
<suppressed ~1 debug messages>
Optimizing module byte_count_module.
<suppressed ~2 debug messages>
Optimizing module ack_counter.
<suppressed ~9 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TRANSMIT_TOP.
Optimizing module CRC32_D8.
Optimizing module CRC32_D64.
Optimizing module byte_count_module.
Optimizing module ack_counter.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TRANSMIT_TOP'.
<suppressed ~315 debug messages>
Finding identical cells in module `\CRC32_D8'.
<suppressed ~111 debug messages>
Finding identical cells in module `\CRC32_D64'.
<suppressed ~123 debug messages>
Finding identical cells in module `\byte_count_module'.
Finding identical cells in module `\ack_counter'.
<suppressed ~3 debug messages>
Removed a total of 184 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TRANSMIT_TOP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \CRC32_D8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$2636.
    dead port 2/2 on $mux $procmux$2636.
    dead port 1/2 on $mux $procmux$2633.
    dead port 2/2 on $mux $procmux$2633.
    dead port 1/2 on $mux $procmux$2630.
    dead port 2/2 on $mux $procmux$2630.
    dead port 1/2 on $mux $procmux$2627.
    dead port 2/2 on $mux $procmux$2627.
    dead port 1/2 on $mux $procmux$2624.
    dead port 2/2 on $mux $procmux$2624.
    dead port 1/2 on $mux $procmux$2621.
    dead port 2/2 on $mux $procmux$2621.
    dead port 1/2 on $mux $procmux$2618.
    dead port 2/2 on $mux $procmux$2618.
    dead port 1/2 on $mux $procmux$2615.
    dead port 2/2 on $mux $procmux$2615.
    dead port 1/2 on $mux $procmux$2612.
    dead port 1/2 on $mux $procmux$2687.
    dead port 2/2 on $mux $procmux$2687.
    dead port 1/2 on $mux $procmux$2726.
    dead port 2/2 on $mux $procmux$2726.
    dead port 1/2 on $mux $procmux$2723.
    dead port 2/2 on $mux $procmux$2723.
    dead port 1/2 on $mux $procmux$2720.
    dead port 2/2 on $mux $procmux$2720.
    dead port 1/2 on $mux $procmux$2717.
    dead port 2/2 on $mux $procmux$2717.
    dead port 1/2 on $mux $procmux$2651.
    dead port 2/2 on $mux $procmux$2651.
    dead port 1/2 on $mux $procmux$2663.
    dead port 2/2 on $mux $procmux$2663.
    dead port 1/2 on $mux $procmux$2684.
    dead port 2/2 on $mux $procmux$2684.
    dead port 1/2 on $mux $procmux$2711.
    dead port 2/2 on $mux $procmux$2711.
    dead port 1/2 on $mux $procmux$2660.
    dead port 2/2 on $mux $procmux$2660.
    dead port 1/2 on $mux $procmux$2681.
    dead port 2/2 on $mux $procmux$2681.
    dead port 1/2 on $mux $procmux$2708.
    dead port 2/2 on $mux $procmux$2708.
    dead port 1/2 on $mux $procmux$2678.
    dead port 2/2 on $mux $procmux$2678.
    dead port 1/2 on $mux $procmux$2705.
    dead port 2/2 on $mux $procmux$2705.
    dead port 1/2 on $mux $procmux$2639.
    dead port 2/2 on $mux $procmux$2639.
    dead port 1/2 on $mux $procmux$2642.
    dead port 2/2 on $mux $procmux$2642.
    dead port 1/2 on $mux $procmux$2648.
    dead port 2/2 on $mux $procmux$2648.
    dead port 1/2 on $mux $procmux$2657.
    dead port 2/2 on $mux $procmux$2657.
    dead port 1/2 on $mux $procmux$2675.
    dead port 2/2 on $mux $procmux$2675.
    dead port 1/2 on $mux $procmux$2702.
    dead port 2/2 on $mux $procmux$2702.
    dead port 1/2 on $mux $procmux$2645.
    dead port 2/2 on $mux $procmux$2645.
    dead port 1/2 on $mux $procmux$2654.
    dead port 2/2 on $mux $procmux$2654.
    dead port 1/2 on $mux $procmux$2672.
    dead port 2/2 on $mux $procmux$2672.
    dead port 1/2 on $mux $procmux$2699.
    dead port 2/2 on $mux $procmux$2699.
    dead port 1/2 on $mux $procmux$2669.
    dead port 2/2 on $mux $procmux$2669.
    dead port 1/2 on $mux $procmux$2696.
    dead port 2/2 on $mux $procmux$2696.
    dead port 1/2 on $mux $procmux$2666.
    dead port 2/2 on $mux $procmux$2666.
    dead port 1/2 on $mux $procmux$2693.
    dead port 2/2 on $mux $procmux$2693.
    dead port 1/2 on $mux $procmux$2690.
    dead port 2/2 on $mux $procmux$2690.
Running muxtree optimizer on module \CRC32_D64..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$2738.
    dead port 2/2 on $mux $procmux$2738.
    dead port 1/2 on $mux $procmux$2735.
    dead port 2/2 on $mux $procmux$2735.
    dead port 1/2 on $mux $procmux$2732.
    dead port 2/2 on $mux $procmux$2732.
    dead port 1/2 on $mux $procmux$2729.
    dead port 2/2 on $mux $procmux$2729.
    dead port 1/2 on $mux $procmux$2789.
    dead port 2/2 on $mux $procmux$2789.
    dead port 1/2 on $mux $procmux$2786.
    dead port 2/2 on $mux $procmux$2786.
    dead port 1/2 on $mux $procmux$2783.
    dead port 2/2 on $mux $procmux$2783.
    dead port 1/2 on $mux $procmux$2837.
    dead port 2/2 on $mux $procmux$2837.
    dead port 1/2 on $mux $procmux$2834.
    dead port 2/2 on $mux $procmux$2834.
    dead port 1/2 on $mux $procmux$2756.
    dead port 2/2 on $mux $procmux$2756.
    dead port 1/2 on $mux $procmux$2780.
    dead port 2/2 on $mux $procmux$2780.
    dead port 1/2 on $mux $procmux$2831.
    dead port 2/2 on $mux $procmux$2831.
    dead port 1/2 on $mux $procmux$2747.
    dead port 2/2 on $mux $procmux$2747.
    dead port 1/2 on $mux $procmux$2753.
    dead port 2/2 on $mux $procmux$2753.
    dead port 1/2 on $mux $procmux$2777.
    dead port 2/2 on $mux $procmux$2777.
    dead port 1/2 on $mux $procmux$2828.
    dead port 2/2 on $mux $procmux$2828.
    dead port 1/2 on $mux $procmux$2825.
    dead port 2/2 on $mux $procmux$2825.
    dead port 1/2 on $mux $procmux$2774.
    dead port 2/2 on $mux $procmux$2774.
    dead port 1/2 on $mux $procmux$2822.
    dead port 2/2 on $mux $procmux$2822.
    dead port 1/2 on $mux $procmux$2819.
    dead port 2/2 on $mux $procmux$2819.
    dead port 1/2 on $mux $procmux$2771.
    dead port 2/2 on $mux $procmux$2771.
    dead port 1/2 on $mux $procmux$2816.
    dead port 2/2 on $mux $procmux$2816.
    dead port 1/2 on $mux $procmux$2813.
    dead port 2/2 on $mux $procmux$2813.
    dead port 1/2 on $mux $procmux$2810.
    dead port 2/2 on $mux $procmux$2810.
    dead port 1/2 on $mux $procmux$2768.
    dead port 2/2 on $mux $procmux$2768.
    dead port 1/2 on $mux $procmux$2807.
    dead port 2/2 on $mux $procmux$2807.
    dead port 1/2 on $mux $procmux$2804.
    dead port 2/2 on $mux $procmux$2804.
    dead port 1/2 on $mux $procmux$2765.
    dead port 2/2 on $mux $procmux$2765.
    dead port 1/2 on $mux $procmux$2801.
    dead port 2/2 on $mux $procmux$2801.
    dead port 1/2 on $mux $procmux$2741.
    dead port 2/2 on $mux $procmux$2741.
    dead port 1/2 on $mux $procmux$2744.
    dead port 2/2 on $mux $procmux$2744.
    dead port 1/2 on $mux $procmux$2750.
    dead port 2/2 on $mux $procmux$2750.
    dead port 1/2 on $mux $procmux$2762.
    dead port 2/2 on $mux $procmux$2762.
    dead port 1/2 on $mux $procmux$2798.
    dead port 2/2 on $mux $procmux$2798.
    dead port 1/2 on $mux $procmux$2759.
    dead port 2/2 on $mux $procmux$2759.
    dead port 1/2 on $mux $procmux$2795.
    dead port 2/2 on $mux $procmux$2795.
    dead port 1/2 on $mux $procmux$2792.
    dead port 2/2 on $mux $procmux$2792.
Running muxtree optimizer on module \byte_count_module..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ack_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 149 multiplexer ports.
<suppressed ~70 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TRANSMIT_TOP.
    New ctrl vector for $pmux cell $procmux$2408: { $procmux$2416_CMP $procmux$2415_CMP $procmux$2414_CMP $procmux$2413_CMP $procmux$2412_CMP $procmux$2411_CMP $procmux$2410_CMP $auto$opt_reduce.cc:134:opt_mux$3004 }
    New ctrl vector for $pmux cell $procmux$2383: { $auto$opt_reduce.cc:134:opt_mux$3006 $procmux$2392_CMP $procmux$2388_CMP $procmux$2384_CMP }
    New ctrl vector for $pmux cell $procmux$2318: { $auto$opt_reduce.cc:134:opt_mux$3008 $procmux$2393_CMP $procmux$2392_CMP $procmux$2388_CMP $procmux$2384_CMP }
    New ctrl vector for $pmux cell $procmux$2222: { $auto$opt_reduce.cc:134:opt_mux$3010 $procmux$2388_CMP $procmux$2384_CMP }
    New ctrl vector for $pmux cell $procmux$2186: { $auto$opt_reduce.cc:134:opt_mux$3012 $procmux$2394_CMP $procmux$2393_CMP $procmux$2392_CMP $procmux$2388_CMP $procmux$2384_CMP }
    New ctrl vector for $pmux cell $procmux$2159: { $procmux$2388_CMP $auto$opt_reduce.cc:134:opt_mux$3014 }
    New ctrl vector for $pmux cell $procmux$2068: { $procmux$2388_CMP $auto$opt_reduce.cc:134:opt_mux$3016 }
    New ctrl vector for $pmux cell $procmux$2045: { $procmux$2388_CMP $auto$opt_reduce.cc:134:opt_mux$3018 }
    New ctrl vector for $pmux cell $procmux$1887: { $auto$opt_reduce.cc:134:opt_mux$3020 $procmux$2392_CMP $procmux$2388_CMP $procmux$2384_CMP }
    New ctrl vector for $pmux cell $procmux$1860: { $auto$opt_reduce.cc:134:opt_mux$3022 $procmux$2388_CMP $procmux$2384_CMP }
  Optimizing cells in module \TRANSMIT_TOP.
  Optimizing cells in module \CRC32_D8.
  Optimizing cells in module \CRC32_D64.
  Optimizing cells in module \byte_count_module.
  Optimizing cells in module \ack_counter.
Performed a total of 10 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TRANSMIT_TOP'.
<suppressed ~207 debug messages>
Finding identical cells in module `\CRC32_D8'.
Finding identical cells in module `\CRC32_D64'.
Finding identical cells in module `\byte_count_module'.
Finding identical cells in module `\ack_counter'.
Removed a total of 69 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$2886 ($adff) from module TRANSMIT_TOP (D = $procmux$1775_Y, Q = \length_register).
Adding SRST signal on $procdff$2890 ($dff) from module TRANSMIT_TOP (D = \final_byte_count [14:0], Q = \byte_count_stat, rval = 15'000001000000000).
Adding EN signal on $procdff$2891 ($adff) from module TRANSMIT_TOP (D = $procmux$1786_Y, Q = \final_byte_count).
Adding EN signal on $procdff$2895 ($adff) from module TRANSMIT_TOP (D = \store_tx_data [7:0], Q = \tx_data_int).
Adding EN signal on $procdff$2896 ($adff) from module TRANSMIT_TOP (D = \TX_DATA_VALID_DEL2 [7], Q = \store_tx_data_valid [7]).
Adding EN signal on $procdff$2897 ($adff) from module TRANSMIT_TOP (D = \TX_DATA_DEL2 [63:56], Q = \store_tx_data [63:56]).
Adding EN signal on $procdff$2898 ($adff) from module TRANSMIT_TOP (D = \CRC_32_64, Q = \store_CRC64).
Adding EN signal on $procdff$2901 ($dff) from module TRANSMIT_TOP (D = \TX_DATA_DEL15, Q = \TXD).
Adding EN signal on $procdff$2917 ($adff) from module TRANSMIT_TOP (D = $procmux$2186_Y, Q = \OVERFLOW_DATA [7:0]).
Adding EN signal on $procdff$2917 ($adff) from module TRANSMIT_TOP (D = $procmux$2318_Y, Q = \OVERFLOW_DATA [15:8]).
Adding EN signal on $procdff$2917 ($adff) from module TRANSMIT_TOP (D = $procmux$1887_Y, Q = \OVERFLOW_DATA [23:16]).
Adding EN signal on $procdff$2917 ($adff) from module TRANSMIT_TOP (D = { $procmux$2222_Y $procmux$1860_Y }, Q = \OVERFLOW_DATA [39:24]).
Adding EN signal on $procdff$2917 ($adff) from module TRANSMIT_TOP (D = { $procmux$2045_Y $procmux$2159_Y $procmux$2068_Y }, Q = \OVERFLOW_DATA [63:40]).
Adding EN signal on $procdff$2920 ($dff) from module TRANSMIT_TOP (D = \TX_DATA_VALID_DEL15, Q = \TXC).
Adding EN signal on $procdff$2936 ($adff) from module TRANSMIT_TOP (D = $procmux$2383_Y, Q = \OVERFLOW_VALID).
Adding EN signal on $procdff$2946 ($adff) from module TRANSMIT_TOP (D = $procmux$2420_Y, Q = \TX_DATA_REG).
Adding SRST signal on $procdff$2948 ($dff) from module TRANSMIT_TOP (D = \TX_DATA, Q = \TX_DATA_VALID_DELAY, rval = 64'0000011100000111000001110000011100000111000001110000011100000111).
Adding EN signal on $procdff$2949 ($adff) from module TRANSMIT_TOP (D = $procmux$2451_Y, Q = \apply_pause_delay).
Adding EN signal on $procdff$2950 ($adff) from module TRANSMIT_TOP (D = $procmux$2446_Y, Q = \store_pause_frame).
Adding EN signal on $procdff$2951 ($adff) from module TRANSMIT_TOP (D = $procmux$2471_Y, Q = \insert_error).
Adding SRST signal on $procdff$2952 ($dff) from module TRANSMIT_TOP (D = $procmux$2473_Y, Q = \tx_undderrun_int, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3091 ($sdff) from module TRANSMIT_TOP (D = 1'1, Q = \tx_undderrun_int).
Adding EN signal on $procdff$2954 ($adff) from module TRANSMIT_TOP (D = $procmux$2499_Y, Q = \DELAY_ACK).
Adding EN signal on $procdff$2955 ($adff) from module TRANSMIT_TOP (D = \TX_CFG_REG_VALUE [27], Q = \vlan_enabled_int).
Adding EN signal on $procdff$2956 ($adff) from module TRANSMIT_TOP (D = \TX_CFG_REG_VALUE [30], Q = \jumbo_enabled_int).
Adding EN signal on $procdff$2957 ($adff) from module TRANSMIT_TOP (D = \TX_CFG_REG_VALUE [28], Q = \tx_enabled_int).
Adding EN signal on $procdff$2958 ($adff) from module TRANSMIT_TOP (D = \TX_CFG_REG_VALUE [29], Q = \fcs_enabled_int).
Adding EN signal on $procdff$2959 ($adff) from module TRANSMIT_TOP (D = \TX_CFG_REG_VALUE [31], Q = \reset_tx_int).
Adding EN signal on $procdff$2960 ($adff) from module TRANSMIT_TOP (D = \TX_CFG_REG_VALUE [25], Q = \read_ifg_int).
Adding EN signal on $procdff$2963 ($adff) from module TRANSMIT_TOP (D = 5'00000, Q = { \txstatplus_int [23:20] \txstatplus_int [0] }).
Adding EN signal on $procdff$2963 ($adff) from module TRANSMIT_TOP (D = $procmux$2548_Y, Q = \txstatplus_int [3]).
Adding EN signal on $procdff$2963 ($adff) from module TRANSMIT_TOP (D = $procmux$2538_Y, Q = \txstatplus_int [19]).
Adding EN signal on $procdff$2963 ($adff) from module TRANSMIT_TOP (D = $procmux$2527_Y, Q = \txstatplus_int [18:5]).
Adding EN signal on $procdff$2963 ($adff) from module TRANSMIT_TOP (D = { $procmux$2516_Y $procmux$2532_Y $procmux$2556_Y $procmux$2543_Y }, Q = { \txstatplus_int [24] \txstatplus_int [4] \txstatplus_int [2:1] }).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3104 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3104 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3104 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$3104 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$3104 ($adffe) from module TRANSMIT_TOP.
Adding EN signal on $procdff$2964 ($adff) from module TRANSMIT_TOP (D = $procmux$2564_Y, Q = \FRAME_START).
Adding EN signal on $procdff$2968 ($adff) from module TRANSMIT_TOP (D = $add$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:988$1706_Y [3:0], Q = \pause_frame_counter).
Handling D = Q on $procdff$2969 ($adff) from module TRANSMIT_TOP (removing D path).
Setting constant 0-bit at position 0 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 1 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 2 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 3 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 4 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 5 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 6 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 7 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 8 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 9 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 10 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 11 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 12 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 13 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 14 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 15 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 16 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 17 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 18 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 19 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 20 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 21 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 22 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 23 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 24 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 25 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 26 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 27 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 28 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 29 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 30 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 31 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 32 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 33 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 34 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 35 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 36 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 37 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 38 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 39 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 40 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 41 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 42 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 43 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 44 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 45 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 46 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 47 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 48 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 49 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 50 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 51 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 52 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 53 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 54 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 55 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 56 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 57 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 58 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 59 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 60 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 61 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 62 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 63 on $procdff$2969 ($adff) from module TRANSMIT_TOP.
Adding EN signal on $procdff$2970 ($adff) from module TRANSMIT_TOP (D = 64'0001000000010000000100000001000000010000000100000000000100000001, Q = \TXD_PAUSE_DEL1).
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 10 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 32 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 33 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 34 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 35 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 37 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 38 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 39 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 40 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 41 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 42 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 43 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 45 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 46 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 47 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 48 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 49 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 50 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 51 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 53 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 54 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 55 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 56 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 57 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 58 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 59 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 61 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 62 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 63 on $auto$ff.cc:262:slice$3121 ($adffe) from module TRANSMIT_TOP.
Adding EN signal on $procdff$2971 ($adff) from module TRANSMIT_TOP (D = { 48'000000010000000100000001000000101000100000001000 \FC_TRANS_PAUSEDATA }, Q = \TXD_PAUSE_DEL2).
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 32 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 34 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 35 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 36 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 37 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 38 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 39 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 41 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 42 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 43 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 44 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 45 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 46 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 47 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 49 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 50 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 51 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 52 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 53 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 54 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 55 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 57 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 58 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 59 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 60 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 61 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 62 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Setting constant 0-bit at position 63 on $auto$ff.cc:262:slice$3123 ($adffe) from module TRANSMIT_TOP.
Handling D = Q on $procdff$2972 ($adff) from module TRANSMIT_TOP (removing D path).
Setting constant 0-bit at position 0 on $procdff$2972 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 1 on $procdff$2972 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 2 on $procdff$2972 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 3 on $procdff$2972 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 4 on $procdff$2972 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 5 on $procdff$2972 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 6 on $procdff$2972 ($adff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 7 on $procdff$2972 ($adff) from module TRANSMIT_TOP.
Adding EN signal on $procdff$2973 ($adff) from module TRANSMIT_TOP (D = 8'11111111, Q = \TXC_PAUSE_DEL1).
Adding EN signal on $procdff$2974 ($adff) from module TRANSMIT_TOP (D = 8'11111111, Q = \TXC_PAUSE_DEL2).
Adding EN signal on $procdff$2975 ($adff) from module TRANSMIT_TOP (D = \FC_TRANS_PAUSEDATA, Q = \store_transmit_pause_value).
Adding EN signal on $procdff$2976 ($adff) from module TRANSMIT_TOP (D = $procmux$2601_Y, Q = \set_pause_stats).
Adding EN signal on $procdff$2977 ($adff) from module TRANSMIT_TOP (D = $procmux$2606_Y, Q = \transmit_pause_frame).
Adding EN signal on $procdff$2981 ($adff) from module CRC32_D8 (D = $procmux$2714_Y, Q = \CRC_OUT).
Setting constant 1-bit at position 0 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 1 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 2 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 3 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 4 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 5 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 6 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 7 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 8 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 9 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 10 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 11 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 12 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 13 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 14 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 15 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 16 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 17 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 18 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 19 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 20 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 21 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 22 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 23 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 24 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 25 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 26 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 27 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 28 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 29 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 30 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 31 on $procdff$2987 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 0 on $procdff$2985 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 1 on $procdff$2985 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 2 on $procdff$2985 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 3 on $procdff$2985 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 4 on $procdff$2985 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 5 on $procdff$2985 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 6 on $procdff$2985 ($adff) from module CRC32_D8.
Setting constant 1-bit at position 7 on $procdff$2985 ($adff) from module CRC32_D8.
Adding EN signal on $procdff$2990 ($adff) from module CRC32_D64 (D = { $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:418$1427_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:411$1387_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:404$1345_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:397$1302_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:390$1257_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:383$1210_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:376$1164_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:369$1120_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:362$1074_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:354$1029_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:349$980_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:344$945_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:339$910_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:334$875_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:329$841_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:324$808_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:317$775_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:310$731_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:303$685_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:296$640_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:288$594_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:281$544_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:274$500_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:266$451_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:258$401_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:251$350_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:244$306_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:237$260_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:230$214_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:223$170_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:216$127_Y $xor$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:209$79_Y }, Q = \CRC_OUT).
Handling D = Q on $procdff$2991 ($adff) from module CRC32_D64 (removing D path).
Setting constant 0-bit at position 0 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 1 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 2 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 3 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 4 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 5 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 6 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 7 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 8 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 9 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 10 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 11 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 12 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 13 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 14 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 15 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 16 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 17 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 18 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 19 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 20 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 21 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 22 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 23 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 24 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 25 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 26 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 27 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 28 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 29 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 30 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 0-bit at position 31 on $procdff$2991 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 0 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 1 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 2 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 3 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 4 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 5 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 6 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 7 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 8 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 9 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 10 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 11 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 12 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 13 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 14 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 15 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 16 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 17 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 18 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 19 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 20 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 21 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 22 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 23 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 24 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 25 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 26 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 27 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 28 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 29 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 30 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 31 on $procdff$2996 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 0 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 1 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 2 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 3 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 4 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 5 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 6 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 7 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 8 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 9 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 10 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 11 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 12 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 13 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 14 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 15 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 16 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 17 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 18 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 19 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 20 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 21 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 22 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 23 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 24 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 25 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 26 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 27 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 28 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 29 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 30 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 31 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 32 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 33 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 34 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 35 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 36 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 37 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 38 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 39 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 40 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 41 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 42 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 43 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 44 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 45 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 46 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 47 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 48 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 49 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 50 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 51 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 52 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 53 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 54 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 55 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 56 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 57 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 58 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 59 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 60 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 61 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 62 on $procdff$2995 ($adff) from module CRC32_D64.
Setting constant 1-bit at position 63 on $procdff$2995 ($adff) from module CRC32_D64.
Adding EN signal on $procdff$2999 ($adff) from module byte_count_module (D = $add$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/ethmac10g_tx.v:112$14_Y [15:0], Q = \counter).
Adding EN signal on $procdff$3002 ($adff) from module ack_counter (D = $procmux$2848_Y, Q = \counter).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TRANSMIT_TOP..
Finding unused cells or wires in module \CRC32_D8..
Finding unused cells or wires in module \CRC32_D64..
Finding unused cells or wires in module \byte_count_module..
Finding unused cells or wires in module \ack_counter..
Removed 44 unused cells and 825 unused wires.
<suppressed ~59 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module CRC32_D64.
Optimizing module CRC32_D8.
<suppressed ~1 debug messages>
Optimizing module TRANSMIT_TOP.
<suppressed ~16 debug messages>
Optimizing module ack_counter.
<suppressed ~1 debug messages>
Optimizing module byte_count_module.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \CRC32_D64..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \CRC32_D8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \TRANSMIT_TOP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ack_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \byte_count_module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~52 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \CRC32_D64.
  Optimizing cells in module \CRC32_D8.
  Optimizing cells in module \TRANSMIT_TOP.
    New ctrl vector for $pmux cell $procmux$2352: { $procmux$1850_CMP $procmux$1879_CMP $procmux$1845_CMP $procmux$1838_CMP $auto$opt_reduce.cc:134:opt_mux$3143 }
  Optimizing cells in module \TRANSMIT_TOP.
  Optimizing cells in module \ack_counter.
  Optimizing cells in module \byte_count_module.
Performed a total of 1 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\CRC32_D64'.
Finding identical cells in module `\CRC32_D8'.
Finding identical cells in module `\TRANSMIT_TOP'.
<suppressed ~51 debug messages>
Finding identical cells in module `\ack_counter'.
Finding identical cells in module `\byte_count_module'.
Removed a total of 17 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$2962 ($dff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 20 on $procdff$2962 ($dff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 21 on $procdff$2962 ($dff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 22 on $procdff$2962 ($dff) from module TRANSMIT_TOP.
Setting constant 0-bit at position 23 on $procdff$2962 ($dff) from module TRANSMIT_TOP.

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \CRC32_D64..
Finding unused cells or wires in module \CRC32_D8..
Finding unused cells or wires in module \TRANSMIT_TOP..
Finding unused cells or wires in module \ack_counter..
Finding unused cells or wires in module \byte_count_module..
Removed 1 unused cells and 16 unused wires.
<suppressed ~3 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module CRC32_D64.
Optimizing module CRC32_D8.
Optimizing module TRANSMIT_TOP.
Optimizing module ack_counter.
Optimizing module byte_count_module.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \CRC32_D64..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \CRC32_D8..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \TRANSMIT_TOP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ack_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \byte_count_module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~48 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \CRC32_D64.
  Optimizing cells in module \CRC32_D8.
  Optimizing cells in module \TRANSMIT_TOP.
  Optimizing cells in module \ack_counter.
  Optimizing cells in module \byte_count_module.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\CRC32_D64'.
Finding identical cells in module `\CRC32_D8'.
Finding identical cells in module `\TRANSMIT_TOP'.
Finding identical cells in module `\ack_counter'.
Finding identical cells in module `\byte_count_module'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \CRC32_D64..
Finding unused cells or wires in module \CRC32_D8..
Finding unused cells or wires in module \TRANSMIT_TOP..
Finding unused cells or wires in module \ack_counter..
Finding unused cells or wires in module \byte_count_module..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module CRC32_D64.
Optimizing module CRC32_D8.
Optimizing module TRANSMIT_TOP.
Optimizing module ack_counter.
Optimizing module byte_count_module.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== CRC32_D64 ===

   Number of wires:               1366
   Number of wire bits:           1773
   Number of public wires:          13
   Number of public wire bits:     420
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1354
     $adffe                          1
     $xor                         1353

=== CRC32_D8 ===

   Number of wires:                224
   Number of wire bits:            469
   Number of public wires:          14
   Number of public wire bits:     197
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                213
     $adffe                          1
     $dff                            2
     $mux                            2
     $reduce_bool                    1
     $xor                          207

=== TRANSMIT_TOP ===

   Number of wires:                294
   Number of wire bits:           3680
   Number of public wires:         103
   Number of public wire bits:    2155
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                295
     $add                            2
     $adff                          50
     $adffe                         30
     $and                            9
     $dff                            5
     $dffe                           2
     $eq                            24
     $le                             1
     $logic_not                      7
     $lt                             4
     $mux                           95
     $ne                             7
     $or                             9
     $pmux                          15
     $reduce_and                     6
     $reduce_bool                   14
     $reduce_or                      8
     $sdff                           2
     $sdffe                          1
     CRC32_D64                       1
     CRC32_D8                        1
     ack_counter                     1
     byte_count_module               1

=== ack_counter ===

   Number of wires:                 25
   Number of wire bits:            116
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 20
     $add                            1
     $adff                           2
     $adffe                          1
     $and                            4
     $dlatch                         1
     $eq                             1
     $logic_not                      1
     $mux                            4
     $not                            4
     $reduce_bool                    1

=== byte_count_module ===

   Number of wires:                  6
   Number of wire bits:             67
   Number of public wires:           5
   Number of public wire bits:      35
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $add                            1
     $adffe                          1
     $dff                            1

=== design hierarchy ===

   TRANSMIT_TOP                      1
     CRC32_D64                       1
     CRC32_D8                        1
     ack_counter                     1
     byte_count_module               1

   Number of wires:               1915
   Number of wire bits:           6105
   Number of public wires:         144
   Number of public wire bits:    2846
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1881
     $add                            4
     $adff                          52
     $adffe                         34
     $and                           13
     $dff                            8
     $dffe                           2
     $dlatch                         1
     $eq                            25
     $le                             1
     $logic_not                      8
     $lt                             4
     $mux                          101
     $ne                             7
     $not                            4
     $or                             9
     $pmux                          15
     $reduce_and                     6
     $reduce_bool                   16
     $reduce_or                      8
     $sdff                           2
     $sdffe                          1
     $xor                         1560

End of script. Logfile hash: b386414bc1, CPU: user 1.14s system 0.01s, MEM: 32.64 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 24% 5x opt_expr (0 sec), 24% 2x read_verilog (0 sec), ...
