
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v' to AST representation.
Generating RTLIL representation for module `\apb'.
Generating RTLIL representation for module `\fifo'.
Generating RTLIL representation for module `\i2c'.
Generating RTLIL representation for module `\module_i2c'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: module_i2c          
root of   1 design levels: i2c                 
root of   0 design levels: fifo                
root of   0 design levels: apb                 
Automatically selected i2c as design top module.

2.2. Analyzing design hierarchy..
Top module:  \i2c
Used module:     \module_i2c
Used module:     \apb
Used module:     \fifo

2.3. Analyzing design hierarchy..
Top module:  \i2c
Used module:     \module_i2c
Used module:     \apb
Used module:     \fifo
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3921$1173 in module module_i2c.
Marked 45 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3125$781 in module module_i2c.
Marked 56 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:2600$713 in module module_i2c.
Marked 127 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:1320$211 in module module_i2c.
Marked 60 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:773$128 in module module_i2c.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:303$65 in module fifo.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:290$62 in module fifo.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:276$50 in module fifo.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:142$33 in module apb.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 3 redundant assignments.
Promoted 5 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3921$1173'.
     1/1: $0\count_timeout[11:0]
Creating decoders for process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3125$781'.
     1/38: $0\fifo_rx_data_in[31:0] [31]
     2/38: $0\fifo_rx_data_in[31:0] [30]
     3/38: $0\fifo_rx_data_in[31:0] [29]
     4/38: $0\fifo_rx_data_in[31:0] [28]
     5/38: $0\fifo_rx_data_in[31:0] [27]
     6/38: $0\fifo_rx_data_in[31:0] [26]
     7/38: $0\fifo_rx_data_in[31:0] [25]
     8/38: $0\fifo_rx_data_in[31:0] [24]
     9/38: $0\fifo_rx_data_in[31:0] [23]
    10/38: $0\fifo_rx_data_in[31:0] [22]
    11/38: $0\fifo_rx_data_in[31:0] [21]
    12/38: $0\fifo_rx_data_in[31:0] [20]
    13/38: $0\fifo_rx_data_in[31:0] [19]
    14/38: $0\fifo_rx_data_in[31:0] [18]
    15/38: $0\fifo_rx_data_in[31:0] [17]
    16/38: $0\fifo_rx_data_in[31:0] [16]
    17/38: $0\fifo_rx_data_in[31:0] [15]
    18/38: $0\fifo_rx_data_in[31:0] [14]
    19/38: $0\fifo_rx_data_in[31:0] [13]
    20/38: $0\fifo_rx_data_in[31:0] [12]
    21/38: $0\fifo_rx_data_in[31:0] [11]
    22/38: $0\fifo_rx_data_in[31:0] [10]
    23/38: $0\fifo_rx_data_in[31:0] [9]
    24/38: $0\fifo_rx_data_in[31:0] [8]
    25/38: $0\fifo_rx_data_in[31:0] [7]
    26/38: $0\fifo_rx_data_in[31:0] [6]
    27/38: $0\fifo_rx_data_in[31:0] [5]
    28/38: $0\fifo_rx_data_in[31:0] [4]
    29/38: $0\fifo_rx_data_in[31:0] [3]
    30/38: $0\fifo_rx_data_in[31:0] [2]
    31/38: $0\fifo_rx_data_in[31:0] [1]
    32/38: $0\fifo_rx_data_in[31:0] [0]
    33/38: $0\count_receive_data[11:0]
    34/38: $0\SDA_OUT_RX[0:0]
    35/38: $0\BR_CLK_O_RX[0:0]
    36/38: $0\count_rx[1:0]
    37/38: $0\state_rx[5:0]
    38/38: $0\fifo_rx_wr_en[0:0]
Creating decoders for process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:2600$713'.
     1/56: $56\next_state_rx[5:0]
     2/56: $55\next_state_rx[5:0]
     3/56: $54\next_state_rx[5:0]
     4/56: $53\next_state_rx[5:0]
     5/56: $52\next_state_rx[5:0]
     6/56: $51\next_state_rx[5:0]
     7/56: $50\next_state_rx[5:0]
     8/56: $49\next_state_rx[5:0]
     9/56: $48\next_state_rx[5:0]
    10/56: $47\next_state_rx[5:0]
    11/56: $46\next_state_rx[5:0]
    12/56: $45\next_state_rx[5:0]
    13/56: $44\next_state_rx[5:0]
    14/56: $43\next_state_rx[5:0]
    15/56: $42\next_state_rx[5:0]
    16/56: $41\next_state_rx[5:0]
    17/56: $40\next_state_rx[5:0]
    18/56: $39\next_state_rx[5:0]
    19/56: $38\next_state_rx[5:0]
    20/56: $37\next_state_rx[5:0]
    21/56: $36\next_state_rx[5:0]
    22/56: $35\next_state_rx[5:0]
    23/56: $34\next_state_rx[5:0]
    24/56: $33\next_state_rx[5:0]
    25/56: $32\next_state_rx[5:0]
    26/56: $31\next_state_rx[5:0]
    27/56: $30\next_state_rx[5:0]
    28/56: $29\next_state_rx[5:0]
    29/56: $28\next_state_rx[5:0]
    30/56: $27\next_state_rx[5:0]
    31/56: $26\next_state_rx[5:0]
    32/56: $25\next_state_rx[5:0]
    33/56: $24\next_state_rx[5:0]
    34/56: $23\next_state_rx[5:0]
    35/56: $22\next_state_rx[5:0]
    36/56: $21\next_state_rx[5:0]
    37/56: $20\next_state_rx[5:0]
    38/56: $19\next_state_rx[5:0]
    39/56: $18\next_state_rx[5:0]
    40/56: $17\next_state_rx[5:0]
    41/56: $16\next_state_rx[5:0]
    42/56: $15\next_state_rx[5:0]
    43/56: $14\next_state_rx[5:0]
    44/56: $13\next_state_rx[5:0]
    45/56: $12\next_state_rx[5:0]
    46/56: $11\next_state_rx[5:0]
    47/56: $10\next_state_rx[5:0]
    48/56: $9\next_state_rx[5:0]
    49/56: $8\next_state_rx[5:0]
    50/56: $7\next_state_rx[5:0]
    51/56: $6\next_state_rx[5:0]
    52/56: $5\next_state_rx[5:0]
    53/56: $4\next_state_rx[5:0]
    54/56: $3\next_state_rx[5:0]
    55/56: $2\next_state_rx[5:0]
    56/56: $1\next_state_rx[5:0]
Creating decoders for process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:1320$211'.
     1/7: $0\state_tx[5:0]
     2/7: $0\RESPONSE[0:0]
     3/7: $0\SDA_OUT[0:0]
     4/7: $0\BR_CLK_O[0:0]
     5/7: $0\count_send_data[11:0]
     6/7: $0\count_tx[1:0]
     7/7: $0\fifo_tx_rd_en[0:0]
Creating decoders for process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:773$128'.
     1/60: $60\next_state_tx[5:0]
     2/60: $59\next_state_tx[5:0]
     3/60: $58\next_state_tx[5:0]
     4/60: $57\next_state_tx[5:0]
     5/60: $56\next_state_tx[5:0]
     6/60: $55\next_state_tx[5:0]
     7/60: $54\next_state_tx[5:0]
     8/60: $53\next_state_tx[5:0]
     9/60: $52\next_state_tx[5:0]
    10/60: $51\next_state_tx[5:0]
    11/60: $50\next_state_tx[5:0]
    12/60: $49\next_state_tx[5:0]
    13/60: $48\next_state_tx[5:0]
    14/60: $47\next_state_tx[5:0]
    15/60: $46\next_state_tx[5:0]
    16/60: $45\next_state_tx[5:0]
    17/60: $44\next_state_tx[5:0]
    18/60: $43\next_state_tx[5:0]
    19/60: $42\next_state_tx[5:0]
    20/60: $41\next_state_tx[5:0]
    21/60: $40\next_state_tx[5:0]
    22/60: $39\next_state_tx[5:0]
    23/60: $38\next_state_tx[5:0]
    24/60: $37\next_state_tx[5:0]
    25/60: $36\next_state_tx[5:0]
    26/60: $35\next_state_tx[5:0]
    27/60: $34\next_state_tx[5:0]
    28/60: $33\next_state_tx[5:0]
    29/60: $32\next_state_tx[5:0]
    30/60: $31\next_state_tx[5:0]
    31/60: $30\next_state_tx[5:0]
    32/60: $29\next_state_tx[5:0]
    33/60: $28\next_state_tx[5:0]
    34/60: $27\next_state_tx[5:0]
    35/60: $26\next_state_tx[5:0]
    36/60: $25\next_state_tx[5:0]
    37/60: $24\next_state_tx[5:0]
    38/60: $23\next_state_tx[5:0]
    39/60: $22\next_state_tx[5:0]
    40/60: $21\next_state_tx[5:0]
    41/60: $20\next_state_tx[5:0]
    42/60: $19\next_state_tx[5:0]
    43/60: $18\next_state_tx[5:0]
    44/60: $17\next_state_tx[5:0]
    45/60: $16\next_state_tx[5:0]
    46/60: $15\next_state_tx[5:0]
    47/60: $14\next_state_tx[5:0]
    48/60: $13\next_state_tx[5:0]
    49/60: $12\next_state_tx[5:0]
    50/60: $11\next_state_tx[5:0]
    51/60: $10\next_state_tx[5:0]
    52/60: $9\next_state_tx[5:0]
    53/60: $8\next_state_tx[5:0]
    54/60: $7\next_state_tx[5:0]
    55/60: $6\next_state_tx[5:0]
    56/60: $5\next_state_tx[5:0]
    57/60: $4\next_state_tx[5:0]
    58/60: $3\next_state_tx[5:0]
    59/60: $2\next_state_tx[5:0]
    60/60: $1\next_state_tx[5:0]
Creating decoders for process `\fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:303$65'.
     1/1: $0\counter[3:0]
Creating decoders for process `\fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:290$62'.
     1/1: $0\rd_ptr[3:0]
Creating decoders for process `\fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:276$50'.
     1/7: $2$memwr$\mem$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:284$49_EN[31:0]$61
     2/7: $2$memwr$\mem$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:284$49_DATA[31:0]$60
     3/7: $2$memwr$\mem$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:284$49_ADDR[3:0]$59
     4/7: $1$memwr$\mem$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:284$49_EN[31:0]$56
     5/7: $1$memwr$\mem$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:284$49_DATA[31:0]$55
     6/7: $1$memwr$\mem$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:284$49_ADDR[3:0]$54
     7/7: $0\wr_ptr[3:0]
Creating decoders for process `\apb.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:142$33'.
     1/2: $0\INTERNAL_I2C_REGISTER_TIMEOUT[13:0]
     2/2: $0\INTERNAL_I2C_REGISTER_CONFIG[13:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\module_i2c.\next_state_rx' from process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:2600$713'.
No latch inferred for signal `\module_i2c.\next_state_tx' from process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:773$128'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\module_i2c.\count_timeout' using process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3921$1173'.
  created $dff cell `$procdff$6376' with positive edge clock.
Creating register for signal `\module_i2c.\fifo_rx_wr_en' using process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3125$781'.
  created $dff cell `$procdff$6377' with positive edge clock.
Creating register for signal `\module_i2c.\fifo_rx_data_in' using process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3125$781'.
  created $dff cell `$procdff$6378' with positive edge clock.
Creating register for signal `\module_i2c.\count_rx' using process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3125$781'.
  created $dff cell `$procdff$6379' with positive edge clock.
Creating register for signal `\module_i2c.\count_receive_data' using process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3125$781'.
  created $dff cell `$procdff$6380' with positive edge clock.
Creating register for signal `\module_i2c.\BR_CLK_O_RX' using process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3125$781'.
  created $dff cell `$procdff$6381' with positive edge clock.
Creating register for signal `\module_i2c.\SDA_OUT_RX' using process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3125$781'.
  created $dff cell `$procdff$6382' with positive edge clock.
Creating register for signal `\module_i2c.\state_rx' using process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3125$781'.
  created $dff cell `$procdff$6383' with positive edge clock.
Creating register for signal `\module_i2c.\fifo_tx_rd_en' using process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:1320$211'.
  created $dff cell `$procdff$6384' with positive edge clock.
Creating register for signal `\module_i2c.\count_tx' using process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:1320$211'.
  created $dff cell `$procdff$6385' with positive edge clock.
Creating register for signal `\module_i2c.\count_send_data' using process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:1320$211'.
  created $dff cell `$procdff$6386' with positive edge clock.
Creating register for signal `\module_i2c.\BR_CLK_O' using process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:1320$211'.
  created $dff cell `$procdff$6387' with positive edge clock.
Creating register for signal `\module_i2c.\SDA_OUT' using process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:1320$211'.
  created $dff cell `$procdff$6388' with positive edge clock.
Creating register for signal `\module_i2c.\RESPONSE' using process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:1320$211'.
  created $dff cell `$procdff$6389' with positive edge clock.
Creating register for signal `\module_i2c.\state_tx' using process `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:1320$211'.
  created $dff cell `$procdff$6390' with positive edge clock.
Creating register for signal `\fifo.\counter' using process `\fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:303$65'.
  created $dff cell `$procdff$6391' with positive edge clock.
Creating register for signal `\fifo.\rd_ptr' using process `\fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:290$62'.
  created $dff cell `$procdff$6392' with positive edge clock.
Creating register for signal `\fifo.\wr_ptr' using process `\fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:276$50'.
  created $dff cell `$procdff$6393' with positive edge clock.
Creating register for signal `\fifo.$memwr$\mem$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:284$49_ADDR' using process `\fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:276$50'.
  created $dff cell `$procdff$6394' with positive edge clock.
Creating register for signal `\fifo.$memwr$\mem$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:284$49_DATA' using process `\fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:276$50'.
  created $dff cell `$procdff$6395' with positive edge clock.
Creating register for signal `\fifo.$memwr$\mem$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:284$49_EN' using process `\fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:276$50'.
  created $dff cell `$procdff$6396' with positive edge clock.
Creating register for signal `\apb.\INTERNAL_I2C_REGISTER_CONFIG' using process `\apb.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:142$33'.
  created $dff cell `$procdff$6397' with positive edge clock.
Creating register for signal `\apb.\INTERNAL_I2C_REGISTER_TIMEOUT' using process `\apb.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:142$33'.
  created $dff cell `$procdff$6398' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 3 empty switches in `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3921$1173'.
Removing empty process `module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3921$1173'.
Found and cleaned up 79 empty switches in `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3125$781'.
Removing empty process `module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3125$781'.
Found and cleaned up 56 empty switches in `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:2600$713'.
Removing empty process `module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:2600$713'.
Found and cleaned up 134 empty switches in `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:1320$211'.
Removing empty process `module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:1320$211'.
Found and cleaned up 60 empty switches in `\module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:773$128'.
Removing empty process `module_i2c.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:773$128'.
Found and cleaned up 3 empty switches in `\fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:303$65'.
Removing empty process `fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:303$65'.
Found and cleaned up 2 empty switches in `\fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:290$62'.
Removing empty process `fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:290$62'.
Found and cleaned up 2 empty switches in `\fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:276$50'.
Removing empty process `fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:276$50'.
Found and cleaned up 3 empty switches in `\apb.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:142$33'.
Removing empty process `apb.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:142$33'.
Cleaned up 342 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module module_i2c.
<suppressed ~183 debug messages>
Optimizing module i2c.
<suppressed ~2 debug messages>
Optimizing module fifo.
<suppressed ~1 debug messages>
Optimizing module apb.
<suppressed ~22 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module_i2c.
<suppressed ~366 debug messages>
Optimizing module i2c.
Optimizing module fifo.
<suppressed ~3 debug messages>
Optimizing module apb.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module_i2c'.
<suppressed ~3348 debug messages>
Finding identical cells in module `\i2c'.
Finding identical cells in module `\fifo'.
<suppressed ~48 debug messages>
Finding identical cells in module `\apb'.
<suppressed ~12 debug messages>
Removed a total of 1136 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module_i2c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$4906.
    dead port 1/2 on $mux $procmux$4779.
    dead port 1/2 on $mux $procmux$4817.
    dead port 2/2 on $mux $procmux$4913.
    dead port 2/2 on $mux $procmux$4916.
    dead port 2/2 on $mux $procmux$4771.
    dead port 2/2 on $mux $procmux$4873.
    dead port 1/2 on $mux $procmux$4919.
    dead port 2/2 on $mux $procmux$4921.
    dead port 2/2 on $mux $procmux$6222.
    dead port 1/2 on $mux $procmux$4931.
    dead port 1/2 on $mux $procmux$4801.
    dead port 2/2 on $mux $procmux$4933.
    dead port 2/2 on $mux $procmux$4942.
    dead port 2/2 on $mux $procmux$4952.
    dead port 2/2 on $mux $procmux$4963.
    dead port 1/2 on $mux $procmux$4845.
    dead port 2/2 on $mux $procmux$4975.
    dead port 1/2 on $mux $procmux$4882.
    dead port 2/2 on $mux $procmux$4988.
    dead port 1/2 on $mux $procmux$4798.
    dead port 1/2 on $mux $procmux$4848.
    dead port 2/2 on $mux $procmux$5002.
    dead port 2/2 on $mux $procmux$5017.
    dead port 2/2 on $mux $procmux$3852.
    dead port 2/2 on $mux $procmux$3807.
    dead port 1/2 on $mux $procmux$3805.
    dead port 2/2 on $mux $procmux$3759.
    dead port 2/2 on $mux $procmux$5033.
    dead port 1/2 on $mux $procmux$3757.
    dead port 1/2 on $mux $procmux$3754.
    dead port 2/2 on $mux $procmux$3708.
    dead port 2/2 on $mux $procmux$5050.
    dead port 2/2 on $mux $procmux$3664.
    dead port 1/2 on $mux $procmux$3662.
    dead port 2/2 on $mux $procmux$3617.
    dead port 2/2 on $mux $procmux$3574.
    dead port 2/2 on $mux $procmux$3532.
    dead port 2/2 on $mux $procmux$3491.
    dead port 2/2 on $mux $procmux$3451.
    dead port 2/2 on $mux $procmux$3412.
    dead port 2/2 on $mux $procmux$3374.
    dead port 2/2 on $mux $procmux$3337.
    dead port 2/2 on $mux $procmux$3301.
    dead port 2/2 on $mux $procmux$3266.
    dead port 1/2 on $mux $procmux$3264.
    dead port 2/2 on $mux $procmux$3228.
    dead port 1/2 on $mux $procmux$3226.
    dead port 2/2 on $mux $procmux$3223.
    dead port 2/2 on $mux $procmux$3220.
    dead port 2/2 on $mux $procmux$3187.
    dead port 2/2 on $mux $procmux$3153.
    dead port 2/2 on $mux $procmux$3120.
    dead port 2/2 on $mux $procmux$3088.
    dead port 2/2 on $mux $procmux$3057.
    dead port 2/2 on $mux $procmux$3027.
    dead port 2/2 on $mux $procmux$2998.
    dead port 2/2 on $mux $procmux$2970.
    dead port 2/2 on $mux $procmux$2943.
    dead port 2/2 on $mux $procmux$2917.
    dead port 1/2 on $mux $procmux$2915.
    dead port 2/2 on $mux $procmux$2888.
    dead port 1/2 on $mux $procmux$4885.
    dead port 1/2 on $mux $procmux$2886.
    dead port 2/2 on $mux $procmux$2883.
    dead port 2/2 on $mux $procmux$2880.
    dead port 2/2 on $mux $procmux$5066.
    dead port 2/2 on $mux $procmux$5069.
    dead port 2/2 on $mux $procmux$2856.
    dead port 1/2 on $mux $procmux$5072.
    dead port 2/2 on $mux $procmux$2831.
    dead port 2/2 on $mux $procmux$5074.
    dead port 1/2 on $mux $procmux$4851.
    dead port 1/2 on $mux $procmux$5093.
    dead port 2/2 on $mux $procmux$2807.
    dead port 2/2 on $mux $procmux$2784.
    dead port 2/2 on $mux $procmux$2762.
    dead port 2/2 on $mux $procmux$2741.
    dead port 2/2 on $mux $procmux$5095.
    dead port 2/2 on $mux $procmux$2721.
    dead port 2/2 on $mux $procmux$2702.
    dead port 2/2 on $mux $procmux$5113.
    dead port 2/2 on $mux $procmux$2684.
    dead port 2/2 on $mux $procmux$2667.
    dead port 2/2 on $mux $procmux$5132.
    dead port 1/2 on $mux $procmux$2665.
    dead port 2/2 on $mux $procmux$2647.
    dead port 1/2 on $mux $procmux$4854.
    dead port 1/2 on $mux $procmux$2645.
    dead port 2/2 on $mux $procmux$5152.
    dead port 2/2 on $mux $procmux$2642.
    dead port 2/2 on $mux $procmux$2639.
    dead port 2/2 on $mux $procmux$2624.
    dead port 2/2 on $mux $procmux$2608.
    dead port 2/2 on $mux $procmux$5173.
    dead port 2/2 on $mux $procmux$2593.
    dead port 2/2 on $mux $procmux$2579.
    dead port 2/2 on $mux $procmux$5195.
    dead port 2/2 on $mux $procmux$2566.
    dead port 1/2 on $mux $procmux$4814.
    dead port 2/2 on $mux $procmux$2554.
    dead port 2/2 on $mux $procmux$5218.
    dead port 2/2 on $mux $procmux$2543.
    dead port 2/2 on $mux $procmux$2533.
    dead port 2/2 on $mux $procmux$5242.
    dead port 2/2 on $mux $procmux$2524.
    dead port 2/2 on $mux $procmux$2516.
    dead port 2/2 on $mux $procmux$5267.
    dead port 1/2 on $mux $procmux$2514.
    dead port 2/2 on $mux $procmux$2505.
    dead port 2/2 on $mux $procmux$4790.
    dead port 1/2 on $mux $procmux$2503.
    dead port 2/2 on $mux $procmux$5293.
    dead port 2/2 on $mux $procmux$2500.
    dead port 2/2 on $mux $procmux$5318.
    dead port 2/2 on $mux $procmux$2497.
    dead port 2/2 on $mux $procmux$5321.
    dead port 2/2 on $mux $procmux$2491.
    dead port 2/2 on $mux $procmux$4887.
    dead port 1/2 on $mux $procmux$5324.
    dead port 2/2 on $mux $procmux$2484.
    dead port 1/2 on $mux $procmux$2482.
    dead port 2/2 on $mux $procmux$5326.
    dead port 2/2 on $mux $procmux$2474.
    dead port 1/2 on $mux $procmux$2472.
    dead port 1/2 on $mux $procmux$5354.
    dead port 1/2 on $mux $procmux$2469.
    dead port 2/2 on $mux $procmux$2461.
    dead port 1/2 on $mux $procmux$2459.
    dead port 2/2 on $mux $procmux$5356.
    dead port 1/2 on $mux $procmux$2456.
    dead port 1/2 on $mux $procmux$2453.
    dead port 2/2 on $mux $procmux$2445.
    dead port 1/2 on $mux $procmux$2443.
    dead port 2/2 on $mux $procmux$5383.
    dead port 1/2 on $mux $procmux$2440.
    dead port 1/2 on $mux $procmux$2437.
    dead port 1/2 on $mux $procmux$2434.
    dead port 2/2 on $mux $procmux$2426.
    dead port 2/2 on $mux $procmux$4856.
    dead port 2/2 on $mux $procmux$5411.
    dead port 2/2 on $mux $procmux$6268.
    dead port 2/2 on $mux $procmux$5440.
    dead port 2/2 on $mux $procmux$5470.
    dead port 2/2 on $mux $procmux$5501.
    dead port 2/2 on $mux $procmux$5533.
    dead port 2/2 on $mux $procmux$5566.
    dead port 1/2 on $mux $procmux$4896.
    dead port 2/2 on $mux $procmux$5600.
    dead port 2/2 on $mux $procmux$5635.
    dead port 2/2 on $mux $procmux$5669.
    dead port 2/2 on $mux $procmux$5672.
    dead port 1/2 on $mux $procmux$5675.
    dead port 2/2 on $mux $procmux$5677.
    dead port 1/2 on $mux $procmux$5714.
    dead port 1/2 on $mux $procmux$4788.
    dead port 2/2 on $mux $procmux$5716.
    dead port 1/2 on $mux $procmux$4865.
    dead port 2/2 on $mux $procmux$5752.
    dead port 1/2 on $mux $procmux$4804.
    dead port 2/2 on $mux $procmux$5789.
    dead port 2/2 on $mux $procmux$4806.
    dead port 2/2 on $mux $procmux$5827.
    dead port 2/2 on $mux $procmux$5866.
    dead port 2/2 on $mux $procmux$4819.
    dead port 2/2 on $mux $procmux$4898.
    dead port 2/2 on $mux $procmux$5906.
    dead port 2/2 on $mux $procmux$5947.
    dead port 1/2 on $mux $procmux$4785.
    dead port 2/2 on $mux $procmux$5989.
    dead port 1/2 on $mux $procmux$4868.
    dead port 2/2 on $mux $procmux$6032.
    dead port 2/2 on $mux $procmux$4829.
    dead port 2/2 on $mux $procmux$6076.
    dead port 1/2 on $mux $procmux$6220.
    dead port 2/2 on $mux $procmux$6121.
    dead port 1/2 on $mux $procmux$6168.
    dead port 1/2 on $mux $procmux$4871.
    dead port 1/2 on $mux $procmux$6171.
    dead port 2/2 on $mux $procmux$6173.
    dead port 2/2 on $mux $procmux$4836.
    dead port 1/2 on $mux $procmux$4827.
    dead port 1/2 on $mux $procmux$4782.
Running muxtree optimizer on module \i2c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$6330.
    dead port 2/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:325$87.
    dead port 2/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:324$82.
    dead port 1/2 on $mux $procmux$6336.
    dead port 1/2 on $mux $procmux$6342.
Running muxtree optimizer on module \apb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 188 multiplexer ports.
<suppressed ~68 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module_i2c.
    New ctrl vector for $pmux cell $procmux$2379: $auto$opt_reduce.cc:134:opt_mux$6401
    New ctrl vector for $pmux cell $procmux$4722: { $procmux$4727_CMP $auto$opt_reduce.cc:134:opt_mux$6403 }
  Optimizing cells in module \module_i2c.
  Optimizing cells in module \i2c.
  Optimizing cells in module \fifo.
    Consolidated identical input bits for $mux cell $procmux$6327:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$6327_Y
      New ports: A=1'0, B=1'1, Y=$procmux$6327_Y [0]
      New connections: $procmux$6327_Y [31:1] = { $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] $procmux$6327_Y [0] }
  Optimizing cells in module \fifo.
    Consolidated identical input bits for $mux cell $procmux$6345:
      Old ports: A=$2$memwr$\mem$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:284$49_EN[31:0]$61, B=0, Y=$procmux$6345_Y
      New ports: A=$procmux$6327_Y [0], B=1'0, Y=$procmux$6345_Y [0]
      New connections: $procmux$6345_Y [31:1] = { $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] $procmux$6345_Y [0] }
  Optimizing cells in module \fifo.
  Optimizing cells in module \apb.
Performed a total of 4 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module_i2c'.
<suppressed ~579 debug messages>
Finding identical cells in module `\i2c'.
Finding identical cells in module `\fifo'.
Finding identical cells in module `\apb'.
Removed a total of 193 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$6390 ($dff) from module module_i2c (D = $procmux$6271_Y, Q = \state_tx, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$6404 ($sdff) from module module_i2c (D = $procmux$6271_Y, Q = \state_tx).
Adding SRST signal on $procdff$6389 ($dff) from module module_i2c (D = $procmux$3906_Y, Q = \RESPONSE, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6414 ($sdff) from module module_i2c (D = $procmux$3906_Y, Q = \RESPONSE).
Adding SRST signal on $procdff$6388 ($dff) from module module_i2c (D = $procmux$3932_Y, Q = \SDA_OUT, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$6418 ($sdff) from module module_i2c (D = $procmux$3932_Y, Q = \SDA_OUT).
Adding SRST signal on $procdff$6387 ($dff) from module module_i2c (D = $procmux$4114_Y, Q = \BR_CLK_O, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$6438 ($sdff) from module module_i2c (D = $procmux$4114_Y, Q = \BR_CLK_O).
Adding SRST signal on $procdff$6386 ($dff) from module module_i2c (D = $procmux$4512_Y, Q = \count_send_data, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6452 ($sdff) from module module_i2c (D = $procmux$4512_Y, Q = \count_send_data).
Adding SRST signal on $procdff$6385 ($dff) from module module_i2c (D = $procmux$4698_Y, Q = \count_tx, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$6456 ($sdff) from module module_i2c (D = $procmux$4698_Y, Q = \count_tx).
Adding SRST signal on $procdff$6384 ($dff) from module module_i2c (D = $procmux$4722_Y, Q = \fifo_tx_rd_en, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6472 ($sdff) from module module_i2c (D = $procmux$4722_Y, Q = \fifo_tx_rd_en).
Adding SRST signal on $procdff$6383 ($dff) from module module_i2c (D = $procmux$3855_Y, Q = \state_rx, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$6480 ($sdff) from module module_i2c (D = $procmux$3855_Y, Q = \state_rx).
Adding SRST signal on $procdff$6382 ($dff) from module module_i2c (D = $procmux$2300_Y, Q = \SDA_OUT_RX, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6488 ($sdff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \SDA_OUT_RX).
Adding SRST signal on $procdff$6381 ($dff) from module module_i2c (D = $procmux$2348_Y, Q = \BR_CLK_O_RX, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6492 ($sdff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:766$123_Y, Q = \BR_CLK_O_RX).
Adding SRST signal on $procdff$6380 ($dff) from module module_i2c (D = $procmux$2096_Y, Q = \count_receive_data, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6496 ($sdff) from module module_i2c (D = $procmux$2096_Y, Q = \count_receive_data).
Adding SRST signal on $procdff$6379 ($dff) from module module_i2c (D = $procmux$2369_Y, Q = \count_rx, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$6500 ($sdff) from module module_i2c (D = $procmux$2364_Y, Q = \count_rx).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [31]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [30]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [29]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [28]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [27]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [26]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [25]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [24]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [23]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [22]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [21]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [20]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [19]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [18]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [17]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [16]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [15]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [14]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [13]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [12]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [11]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [10]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [9]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [8]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [7]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [6]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [5]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [4]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [3]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:763$119_Y, Q = \fifo_rx_data_in [2]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $procmux$2036_Y, Q = \fifo_rx_data_in [1]).
Adding EN signal on $procdff$6378 ($dff) from module module_i2c (D = $procmux$2084_Y, Q = \fifo_rx_data_in [0]).
Adding SRST signal on $procdff$6377 ($dff) from module module_i2c (D = $procmux$2379_Y, Q = \fifo_rx_wr_en, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6616 ($sdff) from module module_i2c (D = 1'0, Q = \fifo_rx_wr_en).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$6617 ($sdffe) from module module_i2c.
Adding SRST signal on $procdff$6376 ($dff) from module module_i2c (D = $procmux$1183_Y, Q = \count_timeout, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6618 ($sdff) from module module_i2c (D = $add$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3934$1181_Y, Q = \count_timeout).
Adding SRST signal on $procdff$6391 ($dff) from module fifo (D = $procmux$6316_Y, Q = \counter, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$6622 ($sdff) from module fifo (D = $procmux$6316_Y, Q = \counter).
Adding SRST signal on $procdff$6392 ($dff) from module fifo (D = $procmux$6321_Y, Q = \rd_ptr, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$6626 ($sdff) from module fifo (D = $add$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:325$85_Y, Q = \rd_ptr).
Adding SRST signal on $procdff$6393 ($dff) from module fifo (D = $procmux$6354_Y, Q = \wr_ptr, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$6628 ($sdff) from module fifo (D = $add$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:324$80_Y, Q = \wr_ptr).
Adding SRST signal on $procdff$6398 ($dff) from module apb (D = $procmux$6363_Y, Q = \INTERNAL_I2C_REGISTER_TIMEOUT, rval = 14'00000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6630 ($sdff) from module apb (D = \PWDATA [13:0], Q = \INTERNAL_I2C_REGISTER_TIMEOUT).
Adding SRST signal on $procdff$6397 ($dff) from module apb (D = $procmux$6371_Y, Q = \INTERNAL_I2C_REGISTER_CONFIG, rval = 14'00000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6636 ($sdff) from module apb (D = \PWDATA [13:0], Q = \INTERNAL_I2C_REGISTER_CONFIG).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module_i2c..
Finding unused cells or wires in module \i2c..
Finding unused cells or wires in module \fifo..
Finding unused cells or wires in module \apb..
Removed 133 unused cells and 2634 unused wires.
<suppressed ~140 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module apb.
Optimizing module fifo.
<suppressed ~1 debug messages>
Optimizing module i2c.
Optimizing module module_i2c.
<suppressed ~8 debug messages>

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \apb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:327$99.
Running muxtree optimizer on module \i2c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module_i2c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 1 multiplexer ports.
<suppressed ~31 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \apb.
  Optimizing cells in module \fifo.
  Optimizing cells in module \i2c.
  Optimizing cells in module \module_i2c.
    New ctrl vector for $pmux cell $procmux$2096: { $procmux$2253_CMP $auto$opt_reduce.cc:134:opt_mux$6639 }
    New ctrl vector for $pmux cell $procmux$3855: { $procmux$2253_CMP $procmux$2040_CMP $procmux$2085_CMP $procmux$2037_CMP $procmux$1993_CMP $procmux$1950_CMP $procmux$1908_CMP $procmux$1867_CMP $procmux$1827_CMP $procmux$1788_CMP $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:2579$681_Y $procmux$1750_CMP $procmux$1714_CMP $procmux$1679_CMP $procmux$1645_CMP $procmux$1612_CMP $procmux$1580_CMP $procmux$1549_CMP $procmux$1519_CMP $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:2580$682_Y $procmux$1490_CMP $procmux$1463_CMP $procmux$1437_CMP $procmux$1412_CMP $procmux$1388_CMP $procmux$1365_CMP $procmux$1343_CMP $procmux$1322_CMP $procmux$1302_CMP $procmux$1284_CMP $procmux$1267_CMP $procmux$1251_CMP $procmux$1236_CMP $procmux$1222_CMP $procmux$1209_CMP $procmux$1197_CMP $auto$opt_reduce.cc:134:opt_mux$6641 $procmux$2101_CMP $procmux$2097_CMP }
    New ctrl vector for $pmux cell $procmux$3906: $auto$opt_reduce.cc:134:opt_mux$6643
    New ctrl vector for $pmux cell $procmux$4114: { $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3931$1176_Y $auto$opt_reduce.cc:134:opt_mux$6647 $auto$opt_reduce.cc:134:opt_mux$6645 $procmux$3956_CMP $procmux$3933_CMP }
    New ctrl vector for $pmux cell $procmux$4512: { $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/apbi2c.v:3931$1176_Y $procmux$3956_CMP $auto$opt_reduce.cc:134:opt_mux$6649 }
  Optimizing cells in module \module_i2c.
Performed a total of 5 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\apb'.
Finding identical cells in module `\fifo'.
Finding identical cells in module `\i2c'.
Finding identical cells in module `\module_i2c'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$6439 ($sdffe) from module module_i2c (D = $procmux$4114_Y, Q = \BR_CLK_O).
Adding EN signal on $auto$ff.cc:262:slice$6415 ($sdffe) from module module_i2c (D = $procmux$3906_Y, Q = \RESPONSE).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \apb..
Finding unused cells or wires in module \fifo..
Finding unused cells or wires in module \i2c..
Finding unused cells or wires in module \module_i2c..
Removed 0 unused cells and 9 unused wires.
<suppressed ~2 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module apb.
Optimizing module fifo.
Optimizing module i2c.
Optimizing module module_i2c.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \apb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \i2c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module_i2c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \apb.
  Optimizing cells in module \fifo.
  Optimizing cells in module \i2c.
  Optimizing cells in module \module_i2c.
    New input vector for $reduce_and cell $auto$opt_dff.cc:223:make_patterns_logic$6656: { $auto$opt_dff.cc:197:make_patterns_logic$6653 $auto$opt_dff.cc:197:make_patterns_logic$6448 $auto$opt_dff.cc:197:make_patterns_logic$6446 $auto$opt_dff.cc:197:make_patterns_logic$6444 $auto$opt_dff.cc:197:make_patterns_logic$6420 $auto$opt_dff.cc:197:make_patterns_logic$6442 $auto$opt_dff.cc:197:make_patterns_logic$6651 }
  Optimizing cells in module \module_i2c.
Performed a total of 1 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\apb'.
Finding identical cells in module `\fifo'.
Finding identical cells in module `\i2c'.
Finding identical cells in module `\module_i2c'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \apb..
Finding unused cells or wires in module \fifo..
Finding unused cells or wires in module \i2c..
Finding unused cells or wires in module \module_i2c..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module apb.
Optimizing module fifo.
Optimizing module i2c.
Optimizing module module_i2c.

4.23. Rerunning OPT passes. (Maybe there is more to do..)

4.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \apb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \i2c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module_i2c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

4.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \apb.
  Optimizing cells in module \fifo.
  Optimizing cells in module \i2c.
  Optimizing cells in module \module_i2c.
Performed a total of 0 changes.

4.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\apb'.
Finding identical cells in module `\fifo'.
Finding identical cells in module `\i2c'.
Finding identical cells in module `\module_i2c'.
Removed a total of 0 cells.

4.27. Executing OPT_DFF pass (perform DFF optimizations).

4.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \apb..
Finding unused cells or wires in module \fifo..
Finding unused cells or wires in module \i2c..
Finding unused cells or wires in module \module_i2c..

4.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module apb.
Optimizing module fifo.
Optimizing module i2c.
Optimizing module module_i2c.

4.30. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== apb ===

   Number of wires:                 45
   Number of wire bits:            226
   Number of public wires:          21
   Number of public wire bits:     202
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 29
     $and                            8
     $eq                             3
     $logic_and                      6
     $logic_not                      1
     $mux                            3
     $not                            2
     $or                             3
     $reduce_and                     1
     $sdffe                          2

=== fifo ===

   Number of wires:                 35
   Number of wire bits:            257
   Number of public wires:          14
   Number of public wire bits:      94
   Number of memories:               1
   Number of memory bits:          512
   Number of processes:              0
   Number of cells:                 31
     $add                            3
     $eq                             1
     $logic_and                      4
     $logic_not                      5
     $memrd                          1
     $memwr_v2                       1
     $mux                           11
     $reduce_bool                    1
     $sdffe                          3
     $sub                            1

=== i2c ===

   Number of wires:                 35
   Number of wire bits:            278
   Number of public wires:          35
   Number of public wire bits:     278
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $mux                            1
     apb                             1
     fifo                            2
     module_i2c                      1

=== module_i2c ===

   Number of wires:                489
   Number of wire bits:           1338
   Number of public wires:          33
   Number of public wire bits:     176
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                510
     $add                            5
     $and                            6
     $dffe                          32
     $eq                            87
     $ge                             2
     $gt                             1
     $le                             1
     $logic_and                     24
     $logic_not                      4
     $logic_or                       9
     $lt                            11
     $mul                            1
     $mux                          196
     $ne                            33
     $not                           14
     $pmux                          10
     $reduce_and                    42
     $reduce_bool                    7
     $reduce_or                      7
     $sdffe                         13
     $sub                            5

=== design hierarchy ===

   i2c                               1
     apb                             1
     fifo                            2
     module_i2c                      1

   Number of wires:                639
   Number of wire bits:           2356
   Number of public wires:         117
   Number of public wire bits:     844
   Number of memories:               2
   Number of memory bits:         1024
   Number of processes:              0
   Number of cells:                602
     $add                           11
     $and                           14
     $dffe                          32
     $eq                            92
     $ge                             2
     $gt                             1
     $le                             1
     $logic_and                     38
     $logic_not                     15
     $logic_or                       9
     $lt                            11
     $memrd                          2
     $memwr_v2                       2
     $mul                            1
     $mux                          222
     $ne                            33
     $not                           16
     $or                             3
     $pmux                          10
     $reduce_and                    43
     $reduce_bool                    9
     $reduce_or                      7
     $sdffe                         21
     $sub                            7

End of script. Logfile hash: 0a00d91621, CPU: user 0.90s system 0.01s, MEM: 31.70 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 37% 6x opt_expr (0 sec), 18% 2x read_verilog (0 sec), ...
