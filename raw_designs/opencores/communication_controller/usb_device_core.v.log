
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v' to AST representation.
Generating RTLIL representation for module `\usbf_crc16'.
Generating RTLIL representation for module `\usbf_device_core'.
Generating RTLIL representation for module `\usbf_device'.
Generating RTLIL representation for module `\usbf_fifo'.
Warning: Replacing memory \ram with list of registers. See /home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3735
Generating RTLIL representation for module `\usbf_sie_ep'.
Generating RTLIL representation for module `\usbf_sie_rx'.
Generating RTLIL representation for module `\usbf_sie_tx'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   1 design levels: usbf_sie_tx         
root of   1 design levels: usbf_sie_rx         
root of   0 design levels: usbf_sie_ep         
root of   0 design levels: usbf_fifo           
root of   3 design levels: usbf_device         
root of   2 design levels: usbf_device_core    
root of   0 design levels: usbf_crc16          
Automatically selected usbf_device as design top module.

2.2. Analyzing design hierarchy..
Top module:  \usbf_device
Used module:     \usbf_sie_ep
Used module:     \usbf_fifo
Used module:     \usbf_device_core
Used module:         \usbf_sie_rx
Used module:             \usbf_crc16
Used module:         \usbf_sie_tx
Parameter \WIDTH = 8
Parameter \DEPTH = 64
Parameter \ADDR_W = 6

2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\usbf_fifo'.
Parameter \WIDTH = 8
Parameter \DEPTH = 64
Parameter \ADDR_W = 6
Generating RTLIL representation for module `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo'.
Warning: Replacing memory \ram with list of registers. See /home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3735
Parameter \WIDTH = 8
Parameter \DEPTH = 64
Parameter \ADDR_W = 6
Found cached RTLIL representation for module `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo'.
Parameter \WIDTH = 8
Parameter \DEPTH = 64
Parameter \ADDR_W = 6
Found cached RTLIL representation for module `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo'.
Parameter \WIDTH = 8
Parameter \DEPTH = 64
Parameter \ADDR_W = 6
Found cached RTLIL representation for module `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo'.
Parameter \WIDTH = 8
Parameter \DEPTH = 64
Parameter \ADDR_W = 6
Found cached RTLIL representation for module `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo'.
Parameter \WIDTH = 8
Parameter \DEPTH = 64
Parameter \ADDR_W = 6
Found cached RTLIL representation for module `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo'.
Parameter \WIDTH = 8
Parameter \DEPTH = 8
Parameter \ADDR_W = 3

2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\usbf_fifo'.
Parameter \WIDTH = 8
Parameter \DEPTH = 8
Parameter \ADDR_W = 3
Generating RTLIL representation for module `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo'.
Warning: Replacing memory \ram with list of registers. See /home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3735
Parameter \WIDTH = 8
Parameter \DEPTH = 8
Parameter \ADDR_W = 3
Found cached RTLIL representation for module `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo'.

2.5. Analyzing design hierarchy..
Top module:  \usbf_device
Used module:     \usbf_sie_ep
Used module:     $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo
Used module:     $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo
Used module:     \usbf_device_core
Used module:         \usbf_sie_rx
Used module:             \usbf_crc16
Used module:         \usbf_sie_tx

2.6. Analyzing design hierarchy..
Top module:  \usbf_device
Used module:     \usbf_sie_ep
Used module:     $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo
Used module:     $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo
Used module:     \usbf_device_core
Used module:         \usbf_sie_rx
Used module:             \usbf_crc16
Used module:         \usbf_sie_tx
Removing unused module `\usbf_fifo'.
Removed 1 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:0$670 in module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:0$670 in module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641 in module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4735$632 in module usbf_sie_tx.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4706$629 in module usbf_sie_tx.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4692$624 in module usbf_sie_tx.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4665$620 in module usbf_sie_tx.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4645$617 in module usbf_sie_tx.
Marked 13 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4544$610 in module usbf_sie_tx.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4505$602 in module usbf_sie_tx.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4396$594 in module usbf_sie_rx.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4380$590 in module usbf_sie_rx.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4368$586 in module usbf_sie_rx.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4356$580 in module usbf_sie_rx.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4348$578 in module usbf_sie_rx.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4317$568 in module usbf_sie_rx.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4304$564 in module usbf_sie_rx.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4293$561 in module usbf_sie_rx.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4281$557 in module usbf_sie_rx.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4270$554 in module usbf_sie_rx.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4256$548 in module usbf_sie_rx.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4236$545 in module usbf_sie_rx.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4223$543 in module usbf_sie_rx.
Marked 13 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4101$535 in module usbf_sie_rx.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4083$533 in module usbf_sie_rx.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4077$531 in module usbf_sie_rx.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4068$529 in module usbf_sie_rx.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4062$528 in module usbf_sie_rx.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3943$520 in module usbf_sie_ep.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3926$512 in module usbf_sie_ep.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3917$510 in module usbf_sie_ep.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3904$507 in module usbf_sie_ep.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3879$505 in module usbf_sie_ep.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3869$501 in module usbf_sie_ep.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3861$498 in module usbf_sie_ep.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3851$495 in module usbf_sie_ep.
Removed 1 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:0$704 in module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:0$704 in module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675 in module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2973$451 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2959$448 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2944$447 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2816$446 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2766$443 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2747$440 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2731$437 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2717$434 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2706$431 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2692$428 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2678$425 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2664$422 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2653$419 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2639$416 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2625$413 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2611$410 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2599$407 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2588$404 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2571$401 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2552$398 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2536$395 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2522$392 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2511$389 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2497$386 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2483$383 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2469$380 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2458$377 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2444$374 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2430$371 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2416$368 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2404$365 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2393$362 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2376$359 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2357$356 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2341$353 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2327$350 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2316$347 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2302$344 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2288$341 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2274$338 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2263$335 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2249$332 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2235$329 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2221$326 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2209$323 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2198$320 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2181$317 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2162$314 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2146$311 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2132$308 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2121$305 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2107$302 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2093$299 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2079$296 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2068$293 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2054$290 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2040$287 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2026$284 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2014$281 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2003$278 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1989$275 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1978$272 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1953$269 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1939$266 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1927$263 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1915$260 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1903$257 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1891$254 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1879$251 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1867$248 in module usbf_device.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1856$245 in module usbf_device.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1831$238 in module usbf_device.
Marked 5 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1516$229 in module usbf_device_core.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1485$228 in module usbf_device_core.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1467$227 in module usbf_device_core.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1454$225 in module usbf_device_core.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1447$223 in module usbf_device_core.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1440$221 in module usbf_device_core.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1433$219 in module usbf_device_core.
Marked 10 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1376$206 in module usbf_device_core.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1360$189 in module usbf_device_core.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1350$175 in module usbf_device_core.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1336$173 in module usbf_device_core.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1327$170 in module usbf_device_core.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1309$158 in module usbf_device_core.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1298$155 in module usbf_device_core.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1289$152 in module usbf_device_core.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1283$149 in module usbf_device_core.
Marked 14 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1159$138 in module usbf_device_core.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1147$137 in module usbf_device_core.
Removed 1 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:988$113 in module usbf_device_core.
Marked 23 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:988$113 in module usbf_device_core.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:929$88 in module usbf_device_core.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:882$83 in module usbf_device_core.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:836$74 in module usbf_device_core.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:743$69 in module usbf_device_core.
Removed a total of 3 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 56 redundant assignments.
Promoted 30 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_i in `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
Found async reset \rst_i in `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4706$629'.
Found async reset \rst_i in `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4692$624'.
Found async reset \rst_i in `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4645$617'.
Found async reset \rst_i in `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4505$602'.
Found async reset \rst_i in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4396$594'.
Found async reset \rst_i in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4380$590'.
Found async reset \rst_i in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4368$586'.
Found async reset \rst_i in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4356$580'.
Found async reset \rst_i in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4348$578'.
Found async reset \rst_i in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4317$568'.
Found async reset \rst_i in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4304$564'.
Found async reset \rst_i in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4293$561'.
Found async reset \rst_i in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4281$557'.
Found async reset \rst_i in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4270$554'.
Found async reset \rst_i in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4256$548'.
Found async reset \rst_i in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4236$545'.
Found async reset \rst_i in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4223$543'.
Found async reset \rst_i in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4083$533'.
Found async reset \rst_i in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4077$531'.
Found async reset \rst_i in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4068$529'.
Found async reset \rst_i in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4062$528'.
Found async reset \rst_i in `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3943$520'.
Found async reset \rst_i in `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3926$512'.
Found async reset \rst_i in `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3917$510'.
Found async reset \rst_i in `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3904$507'.
Found async reset \rst_i in `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3879$505'.
Found async reset \rst_i in `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3869$501'.
Found async reset \rst_i in `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3861$498'.
Found async reset \rst_i in `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3851$495'.
Found async reset \rst_i in `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2973$451'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2959$448'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2944$447'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2766$443'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2747$440'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2731$437'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2717$434'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2706$431'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2692$428'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2678$425'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2664$422'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2653$419'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2639$416'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2625$413'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2611$410'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2599$407'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2588$404'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2571$401'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2552$398'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2536$395'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2522$392'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2511$389'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2497$386'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2483$383'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2469$380'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2458$377'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2444$374'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2430$371'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2416$368'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2404$365'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2393$362'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2376$359'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2357$356'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2341$353'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2327$350'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2316$347'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2302$344'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2288$341'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2274$338'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2263$335'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2249$332'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2235$329'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2221$326'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2209$323'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2198$320'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2181$317'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2162$314'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2146$311'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2132$308'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2121$305'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2107$302'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2093$299'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2079$296'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2068$293'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2054$290'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2040$287'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2026$284'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2014$281'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2003$278'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1989$275'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1978$272'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1953$269'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1939$266'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1927$263'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1915$260'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1903$257'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1891$254'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1879$251'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1867$248'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1856$245'.
Found async reset \rst_i in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1831$238'.
Found async reset \rst_i in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1516$229'.
Found async reset \rst_i in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1467$227'.
Found async reset \rst_i in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1454$225'.
Found async reset \rst_i in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1447$223'.
Found async reset \rst_i in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1440$221'.
Found async reset \rst_i in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1433$219'.
Found async reset \rst_i in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1360$189'.
Found async reset \rst_i in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1350$175'.
Found async reset \rst_i in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1336$173'.
Found async reset \rst_i in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1327$170'.
Found async reset \rst_i in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1309$158'.
Found async reset \rst_i in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1298$155'.
Found async reset \rst_i in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1289$152'.
Found async reset \rst_i in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1283$149'.
Found async reset \rst_i in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1147$137'.
Found async reset \rst_i in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:929$88'.
Found async reset \rst_i in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:743$69'.

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:0$670'.
     1/1: $1$mem2reg_rd$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3765$640_DATA[7:0]$672
Creating decoders for process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
     1/71: $2$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3735$639_ADDR[5:0]$648
     2/71: $2$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3735$639_DATA[7:0]$649
     3/71: $1$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3735$639_DATA[7:0]$645
     4/71: $1$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3735$639_ADDR[5:0]$644
     5/71: $0\ram[63][7:0]
     6/71: $0\ram[62][7:0]
     7/71: $0\ram[61][7:0]
     8/71: $0\ram[60][7:0]
     9/71: $0\ram[59][7:0]
    10/71: $0\ram[58][7:0]
    11/71: $0\ram[57][7:0]
    12/71: $0\ram[56][7:0]
    13/71: $0\ram[55][7:0]
    14/71: $0\ram[54][7:0]
    15/71: $0\ram[53][7:0]
    16/71: $0\ram[52][7:0]
    17/71: $0\ram[51][7:0]
    18/71: $0\ram[50][7:0]
    19/71: $0\ram[49][7:0]
    20/71: $0\ram[48][7:0]
    21/71: $0\ram[47][7:0]
    22/71: $0\ram[46][7:0]
    23/71: $0\ram[45][7:0]
    24/71: $0\ram[44][7:0]
    25/71: $0\ram[43][7:0]
    26/71: $0\ram[42][7:0]
    27/71: $0\ram[41][7:0]
    28/71: $0\ram[40][7:0]
    29/71: $0\ram[39][7:0]
    30/71: $0\ram[38][7:0]
    31/71: $0\ram[37][7:0]
    32/71: $0\ram[36][7:0]
    33/71: $0\ram[35][7:0]
    34/71: $0\ram[34][7:0]
    35/71: $0\ram[33][7:0]
    36/71: $0\ram[32][7:0]
    37/71: $0\ram[31][7:0]
    38/71: $0\ram[30][7:0]
    39/71: $0\ram[29][7:0]
    40/71: $0\ram[28][7:0]
    41/71: $0\ram[27][7:0]
    42/71: $0\ram[26][7:0]
    43/71: $0\ram[25][7:0]
    44/71: $0\ram[24][7:0]
    45/71: $0\ram[23][7:0]
    46/71: $0\ram[22][7:0]
    47/71: $0\ram[21][7:0]
    48/71: $0\ram[20][7:0]
    49/71: $0\ram[19][7:0]
    50/71: $0\ram[18][7:0]
    51/71: $0\ram[17][7:0]
    52/71: $0\ram[16][7:0]
    53/71: $0\ram[15][7:0]
    54/71: $0\ram[14][7:0]
    55/71: $0\ram[13][7:0]
    56/71: $0\ram[12][7:0]
    57/71: $0\ram[11][7:0]
    58/71: $0\ram[10][7:0]
    59/71: $0\ram[9][7:0]
    60/71: $0\ram[8][7:0]
    61/71: $0\ram[7][7:0]
    62/71: $0\ram[6][7:0]
    63/71: $0\ram[5][7:0]
    64/71: $0\ram[4][7:0]
    65/71: $0\ram[3][7:0]
    66/71: $0\ram[2][7:0]
    67/71: $0\ram[1][7:0]
    68/71: $0\ram[0][7:0]
    69/71: $0\count[6:0]
    70/71: $0\wr_ptr[5:0]
    71/71: $0\rd_ptr[5:0]
Creating decoders for process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4735$632'.
     1/8: $4\utmi_data_r[7:0]
     2/8: $4\utmi_txvalid_r[0:0]
     3/8: $3\utmi_data_r[7:0]
     4/8: $3\utmi_txvalid_r[0:0]
     5/8: $2\utmi_data_r[7:0]
     6/8: $2\utmi_txvalid_r[0:0]
     7/8: $1\utmi_data_r[7:0]
     8/8: $1\utmi_txvalid_r[0:0]
Creating decoders for process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4706$629'.
     1/3: $0\data_q[7:0]
     2/3: $0\last_q[0:0]
     3/3: $0\valid_q[0:0]
Creating decoders for process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4692$624'.
     1/1: $0\crc_sum_q[15:0]
Creating decoders for process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4665$620'.
     1/2: $2\data_accept_r[0:0]
     2/2: $1\data_accept_r[0:0]
Creating decoders for process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4657$618'.
Creating decoders for process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4645$617'.
     1/1: $0\state_q[2:0]
Creating decoders for process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4544$610'.
     1/13: $13\next_state_r[2:0]
     2/13: $12\next_state_r[2:0]
     3/13: $11\next_state_r[2:0]
     4/13: $10\next_state_r[2:0]
     5/13: $9\next_state_r[2:0]
     6/13: $8\next_state_r[2:0]
     7/13: $7\next_state_r[2:0]
     8/13: $6\next_state_r[2:0]
     9/13: $5\next_state_r[2:0]
    10/13: $4\next_state_r[2:0]
    11/13: $3\next_state_r[2:0]
    12/13: $2\next_state_r[2:0]
    13/13: $1\next_state_r[2:0]
Creating decoders for process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4505$602'.
     1/2: $0\data_pid_q[0:0]
     2/2: $0\data_zlp_q[0:0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4396$594'.
     1/4: $0\last_q[0:0]
     2/4: $0\mask_q[0:0]
     3/4: $0\data_q[7:0]
     4/4: $0\valid_q[0:0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4380$590'.
     1/1: $0\data_zlp_q[0:0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4368$586'.
     1/1: $0\data_complete_q[0:0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4356$580'.
     1/1: $0\crc_err_q[0:0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4348$578'.
     1/1: $0\crc_sum_q[15:0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4317$568'.
     1/2: $0\token_ep_q[3:0] [3:1]
     2/2: $0\token_ep_q[3:0] [0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4304$564'.
     1/1: $0\token_dev_q[6:0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4293$561'.
     1/1: $0\token_valid_q[0:0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4281$557'.
     1/1: $0\token_pid_q[7:0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4270$554'.
     1/1: $0\frame_valid_q[0:0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4256$548'.
     1/1: $0\frame_num_q[10:0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4236$545'.
     1/1: $0\handshake_valid_q[0:0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4223$543'.
     1/1: $0\state_q[3:0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4101$535'.
     1/13: $13\next_state_r[3:0]
     2/13: $12\next_state_r[3:0]
     3/13: $11\next_state_r[3:0]
     4/13: $10\next_state_r[3:0]
     5/13: $9\next_state_r[3:0]
     6/13: $8\next_state_r[3:0]
     7/13: $7\next_state_r[3:0]
     8/13: $6\next_state_r[3:0]
     9/13: $5\next_state_r[3:0]
    10/13: $4\next_state_r[3:0]
    11/13: $3\next_state_r[3:0]
    12/13: $2\next_state_r[3:0]
    13/13: $1\next_state_r[3:0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4083$533'.
     1/1: $0\rx_active_q[3:0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4077$531'.
     1/1: $0\data_crc_q[1:0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4068$529'.
     1/1: $0\data_valid_q[3:0]
Creating decoders for process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4062$528'.
     1/1: $0\data_buffer_q[31:0]
Creating decoders for process `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3943$520'.
     1/1: $0\tx_err_q[0:0]
Creating decoders for process `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3926$512'.
     1/1: $0\tx_len_q[10:0]
Creating decoders for process `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3917$510'.
     1/1: $0\tx_zlp_q[0:0]
Creating decoders for process `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3904$507'.
     1/1: $0\tx_active_q[0:0]
Creating decoders for process `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3879$505'.
     1/1: $0\rx_setup_q[0:0]
Creating decoders for process `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3869$501'.
     1/1: $0\rx_err_q[0:0]
Creating decoders for process `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3861$498'.
     1/1: $0\rx_len_q[10:0]
Creating decoders for process `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3851$495'.
     1/1: $0\rx_ready_q[0:0]
Creating decoders for process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:0$704'.
     1/1: $1$mem2reg_rd$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3765$674_DATA[7:0]$706
Creating decoders for process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675'.
     1/15: $2$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3735$673_ADDR[2:0]$682
     2/15: $2$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3735$673_DATA[7:0]$683
     3/15: $1$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3735$673_DATA[7:0]$679
     4/15: $1$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3735$673_ADDR[2:0]$678
     5/15: $0\ram[7][7:0]
     6/15: $0\ram[6][7:0]
     7/15: $0\ram[5][7:0]
     8/15: $0\ram[4][7:0]
     9/15: $0\ram[3][7:0]
    10/15: $0\ram[2][7:0]
    11/15: $0\ram[1][7:0]
    12/15: $0\ram[0][7:0]
    13/15: $0\count[3:0]
    14/15: $0\wr_ptr[2:0]
    15/15: $0\rd_ptr[2:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2973$451'.
     1/1: $0\bvalid_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2959$448'.
     1/1: $0\rd_data_q[31:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2944$447'.
     1/1: $0\rvalid_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2816$446'.
     1/19: $1\data_r[31:0] [31:21]
     2/19: $1\data_r[31:0] [19]
     3/19: $1\data_r[31:0] [1]
     4/19: $1\data_r[31:0] [3]
     5/19: $1\data_r[31:0] [4]
     6/19: $1\data_r[31:0] [5]
     7/19: $1\data_r[31:0] [8]
     8/19: $1\data_r[31:0] [15:14]
     9/19: $1\data_r[31:0] [0]
    10/19: $1\data_r[31:0] [18]
    11/19: $1\data_r[31:0] [17]
    12/19: $1\data_r[31:0] [2]
    13/19: $1\data_r[31:0] [16]
    14/19: $1\data_r[31:0] [20]
    15/19: $1\data_r[31:0] [13]
    16/19: $1\data_r[31:0] [7]
    17/19: $1\data_r[31:0] [12:11]
    18/19: $1\data_r[31:0] [10:9]
    19/19: $1\data_r[31:0] [6]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2766$443'.
     1/1: $0\usb_ep3_data_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2747$440'.
     1/1: $0\usb_ep3_sts_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2731$437'.
     1/1: $0\usb_ep3_rx_ctrl_rx_accept_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2717$434'.
     1/1: $0\usb_ep3_rx_ctrl_rx_flush_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2706$431'.
     1/1: $0\usb_ep3_rx_ctrl_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2692$428'.
     1/1: $0\usb_ep3_tx_ctrl_tx_len_q[10:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2678$425'.
     1/1: $0\usb_ep3_tx_ctrl_tx_start_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2664$422'.
     1/1: $0\usb_ep3_tx_ctrl_tx_flush_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2653$419'.
     1/1: $0\usb_ep3_tx_ctrl_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2639$416'.
     1/1: $0\usb_ep3_cfg_iso_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2625$413'.
     1/1: $0\usb_ep3_cfg_stall_ep_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2611$410'.
     1/1: $0\usb_ep3_cfg_int_tx_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2599$407'.
     1/1: $0\usb_ep3_cfg_int_rx_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2588$404'.
     1/1: $0\usb_ep3_cfg_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2571$401'.
     1/1: $0\usb_ep2_data_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2552$398'.
     1/1: $0\usb_ep2_sts_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2536$395'.
     1/1: $0\usb_ep2_rx_ctrl_rx_accept_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2522$392'.
     1/1: $0\usb_ep2_rx_ctrl_rx_flush_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2511$389'.
     1/1: $0\usb_ep2_rx_ctrl_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2497$386'.
     1/1: $0\usb_ep2_tx_ctrl_tx_len_q[10:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2483$383'.
     1/1: $0\usb_ep2_tx_ctrl_tx_start_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2469$380'.
     1/1: $0\usb_ep2_tx_ctrl_tx_flush_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2458$377'.
     1/1: $0\usb_ep2_tx_ctrl_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2444$374'.
     1/1: $0\usb_ep2_cfg_iso_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2430$371'.
     1/1: $0\usb_ep2_cfg_stall_ep_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2416$368'.
     1/1: $0\usb_ep2_cfg_int_tx_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2404$365'.
     1/1: $0\usb_ep2_cfg_int_rx_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2393$362'.
     1/1: $0\usb_ep2_cfg_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2376$359'.
     1/1: $0\usb_ep1_data_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2357$356'.
     1/1: $0\usb_ep1_sts_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2341$353'.
     1/1: $0\usb_ep1_rx_ctrl_rx_accept_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2327$350'.
     1/1: $0\usb_ep1_rx_ctrl_rx_flush_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2316$347'.
     1/1: $0\usb_ep1_rx_ctrl_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2302$344'.
     1/1: $0\usb_ep1_tx_ctrl_tx_len_q[10:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2288$341'.
     1/1: $0\usb_ep1_tx_ctrl_tx_start_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2274$338'.
     1/1: $0\usb_ep1_tx_ctrl_tx_flush_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2263$335'.
     1/1: $0\usb_ep1_tx_ctrl_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2249$332'.
     1/1: $0\usb_ep1_cfg_iso_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2235$329'.
     1/1: $0\usb_ep1_cfg_stall_ep_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2221$326'.
     1/1: $0\usb_ep1_cfg_int_tx_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2209$323'.
     1/1: $0\usb_ep1_cfg_int_rx_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2198$320'.
     1/1: $0\usb_ep1_cfg_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2181$317'.
     1/1: $0\usb_ep0_data_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2162$314'.
     1/1: $0\usb_ep0_sts_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2146$311'.
     1/1: $0\usb_ep0_rx_ctrl_rx_accept_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2132$308'.
     1/1: $0\usb_ep0_rx_ctrl_rx_flush_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2121$305'.
     1/1: $0\usb_ep0_rx_ctrl_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2107$302'.
     1/1: $0\usb_ep0_tx_ctrl_tx_len_q[10:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2093$299'.
     1/1: $0\usb_ep0_tx_ctrl_tx_start_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2079$296'.
     1/1: $0\usb_ep0_tx_ctrl_tx_flush_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2068$293'.
     1/1: $0\usb_ep0_tx_ctrl_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2054$290'.
     1/1: $0\usb_ep0_cfg_iso_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2040$287'.
     1/1: $0\usb_ep0_cfg_stall_ep_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2026$284'.
     1/1: $0\usb_ep0_cfg_int_tx_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2014$281'.
     1/1: $0\usb_ep0_cfg_int_rx_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2003$278'.
     1/1: $0\usb_ep0_cfg_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1989$275'.
     1/1: $0\usb_func_addr_dev_addr_q[6:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1978$272'.
     1/1: $0\usb_func_addr_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1953$269'.
     1/1: $0\usb_func_stat_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1939$266'.
     1/1: $0\usb_func_ctrl_int_en_sof_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1927$263'.
     1/1: $0\usb_func_ctrl_phy_opmode_q[1:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1915$260'.
     1/1: $0\usb_func_ctrl_phy_xcvrselect_q[1:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1903$257'.
     1/1: $0\usb_func_ctrl_phy_termselect_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1891$254'.
     1/1: $0\usb_func_ctrl_phy_dppulldown_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1879$251'.
     1/1: $0\usb_func_ctrl_phy_dmpulldown_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1867$248'.
     1/1: $0\usb_func_ctrl_hs_chirp_en_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1856$245'.
     1/1: $0\usb_func_ctrl_wr_q[0:0]
Creating decoders for process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1831$238'.
     1/1: $0\wr_data_q[31:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1516$229'.
     1/1: $0\intr_q[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1485$228'.
     1/2: $1\cfg_int_tx_r[0:0]
     2/2: $1\cfg_int_rx_r[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1467$227'.
     1/1: $0\rst_event_q[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1454$225'.
     1/1: $0\ep3_data_bit_q[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1447$223'.
     1/1: $0\ep2_data_bit_q[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1440$221'.
     1/1: $0\ep1_data_bit_q[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1433$219'.
     1/1: $0\ep0_data_bit_q[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1376$206'.
     1/10: $10\new_data_bit_r[0:0]
     2/10: $9\new_data_bit_r[0:0]
     3/10: $8\new_data_bit_r[0:0]
     4/10: $7\new_data_bit_r[0:0]
     5/10: $6\new_data_bit_r[0:0]
     6/10: $5\new_data_bit_r[0:0]
     7/10: $4\new_data_bit_r[0:0]
     8/10: $3\new_data_bit_r[0:0]
     9/10: $2\new_data_bit_r[0:0]
    10/10: $1\new_data_bit_r[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1360$189'.
     1/1: $0\ep0_dir_out_q[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1350$175'.
     1/1: $0\ep0_dir_in_q[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1336$173'.
     1/1: $0\current_addr_q[6:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1327$170'.
     1/1: $0\addr_update_pending_q[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1309$158'.
     1/1: $0\rx_setup_q[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1298$155'.
     1/1: $0\rx_enable_q[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1289$152'.
     1/1: $0\tx_pid_q[7:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1283$149'.
     1/1: $0\tx_valid_q[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1159$138'.
     1/28: $14\tx_pid_r[7:0]
     2/28: $14\tx_valid_r[0:0]
     3/28: $13\tx_pid_r[7:0]
     4/28: $13\tx_valid_r[0:0]
     5/28: $12\tx_pid_r[7:0]
     6/28: $12\tx_valid_r[0:0]
     7/28: $11\tx_pid_r[7:0]
     8/28: $11\tx_valid_r[0:0]
     9/28: $10\tx_pid_r[7:0]
    10/28: $10\tx_valid_r[0:0]
    11/28: $9\tx_pid_r[7:0]
    12/28: $9\tx_valid_r[0:0]
    13/28: $8\tx_pid_r[7:0]
    14/28: $8\tx_valid_r[0:0]
    15/28: $7\tx_pid_r[7:0]
    16/28: $7\tx_valid_r[0:0]
    17/28: $6\tx_pid_r[7:0]
    18/28: $6\tx_valid_r[0:0]
    19/28: $5\tx_pid_r[7:0]
    20/28: $5\tx_valid_r[0:0]
    21/28: $4\tx_pid_r[7:0]
    22/28: $4\tx_valid_r[0:0]
    23/28: $3\tx_pid_r[7:0]
    24/28: $3\tx_valid_r[0:0]
    25/28: $2\tx_pid_r[7:0]
    26/28: $2\tx_valid_r[0:0]
    27/28: $1\tx_pid_r[7:0]
    28/28: $1\tx_valid_r[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1147$137'.
     1/1: $0\state_q[2:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:988$113'.
     1/23: $23\next_state_r[2:0]
     2/23: $22\next_state_r[2:0]
     3/23: $21\next_state_r[2:0]
     4/23: $20\next_state_r[2:0]
     5/23: $19\next_state_r[2:0]
     6/23: $18\next_state_r[2:0]
     7/23: $17\next_state_r[2:0]
     8/23: $16\next_state_r[2:0]
     9/23: $15\next_state_r[2:0]
    10/23: $14\next_state_r[2:0]
    11/23: $13\next_state_r[2:0]
    12/23: $12\next_state_r[2:0]
    13/23: $11\next_state_r[2:0]
    14/23: $10\next_state_r[2:0]
    15/23: $9\next_state_r[2:0]
    16/23: $8\next_state_r[2:0]
    17/23: $7\next_state_r[2:0]
    18/23: $6\next_state_r[2:0]
    19/23: $5\next_state_r[2:0]
    20/23: $4\next_state_r[2:0]
    21/23: $3\next_state_r[2:0]
    22/23: $2\next_state_r[2:0]
    23/23: $1\next_state_r[2:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:929$88'.
     1/1: $0\rx_space_q[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:882$83'.
     1/5: $1\ep_iso_r[0:0]
     2/5: $1\ep_stall_r[0:0]
     3/5: $1\ep_data_bit_r[0:0]
     4/5: $1\tx_ready_r[0:0]
     5/5: $1\rx_space_r[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:836$74'.
     1/4: $1\tx_data_last_r[0:0]
     2/4: $1\tx_data_r[7:0]
     3/4: $1\tx_data_strb_r[0:0]
     4/4: $1\tx_data_valid_r[0:0]
Creating decoders for process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:743$69'.
     1/1: $0\se0_cnt_q[14:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$mem2reg_rd$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3765$640_DATA' from process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:0$670'.
No latch inferred for signal `\usbf_sie_tx.\utmi_txvalid_r' from process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4735$632'.
No latch inferred for signal `\usbf_sie_tx.\utmi_data_r' from process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4735$632'.
No latch inferred for signal `\usbf_sie_tx.\data_accept_r' from process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4665$620'.
No latch inferred for signal `\usbf_sie_tx.\input_valid_r' from process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4657$618'.
No latch inferred for signal `\usbf_sie_tx.\input_byte_r' from process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4657$618'.
No latch inferred for signal `\usbf_sie_tx.\input_last_r' from process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4657$618'.
No latch inferred for signal `\usbf_sie_tx.\next_state_r' from process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4544$610'.
No latch inferred for signal `\usbf_sie_rx.\next_state_r' from process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4101$535'.
No latch inferred for signal `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$mem2reg_rd$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3765$674_DATA' from process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:0$704'.
No latch inferred for signal `\usbf_device.\data_r' from process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2816$446'.
No latch inferred for signal `\usbf_device_core.\cfg_int_rx_r' from process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1485$228'.
No latch inferred for signal `\usbf_device_core.\cfg_int_tx_r' from process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1485$228'.
No latch inferred for signal `\usbf_device_core.\new_data_bit_r' from process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1376$206'.
No latch inferred for signal `\usbf_device_core.\tx_valid_r' from process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1159$138'.
No latch inferred for signal `\usbf_device_core.\tx_pid_r' from process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1159$138'.
No latch inferred for signal `\usbf_device_core.\next_state_r' from process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:988$113'.
No latch inferred for signal `\usbf_device_core.\rx_space_r' from process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:882$83'.
No latch inferred for signal `\usbf_device_core.\tx_ready_r' from process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:882$83'.
No latch inferred for signal `\usbf_device_core.\ep_data_bit_r' from process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:882$83'.
No latch inferred for signal `\usbf_device_core.\ep_stall_r' from process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:882$83'.
No latch inferred for signal `\usbf_device_core.\ep_iso_r' from process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:882$83'.
No latch inferred for signal `\usbf_device_core.\tx_data_valid_r' from process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:836$74'.
No latch inferred for signal `\usbf_device_core.\tx_data_strb_r' from process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:836$74'.
No latch inferred for signal `\usbf_device_core.\tx_data_r' from process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:836$74'.
No latch inferred for signal `\usbf_device_core.\tx_data_last_r' from process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:836$74'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\rd_ptr' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $adff cell `$procdff$5222' with positive edge clock and positive level reset.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\wr_ptr' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $adff cell `$procdff$5223' with positive edge clock and positive level reset.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\count' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $adff cell `$procdff$5224' with positive edge clock and positive level reset.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[0]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5227' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[1]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5230' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[2]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5233' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[3]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5236' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[4]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5239' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[5]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5242' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[6]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5245' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[7]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5248' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[8]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5251' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[9]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5254' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[10]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5257' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[11]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5260' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[12]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5263' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[13]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5266' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[14]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5269' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[15]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5272' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[16]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5275' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[17]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5278' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[18]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5281' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[19]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5284' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[20]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5287' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[21]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5290' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[22]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5293' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[23]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5296' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[24]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5299' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[25]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5302' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[26]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5305' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[27]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5308' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[28]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5311' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[29]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5314' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[30]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5317' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[31]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5320' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[32]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5323' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[33]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5326' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[34]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5329' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[35]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5332' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[36]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5335' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[37]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5338' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[38]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5341' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[39]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5344' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[40]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5347' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[41]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5350' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[42]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5353' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[43]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5356' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[44]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5359' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[45]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5362' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[46]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5365' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[47]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5368' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[48]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5371' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[49]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5374' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[50]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5377' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[51]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5380' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[52]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5383' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[53]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5386' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[54]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5389' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[55]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5392' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[56]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5395' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[57]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5398' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[58]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5401' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[59]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5404' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[60]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5407' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[61]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5410' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[62]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5413' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.\ram[63]' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $dff cell `$procdff$5416' with positive edge clock.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3735$639_ADDR' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $adff cell `$procdff$5417' with positive edge clock and positive level reset.
Creating register for signal `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3735$639_DATA' using process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
  created $adff cell `$procdff$5418' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_tx.\valid_q' using process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4706$629'.
  created $adff cell `$procdff$5419' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_tx.\last_q' using process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4706$629'.
  created $adff cell `$procdff$5420' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_tx.\data_q' using process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4706$629'.
  created $adff cell `$procdff$5421' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_tx.\crc_sum_q' using process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4692$624'.
  created $adff cell `$procdff$5422' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_tx.\state_q' using process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4645$617'.
  created $adff cell `$procdff$5423' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_tx.\data_zlp_q' using process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4505$602'.
  created $adff cell `$procdff$5424' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_tx.\data_pid_q' using process `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4505$602'.
  created $adff cell `$procdff$5425' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\valid_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4396$594'.
  created $adff cell `$procdff$5426' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\last_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4396$594'.
  created $adff cell `$procdff$5427' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\data_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4396$594'.
  created $adff cell `$procdff$5428' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\mask_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4396$594'.
  created $adff cell `$procdff$5429' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\data_zlp_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4380$590'.
  created $adff cell `$procdff$5430' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\data_complete_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4368$586'.
  created $adff cell `$procdff$5431' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\crc_err_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4356$580'.
  created $adff cell `$procdff$5432' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\crc_sum_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4348$578'.
  created $adff cell `$procdff$5433' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\token_ep_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4317$568'.
  created $adff cell `$procdff$5434' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\token_dev_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4304$564'.
  created $adff cell `$procdff$5435' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\token_valid_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4293$561'.
  created $adff cell `$procdff$5436' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\token_pid_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4281$557'.
  created $adff cell `$procdff$5437' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\frame_valid_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4270$554'.
  created $adff cell `$procdff$5438' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\frame_num_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4256$548'.
  created $adff cell `$procdff$5439' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\handshake_valid_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4236$545'.
  created $adff cell `$procdff$5440' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\state_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4223$543'.
  created $adff cell `$procdff$5441' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\rx_active_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4083$533'.
  created $adff cell `$procdff$5442' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\data_crc_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4077$531'.
  created $adff cell `$procdff$5443' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\data_valid_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4068$529'.
  created $adff cell `$procdff$5444' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_rx.\data_buffer_q' using process `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4062$528'.
  created $adff cell `$procdff$5445' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_ep.\tx_err_q' using process `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3943$520'.
  created $adff cell `$procdff$5446' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_ep.\tx_len_q' using process `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3926$512'.
  created $adff cell `$procdff$5447' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_ep.\tx_zlp_q' using process `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3917$510'.
  created $adff cell `$procdff$5448' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_ep.\tx_active_q' using process `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3904$507'.
  created $adff cell `$procdff$5449' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_ep.\rx_setup_q' using process `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3879$505'.
  created $adff cell `$procdff$5450' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_ep.\rx_err_q' using process `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3869$501'.
  created $adff cell `$procdff$5451' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_ep.\rx_len_q' using process `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3861$498'.
  created $adff cell `$procdff$5452' with positive edge clock and positive level reset.
Creating register for signal `\usbf_sie_ep.\rx_ready_q' using process `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3851$495'.
  created $adff cell `$procdff$5453' with positive edge clock and positive level reset.
Creating register for signal `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.\rd_ptr' using process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675'.
  created $adff cell `$procdff$5454' with positive edge clock and positive level reset.
Creating register for signal `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.\wr_ptr' using process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675'.
  created $adff cell `$procdff$5455' with positive edge clock and positive level reset.
Creating register for signal `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.\count' using process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675'.
  created $adff cell `$procdff$5456' with positive edge clock and positive level reset.
Creating register for signal `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.\ram[0]' using process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675'.
  created $dff cell `$procdff$5459' with positive edge clock.
Creating register for signal `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.\ram[1]' using process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675'.
  created $dff cell `$procdff$5462' with positive edge clock.
Creating register for signal `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.\ram[2]' using process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675'.
  created $dff cell `$procdff$5465' with positive edge clock.
Creating register for signal `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.\ram[3]' using process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675'.
  created $dff cell `$procdff$5468' with positive edge clock.
Creating register for signal `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.\ram[4]' using process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675'.
  created $dff cell `$procdff$5471' with positive edge clock.
Creating register for signal `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.\ram[5]' using process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675'.
  created $dff cell `$procdff$5474' with positive edge clock.
Creating register for signal `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.\ram[6]' using process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675'.
  created $dff cell `$procdff$5477' with positive edge clock.
Creating register for signal `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.\ram[7]' using process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675'.
  created $dff cell `$procdff$5480' with positive edge clock.
Creating register for signal `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3735$673_ADDR' using process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675'.
  created $adff cell `$procdff$5481' with positive edge clock and positive level reset.
Creating register for signal `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$mem2reg_wr$\ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3735$673_DATA' using process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675'.
  created $adff cell `$procdff$5482' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\bvalid_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2973$451'.
  created $adff cell `$procdff$5483' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\rd_data_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2959$448'.
  created $adff cell `$procdff$5484' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\rvalid_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2944$447'.
  created $adff cell `$procdff$5485' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep3_data_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2766$443'.
  created $adff cell `$procdff$5486' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep3_sts_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2747$440'.
  created $adff cell `$procdff$5487' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep3_rx_ctrl_rx_accept_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2731$437'.
  created $adff cell `$procdff$5488' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep3_rx_ctrl_rx_flush_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2717$434'.
  created $adff cell `$procdff$5489' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep3_rx_ctrl_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2706$431'.
  created $adff cell `$procdff$5490' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep3_tx_ctrl_tx_len_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2692$428'.
  created $adff cell `$procdff$5491' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep3_tx_ctrl_tx_start_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2678$425'.
  created $adff cell `$procdff$5492' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep3_tx_ctrl_tx_flush_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2664$422'.
  created $adff cell `$procdff$5493' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep3_tx_ctrl_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2653$419'.
  created $adff cell `$procdff$5494' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep3_cfg_iso_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2639$416'.
  created $adff cell `$procdff$5495' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep3_cfg_stall_ep_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2625$413'.
  created $adff cell `$procdff$5496' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep3_cfg_int_tx_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2611$410'.
  created $adff cell `$procdff$5497' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep3_cfg_int_rx_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2599$407'.
  created $adff cell `$procdff$5498' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep3_cfg_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2588$404'.
  created $adff cell `$procdff$5499' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep2_data_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2571$401'.
  created $adff cell `$procdff$5500' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep2_sts_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2552$398'.
  created $adff cell `$procdff$5501' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep2_rx_ctrl_rx_accept_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2536$395'.
  created $adff cell `$procdff$5502' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep2_rx_ctrl_rx_flush_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2522$392'.
  created $adff cell `$procdff$5503' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep2_rx_ctrl_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2511$389'.
  created $adff cell `$procdff$5504' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep2_tx_ctrl_tx_len_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2497$386'.
  created $adff cell `$procdff$5505' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep2_tx_ctrl_tx_start_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2483$383'.
  created $adff cell `$procdff$5506' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep2_tx_ctrl_tx_flush_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2469$380'.
  created $adff cell `$procdff$5507' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep2_tx_ctrl_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2458$377'.
  created $adff cell `$procdff$5508' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep2_cfg_iso_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2444$374'.
  created $adff cell `$procdff$5509' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep2_cfg_stall_ep_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2430$371'.
  created $adff cell `$procdff$5510' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep2_cfg_int_tx_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2416$368'.
  created $adff cell `$procdff$5511' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep2_cfg_int_rx_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2404$365'.
  created $adff cell `$procdff$5512' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep2_cfg_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2393$362'.
  created $adff cell `$procdff$5513' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep1_data_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2376$359'.
  created $adff cell `$procdff$5514' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep1_sts_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2357$356'.
  created $adff cell `$procdff$5515' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep1_rx_ctrl_rx_accept_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2341$353'.
  created $adff cell `$procdff$5516' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep1_rx_ctrl_rx_flush_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2327$350'.
  created $adff cell `$procdff$5517' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep1_rx_ctrl_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2316$347'.
  created $adff cell `$procdff$5518' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep1_tx_ctrl_tx_len_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2302$344'.
  created $adff cell `$procdff$5519' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep1_tx_ctrl_tx_start_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2288$341'.
  created $adff cell `$procdff$5520' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep1_tx_ctrl_tx_flush_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2274$338'.
  created $adff cell `$procdff$5521' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep1_tx_ctrl_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2263$335'.
  created $adff cell `$procdff$5522' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep1_cfg_iso_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2249$332'.
  created $adff cell `$procdff$5523' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep1_cfg_stall_ep_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2235$329'.
  created $adff cell `$procdff$5524' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep1_cfg_int_tx_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2221$326'.
  created $adff cell `$procdff$5525' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep1_cfg_int_rx_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2209$323'.
  created $adff cell `$procdff$5526' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep1_cfg_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2198$320'.
  created $adff cell `$procdff$5527' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep0_data_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2181$317'.
  created $adff cell `$procdff$5528' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep0_sts_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2162$314'.
  created $adff cell `$procdff$5529' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep0_rx_ctrl_rx_accept_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2146$311'.
  created $adff cell `$procdff$5530' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep0_rx_ctrl_rx_flush_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2132$308'.
  created $adff cell `$procdff$5531' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep0_rx_ctrl_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2121$305'.
  created $adff cell `$procdff$5532' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep0_tx_ctrl_tx_len_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2107$302'.
  created $adff cell `$procdff$5533' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep0_tx_ctrl_tx_start_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2093$299'.
  created $adff cell `$procdff$5534' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep0_tx_ctrl_tx_flush_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2079$296'.
  created $adff cell `$procdff$5535' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep0_tx_ctrl_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2068$293'.
  created $adff cell `$procdff$5536' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep0_cfg_iso_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2054$290'.
  created $adff cell `$procdff$5537' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep0_cfg_stall_ep_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2040$287'.
  created $adff cell `$procdff$5538' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep0_cfg_int_tx_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2026$284'.
  created $adff cell `$procdff$5539' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep0_cfg_int_rx_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2014$281'.
  created $adff cell `$procdff$5540' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_ep0_cfg_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2003$278'.
  created $adff cell `$procdff$5541' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_func_addr_dev_addr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1989$275'.
  created $adff cell `$procdff$5542' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_func_addr_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1978$272'.
  created $adff cell `$procdff$5543' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_func_stat_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1953$269'.
  created $adff cell `$procdff$5544' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_func_ctrl_int_en_sof_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1939$266'.
  created $adff cell `$procdff$5545' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_func_ctrl_phy_opmode_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1927$263'.
  created $adff cell `$procdff$5546' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_func_ctrl_phy_xcvrselect_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1915$260'.
  created $adff cell `$procdff$5547' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_func_ctrl_phy_termselect_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1903$257'.
  created $adff cell `$procdff$5548' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_func_ctrl_phy_dppulldown_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1891$254'.
  created $adff cell `$procdff$5549' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_func_ctrl_phy_dmpulldown_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1879$251'.
  created $adff cell `$procdff$5550' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_func_ctrl_hs_chirp_en_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1867$248'.
  created $adff cell `$procdff$5551' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\usb_func_ctrl_wr_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1856$245'.
  created $adff cell `$procdff$5552' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device.\wr_data_q' using process `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1831$238'.
  created $adff cell `$procdff$5553' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device_core.\intr_q' using process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1516$229'.
  created $adff cell `$procdff$5554' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device_core.\rst_event_q' using process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1467$227'.
  created $adff cell `$procdff$5555' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device_core.\ep3_data_bit_q' using process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1454$225'.
  created $adff cell `$procdff$5556' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device_core.\ep2_data_bit_q' using process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1447$223'.
  created $adff cell `$procdff$5557' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device_core.\ep1_data_bit_q' using process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1440$221'.
  created $adff cell `$procdff$5558' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device_core.\ep0_data_bit_q' using process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1433$219'.
  created $adff cell `$procdff$5559' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device_core.\ep0_dir_out_q' using process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1360$189'.
  created $adff cell `$procdff$5560' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device_core.\ep0_dir_in_q' using process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1350$175'.
  created $adff cell `$procdff$5561' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device_core.\current_addr_q' using process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1336$173'.
  created $adff cell `$procdff$5562' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device_core.\addr_update_pending_q' using process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1327$170'.
  created $adff cell `$procdff$5563' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device_core.\rx_setup_q' using process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1309$158'.
  created $adff cell `$procdff$5564' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device_core.\rx_enable_q' using process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1298$155'.
  created $adff cell `$procdff$5565' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device_core.\tx_pid_q' using process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1289$152'.
  created $adff cell `$procdff$5566' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device_core.\tx_valid_q' using process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1283$149'.
  created $adff cell `$procdff$5567' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device_core.\state_q' using process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1147$137'.
  created $adff cell `$procdff$5568' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device_core.\rx_space_q' using process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:929$88'.
  created $adff cell `$procdff$5569' with positive edge clock and positive level reset.
Creating register for signal `\usbf_device_core.\se0_cnt_q' using process `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:743$69'.
  created $adff cell `$procdff$5570' with positive edge clock and positive level reset.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:0$670'.
Removing empty process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:0$670'.
Found and cleaned up 6 empty switches in `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
Removing empty process `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$641'.
Found and cleaned up 4 empty switches in `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4735$632'.
Removing empty process `usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4735$632'.
Found and cleaned up 3 empty switches in `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4706$629'.
Removing empty process `usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4706$629'.
Found and cleaned up 2 empty switches in `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4692$624'.
Removing empty process `usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4692$624'.
Found and cleaned up 2 empty switches in `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4665$620'.
Removing empty process `usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4665$620'.
Removing empty process `usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4657$618'.
Removing empty process `usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4645$617'.
Found and cleaned up 13 empty switches in `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4544$610'.
Removing empty process `usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4544$610'.
Found and cleaned up 4 empty switches in `\usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4505$602'.
Removing empty process `usbf_sie_tx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4505$602'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4396$594'.
Found and cleaned up 2 empty switches in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4380$590'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4380$590'.
Found and cleaned up 1 empty switch in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4368$586'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4368$586'.
Found and cleaned up 2 empty switches in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4356$580'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4356$580'.
Found and cleaned up 2 empty switches in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4348$578'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4348$578'.
Found and cleaned up 3 empty switches in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4317$568'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4317$568'.
Found and cleaned up 2 empty switches in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4304$564'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4304$564'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4293$561'.
Found and cleaned up 2 empty switches in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4281$557'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4281$557'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4270$554'.
Found and cleaned up 3 empty switches in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4256$548'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4256$548'.
Found and cleaned up 2 empty switches in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4236$545'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4236$545'.
Found and cleaned up 1 empty switch in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4223$543'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4223$543'.
Found and cleaned up 13 empty switches in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4101$535'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4101$535'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4083$533'.
Found and cleaned up 1 empty switch in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4077$531'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4077$531'.
Found and cleaned up 1 empty switch in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4068$529'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4068$529'.
Found and cleaned up 1 empty switch in `\usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4062$528'.
Removing empty process `usbf_sie_rx.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4062$528'.
Found and cleaned up 3 empty switches in `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3943$520'.
Removing empty process `usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3943$520'.
Found and cleaned up 3 empty switches in `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3926$512'.
Removing empty process `usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3926$512'.
Found and cleaned up 2 empty switches in `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3917$510'.
Removing empty process `usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3917$510'.
Found and cleaned up 3 empty switches in `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3904$507'.
Removing empty process `usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3904$507'.
Found and cleaned up 2 empty switches in `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3879$505'.
Removing empty process `usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3879$505'.
Found and cleaned up 3 empty switches in `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3869$501'.
Removing empty process `usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3869$501'.
Found and cleaned up 2 empty switches in `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3861$498'.
Removing empty process `usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3861$498'.
Found and cleaned up 2 empty switches in `\usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3851$495'.
Removing empty process `usbf_sie_ep.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3851$495'.
Found and cleaned up 1 empty switch in `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:0$704'.
Removing empty process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:0$704'.
Found and cleaned up 6 empty switches in `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675'.
Removing empty process `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:3715$675'.
Found and cleaned up 2 empty switches in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2973$451'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2973$451'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2959$448'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2959$448'.
Found and cleaned up 2 empty switches in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2944$447'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2944$447'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2816$446'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2816$446'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2766$443'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2766$443'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2747$440'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2747$440'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2731$437'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2731$437'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2717$434'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2717$434'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2706$431'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2706$431'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2692$428'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2692$428'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2678$425'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2678$425'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2664$422'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2664$422'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2653$419'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2653$419'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2639$416'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2639$416'.
Found and cleaned up 2 empty switches in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2625$413'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2625$413'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2611$410'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2611$410'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2599$407'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2599$407'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2588$404'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2588$404'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2571$401'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2571$401'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2552$398'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2552$398'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2536$395'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2536$395'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2522$392'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2522$392'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2511$389'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2511$389'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2497$386'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2497$386'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2483$383'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2483$383'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2469$380'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2469$380'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2458$377'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2458$377'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2444$374'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2444$374'.
Found and cleaned up 2 empty switches in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2430$371'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2430$371'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2416$368'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2416$368'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2404$365'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2404$365'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2393$362'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2393$362'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2376$359'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2376$359'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2357$356'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2357$356'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2341$353'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2341$353'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2327$350'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2327$350'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2316$347'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2316$347'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2302$344'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2302$344'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2288$341'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2288$341'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2274$338'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2274$338'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2263$335'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2263$335'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2249$332'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2249$332'.
Found and cleaned up 2 empty switches in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2235$329'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2235$329'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2221$326'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2221$326'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2209$323'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2209$323'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2198$320'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2198$320'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2181$317'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2181$317'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2162$314'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2162$314'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2146$311'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2146$311'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2132$308'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2132$308'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2121$305'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2121$305'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2107$302'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2107$302'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2093$299'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2093$299'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2079$296'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2079$296'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2068$293'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2068$293'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2054$290'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2054$290'.
Found and cleaned up 2 empty switches in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2040$287'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2040$287'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2026$284'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2026$284'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2014$281'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2014$281'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2003$278'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:2003$278'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1989$275'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1989$275'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1978$272'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1978$272'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1953$269'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1953$269'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1939$266'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1939$266'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1927$263'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1927$263'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1915$260'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1915$260'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1903$257'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1903$257'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1891$254'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1891$254'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1879$251'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1879$251'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1867$248'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1867$248'.
Found and cleaned up 1 empty switch in `\usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1856$245'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1856$245'.
Removing empty process `usbf_device.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1831$238'.
Found and cleaned up 4 empty switches in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1516$229'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1516$229'.
Found and cleaned up 1 empty switch in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1485$228'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1485$228'.
Found and cleaned up 2 empty switches in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1467$227'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1467$227'.
Found and cleaned up 2 empty switches in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1454$225'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1454$225'.
Found and cleaned up 2 empty switches in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1447$223'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1447$223'.
Found and cleaned up 2 empty switches in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1440$221'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1440$221'.
Found and cleaned up 2 empty switches in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1433$219'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1433$219'.
Found and cleaned up 10 empty switches in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1376$206'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1376$206'.
Found and cleaned up 3 empty switches in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1360$189'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1360$189'.
Found and cleaned up 3 empty switches in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1350$175'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1350$175'.
Found and cleaned up 2 empty switches in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1336$173'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1336$173'.
Found and cleaned up 2 empty switches in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1327$170'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1327$170'.
Found and cleaned up 2 empty switches in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1309$158'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1309$158'.
Found and cleaned up 1 empty switch in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1298$155'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1298$155'.
Found and cleaned up 1 empty switch in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1289$152'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1289$152'.
Found and cleaned up 1 empty switch in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1283$149'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1283$149'.
Found and cleaned up 14 empty switches in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1159$138'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1159$138'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:1147$137'.
Found and cleaned up 23 empty switches in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:988$113'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:988$113'.
Found and cleaned up 1 empty switch in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:929$88'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:929$88'.
Found and cleaned up 1 empty switch in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:882$83'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:882$83'.
Found and cleaned up 1 empty switch in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:836$74'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:836$74'.
Found and cleaned up 2 empty switches in `\usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:743$69'.
Removing empty process `usbf_device_core.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:743$69'.
Cleaned up 257 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
<suppressed ~3 debug messages>
Optimizing module usbf_sie_tx.
<suppressed ~12 debug messages>
Optimizing module usbf_sie_rx.
<suppressed ~21 debug messages>
Optimizing module usbf_sie_ep.
<suppressed ~1 debug messages>
Optimizing module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
<suppressed ~3 debug messages>
Optimizing module usbf_device.
<suppressed ~17 debug messages>
Optimizing module usbf_device_core.
<suppressed ~68 debug messages>
Optimizing module usbf_crc16.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Optimizing module usbf_sie_tx.
Optimizing module usbf_sie_rx.
Optimizing module usbf_sie_ep.
Optimizing module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
Optimizing module usbf_device.
Optimizing module usbf_device_core.
Optimizing module usbf_crc16.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo'.
<suppressed ~24 debug messages>
Finding identical cells in module `\usbf_sie_tx'.
<suppressed ~87 debug messages>
Finding identical cells in module `\usbf_sie_rx'.
<suppressed ~153 debug messages>
Finding identical cells in module `\usbf_sie_ep'.
<suppressed ~9 debug messages>
Finding identical cells in module `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo'.
<suppressed ~24 debug messages>
Finding identical cells in module `\usbf_device'.
<suppressed ~735 debug messages>
Finding identical cells in module `\usbf_device_core'.
<suppressed ~543 debug messages>
Finding identical cells in module `\usbf_crc16'.
<suppressed ~42 debug messages>
Removed a total of 539 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$776.
    dead port 2/2 on $mux $procmux$776.
    dead port 1/2 on $mux $procmux$773.
    dead port 2/2 on $mux $procmux$773.
Running muxtree optimizer on module \usbf_sie_tx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$3351.
    dead port 2/2 on $mux $procmux$3339.
    dead port 1/2 on $mux $procmux$3337.
    dead port 2/2 on $mux $procmux$3324.
    dead port 2/2 on $mux $procmux$3313.
    dead port 2/2 on $mux $procmux$3311.
    dead port 2/2 on $mux $procmux$3299.
    dead port 2/2 on $mux $procmux$3297.
    dead port 1/2 on $mux $procmux$3295.
    dead port 2/2 on $mux $procmux$3282.
    dead port 2/2 on $mux $procmux$3272.
    dead port 2/2 on $mux $procmux$3270.
    dead port 2/2 on $mux $procmux$3259.
    dead port 2/2 on $mux $procmux$3250.
    dead port 2/2 on $mux $procmux$3242.
    dead port 2/2 on $mux $procmux$3235.
    dead port 1/2 on $mux $procmux$3223.
    dead port 1/2 on $mux $procmux$3182.
    dead port 1/2 on $mux $procmux$3176.
    dead port 1/2 on $mux $procmux$3170.
    dead port 1/2 on $mux $procmux$3167.
    dead port 1/2 on $mux $procmux$3161.
    dead port 1/2 on $mux $procmux$3158.
    dead port 1/2 on $mux $procmux$3152.
    dead port 1/2 on $mux $procmux$3149.
    dead port 1/2 on $mux $procmux$3146.
    dead port 1/2 on $mux $procmux$3140.
    dead port 1/2 on $mux $procmux$3137.
    dead port 1/2 on $mux $procmux$3134.
Running muxtree optimizer on module \usbf_sie_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$3551.
    dead port 2/2 on $mux $procmux$3538.
    dead port 2/2 on $mux $procmux$3526.
    dead port 1/2 on $mux $procmux$3524.
    dead port 2/2 on $mux $procmux$3511.
    dead port 2/2 on $mux $procmux$3500.
    dead port 2/2 on $mux $procmux$3490.
    dead port 1/2 on $mux $procmux$3488.
    dead port 2/2 on $mux $procmux$3477.
    dead port 2/2 on $mux $procmux$3468.
    dead port 1/2 on $mux $procmux$3466.
    dead port 2/2 on $mux $procmux$3456.
    dead port 2/2 on $mux $procmux$3449.
    dead port 2/2 on $mux $procmux$3585.
    dead port 2/2 on $mux $procmux$3571.
    dead port 2/2 on $mux $procmux$3569.
Running muxtree optimizer on module \usbf_sie_ep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$3670.
    dead port 2/2 on $mux $procmux$3670.
    dead port 1/2 on $mux $procmux$3667.
    dead port 2/2 on $mux $procmux$3667.
Running muxtree optimizer on module \usbf_device..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \usbf_device_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $procmux$5218: \se0_cnt_q -> { 1'1 \se0_cnt_q [13:0] }
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$4806.
    dead port 2/2 on $mux $procmux$4798.
    dead port 2/2 on $mux $procmux$4796.
    dead port 2/2 on $mux $procmux$4787.
    dead port 2/2 on $mux $procmux$4785.
    dead port 2/2 on $mux $procmux$4776.
    dead port 2/2 on $mux $procmux$4774.
    dead port 2/2 on $mux $procmux$4772.
    dead port 2/2 on $mux $procmux$4762.
    dead port 2/2 on $mux $procmux$4760.
    dead port 2/2 on $mux $procmux$4758.
    dead port 2/2 on $mux $procmux$4748.
    dead port 2/2 on $mux $procmux$4746.
    dead port 2/2 on $mux $procmux$4744.
    dead port 1/2 on $mux $procmux$4742.
    dead port 2/2 on $mux $procmux$4732.
    dead port 2/2 on $mux $procmux$4730.
    dead port 2/2 on $mux $procmux$4728.
    dead port 1/2 on $mux $procmux$4726.
    dead port 2/2 on $mux $procmux$4715.
    dead port 2/2 on $mux $procmux$4713.
    dead port 1/2 on $mux $procmux$4711.
    dead port 2/2 on $mux $procmux$4701.
    dead port 2/2 on $mux $procmux$4699.
    dead port 1/2 on $mux $procmux$4697.
    dead port 2/2 on $mux $procmux$4687.
    dead port 2/2 on $mux $procmux$4685.
    dead port 1/2 on $mux $procmux$4683.
    dead port 2/2 on $mux $procmux$4680.
    dead port 2/2 on $mux $procmux$4670.
    dead port 2/2 on $mux $procmux$4668.
    dead port 1/2 on $mux $procmux$4666.
    dead port 2/2 on $mux $procmux$4663.
    dead port 2/2 on $mux $procmux$4653.
    dead port 2/2 on $mux $procmux$4651.
    dead port 1/2 on $mux $procmux$4649.
    dead port 2/2 on $mux $procmux$4646.
    dead port 1/2 on $mux $procmux$4644.
    dead port 2/2 on $mux $procmux$4634.
    dead port 2/2 on $mux $procmux$4632.
    dead port 1/2 on $mux $procmux$4630.
    dead port 2/2 on $mux $procmux$4627.
    dead port 1/2 on $mux $procmux$4625.
    dead port 2/2 on $mux $procmux$4614.
    dead port 2/2 on $mux $procmux$4607.
    dead port 2/2 on $mux $procmux$4600.
    dead port 2/2 on $mux $procmux$5150.
    dead port 2/2 on $mux $procmux$4598.
    dead port 2/2 on $mux $procmux$4590.
    dead port 2/2 on $mux $procmux$4588.
    dead port 2/2 on $mux $procmux$4580.
    dead port 2/2 on $mux $procmux$4578.
    dead port 1/2 on $mux $procmux$4576.
    dead port 2/2 on $mux $procmux$4567.
    dead port 2/2 on $mux $procmux$5138.
    dead port 2/2 on $mux $procmux$4565.
    dead port 1/2 on $mux $procmux$4563.
    dead port 2/2 on $mux $procmux$4554.
    dead port 2/2 on $mux $procmux$4552.
    dead port 1/2 on $mux $procmux$4550.
    dead port 1/2 on $mux $procmux$4547.
    dead port 2/2 on $mux $procmux$4538.
    dead port 2/2 on $mux $procmux$5136.
    dead port 2/2 on $mux $procmux$4536.
    dead port 1/2 on $mux $procmux$4534.
    dead port 1/2 on $mux $procmux$4531.
    dead port 2/2 on $mux $procmux$4522.
    dead port 2/2 on $mux $procmux$4520.
    dead port 1/2 on $mux $procmux$4518.
    dead port 1/2 on $mux $procmux$4515.
    dead port 1/2 on $mux $procmux$4512.
    dead port 2/2 on $mux $procmux$4503.
    dead port 2/2 on $mux $procmux$5123.
    dead port 2/2 on $mux $procmux$4501.
    dead port 1/2 on $mux $procmux$4499.
    dead port 1/2 on $mux $procmux$4496.
    dead port 1/2 on $mux $procmux$4493.
    dead port 2/2 on $mux $procmux$4484.
    dead port 2/2 on $mux $procmux$4482.
    dead port 1/2 on $mux $procmux$4480.
    dead port 1/2 on $mux $procmux$4477.
    dead port 1/2 on $mux $procmux$4474.
    dead port 1/2 on $mux $procmux$4471.
    dead port 2/2 on $mux $procmux$4463.
    dead port 2/2 on $mux $procmux$5121.
    dead port 2/2 on $mux $procmux$4461.
    dead port 1/2 on $mux $procmux$4459.
    dead port 1/2 on $mux $procmux$4456.
    dead port 1/2 on $mux $procmux$4453.
    dead port 1/2 on $mux $procmux$4450.
    dead port 2/2 on $mux $procmux$5119.
    dead port 2/2 on $mux $procmux$4398.
    dead port 2/2 on $mux $procmux$5105.
    dead port 2/2 on $mux $procmux$4391.
    dead port 2/2 on $mux $procmux$4389.
    dead port 2/2 on $mux $procmux$4381.
    dead port 2/2 on $mux $procmux$5103.
    dead port 2/2 on $mux $procmux$4379.
    dead port 1/2 on $mux $procmux$4377.
    dead port 2/2 on $mux $procmux$4368.
    dead port 2/2 on $mux $procmux$5101.
    dead port 2/2 on $mux $procmux$4366.
    dead port 1/2 on $mux $procmux$4364.
    dead port 1/2 on $mux $procmux$4361.
    dead port 2/2 on $mux $procmux$4352.
    dead port 1/2 on $mux $procmux$5099.
    dead port 2/2 on $mux $procmux$4350.
    dead port 1/2 on $mux $procmux$4348.
    dead port 1/2 on $mux $procmux$4345.
    dead port 1/2 on $mux $procmux$4342.
    dead port 2/2 on $mux $procmux$4333.
    dead port 2/2 on $mux $procmux$4331.
    dead port 1/2 on $mux $procmux$4329.
    dead port 1/2 on $mux $procmux$4326.
    dead port 1/2 on $mux $procmux$4323.
    dead port 1/2 on $mux $procmux$4320.
    dead port 2/2 on $mux $procmux$4311.
    dead port 2/2 on $mux $procmux$5084.
    dead port 2/2 on $mux $procmux$4305.
    dead port 2/2 on $mux $procmux$4303.
    dead port 2/2 on $mux $procmux$4296.
    dead port 2/2 on $mux $procmux$5082.
    dead port 1/2 on $mux $procmux$4294.
    dead port 1/2 on $mux $procmux$5080.
    dead port 2/2 on $mux $procmux$5066.
    dead port 2/2 on $mux $procmux$5064.
    dead port 1/2 on $mux $procmux$5062.
    dead port 1/2 on $mux $procmux$5059.
    dead port 2/2 on $mux $procmux$5045.
    dead port 2/2 on $mux $procmux$5043.
    dead port 1/2 on $mux $procmux$5041.
    dead port 1/2 on $mux $procmux$5038.
    dead port 2/2 on $mux $procmux$5035.
    dead port 2/2 on $mux $procmux$5021.
    dead port 2/2 on $mux $procmux$5019.
    dead port 1/2 on $mux $procmux$5017.
    dead port 1/2 on $mux $procmux$5014.
    dead port 2/2 on $mux $procmux$5011.
    dead port 1/2 on $mux $procmux$5009.
    dead port 2/2 on $mux $procmux$4847.
    dead port 2/2 on $mux $procmux$4994.
    dead port 2/2 on $mux $procmux$4992.
    dead port 1/2 on $mux $procmux$4990.
    dead port 1/2 on $mux $procmux$4987.
    dead port 2/2 on $mux $procmux$4814.
    dead port 1/2 on $mux $procmux$4984.
    dead port 2/2 on $mux $procmux$4838.
    dead port 2/2 on $mux $procmux$4970.
    dead port 2/2 on $mux $procmux$4968.
    dead port 1/2 on $mux $procmux$4966.
    dead port 1/2 on $mux $procmux$4963.
    dead port 1/2 on $mux $procmux$4960.
    dead port 2/2 on $mux $procmux$4957.
    dead port 2/2 on $mux $procmux$4832.
    dead port 2/2 on $mux $procmux$4943.
    dead port 1/2 on $mux $procmux$4941.
    dead port 2/2 on $mux $procmux$4928.
    dead port 2/2 on $mux $procmux$4917.
    dead port 1/2 on $mux $procmux$4915.
    dead port 2/2 on $mux $procmux$4903.
    dead port 2/2 on $mux $procmux$4893.
    dead port 2/2 on $mux $procmux$4884.
    dead port 2/2 on $mux $procmux$4882.
    dead port 2/2 on $mux $procmux$4872.
    dead port 2/2 on $mux $procmux$4870.
    dead port 1/2 on $mux $procmux$4868.
    dead port 2/2 on $mux $procmux$4857.
    dead port 2/2 on $mux $procmux$4849.
Running muxtree optimizer on module \usbf_crc16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 221 multiplexer ports.
<suppressed ~212 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
  Optimizing cells in module \usbf_sie_tx.
  Optimizing cells in module \usbf_sie_rx.
  Optimizing cells in module \usbf_sie_ep.
  Optimizing cells in module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
  Optimizing cells in module \usbf_device.
  Optimizing cells in module \usbf_device_core.
    New ctrl vector for $mux cell $procmux$4509: { }
    New ctrl vector for $mux cell $procmux$4678: { }
    New ctrl vector for $mux cell $procmux$4770: { }
    New ctrl vector for $mux cell $procmux$4544: { }
  Optimizing cells in module \usbf_device_core.
  Optimizing cells in module \usbf_crc16.
Performed a total of 4 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo'.
Finding identical cells in module `\usbf_sie_tx'.
Finding identical cells in module `\usbf_sie_rx'.
<suppressed ~12 debug messages>
Finding identical cells in module `\usbf_sie_ep'.
Finding identical cells in module `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo'.
Finding identical cells in module `\usbf_device'.
Finding identical cells in module `\usbf_device_core'.
<suppressed ~6 debug messages>
Finding identical cells in module `\usbf_crc16'.
Removed a total of 6 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$5416 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[63]).
Adding EN signal on $procdff$5410 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[61]).
Setting constant 1-bit at position 0 on $procdff$5417 ($adff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Setting constant 1-bit at position 1 on $procdff$5417 ($adff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Setting constant 1-bit at position 2 on $procdff$5417 ($adff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Setting constant 1-bit at position 3 on $procdff$5417 ($adff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Setting constant 1-bit at position 4 on $procdff$5417 ($adff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Setting constant 1-bit at position 5 on $procdff$5417 ($adff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Setting constant 1-bit at position 0 on $procdff$5418 ($adff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Setting constant 1-bit at position 1 on $procdff$5418 ($adff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Setting constant 1-bit at position 2 on $procdff$5418 ($adff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Setting constant 1-bit at position 3 on $procdff$5418 ($adff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Setting constant 1-bit at position 4 on $procdff$5418 ($adff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Setting constant 1-bit at position 5 on $procdff$5418 ($adff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Setting constant 1-bit at position 6 on $procdff$5418 ($adff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Setting constant 1-bit at position 7 on $procdff$5418 ($adff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Adding EN signal on $procdff$5413 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[62]).
Adding EN signal on $procdff$5407 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[60]).
Adding EN signal on $procdff$5222 ($adff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = $procmux$3128_Y, Q = \rd_ptr).
Adding EN signal on $procdff$5223 ($adff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = $procmux$3124_Y, Q = \wr_ptr).
Adding EN signal on $procdff$5224 ($adff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = $procmux$3119_Y, Q = \count).
Adding EN signal on $procdff$5227 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[0]).
Adding EN signal on $procdff$5230 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[1]).
Adding EN signal on $procdff$5233 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[2]).
Adding EN signal on $procdff$5236 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[3]).
Adding EN signal on $procdff$5239 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[4]).
Adding EN signal on $procdff$5242 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[5]).
Adding EN signal on $procdff$5245 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[6]).
Adding EN signal on $procdff$5248 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[7]).
Adding EN signal on $procdff$5251 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[8]).
Adding EN signal on $procdff$5254 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[9]).
Adding EN signal on $procdff$5257 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[10]).
Adding EN signal on $procdff$5260 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[11]).
Adding EN signal on $procdff$5263 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[12]).
Adding EN signal on $procdff$5266 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[13]).
Adding EN signal on $procdff$5269 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[14]).
Adding EN signal on $procdff$5272 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[15]).
Adding EN signal on $procdff$5275 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[16]).
Adding EN signal on $procdff$5278 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[17]).
Adding EN signal on $procdff$5281 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[18]).
Adding EN signal on $procdff$5284 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[19]).
Adding EN signal on $procdff$5287 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[20]).
Adding EN signal on $procdff$5290 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[21]).
Adding EN signal on $procdff$5293 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[22]).
Adding EN signal on $procdff$5296 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[23]).
Adding EN signal on $procdff$5299 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[24]).
Adding EN signal on $procdff$5302 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[25]).
Adding EN signal on $procdff$5305 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[26]).
Adding EN signal on $procdff$5308 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[27]).
Adding EN signal on $procdff$5311 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[28]).
Adding EN signal on $procdff$5314 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[29]).
Adding EN signal on $procdff$5317 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[30]).
Adding EN signal on $procdff$5320 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[31]).
Adding EN signal on $procdff$5323 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[32]).
Adding EN signal on $procdff$5326 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[33]).
Adding EN signal on $procdff$5329 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[34]).
Adding EN signal on $procdff$5332 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[35]).
Adding EN signal on $procdff$5335 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[36]).
Adding EN signal on $procdff$5338 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[37]).
Adding EN signal on $procdff$5341 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[38]).
Adding EN signal on $procdff$5344 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[39]).
Adding EN signal on $procdff$5347 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[40]).
Adding EN signal on $procdff$5350 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[41]).
Adding EN signal on $procdff$5353 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[42]).
Adding EN signal on $procdff$5356 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[43]).
Adding EN signal on $procdff$5359 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[44]).
Adding EN signal on $procdff$5362 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[45]).
Adding EN signal on $procdff$5365 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[46]).
Adding EN signal on $procdff$5368 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[47]).
Adding EN signal on $procdff$5371 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[48]).
Adding EN signal on $procdff$5374 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[49]).
Adding EN signal on $procdff$5377 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[50]).
Adding EN signal on $procdff$5380 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[51]).
Adding EN signal on $procdff$5383 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[52]).
Adding EN signal on $procdff$5386 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[53]).
Adding EN signal on $procdff$5389 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[54]).
Adding EN signal on $procdff$5392 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[55]).
Adding EN signal on $procdff$5395 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[56]).
Adding EN signal on $procdff$5398 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[57]).
Adding EN signal on $procdff$5401 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[58]).
Adding EN signal on $procdff$5404 ($dff) from module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo (D = \data_i, Q = \ram[59]).
Adding EN signal on $procdff$5422 ($adff) from module usbf_sie_tx (D = $procmux$3217_Y, Q = \crc_sum_q).
Adding EN signal on $procdff$5424 ($adff) from module usbf_sie_tx (D = $procmux$3382_Y, Q = \data_zlp_q).
Adding EN signal on $procdff$5425 ($adff) from module usbf_sie_tx (D = $procmux$3371_Y, Q = \data_pid_q).
Adding EN signal on $procdff$5420 ($adff) from module usbf_sie_tx (D = $procmux$3204_Y, Q = \last_q).
Adding EN signal on $procdff$5421 ($adff) from module usbf_sie_tx (D = $procmux$3196_Y, Q = \data_q).
Adding EN signal on $procdff$5419 ($adff) from module usbf_sie_tx (D = $procmux$3212_Y, Q = \valid_q).
Adding EN signal on $procdff$5444 ($adff) from module usbf_sie_rx (D = { $and$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4072$530_Y \data_valid_q [3:2] }, Q = \data_valid_q [3:1]).
Adding EN signal on $procdff$5439 ($adff) from module usbf_sie_rx (D = $procmux$3434_Y [10:8], Q = \frame_num_q [10:8]).
Adding EN signal on $procdff$5439 ($adff) from module usbf_sie_rx (D = $procmux$3434_Y [7:0], Q = \frame_num_q [7:0]).
Adding EN signal on $procdff$5445 ($adff) from module usbf_sie_rx (D = { \utmi_data_i \data_buffer_q [31:8] }, Q = \data_buffer_q).
Adding EN signal on $procdff$5430 ($adff) from module usbf_sie_rx (D = $procmux$3387_Y, Q = \data_zlp_q).
Adding EN signal on $procdff$5432 ($adff) from module usbf_sie_rx (D = $procmux$3395_Y, Q = \crc_err_q).
Adding EN signal on $procdff$5433 ($adff) from module usbf_sie_rx (D = $procmux$3400_Y, Q = \crc_sum_q).
Adding EN signal on $procdff$5434 ($adff) from module usbf_sie_rx (D = $procmux$3416_Y, Q = \token_ep_q [0]).
Adding EN signal on $procdff$5434 ($adff) from module usbf_sie_rx (D = $procmux$3405_Y, Q = \token_ep_q [3:1]).
Adding EN signal on $procdff$5435 ($adff) from module usbf_sie_rx (D = $procmux$3421_Y, Q = \token_dev_q).
Adding EN signal on $procdff$5437 ($adff) from module usbf_sie_rx (D = $procmux$3426_Y, Q = \token_pid_q).
Adding EN signal on $procdff$5443 ($adff) from module usbf_sie_rx (D = { $logic_not$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4081$532_Y \data_crc_q [1] }, Q = \data_crc_q).
Adding EN signal on $procdff$5451 ($adff) from module usbf_sie_ep (D = $procmux$3645_Y, Q = \rx_err_q).
Adding EN signal on $procdff$5452 ($adff) from module usbf_sie_ep (D = $procmux$3650_Y, Q = \rx_len_q).
Adding EN signal on $procdff$5453 ($adff) from module usbf_sie_ep (D = $procmux$3655_Y, Q = \rx_ready_q).
Adding EN signal on $procdff$5446 ($adff) from module usbf_sie_ep (D = $procmux$3611_Y, Q = \tx_err_q).
Adding EN signal on $procdff$5447 ($adff) from module usbf_sie_ep (D = $procmux$3619_Y, Q = \tx_len_q).
Adding EN signal on $procdff$5448 ($adff) from module usbf_sie_ep (D = $procmux$3624_Y, Q = \tx_zlp_q).
Adding EN signal on $procdff$5449 ($adff) from module usbf_sie_ep (D = $procmux$3632_Y, Q = \tx_active_q).
Adding EN signal on $procdff$5450 ($adff) from module usbf_sie_ep (D = $procmux$3637_Y, Q = \rx_setup_q).
Adding EN signal on $procdff$5480 ($dff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo (D = \data_i, Q = \ram[7]).
Adding EN signal on $procdff$5474 ($dff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo (D = \data_i, Q = \ram[5]).
Setting constant 1-bit at position 0 on $procdff$5481 ($adff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
Setting constant 1-bit at position 1 on $procdff$5481 ($adff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
Setting constant 1-bit at position 2 on $procdff$5481 ($adff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
Setting constant 1-bit at position 0 on $procdff$5482 ($adff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
Setting constant 1-bit at position 1 on $procdff$5482 ($adff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
Setting constant 1-bit at position 2 on $procdff$5482 ($adff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
Setting constant 1-bit at position 3 on $procdff$5482 ($adff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
Setting constant 1-bit at position 4 on $procdff$5482 ($adff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
Setting constant 1-bit at position 5 on $procdff$5482 ($adff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
Setting constant 1-bit at position 6 on $procdff$5482 ($adff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
Setting constant 1-bit at position 7 on $procdff$5482 ($adff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
Adding EN signal on $procdff$5477 ($dff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo (D = \data_i, Q = \ram[6]).
Adding EN signal on $procdff$5471 ($dff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo (D = \data_i, Q = \ram[4]).
Adding EN signal on $procdff$5454 ($adff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo (D = $procmux$3754_Y, Q = \rd_ptr).
Adding EN signal on $procdff$5455 ($adff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo (D = $procmux$3750_Y, Q = \wr_ptr).
Adding EN signal on $procdff$5456 ($adff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo (D = $procmux$3745_Y, Q = \count).
Adding EN signal on $procdff$5459 ($dff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo (D = \data_i, Q = \ram[0]).
Adding EN signal on $procdff$5462 ($dff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo (D = \data_i, Q = \ram[1]).
Adding EN signal on $procdff$5465 ($dff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo (D = \data_i, Q = \ram[2]).
Adding EN signal on $procdff$5468 ($dff) from module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo (D = \data_i, Q = \ram[3]).
Adding EN signal on $procdff$5519 ($adff) from module usbf_device (D = \cfg_wdata_i [10:0], Q = \usb_ep1_tx_ctrl_tx_len_q).
Adding EN signal on $procdff$5483 ($adff) from module usbf_device (D = $procmux$3759_Y, Q = \bvalid_q).
Adding EN signal on $procdff$5484 ($adff) from module usbf_device (D = { 11'00000000000 $procmux$3965_Y $procmux$3790_Y $procmux$3923_Y $procmux$3930_Y $procmux$3958_Y 2'00 $procmux$3988_Y $procmux$4024_Y $procmux$4028_Y $procmux$3869_Y $procmux$3991_Y $procmux$4039_Y $procmux$3851_Y $procmux$3834_Y $procmux$3813_Y $procmux$3936_Y $procmux$3796_Y $procmux$3901_Y }, Q = \rd_data_q).
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$6038 ($adffe) from module usbf_device.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$6038 ($adffe) from module usbf_device.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$6038 ($adffe) from module usbf_device.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$6038 ($adffe) from module usbf_device.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$6038 ($adffe) from module usbf_device.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$6038 ($adffe) from module usbf_device.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$6038 ($adffe) from module usbf_device.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$6038 ($adffe) from module usbf_device.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$6038 ($adffe) from module usbf_device.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$6038 ($adffe) from module usbf_device.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$6038 ($adffe) from module usbf_device.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$6038 ($adffe) from module usbf_device.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$6038 ($adffe) from module usbf_device.
Adding EN signal on $procdff$5485 ($adff) from module usbf_device (D = $procmux$3766_Y, Q = \rvalid_q).
Adding EN signal on $procdff$5523 ($adff) from module usbf_device (D = \cfg_wdata_i [0], Q = \usb_ep1_cfg_iso_q).
Adding EN signal on $procdff$5524 ($adff) from module usbf_device (D = $procmux$4166_Y, Q = \usb_ep1_cfg_stall_ep_q).
Adding EN signal on $procdff$5525 ($adff) from module usbf_device (D = \cfg_wdata_i [2], Q = \usb_ep1_cfg_int_tx_q).
Adding EN signal on $procdff$5526 ($adff) from module usbf_device (D = \cfg_wdata_i [3], Q = \usb_ep1_cfg_int_rx_q).
Adding EN signal on $procdff$5491 ($adff) from module usbf_device (D = \cfg_wdata_i [10:0], Q = \usb_ep3_tx_ctrl_tx_len_q).
Adding EN signal on $procdff$5495 ($adff) from module usbf_device (D = \cfg_wdata_i [0], Q = \usb_ep3_cfg_iso_q).
Adding EN signal on $procdff$5496 ($adff) from module usbf_device (D = $procmux$4086_Y, Q = \usb_ep3_cfg_stall_ep_q).
Adding EN signal on $procdff$5497 ($adff) from module usbf_device (D = \cfg_wdata_i [2], Q = \usb_ep3_cfg_int_tx_q).
Adding EN signal on $procdff$5498 ($adff) from module usbf_device (D = \cfg_wdata_i [3], Q = \usb_ep3_cfg_int_rx_q).
Adding EN signal on $procdff$5533 ($adff) from module usbf_device (D = \cfg_wdata_i [10:0], Q = \usb_ep0_tx_ctrl_tx_len_q).
Adding EN signal on $procdff$5537 ($adff) from module usbf_device (D = \cfg_wdata_i [0], Q = \usb_ep0_cfg_iso_q).
Adding EN signal on $procdff$5538 ($adff) from module usbf_device (D = $procmux$4206_Y, Q = \usb_ep0_cfg_stall_ep_q).
Adding EN signal on $procdff$5539 ($adff) from module usbf_device (D = \cfg_wdata_i [2], Q = \usb_ep0_cfg_int_tx_q).
Adding EN signal on $procdff$5540 ($adff) from module usbf_device (D = \cfg_wdata_i [3], Q = \usb_ep0_cfg_int_rx_q).
Adding EN signal on $procdff$5505 ($adff) from module usbf_device (D = \cfg_wdata_i [10:0], Q = \usb_ep2_tx_ctrl_tx_len_q).
Adding EN signal on $procdff$5542 ($adff) from module usbf_device (D = \cfg_wdata_i [6:0], Q = \usb_func_addr_dev_addr_q).
Adding EN signal on $procdff$5545 ($adff) from module usbf_device (D = \cfg_wdata_i [0], Q = \usb_func_ctrl_int_en_sof_q).
Adding EN signal on $procdff$5509 ($adff) from module usbf_device (D = \cfg_wdata_i [0], Q = \usb_ep2_cfg_iso_q).
Adding EN signal on $procdff$5510 ($adff) from module usbf_device (D = $procmux$4126_Y, Q = \usb_ep2_cfg_stall_ep_q).
Adding EN signal on $procdff$5546 ($adff) from module usbf_device (D = \cfg_wdata_i [2:1], Q = \usb_func_ctrl_phy_opmode_q).
Adding EN signal on $procdff$5511 ($adff) from module usbf_device (D = \cfg_wdata_i [2], Q = \usb_ep2_cfg_int_tx_q).
Adding EN signal on $procdff$5547 ($adff) from module usbf_device (D = \cfg_wdata_i [4:3], Q = \usb_func_ctrl_phy_xcvrselect_q).
Adding EN signal on $procdff$5548 ($adff) from module usbf_device (D = \cfg_wdata_i [5], Q = \usb_func_ctrl_phy_termselect_q).
Adding EN signal on $procdff$5512 ($adff) from module usbf_device (D = \cfg_wdata_i [3], Q = \usb_ep2_cfg_int_rx_q).
Adding EN signal on $procdff$5549 ($adff) from module usbf_device (D = \cfg_wdata_i [6], Q = \usb_func_ctrl_phy_dppulldown_q).
Adding EN signal on $procdff$5550 ($adff) from module usbf_device (D = \cfg_wdata_i [7], Q = \usb_func_ctrl_phy_dmpulldown_q).
Adding EN signal on $procdff$5551 ($adff) from module usbf_device (D = \cfg_wdata_i [8], Q = \usb_func_ctrl_hs_chirp_en_q).
Adding EN signal on $procdff$5570 ($adff) from module usbf_device_core (D = $procmux$5220_Y [13:0], Q = \se0_cnt_q [13:0]).
Adding EN signal on $procdff$5567 ($adff) from module usbf_device_core (D = $procmux$4822_Y, Q = \tx_valid_q).
Adding EN signal on $procdff$5563 ($adff) from module usbf_device_core (D = $procmux$4428_Y, Q = \addr_update_pending_q).
Adding EN signal on $procdff$5555 ($adff) from module usbf_device_core (D = $procmux$4267_Y, Q = \rst_event_q).
Adding EN signal on $procdff$5561 ($adff) from module usbf_device_core (D = $procmux$4418_Y, Q = \ep0_dir_in_q).
Adding EN signal on $procdff$5556 ($adff) from module usbf_device_core (D = $procmux$4272_Y, Q = \ep3_data_bit_q).
Adding EN signal on $procdff$5568 ($adff) from module usbf_device_core (D = $procmux$4827_Y, Q = \state_q).
Adding EN signal on $procdff$5569 ($adff) from module usbf_device_core (D = $procmux$5188_Y, Q = \rx_space_q).
Adding EN signal on $procdff$5557 ($adff) from module usbf_device_core (D = $procmux$4277_Y, Q = \ep2_data_bit_q).
Adding EN signal on $procdff$5558 ($adff) from module usbf_device_core (D = $procmux$4282_Y, Q = \ep1_data_bit_q).
Adding EN signal on $procdff$5559 ($adff) from module usbf_device_core (D = $procmux$4287_Y, Q = \ep0_data_bit_q).
Adding EN signal on $procdff$5566 ($adff) from module usbf_device_core (D = $procmux$4818_Y, Q = \tx_pid_q).
Adding EN signal on $procdff$5562 ($adff) from module usbf_device_core (D = $procmux$4423_Y, Q = \current_addr_q).
Adding EN signal on $procdff$5560 ($adff) from module usbf_device_core (D = $procmux$4410_Y, Q = \ep0_dir_out_q).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo..
Finding unused cells or wires in module \usbf_sie_tx..
Finding unused cells or wires in module \usbf_sie_rx..
Finding unused cells or wires in module \usbf_sie_ep..
Finding unused cells or wires in module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo..
Finding unused cells or wires in module \usbf_device..
Finding unused cells or wires in module \usbf_device_core..
Finding unused cells or wires in module \usbf_crc16..
Removed 300 unused cells and 1985 unused wires.
<suppressed ~330 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
<suppressed ~3 debug messages>
Optimizing module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
<suppressed ~3 debug messages>
Optimizing module usbf_crc16.
Optimizing module usbf_device.
<suppressed ~6 debug messages>
Optimizing module usbf_device_core.
<suppressed ~9 debug messages>
Optimizing module usbf_sie_ep.
<suppressed ~8 debug messages>
Optimizing module usbf_sie_rx.
<suppressed ~3 debug messages>
Optimizing module usbf_sie_tx.
<suppressed ~1 debug messages>

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \usbf_crc16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \usbf_device..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \usbf_device_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \usbf_sie_ep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \usbf_sie_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \usbf_sie_tx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~113 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
  Optimizing cells in module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
  Optimizing cells in module \usbf_crc16.
  Optimizing cells in module \usbf_device.
  Optimizing cells in module \usbf_device_core.
  Optimizing cells in module \usbf_sie_ep.
  Optimizing cells in module \usbf_sie_rx.
    New ctrl vector for $pmux cell $procmux$3588: { $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4239$546_Y $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4259$549_Y $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4261$551_Y $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4307$565_Y $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4322$571_Y $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4297$562_Y $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/usb_device_core.v:4331$574_Y $auto$opt_reduce.cc:134:opt_mux$6130 }
  Optimizing cells in module \usbf_sie_rx.
  Optimizing cells in module \usbf_sie_tx.
Performed a total of 1 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo'.
<suppressed ~24 debug messages>
Finding identical cells in module `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo'.
<suppressed ~192 debug messages>
Finding identical cells in module `\usbf_crc16'.
Finding identical cells in module `\usbf_device'.
Finding identical cells in module `\usbf_device_core'.
Finding identical cells in module `\usbf_sie_ep'.
Finding identical cells in module `\usbf_sie_rx'.
<suppressed ~3 debug messages>
Finding identical cells in module `\usbf_sie_tx'.
<suppressed ~9 debug messages>
Removed a total of 76 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo..
Finding unused cells or wires in module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo..
Finding unused cells or wires in module \usbf_crc16..
Finding unused cells or wires in module \usbf_device..
Finding unused cells or wires in module \usbf_device_core..
Finding unused cells or wires in module \usbf_sie_ep..
Finding unused cells or wires in module \usbf_sie_rx..
Finding unused cells or wires in module \usbf_sie_tx..
Removed 0 unused cells and 76 unused wires.
<suppressed ~4 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
Optimizing module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Optimizing module usbf_crc16.
Optimizing module usbf_device.
Optimizing module usbf_device_core.
Optimizing module usbf_sie_ep.
Optimizing module usbf_sie_rx.
Optimizing module usbf_sie_tx.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \usbf_crc16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \usbf_device..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \usbf_device_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \usbf_sie_ep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \usbf_sie_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \usbf_sie_tx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~116 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
  Optimizing cells in module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
  Optimizing cells in module \usbf_crc16.
  Optimizing cells in module \usbf_device.
  Optimizing cells in module \usbf_device_core.
  Optimizing cells in module \usbf_sie_ep.
  Optimizing cells in module \usbf_sie_rx.
  Optimizing cells in module \usbf_sie_tx.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo'.
Finding identical cells in module `$paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo'.
Finding identical cells in module `\usbf_crc16'.
Finding identical cells in module `\usbf_device'.
Finding identical cells in module `\usbf_device_core'.
Finding identical cells in module `\usbf_sie_ep'.
Finding identical cells in module `\usbf_sie_rx'.
Finding identical cells in module `\usbf_sie_tx'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo..
Finding unused cells or wires in module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo..
Finding unused cells or wires in module \usbf_crc16..
Finding unused cells or wires in module \usbf_device..
Finding unused cells or wires in module \usbf_device_core..
Finding unused cells or wires in module \usbf_sie_ep..
Finding unused cells or wires in module \usbf_sie_rx..
Finding unused cells or wires in module \usbf_sie_tx..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo.
Optimizing module $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo.
Optimizing module usbf_crc16.
Optimizing module usbf_device.
Optimizing module usbf_device_core.
Optimizing module usbf_sie_ep.
Optimizing module usbf_sie_rx.
Optimizing module usbf_sie_tx.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo ===

   Number of wires:                 66
   Number of wire bits:            282
   Number of public wires:          20
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 60
     $add                            3
     $adffe                          3
     $and                            4
     $dffe                           8
     $eq                            15
     $logic_not                      3
     $mux                            6
     $not                            5
     $pmux                           1
     $reduce_and                     8
     $reduce_bool                    3
     $sub                            1

=== $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo ===

   Number of wires:                290
   Number of wire bits:            925
   Number of public wires:          76
   Number of public wire bits:     554
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                284
     $add                            3
     $adffe                          3
     $and                            4
     $dffe                          64
     $eq                           127
     $logic_not                      3
     $mux                            6
     $not                            5
     $pmux                           1
     $reduce_and                    64
     $reduce_bool                    3
     $sub                            1

=== usbf_crc16 ===

   Number of wires:                 46
   Number of wire bits:             83
   Number of public wires:           3
   Number of public wire bits:      40
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 54
     $xor                           54

=== usbf_device ===

   Number of wires:                353
   Number of wire bits:            907
   Number of public wires:         252
   Number of public wire bits:     806
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                192
     $adff                          22
     $adffe                         31
     $and                            7
     $eq                            36
     $logic_and                     20
     $logic_not                      3
     $logic_or                       1
     $mux                           35
     $not                            3
     $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo      2
     $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo      6
     $pmux                          15
     $reduce_bool                    6
     usbf_device_core                1
     usbf_sie_ep                     4

=== usbf_device_core ===

   Number of wires:                280
   Number of wire bits:            599
   Number of public wires:         118
   Number of public wire bits:     245
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                208
     $add                            1
     $adff                           4
     $adffe                         14
     $and                           10
     $eq                            17
     $logic_and                     28
     $logic_not                      8
     $logic_or                       5
     $mux                           78
     $ne                             9
     $not                            3
     $or                             4
     $pmux                          15
     $reduce_and                     1
     $reduce_bool                    9
     usbf_sie_rx                     1
     usbf_sie_tx                     1

=== usbf_sie_ep ===

   Number of wires:                 81
   Number of wire bits:            219
   Number of public wires:          39
   Number of public wire bits:     107
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 55
     $add                            1
     $adffe                          8
     $and                            2
     $eq                             1
     $logic_and                     10
     $logic_not                      3
     $logic_or                       1
     $mux                           20
     $reduce_bool                    8
     $sub                            1

=== usbf_sie_rx ===

   Number of wires:                133
   Number of wire bits:            432
   Number of public wires:          51
   Number of public wire bits:     218
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                120
     $adff                          11
     $adffe                         12
     $and                            1
     $eq                            23
     $logic_and                     12
     $logic_not                      5
     $logic_or                       3
     $mux                           30
     $ne                             8
     $not                            1
     $or                             1
     $pmux                           2
     $reduce_and                     3
     $reduce_bool                    3
     $reduce_or                      4
     usbf_crc16                      1

=== usbf_sie_tx ===

   Number of wires:                 88
   Number of wire bits:            277
   Number of public wires:          28
   Number of public wire bits:     104
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 75
     $adff                           1
     $adffe                          5
     $eq                            11
     $logic_and                      7
     $logic_not                      4
     $logic_or                       1
     $mux                           37
     $ne                             2
     $not                            1
     $pmux                           1
     $reduce_bool                    1
     $reduce_or                      1
     $xor                            2
     usbf_crc16                      1

=== design hierarchy ===

   usbf_device                       1
     $paramod$57efbd79199624f0cda54e572e09dc2a929dce16\usbf_fifo      2
     $paramod$8fdacb7241b36d5237b25e1e938c90a8ae28c595\usbf_fifo      6
     usbf_device_core                1
       usbf_sie_rx                   1
         usbf_crc16                  1
       usbf_sie_tx                   1
         usbf_crc16                  1
     usbf_sie_ep                     4

   Number of wires:               3142
   Number of wire bits:           9371
   Number of public wires:        1107
   Number of public wire bits:    5399
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2730
     $add                           29
     $adff                          38
     $adffe                        118
     $and                           58
     $dffe                         400
     $eq                           883
     $logic_and                    107
     $logic_not                     56
     $logic_or                      14
     $mux                          308
     $ne                            19
     $not                           48
     $or                             5
     $pmux                          41
     $reduce_and                   404
     $reduce_bool                   75
     $reduce_or                      5
     $sub                           12
     $xor                          110

Warnings: 1 unique messages, 3 total
End of script. Logfile hash: 5d5d979171, CPU: user 0.80s system 0.00s, MEM: 26.42 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 29% 5x opt_expr (0 sec), 14% 2x read_verilog (0 sec), ...
