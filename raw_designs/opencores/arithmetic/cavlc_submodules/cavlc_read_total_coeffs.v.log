
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v' to AST representation.
Generating RTLIL representation for module `\cavlc_read_total_coeffs'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:128.1-419.8 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:424.1-723.8 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:728.1-1027.8 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1032.1-1043.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1048.1-1122.8 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: cavlc_read_total_coeffs
Automatically selected cavlc_read_total_coeffs as design top module.

2.2. Analyzing design hierarchy..
Top module:  \cavlc_read_total_coeffs

2.3. Analyzing design hierarchy..
Top module:  \cavlc_read_total_coeffs
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1160$124 in module cavlc_read_total_coeffs.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1128$121 in module cavlc_read_total_coeffs.
Marked 7 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1048$114 in module cavlc_read_total_coeffs.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1032$111 in module cavlc_read_total_coeffs.
Marked 15 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:728$103 in module cavlc_read_total_coeffs.
Marked 50 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:424$53 in module cavlc_read_total_coeffs.
Marked 48 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:128$5 in module cavlc_read_total_coeffs.
Marked 5 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:102$1 in module cavlc_read_total_coeffs.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 17 redundant assignments.
Promoted 1 assignment to connection.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_n in `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1160$124'.
Found async reset \rst_n in `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:102$1'.

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1160$124'.
     1/2: $0\TrailingOnes[1:0]
     2/2: $0\TotalCoeff[4:0]
Creating decoders for process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1128$121'.
     1/3: $0\len_comb[4:0]
     2/3: $0\TotalCoeff_comb[4:0]
     3/3: $0\TrailingOnes_comb[1:0]
Creating decoders for process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1048$114'.
     1/3: $0\len_5[4:0]
     2/3: $0\TotalCoeff_5[4:0]
     3/3: $0\TrailingOnes_5[1:0]
Creating decoders for process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1032$111'.
     1/2: $0\TotalCoeff_4[4:0]
     2/2: $0\TrailingOnes_4[1:0]
Creating decoders for process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:728$103'.
     1/3: $0\TotalCoeff_3[4:0]
     2/3: $0\TrailingOnes_3[1:0]
     3/3: $0\len_3[4:0]
Creating decoders for process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:424$53'.
     1/3: $0\TotalCoeff_2[4:0]
     2/3: $0\TrailingOnes_2[1:0]
     3/3: $0\len_2[4:0]
Creating decoders for process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:128$5'.
     1/3: $0\len_1[4:0]
     2/3: $0\TotalCoeff_1[4:0]
     3/3: $0\TrailingOnes_1[1:0]
Creating decoders for process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:102$1'.
     1/5: $0\rbsp_5[7:0]
     2/5: $0\rbsp_4[5:0]
     3/5: $0\rbsp_3[9:0]
     4/5: $0\rbsp_2[13:0]
     5/5: $0\rbsp_1[15:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\cavlc_read_total_coeffs.\TotalCoeff_comb' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1128$121'.
No latch inferred for signal `\cavlc_read_total_coeffs.\TrailingOnes_comb' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1128$121'.
No latch inferred for signal `\cavlc_read_total_coeffs.\len_comb' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1128$121'.
No latch inferred for signal `\cavlc_read_total_coeffs.\TotalCoeff_5' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1048$114'.
No latch inferred for signal `\cavlc_read_total_coeffs.\TrailingOnes_5' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1048$114'.
No latch inferred for signal `\cavlc_read_total_coeffs.\len_5' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1048$114'.
No latch inferred for signal `\cavlc_read_total_coeffs.\TotalCoeff_4' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1032$111'.
No latch inferred for signal `\cavlc_read_total_coeffs.\TrailingOnes_4' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1032$111'.
No latch inferred for signal `\cavlc_read_total_coeffs.\len_4' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1032$111'.
No latch inferred for signal `\cavlc_read_total_coeffs.\TotalCoeff_3' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:728$103'.
No latch inferred for signal `\cavlc_read_total_coeffs.\TrailingOnes_3' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:728$103'.
No latch inferred for signal `\cavlc_read_total_coeffs.\len_3' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:728$103'.
No latch inferred for signal `\cavlc_read_total_coeffs.\TotalCoeff_2' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:424$53'.
No latch inferred for signal `\cavlc_read_total_coeffs.\TrailingOnes_2' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:424$53'.
No latch inferred for signal `\cavlc_read_total_coeffs.\len_2' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:424$53'.
No latch inferred for signal `\cavlc_read_total_coeffs.\TotalCoeff_1' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:128$5'.
No latch inferred for signal `\cavlc_read_total_coeffs.\TrailingOnes_1' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:128$5'.
No latch inferred for signal `\cavlc_read_total_coeffs.\len_1' from process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:128$5'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\cavlc_read_total_coeffs.\TotalCoeff' using process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1160$124'.
  created $adff cell `$procdff$1291' with positive edge clock and negative level reset.
Creating register for signal `\cavlc_read_total_coeffs.\TrailingOnes' using process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1160$124'.
  created $adff cell `$procdff$1292' with positive edge clock and negative level reset.
Creating register for signal `\cavlc_read_total_coeffs.\rbsp_1' using process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:102$1'.
  created $adff cell `$procdff$1293' with positive edge clock and negative level reset.
Creating register for signal `\cavlc_read_total_coeffs.\rbsp_2' using process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:102$1'.
  created $adff cell `$procdff$1294' with positive edge clock and negative level reset.
Creating register for signal `\cavlc_read_total_coeffs.\rbsp_3' using process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:102$1'.
  created $adff cell `$procdff$1295' with positive edge clock and negative level reset.
Creating register for signal `\cavlc_read_total_coeffs.\rbsp_4' using process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:102$1'.
  created $adff cell `$procdff$1296' with positive edge clock and negative level reset.
Creating register for signal `\cavlc_read_total_coeffs.\rbsp_5' using process `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:102$1'.
  created $adff cell `$procdff$1297' with positive edge clock and negative level reset.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1160$124'.
Removing empty process `cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1160$124'.
Found and cleaned up 4 empty switches in `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1128$121'.
Removing empty process `cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1128$121'.
Found and cleaned up 7 empty switches in `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1048$114'.
Removing empty process `cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1048$114'.
Found and cleaned up 1 empty switch in `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1032$111'.
Removing empty process `cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:1032$111'.
Found and cleaned up 15 empty switches in `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:728$103'.
Removing empty process `cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:728$103'.
Found and cleaned up 50 empty switches in `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:424$53'.
Removing empty process `cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:424$53'.
Found and cleaned up 48 empty switches in `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:128$5'.
Removing empty process `cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:128$5'.
Found and cleaned up 5 empty switches in `\cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:102$1'.
Removing empty process `cavlc_read_total_coeffs.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/cavlc_submodules/cavlc_read_total_coeffs.v:102$1'.
Cleaned up 131 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc_read_total_coeffs.
<suppressed ~153 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc_read_total_coeffs.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc_read_total_coeffs'.
<suppressed ~174 debug messages>
Removed a total of 58 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc_read_total_coeffs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc_read_total_coeffs.
    New ctrl vector for $pmux cell $procmux$435: { $procmux$443_CMP $procmux$442_CMP $procmux$441_CMP $auto$opt_reduce.cc:134:opt_mux$1299 }
    New ctrl vector for $pmux cell $procmux$424: { $auto$opt_reduce.cc:134:opt_mux$1303 $auto$opt_reduce.cc:134:opt_mux$1301 $procmux$425_CMP }
    New ctrl vector for $pmux cell $procmux$413: { $auto$opt_reduce.cc:134:opt_mux$1309 $auto$opt_reduce.cc:134:opt_mux$1307 $auto$opt_reduce.cc:134:opt_mux$1305 $procmux$414_CMP }
    New ctrl vector for $pmux cell $procmux$402: { $auto$opt_reduce.cc:134:opt_mux$1313 $procmux$406_CMP $auto$opt_reduce.cc:134:opt_mux$1311 $procmux$403_CMP }
    New ctrl vector for $pmux cell $procmux$391: { $auto$opt_reduce.cc:134:opt_mux$1321 $auto$opt_reduce.cc:134:opt_mux$1319 $auto$opt_reduce.cc:134:opt_mux$1317 $auto$opt_reduce.cc:134:opt_mux$1315 }
    New ctrl vector for $pmux cell $procmux$380: { $auto$opt_reduce.cc:134:opt_mux$1327 $auto$opt_reduce.cc:134:opt_mux$1325 $auto$opt_reduce.cc:134:opt_mux$1323 $procmux$381_CMP }
    New ctrl vector for $pmux cell $procmux$325: { $procmux$432_CMP $auto$opt_reduce.cc:134:opt_mux$1333 $auto$opt_reduce.cc:134:opt_mux$1331 $auto$opt_reduce.cc:134:opt_mux$1329 $procmux$425_CMP }
    New ctrl vector for $pmux cell $procmux$314: { $procmux$421_CMP $procmux$420_CMP $procmux$419_CMP $auto$opt_reduce.cc:134:opt_mux$1337 $auto$opt_reduce.cc:134:opt_mux$1335 $procmux$414_CMP }
    New ctrl vector for $pmux cell $procmux$303: { $procmux$410_CMP $procmux$409_CMP $procmux$408_CMP $procmux$407_CMP $auto$opt_reduce.cc:134:opt_mux$1339 $procmux$404_CMP $procmux$403_CMP }
    New ctrl vector for $pmux cell $procmux$292: { $procmux$399_CMP $auto$opt_reduce.cc:134:opt_mux$1345 $auto$opt_reduce.cc:134:opt_mux$1343 $auto$opt_reduce.cc:134:opt_mux$1341 $procmux$392_CMP }
    New ctrl vector for $pmux cell $procmux$281: { $procmux$388_CMP $auto$opt_reduce.cc:134:opt_mux$1351 $auto$opt_reduce.cc:134:opt_mux$1349 $auto$opt_reduce.cc:134:opt_mux$1347 }
    New ctrl vector for $pmux cell $procmux$254: { $auto$opt_reduce.cc:134:opt_mux$1353 $procmux$354_CMP }
  Optimizing cells in module \cavlc_read_total_coeffs.
Performed a total of 12 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc_read_total_coeffs'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$1297 ($adff) from module cavlc_read_total_coeffs (D = \rbsp [15:8], Q = \rbsp_5).
Adding EN signal on $procdff$1296 ($adff) from module cavlc_read_total_coeffs (D = \rbsp [15:10], Q = \rbsp_4).
Adding EN signal on $procdff$1295 ($adff) from module cavlc_read_total_coeffs (D = \rbsp [15:6], Q = \rbsp_3).
Adding EN signal on $procdff$1294 ($adff) from module cavlc_read_total_coeffs (D = \rbsp [15:2], Q = \rbsp_2).
Adding EN signal on $procdff$1293 ($adff) from module cavlc_read_total_coeffs (D = \rbsp, Q = \rbsp_1).
Adding EN signal on $procdff$1292 ($adff) from module cavlc_read_total_coeffs (D = $procmux$165_Y, Q = \TrailingOnes).
Adding EN signal on $procdff$1291 ($adff) from module cavlc_read_total_coeffs (D = $procmux$153_Y, Q = \TotalCoeff).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc_read_total_coeffs..
Removed 22 unused cells and 502 unused wires.
<suppressed ~23 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc_read_total_coeffs.
<suppressed ~1 debug messages>

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc_read_total_coeffs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc_read_total_coeffs.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc_read_total_coeffs'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc_read_total_coeffs..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc_read_total_coeffs.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc_read_total_coeffs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc_read_total_coeffs.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc_read_total_coeffs'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc_read_total_coeffs..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc_read_total_coeffs.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== cavlc_read_total_coeffs ===

   Number of wires:                557
   Number of wire bits:           1592
   Number of public wires:          32
   Number of public wire bits:     160
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                549
     $add                            5
     $adffe                         61
     $eq                           395
     $logic_and                      2
     $logic_not                     34
     $logic_or                       1
     $mux                         1257
     $not                            4
     $or                             1
     $pmux                          49
     $reduce_and                    19
     $reduce_or                     68

End of script. Logfile hash: 72aea65c76, CPU: user 0.55s system 0.00s, MEM: 17.59 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 31% 5x opt_expr (0 sec), 14% 4x opt_merge (0 sec), ...
