
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v' to AST representation.
Warning: Encountered `translate_off' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using a portable and standards-compliant construct such as `ifdef is recommended!
Generating RTLIL representation for module `\mtx_trps_8x8_dpsram'.
/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:115: Warning: Identifier `\rd_DATA' is implicitly declared.
/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:115: Warning: Range select [7:0] out of bounds on signal `\rd_DATA': Setting all 8 result bits to undef.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: mtx_trps_8x8_dpsram 
Automatically selected mtx_trps_8x8_dpsram as design top module.

2.2. Analyzing design hierarchy..
Top module:  \mtx_trps_8x8_dpsram

2.3. Analyzing design hierarchy..
Top module:  \mtx_trps_8x8_dpsram
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:111$21 in module mtx_trps_8x8_dpsram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:103$17 in module mtx_trps_8x8_dpsram.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:97$15 in module mtx_trps_8x8_dpsram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:87$6 in module mtx_trps_8x8_dpsram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:76$1 in module mtx_trps_8x8_dpsram.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 2 redundant assignments.
Promoted 0 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rstn in `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:111$21'.
Found async reset \rstn in `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:103$17'.
Found async reset \rstn in `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:97$15'.
Found async reset \rstn in `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:87$6'.
Found async reset \rstn in `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:76$1'.

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:111$21'.
     1/1: $0\mem_valid[0:0]
Creating decoders for process `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:103$17'.
     1/1: $0\cnt128d_rd[6:0]
Creating decoders for process `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:97$15'.
     1/1: $0\cnt128d_rd_valid[0:0]
Creating decoders for process `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:87$6'.
     1/1: $0\indicator_1d[0:0]
Creating decoders for process `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:76$1'.
     1/1: $0\cnt128d_wr[6:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\mtx_trps_8x8_dpsram.\mem_valid' using process `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:111$21'.
  created $adff cell `$procdff$32' with positive edge clock and negative level reset.
Creating register for signal `\mtx_trps_8x8_dpsram.\cnt128d_rd' using process `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:103$17'.
  created $adff cell `$procdff$33' with positive edge clock and negative level reset.
Creating register for signal `\mtx_trps_8x8_dpsram.\cnt128d_rd_valid' using process `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:97$15'.
  created $adff cell `$procdff$34' with positive edge clock and negative level reset.
Creating register for signal `\mtx_trps_8x8_dpsram.\indicator_1d' using process `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:87$6'.
  created $adff cell `$procdff$35' with positive edge clock and negative level reset.
Creating register for signal `\mtx_trps_8x8_dpsram.\cnt128d_wr' using process `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:76$1'.
  created $adff cell `$procdff$36' with positive edge clock and negative level reset.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:111$21'.
Found and cleaned up 1 empty switch in `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:103$17'.
Removing empty process `mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:103$17'.
Found and cleaned up 2 empty switches in `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:97$15'.
Removing empty process `mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:97$15'.
Removing empty process `mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:87$6'.
Found and cleaned up 1 empty switch in `\mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:76$1'.
Removing empty process `mtx_trps_8x8_dpsram.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:76$1'.
Cleaned up 4 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module mtx_trps_8x8_dpsram.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mtx_trps_8x8_dpsram.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mtx_trps_8x8_dpsram'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mtx_trps_8x8_dpsram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mtx_trps_8x8_dpsram.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mtx_trps_8x8_dpsram'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$33 ($adff) from module mtx_trps_8x8_dpsram (D = $add$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:105$19_Y [6:0], Q = \cnt128d_rd).
Adding EN signal on $procdff$34 ($adff) from module mtx_trps_8x8_dpsram (D = $procmux$28_Y, Q = \cnt128d_rd_valid).
Adding EN signal on $procdff$36 ($adff) from module mtx_trps_8x8_dpsram (D = $add$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/two_dimensional_fast_hartley_transform_submodules/mtx_trps_8x8_dpsram.v:78$3_Y [6:0], Q = \cnt128d_wr).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mtx_trps_8x8_dpsram..
Removed 5 unused cells and 25 unused wires.
<suppressed ~8 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mtx_trps_8x8_dpsram.
<suppressed ~1 debug messages>

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mtx_trps_8x8_dpsram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mtx_trps_8x8_dpsram.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mtx_trps_8x8_dpsram'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mtx_trps_8x8_dpsram..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mtx_trps_8x8_dpsram.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mtx_trps_8x8_dpsram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mtx_trps_8x8_dpsram.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mtx_trps_8x8_dpsram'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mtx_trps_8x8_dpsram..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module mtx_trps_8x8_dpsram.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== mtx_trps_8x8_dpsram ===

   Number of wires:                 26
   Number of wire bits:            141
   Number of public wires:          18
   Number of public wire bits:      71
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 17
     $add                           64
     $adff                           2
     $adffe                         15
     $and                            2
     $eq                             6
     $mux                            3
     $not                            2
     $or                             1
     $reduce_bool                    2

Warnings: 3 unique messages, 3 total
End of script. Logfile hash: 9d65a0bc28, CPU: user 0.02s system 0.00s, MEM: 11.19 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 33% 3x opt_clean (0 sec), 16% 5x opt_expr (0 sec), ...
