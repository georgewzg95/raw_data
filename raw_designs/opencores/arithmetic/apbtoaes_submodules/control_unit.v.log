
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v' to AST representation.
Generating RTLIL representation for module `\control_unit'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: control_unit        
Automatically selected control_unit as design top module.

2.2. Analyzing design hierarchy..
Top module:  \control_unit

2.3. Analyzing design hierarchy..
Top module:  \control_unit
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:512$78 in module control_unit.
Marked 18 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:318$38 in module control_unit.
Removed 2 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:196$20 in module control_unit.
Marked 6 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:196$20 in module control_unit.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:169$1 in module control_unit.
Removed a total of 2 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 14 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_n in `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:512$78'.
Found async reset \rst_n in `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:169$1'.

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:512$78'.
     1/1: $0\rd_count[3:0]
Creating decoders for process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:318$38'.
     1/34: $2\key_derivation_en[0:0]
     2/34: $2\iv_cnt_sel[0:0]
     3/34: $2\iv_cnt_en[0:0]
     4/34: $3\col_en[3:0]
     5/34: $7\col_sel[1:0]
     6/34: $6\col_sel[1:0]
     7/34: $8\key_en[3:0]
     8/34: $5\col_sel[1:0]
     9/34: $7\key_en[3:0]
    10/34: $4\col_sel[1:0]
    11/34: $6\key_en[3:0]
    12/34: $2\col_en[3:0]
    13/34: $3\col_sel[1:0]
    14/34: $2\col_sel[1:0]
    15/34: $5\key_en[3:0]
    16/34: $4\key_en[3:0]
    17/34: $4\key_sel[0:0]
    18/34: $3\key_en[3:0]
    19/34: $3\key_sel[0:0]
    20/34: $2\key_en[3:0]
    21/34: $2\key_sel[0:0]
    22/34: $1\col_en[3:0]
    23/34: $1\col_sel[1:0]
    24/34: $1\key_out_sel[1:0]
    25/34: $1\bypass_key_en[0:0]
    26/34: $1\bypass_rk[0:0]
    27/34: $1\rk_sel[1:0]
    28/34: $1\sbox_sel[2:0]
    29/34: $1\rd_count_en[0:0]
    30/34: $1\key_derivation_en[0:0]
    31/34: $1\iv_cnt_sel[0:0]
    32/34: $1\iv_cnt_en[0:0]
    33/34: $1\key_sel[0:0]
    34/34: $1\key_en[3:0]
Creating decoders for process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:196$20'.
     1/6: $6\next_state[3:0]
     2/6: $5\next_state[3:0]
     3/6: $4\next_state[3:0]
     4/6: $3\next_state[3:0]
     5/6: $2\next_state[3:0]
     6/6: $1\next_state[3:0]
Creating decoders for process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:169$1'.
     1/1: $0\state[3:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\control_unit.\sbox_sel' from process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:318$38'.
No latch inferred for signal `\control_unit.\rk_sel' from process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:318$38'.
No latch inferred for signal `\control_unit.\key_out_sel' from process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:318$38'.
No latch inferred for signal `\control_unit.\col_sel' from process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:318$38'.
No latch inferred for signal `\control_unit.\key_en' from process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:318$38'.
No latch inferred for signal `\control_unit.\col_en' from process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:318$38'.
No latch inferred for signal `\control_unit.\bypass_rk' from process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:318$38'.
No latch inferred for signal `\control_unit.\bypass_key_en' from process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:318$38'.
No latch inferred for signal `\control_unit.\key_sel' from process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:318$38'.
No latch inferred for signal `\control_unit.\iv_cnt_en' from process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:318$38'.
No latch inferred for signal `\control_unit.\iv_cnt_sel' from process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:318$38'.
No latch inferred for signal `\control_unit.\key_derivation_en' from process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:318$38'.
No latch inferred for signal `\control_unit.\rd_count_en' from process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:318$38'.
No latch inferred for signal `\control_unit.\next_state' from process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:196$20'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\control_unit.\rd_count' using process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:512$78'.
  created $adff cell `$procdff$625' with positive edge clock and negative level reset.
Creating register for signal `\control_unit.\state' using process `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:169$1'.
  created $adff cell `$procdff$626' with positive edge clock and negative level reset.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 2 empty switches in `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:512$78'.
Removing empty process `control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:512$78'.
Found and cleaned up 18 empty switches in `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:318$38'.
Removing empty process `control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:318$38'.
Found and cleaned up 6 empty switches in `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:196$20'.
Removing empty process `control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:196$20'.
Found and cleaned up 1 empty switch in `\control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:169$1'.
Removing empty process `control_unit.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:169$1'.
Cleaned up 27 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module control_unit.
<suppressed ~18 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module control_unit.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\control_unit'.
<suppressed ~396 debug messages>
Removed a total of 132 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \control_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$325.
    dead port 2/2 on $mux $procmux$308.
    dead port 2/2 on $mux $procmux$292.
    dead port 2/2 on $mux $procmux$276.
    dead port 2/2 on $mux $procmux$262.
    dead port 2/2 on $mux $procmux$248.
    dead port 1/2 on $mux $procmux$246.
    dead port 2/2 on $mux $procmux$231.
    dead port 2/2 on $mux $procmux$217.
    dead port 2/2 on $mux $procmux$204.
    dead port 2/2 on $mux $procmux$191.
    dead port 2/2 on $mux $procmux$179.
    dead port 2/2 on $mux $procmux$167.
    dead port 2/2 on $mux $procmux$156.
    dead port 2/2 on $mux $procmux$145.
    dead port 1/2 on $mux $procmux$143.
    dead port 2/2 on $mux $procmux$131.
    dead port 2/2 on $mux $procmux$120.
    dead port 2/2 on $mux $procmux$109.
    dead port 2/2 on $mux $procmux$98.
    dead port 2/2 on $mux $procmux$603.
    dead port 2/2 on $mux $procmux$533.
    dead port 2/2 on $mux $procmux$583.
    dead port 2/2 on $mux $procmux$581.
    dead port 2/2 on $mux $procmux$342.
    dead port 2/2 on $mux $procmux$360.
    dead port 2/2 on $mux $procmux$558.
    dead port 2/2 on $mux $procmux$543.
    dead port 2/2 on $mux $procmux$378.
Removed 29 multiplexer ports.
<suppressed ~17 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \control_unit.
    New ctrl vector for $pmux cell $procmux$465: { $auto$opt_reduce.cc:134:opt_mux$634 $auto$opt_reduce.cc:134:opt_mux$632 $auto$opt_reduce.cc:134:opt_mux$630 $auto$opt_reduce.cc:134:opt_mux$628 }
    New ctrl vector for $pmux cell $procmux$444: $auto$opt_reduce.cc:134:opt_mux$636
    New ctrl vector for $pmux cell $procmux$425: $auto$opt_reduce.cc:134:opt_mux$638
    New ctrl vector for $pmux cell $procmux$416: { $auto$opt_reduce.cc:134:opt_mux$644 $auto$opt_reduce.cc:134:opt_mux$642 $auto$opt_reduce.cc:134:opt_mux$640 }
    New ctrl vector for $pmux cell $procmux$503: { $procmux$619_CMP $procmux$618_CMP $procmux$617_CMP $auto$opt_reduce.cc:134:opt_mux$646 }
    New ctrl vector for $pmux cell $procmux$401: { $procmux$620_CMP $auto$opt_reduce.cc:134:opt_mux$648 $procmux$617_CMP $procmux$614_CMP $procmux$613_CMP $procmux$612_CMP $procmux$611_CMP }
    New ctrl vector for $pmux cell $procmux$575: { $procmux$579_CMP $procmux$578_CMP $auto$opt_reduce.cc:134:opt_mux$650 }
    New ctrl vector for $pmux cell $procmux$479: $auto$opt_reduce.cc:134:opt_mux$652
    New ctrl vector for $pmux cell $procmux$386: { $procmux$620_CMP $procmux$617_CMP $procmux$614_CMP $auto$opt_reduce.cc:134:opt_mux$656 $auto$opt_reduce.cc:134:opt_mux$654 $procmux$611_CMP }
  Optimizing cells in module \control_unit.
Performed a total of 9 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\control_unit'.
<suppressed ~54 debug messages>
Removed a total of 18 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$625 ($adff) from module control_unit (D = $procmux$92_Y, Q = \rd_count).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \control_unit..
Removed 3 unused cells and 292 unused wires.
<suppressed ~4 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module control_unit.
<suppressed ~1 debug messages>

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \control_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \control_unit.
    New ctrl vector for $pmux cell $procmux$401: { $procmux$394_CMP $auto$opt_reduce.cc:134:opt_mux$648 $procmux$293_CMP $procmux$232_CMP $auto$opt_reduce.cc:134:opt_mux$661 $procmux$110_CMP }
    New ctrl vector for $pmux cell $procmux$455: $auto$opt_reduce.cc:134:opt_mux$663
    New ctrl vector for $pmux cell $procmux$503: { $auto$opt_reduce.cc:134:opt_mux$665 $auto$opt_reduce.cc:134:opt_mux$646 }
    New ctrl vector for $pmux cell $procmux$517: { $procmux$361_CMP $procmux$326_CMP \key_gen $procmux$232_CMP $procmux$205_CMP $procmux$180_CMP $auto$opt_reduce.cc:134:opt_mux$667 $eq$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:181$8_Y $eq$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:181$10_Y $eq$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/control_unit.v:181$12_Y }
  Optimizing cells in module \control_unit.
Performed a total of 4 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\control_unit'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \control_unit..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module control_unit.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \control_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \control_unit.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\control_unit'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \control_unit..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module control_unit.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== control_unit ===

   Number of wires:                122
   Number of wire bits:            250
   Number of public wires:          34
   Number of public wire bits:      60
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                113
     $add                            4
     $adff                           4
     $adffe                          4
     $eq                            78
     $logic_and                      5
     $logic_not                     11
     $logic_or                       8
     $mux                          147
     $or                             1
     $pmux                          24
     $reduce_bool                    2
     $reduce_or                     40

End of script. Logfile hash: 0cab8c1dc3, CPU: user 0.10s system 0.00s, MEM: 12.90 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 29% 5x opt_expr (0 sec), 16% 2x read_verilog (0 sec), ...
