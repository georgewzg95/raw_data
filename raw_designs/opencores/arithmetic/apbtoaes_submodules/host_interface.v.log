
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v' to AST representation.
Generating RTLIL representation for module `\host_interface'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: host_interface      
Automatically selected host_interface as design top module.

2.2. Analyzing design hierarchy..
Top module:  \host_interface

2.3. Analyzing design hierarchy..
Top module:  \host_interface
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:350$104 in module host_interface.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:335$90 in module host_interface.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:314$64 in module host_interface.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:302$62 in module host_interface.
Marked 6 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:260$53 in module host_interface.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:234$45 in module host_interface.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:218$39 in module host_interface.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:174$14 in module host_interface.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:146$8 in module host_interface.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 2 redundant assignments.
Promoted 8 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \PRESETn in `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:335$90'.
Found async reset \PRESETn in `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:314$64'.
Found async reset \PRESETn in `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:302$62'.
Found async reset \PRESETn in `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:218$39'.
Found async reset \PRESETn in `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:174$14'.
Found async reset \PRESETn in `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:146$8'.

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:350$104'.
     1/4: $4\bus_out_mux[31:0]
     2/4: $3\bus_out_mux[31:0]
     3/4: $2\bus_out_mux[31:0]
     4/4: $1\bus_out_mux[31:0]
Creating decoders for process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:335$90'.
     1/1: $0\dma_req[0:0]
Creating decoders for process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:314$64'.
     1/1: $0\cnt[1:0]
Creating decoders for process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:302$62'.
     1/1: $0\first_block[0:0]
Creating decoders for process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:260$53'.
     1/11: $5\cnt_en[0:0]
     2/11: $2\enable_clear[0:0]
     3/11: $4\cnt_en[0:0]
     4/11: $3\cnt_en[0:0]
     5/11: $2\cnt_en[0:0]
     6/11: $1\cnt_en[0:0]
     7/11: $1\first_block_set[0:0]
     8/11: $1\access_permission[0:0]
     9/11: $1\first_block_clear[0:0]
    10/11: $1\enable_clear[0:0]
    11/11: $1\start_core[0:0]
Creating decoders for process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:234$45'.
     1/3: $3\next_state[2:0]
     2/3: $2\next_state[2:0]
     3/3: $1\next_state[2:0]
Creating decoders for process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:218$39'.
     1/1: $0\state[2:0]
Creating decoders for process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:174$14'.
     1/3: $0\ccf[0:0]
     2/3: $0\rd_err[0:0]
     3/3: $0\wr_err[0:0]
Creating decoders for process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:146$8'.
     1/5: $0\aes_cr[10:0] [10:7]
     2/5: $0\aes_cr[10:0] [6:5]
     3/5: $0\aes_cr[10:0] [4:3]
     4/5: $0\aes_cr[10:0] [2:1]
     5/5: $0\aes_cr[10:0] [0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\host_interface.\bus_out_mux' from process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:350$104'.
No latch inferred for signal `\host_interface.\start_core' from process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:260$53'.
No latch inferred for signal `\host_interface.\cnt_en' from process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:260$53'.
No latch inferred for signal `\host_interface.\enable_clear' from process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:260$53'.
No latch inferred for signal `\host_interface.\access_permission' from process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:260$53'.
No latch inferred for signal `\host_interface.\first_block_set' from process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:260$53'.
No latch inferred for signal `\host_interface.\first_block_clear' from process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:260$53'.
No latch inferred for signal `\host_interface.\next_state' from process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:234$45'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\host_interface.\dma_req' using process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:335$90'.
  created $adff cell `$procdff$285' with positive edge clock and negative level reset.
Creating register for signal `\host_interface.\cnt' using process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:314$64'.
  created $adff cell `$procdff$286' with positive edge clock and negative level reset.
Creating register for signal `\host_interface.\first_block' using process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:302$62'.
  created $adff cell `$procdff$287' with positive edge clock and negative level reset.
Creating register for signal `\host_interface.\state' using process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:218$39'.
  created $adff cell `$procdff$288' with positive edge clock and negative level reset.
Creating register for signal `\host_interface.\wr_err' using process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:174$14'.
  created $adff cell `$procdff$289' with positive edge clock and negative level reset.
Creating register for signal `\host_interface.\rd_err' using process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:174$14'.
  created $adff cell `$procdff$290' with positive edge clock and negative level reset.
Creating register for signal `\host_interface.\ccf' using process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:174$14'.
  created $adff cell `$procdff$291' with positive edge clock and negative level reset.
Creating register for signal `\host_interface.\aes_cr' using process `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:146$8'.
  created $adff cell `$procdff$292' with positive edge clock and negative level reset.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 4 empty switches in `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:350$104'.
Removing empty process `host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:350$104'.
Removing empty process `host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:335$90'.
Found and cleaned up 2 empty switches in `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:314$64'.
Removing empty process `host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:314$64'.
Found and cleaned up 2 empty switches in `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:302$62'.
Removing empty process `host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:302$62'.
Found and cleaned up 6 empty switches in `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:260$53'.
Removing empty process `host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:260$53'.
Found and cleaned up 3 empty switches in `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:234$45'.
Removing empty process `host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:234$45'.
Found and cleaned up 1 empty switch in `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:218$39'.
Removing empty process `host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:218$39'.
Found and cleaned up 6 empty switches in `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:174$14'.
Removing empty process `host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:174$14'.
Found and cleaned up 4 empty switches in `\host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:146$8'.
Removing empty process `host_interface.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/apbtoaes_submodules/host_interface.v:146$8'.
Cleaned up 28 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module host_interface.
<suppressed ~14 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module host_interface.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\host_interface'.
<suppressed ~192 debug messages>
Removed a total of 64 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \host_interface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$137.
    dead port 2/2 on $mux $procmux$174.
    dead port 2/2 on $mux $procmux$129.
    dead port 2/2 on $mux $procmux$122.
    dead port 2/2 on $mux $procmux$242.
    dead port 2/2 on $mux $procmux$240.
    dead port 2/2 on $mux $procmux$232.
    dead port 2/2 on $mux $procmux$167.
    dead port 2/2 on $mux $procmux$160.
    dead port 2/2 on $mux $procmux$193.
    dead port 2/2 on $mux $procmux$183.
Removed 11 multiplexer ports.
<suppressed ~19 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \host_interface.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\host_interface'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$286 ($adff) from module host_interface (D = $procmux$149_Y, Q = \cnt).
Adding EN signal on $procdff$287 ($adff) from module host_interface (D = $procmux$154_Y, Q = \first_block).
Adding EN signal on $procdff$288 ($adff) from module host_interface (D = $procmux$252_Y, Q = \state).
Adding EN signal on $procdff$289 ($adff) from module host_interface (D = $procmux$267_Y, Q = \wr_err).
Adding EN signal on $procdff$290 ($adff) from module host_interface (D = $procmux$262_Y, Q = \rd_err).
Adding EN signal on $procdff$292 ($adff) from module host_interface (D = { \PWDATA [12:9] \PWDATA [6:5] $procmux$274_Y \PWDATA [2:1] }, Q = \aes_cr [10:1]).
Adding EN signal on $procdff$292 ($adff) from module host_interface (D = $procmux$283_Y, Q = \aes_cr [0]).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \host_interface..
Removed 5 unused cells and 162 unused wires.
<suppressed ~6 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module host_interface.
<suppressed ~5 debug messages>

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \host_interface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \host_interface.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\host_interface'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \host_interface..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module host_interface.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \host_interface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \host_interface.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\host_interface'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \host_interface..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module host_interface.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== host_interface ===

   Number of wires:                157
   Number of wire bits:            518
   Number of public wires:          61
   Number of public wire bits:     293
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                137
     $add                            2
     $adff                           2
     $adffe                         19
     $and                           32
     $eq                            64
     $logic_and                     20
     $logic_not                      9
     $logic_or                       3
     $mux                          172
     $ne                            15
     $not                            7
     $or                             1
     $pmux                          36
     $reduce_and                     2
     $reduce_bool                   13
     $reduce_or                     10
     $shr                            4
     $xor                            1

End of script. Logfile hash: 1d7737a19b, CPU: user 0.09s system 0.00s, MEM: 12.65 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 23% 5x opt_expr (0 sec), 19% 4x opt_merge (0 sec), ...
