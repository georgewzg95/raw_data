
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v' to AST representation.
Generating RTLIL representation for module `\duursma_lee_algo'.
Generating RTLIL representation for module `\f3_sub1'.
Generating RTLIL representation for module `\f36m_mult'.
Generating RTLIL representation for module `\f32m_add4'.
Generating RTLIL representation for module `\f32m_add'.
Generating RTLIL representation for module `\f32m_add3'.
Generating RTLIL representation for module `\f32m_neg'.
Generating RTLIL representation for module `\f32m_mult'.
Generating RTLIL representation for module `\f32m_mux6'.
Generating RTLIL representation for module `\f36m_cubic'.
Generating RTLIL representation for module `\f32m_sub'.
Generating RTLIL representation for module `\f32m_cubic'.
Generating RTLIL representation for module `\f3m_cubic'.
Generating RTLIL representation for module `\f3m_nine'.
Generating RTLIL representation for module `\f3_add'.
Generating RTLIL representation for module `\f3m_add'.
Generating RTLIL representation for module `\f3m_add3'.
Generating RTLIL representation for module `\f3m_mult'.
Generating RTLIL representation for module `\func7'.
Generating RTLIL representation for module `\func8'.
Generating RTLIL representation for module `\f3_mult'.
Generating RTLIL representation for module `\f3m_mult3'.
Generating RTLIL representation for module `\f3m_mux3'.
Generating RTLIL representation for module `\f3m_mux6'.
Generating RTLIL representation for module `\f3m_neg'.
Generating RTLIL representation for module `\f3m_sub'.
Generating RTLIL representation for module `\f3_sub'.
Generating RTLIL representation for module `\func6'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: func6               
root of   1 design levels: f3_sub              
root of   2 design levels: f3m_sub             
root of   0 design levels: f3m_neg             
root of   0 design levels: f3m_mux6            
root of   0 design levels: f3m_mux3            
root of   3 design levels: f3m_mult3           
root of   0 design levels: f3_mult             
root of   1 design levels: func8               
root of   1 design levels: func7               
root of   2 design levels: f3m_mult            
root of   2 design levels: f3m_add3            
root of   1 design levels: f3m_add             
root of   0 design levels: f3_add              
root of   2 design levels: f3m_nine            
root of   1 design levels: f3m_cubic           
root of   2 design levels: f32m_cubic          
root of   3 design levels: f32m_sub            
root of   4 design levels: f36m_cubic          
root of   1 design levels: f32m_mux6           
root of   4 design levels: f32m_mult           
root of   1 design levels: f32m_neg            
root of   3 design levels: f32m_add3           
root of   2 design levels: f32m_add            
root of   3 design levels: f32m_add4           
root of   5 design levels: f36m_mult           
root of   0 design levels: f3_sub1             
root of   6 design levels: duursma_lee_algo    
Automatically selected duursma_lee_algo as design top module.

2.2. Analyzing design hierarchy..
Top module:  \duursma_lee_algo
Used module:     \f3_sub1
Used module:     \func6
Used module:     \f36m_mult
Used module:         \f32m_add4
Used module:             \f32m_add
Used module:                 \f3m_add
Used module:                     \f3_add
Used module:         \f32m_add3
Used module:         \f32m_neg
Used module:             \f3m_neg
Used module:         \f32m_mult
Used module:             \f3m_mult3
Used module:                 \f3m_mult
Used module:                     \func7
Used module:                     \func8
Used module:                         \f3_mult
Used module:                 \f3m_mux3
Used module:             \f3m_sub
Used module:                 \f3_sub
Used module:         \f32m_mux6
Used module:             \f3m_mux6
Used module:     \f36m_cubic
Used module:         \f32m_sub
Used module:         \f32m_cubic
Used module:             \f3m_cubic
Used module:     \f3m_add3
Used module:     \f3m_nine

2.3. Analyzing design hierarchy..
Top module:  \duursma_lee_algo
Used module:     \f3_sub1
Used module:     \func6
Used module:     \f36m_mult
Used module:         \f32m_add4
Used module:             \f32m_add
Used module:                 \f3m_add
Used module:                     \f3_add
Used module:         \f32m_add3
Used module:         \f32m_neg
Used module:             \f3m_neg
Used module:         \f32m_mult
Used module:             \f3m_mult3
Used module:                 \f3m_mult
Used module:                     \func7
Used module:                     \func8
Used module:                         \f3_mult
Used module:                 \f3m_mux3
Used module:             \f3m_sub
Used module:                 \f3_sub
Used module:         \f32m_mux6
Used module:             \f3m_mux6
Used module:     \f36m_cubic
Used module:         \f32m_sub
Used module:         \f32m_cubic
Used module:             \f3m_cubic
Used module:     \f3m_add3
Used module:     \f3m_nine
Removed 0 unused modules.
Mapping positional arguments of cell f3_sub.m1 (f3_add).
Mapping positional arguments of cell f3m_sub.aa[96].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[95].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[94].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[93].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[92].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[91].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[90].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[89].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[88].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[87].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[86].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[85].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[84].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[83].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[82].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[81].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[80].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[79].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[78].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[77].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[76].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[75].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[74].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[73].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[72].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[71].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[70].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[69].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[68].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[67].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[66].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[65].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[64].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[63].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[62].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[61].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[60].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[59].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[58].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[57].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[56].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[55].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[54].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[53].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[52].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[51].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[50].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[49].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[48].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[47].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[46].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[45].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[44].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[43].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[42].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[41].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[40].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[39].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[38].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[37].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[36].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[35].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[34].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[33].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[32].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[31].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[30].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[29].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[28].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[27].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[26].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[25].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[24].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[23].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[22].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[21].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[20].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[19].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[18].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[17].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[16].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[15].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[14].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[13].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[12].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[11].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[10].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[9].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[8].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[7].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[6].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[5].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[4].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[3].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[2].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[1].aa (f3_sub).
Mapping positional arguments of cell f3m_sub.aa[0].aa (f3_sub).
Mapping positional arguments of cell f3m_mult3.ins12 (func6).
Mapping positional arguments of cell f3m_mult3.ins11 (f3m_mult).
Mapping positional arguments of cell f3m_mult3.ins10 (f3m_mux3).
Mapping positional arguments of cell f3m_mult3.ins9 (f3m_mux3).
Mapping positional arguments of cell func8.a976 (f3_add).
Mapping positional arguments of cell func8.a974 (f3_add).
Mapping positional arguments of cell func8.m972 (f3_mult).
Mapping positional arguments of cell func8.m970 (f3_mult).
Mapping positional arguments of cell func8.m968 (f3_mult).
Mapping positional arguments of cell func8.a966 (f3_add).
Mapping positional arguments of cell func8.a964 (f3_add).
Mapping positional arguments of cell func8.m962 (f3_mult).
Mapping positional arguments of cell func8.m960 (f3_mult).
Mapping positional arguments of cell func8.m958 (f3_mult).
Mapping positional arguments of cell func8.a956 (f3_add).
Mapping positional arguments of cell func8.a954 (f3_add).
Mapping positional arguments of cell func8.m952 (f3_mult).
Mapping positional arguments of cell func8.m950 (f3_mult).
Mapping positional arguments of cell func8.m948 (f3_mult).
Mapping positional arguments of cell func8.a946 (f3_add).
Mapping positional arguments of cell func8.a944 (f3_add).
Mapping positional arguments of cell func8.m942 (f3_mult).
Mapping positional arguments of cell func8.m940 (f3_mult).
Mapping positional arguments of cell func8.m938 (f3_mult).
Mapping positional arguments of cell func8.a936 (f3_add).
Mapping positional arguments of cell func8.a934 (f3_add).
Mapping positional arguments of cell func8.m932 (f3_mult).
Mapping positional arguments of cell func8.m930 (f3_mult).
Mapping positional arguments of cell func8.m928 (f3_mult).
Mapping positional arguments of cell func8.a926 (f3_add).
Mapping positional arguments of cell func8.a924 (f3_add).
Mapping positional arguments of cell func8.m922 (f3_mult).
Mapping positional arguments of cell func8.m920 (f3_mult).
Mapping positional arguments of cell func8.m918 (f3_mult).
Mapping positional arguments of cell func8.a916 (f3_add).
Mapping positional arguments of cell func8.a914 (f3_add).
Mapping positional arguments of cell func8.m912 (f3_mult).
Mapping positional arguments of cell func8.m910 (f3_mult).
Mapping positional arguments of cell func8.m908 (f3_mult).
Mapping positional arguments of cell func8.a906 (f3_add).
Mapping positional arguments of cell func8.a904 (f3_add).
Mapping positional arguments of cell func8.m902 (f3_mult).
Mapping positional arguments of cell func8.m900 (f3_mult).
Mapping positional arguments of cell func8.m898 (f3_mult).
Mapping positional arguments of cell func8.a896 (f3_add).
Mapping positional arguments of cell func8.a894 (f3_add).
Mapping positional arguments of cell func8.m892 (f3_mult).
Mapping positional arguments of cell func8.m890 (f3_mult).
Mapping positional arguments of cell func8.m888 (f3_mult).
Mapping positional arguments of cell func8.a886 (f3_add).
Mapping positional arguments of cell func8.a884 (f3_add).
Mapping positional arguments of cell func8.m882 (f3_mult).
Mapping positional arguments of cell func8.m880 (f3_mult).
Mapping positional arguments of cell func8.m878 (f3_mult).
Mapping positional arguments of cell func8.a876 (f3_add).
Mapping positional arguments of cell func8.a874 (f3_add).
Mapping positional arguments of cell func8.m872 (f3_mult).
Mapping positional arguments of cell func8.m870 (f3_mult).
Mapping positional arguments of cell func8.m868 (f3_mult).
Mapping positional arguments of cell func8.a866 (f3_add).
Mapping positional arguments of cell func8.a864 (f3_add).
Mapping positional arguments of cell func8.m862 (f3_mult).
Mapping positional arguments of cell func8.m860 (f3_mult).
Mapping positional arguments of cell func8.m858 (f3_mult).
Mapping positional arguments of cell func8.a856 (f3_add).
Mapping positional arguments of cell func8.a854 (f3_add).
Mapping positional arguments of cell func8.m852 (f3_mult).
Mapping positional arguments of cell func8.m850 (f3_mult).
Mapping positional arguments of cell func8.m848 (f3_mult).
Mapping positional arguments of cell func8.a846 (f3_add).
Mapping positional arguments of cell func8.a844 (f3_add).
Mapping positional arguments of cell func8.m842 (f3_mult).
Mapping positional arguments of cell func8.m840 (f3_mult).
Mapping positional arguments of cell func8.m838 (f3_mult).
Mapping positional arguments of cell func8.a836 (f3_add).
Mapping positional arguments of cell func8.a834 (f3_add).
Mapping positional arguments of cell func8.m832 (f3_mult).
Mapping positional arguments of cell func8.m830 (f3_mult).
Mapping positional arguments of cell func8.m828 (f3_mult).
Mapping positional arguments of cell func8.a826 (f3_add).
Mapping positional arguments of cell func8.a824 (f3_add).
Mapping positional arguments of cell func8.m822 (f3_mult).
Mapping positional arguments of cell func8.m820 (f3_mult).
Mapping positional arguments of cell func8.m818 (f3_mult).
Mapping positional arguments of cell func8.a816 (f3_add).
Mapping positional arguments of cell func8.a814 (f3_add).
Mapping positional arguments of cell func8.m812 (f3_mult).
Mapping positional arguments of cell func8.m810 (f3_mult).
Mapping positional arguments of cell func8.m808 (f3_mult).
Mapping positional arguments of cell func8.a806 (f3_add).
Mapping positional arguments of cell func8.a804 (f3_add).
Mapping positional arguments of cell func8.m802 (f3_mult).
Mapping positional arguments of cell func8.m800 (f3_mult).
Mapping positional arguments of cell func8.m798 (f3_mult).
Mapping positional arguments of cell func8.a796 (f3_add).
Mapping positional arguments of cell func8.a794 (f3_add).
Mapping positional arguments of cell func8.m792 (f3_mult).
Mapping positional arguments of cell func8.m790 (f3_mult).
Mapping positional arguments of cell func8.m788 (f3_mult).
Mapping positional arguments of cell func8.a786 (f3_add).
Mapping positional arguments of cell func8.a784 (f3_add).
Mapping positional arguments of cell func8.m782 (f3_mult).
Mapping positional arguments of cell func8.m780 (f3_mult).
Mapping positional arguments of cell func8.m778 (f3_mult).
Mapping positional arguments of cell func8.a776 (f3_add).
Mapping positional arguments of cell func8.a774 (f3_add).
Mapping positional arguments of cell func8.m772 (f3_mult).
Mapping positional arguments of cell func8.m770 (f3_mult).
Mapping positional arguments of cell func8.m768 (f3_mult).
Mapping positional arguments of cell func8.a766 (f3_add).
Mapping positional arguments of cell func8.a764 (f3_add).
Mapping positional arguments of cell func8.m762 (f3_mult).
Mapping positional arguments of cell func8.m760 (f3_mult).
Mapping positional arguments of cell func8.m758 (f3_mult).
Mapping positional arguments of cell func8.a756 (f3_add).
Mapping positional arguments of cell func8.a754 (f3_add).
Mapping positional arguments of cell func8.m752 (f3_mult).
Mapping positional arguments of cell func8.m750 (f3_mult).
Mapping positional arguments of cell func8.m748 (f3_mult).
Mapping positional arguments of cell func8.a746 (f3_add).
Mapping positional arguments of cell func8.a744 (f3_add).
Mapping positional arguments of cell func8.m742 (f3_mult).
Mapping positional arguments of cell func8.m740 (f3_mult).
Mapping positional arguments of cell func8.m738 (f3_mult).
Mapping positional arguments of cell func8.a736 (f3_add).
Mapping positional arguments of cell func8.a734 (f3_add).
Mapping positional arguments of cell func8.m732 (f3_mult).
Mapping positional arguments of cell func8.m730 (f3_mult).
Mapping positional arguments of cell func8.m728 (f3_mult).
Mapping positional arguments of cell func8.a726 (f3_add).
Mapping positional arguments of cell func8.a724 (f3_add).
Mapping positional arguments of cell func8.m722 (f3_mult).
Mapping positional arguments of cell func8.m720 (f3_mult).
Mapping positional arguments of cell func8.m718 (f3_mult).
Mapping positional arguments of cell func8.a716 (f3_add).
Mapping positional arguments of cell func8.a714 (f3_add).
Mapping positional arguments of cell func8.m712 (f3_mult).
Mapping positional arguments of cell func8.m710 (f3_mult).
Mapping positional arguments of cell func8.m708 (f3_mult).
Mapping positional arguments of cell func8.a706 (f3_add).
Mapping positional arguments of cell func8.a704 (f3_add).
Mapping positional arguments of cell func8.m702 (f3_mult).
Mapping positional arguments of cell func8.m700 (f3_mult).
Mapping positional arguments of cell func8.m698 (f3_mult).
Mapping positional arguments of cell func8.a696 (f3_add).
Mapping positional arguments of cell func8.a694 (f3_add).
Mapping positional arguments of cell func8.m692 (f3_mult).
Mapping positional arguments of cell func8.m690 (f3_mult).
Mapping positional arguments of cell func8.m688 (f3_mult).
Mapping positional arguments of cell func8.a686 (f3_add).
Mapping positional arguments of cell func8.a684 (f3_add).
Mapping positional arguments of cell func8.m682 (f3_mult).
Mapping positional arguments of cell func8.m680 (f3_mult).
Mapping positional arguments of cell func8.m678 (f3_mult).
Mapping positional arguments of cell func8.a676 (f3_add).
Mapping positional arguments of cell func8.a674 (f3_add).
Mapping positional arguments of cell func8.m672 (f3_mult).
Mapping positional arguments of cell func8.m670 (f3_mult).
Mapping positional arguments of cell func8.m668 (f3_mult).
Mapping positional arguments of cell func8.a666 (f3_add).
Mapping positional arguments of cell func8.a664 (f3_add).
Mapping positional arguments of cell func8.m662 (f3_mult).
Mapping positional arguments of cell func8.m660 (f3_mult).
Mapping positional arguments of cell func8.m658 (f3_mult).
Mapping positional arguments of cell func8.a656 (f3_add).
Mapping positional arguments of cell func8.a654 (f3_add).
Mapping positional arguments of cell func8.m652 (f3_mult).
Mapping positional arguments of cell func8.m650 (f3_mult).
Mapping positional arguments of cell func8.m648 (f3_mult).
Mapping positional arguments of cell func8.a646 (f3_add).
Mapping positional arguments of cell func8.a644 (f3_add).
Mapping positional arguments of cell func8.m642 (f3_mult).
Mapping positional arguments of cell func8.m640 (f3_mult).
Mapping positional arguments of cell func8.m638 (f3_mult).
Mapping positional arguments of cell func8.a636 (f3_add).
Mapping positional arguments of cell func8.a634 (f3_add).
Mapping positional arguments of cell func8.m632 (f3_mult).
Mapping positional arguments of cell func8.m630 (f3_mult).
Mapping positional arguments of cell func8.m628 (f3_mult).
Mapping positional arguments of cell func8.a626 (f3_add).
Mapping positional arguments of cell func8.a624 (f3_add).
Mapping positional arguments of cell func8.m622 (f3_mult).
Mapping positional arguments of cell func8.m620 (f3_mult).
Mapping positional arguments of cell func8.m618 (f3_mult).
Mapping positional arguments of cell func8.a616 (f3_add).
Mapping positional arguments of cell func8.a614 (f3_add).
Mapping positional arguments of cell func8.m612 (f3_mult).
Mapping positional arguments of cell func8.m610 (f3_mult).
Mapping positional arguments of cell func8.m608 (f3_mult).
Mapping positional arguments of cell func8.a606 (f3_add).
Mapping positional arguments of cell func8.a604 (f3_add).
Mapping positional arguments of cell func8.m602 (f3_mult).
Mapping positional arguments of cell func8.m600 (f3_mult).
Mapping positional arguments of cell func8.m598 (f3_mult).
Mapping positional arguments of cell func8.a596 (f3_add).
Mapping positional arguments of cell func8.a594 (f3_add).
Mapping positional arguments of cell func8.m592 (f3_mult).
Mapping positional arguments of cell func8.m590 (f3_mult).
Mapping positional arguments of cell func8.m588 (f3_mult).
Mapping positional arguments of cell func8.a586 (f3_add).
Mapping positional arguments of cell func8.a584 (f3_add).
Mapping positional arguments of cell func8.m582 (f3_mult).
Mapping positional arguments of cell func8.m580 (f3_mult).
Mapping positional arguments of cell func8.m578 (f3_mult).
Mapping positional arguments of cell func8.a576 (f3_add).
Mapping positional arguments of cell func8.a574 (f3_add).
Mapping positional arguments of cell func8.m572 (f3_mult).
Mapping positional arguments of cell func8.m570 (f3_mult).
Mapping positional arguments of cell func8.m568 (f3_mult).
Mapping positional arguments of cell func8.a566 (f3_add).
Mapping positional arguments of cell func8.a564 (f3_add).
Mapping positional arguments of cell func8.m562 (f3_mult).
Mapping positional arguments of cell func8.m560 (f3_mult).
Mapping positional arguments of cell func8.m558 (f3_mult).
Mapping positional arguments of cell func8.a556 (f3_add).
Mapping positional arguments of cell func8.a554 (f3_add).
Mapping positional arguments of cell func8.m552 (f3_mult).
Mapping positional arguments of cell func8.m550 (f3_mult).
Mapping positional arguments of cell func8.m548 (f3_mult).
Mapping positional arguments of cell func8.a546 (f3_add).
Mapping positional arguments of cell func8.a544 (f3_add).
Mapping positional arguments of cell func8.m542 (f3_mult).
Mapping positional arguments of cell func8.m540 (f3_mult).
Mapping positional arguments of cell func8.m538 (f3_mult).
Mapping positional arguments of cell func8.a536 (f3_add).
Mapping positional arguments of cell func8.a534 (f3_add).
Mapping positional arguments of cell func8.m532 (f3_mult).
Mapping positional arguments of cell func8.m530 (f3_mult).
Mapping positional arguments of cell func8.m528 (f3_mult).
Mapping positional arguments of cell func8.a526 (f3_add).
Mapping positional arguments of cell func8.a524 (f3_add).
Mapping positional arguments of cell func8.m522 (f3_mult).
Mapping positional arguments of cell func8.m520 (f3_mult).
Mapping positional arguments of cell func8.m518 (f3_mult).
Mapping positional arguments of cell func8.a516 (f3_add).
Mapping positional arguments of cell func8.a514 (f3_add).
Mapping positional arguments of cell func8.m512 (f3_mult).
Mapping positional arguments of cell func8.m510 (f3_mult).
Mapping positional arguments of cell func8.m508 (f3_mult).
Mapping positional arguments of cell func8.a506 (f3_add).
Mapping positional arguments of cell func8.a504 (f3_add).
Mapping positional arguments of cell func8.m502 (f3_mult).
Mapping positional arguments of cell func8.m500 (f3_mult).
Mapping positional arguments of cell func8.m498 (f3_mult).
Mapping positional arguments of cell func8.a496 (f3_add).
Mapping positional arguments of cell func8.a494 (f3_add).
Mapping positional arguments of cell func8.m492 (f3_mult).
Mapping positional arguments of cell func8.m490 (f3_mult).
Mapping positional arguments of cell func8.m488 (f3_mult).
Mapping positional arguments of cell func8.a486 (f3_add).
Mapping positional arguments of cell func8.a484 (f3_add).
Mapping positional arguments of cell func8.m482 (f3_mult).
Mapping positional arguments of cell func8.m480 (f3_mult).
Mapping positional arguments of cell func8.m478 (f3_mult).
Mapping positional arguments of cell func8.a476 (f3_add).
Mapping positional arguments of cell func8.a474 (f3_add).
Mapping positional arguments of cell func8.m472 (f3_mult).
Mapping positional arguments of cell func8.m470 (f3_mult).
Mapping positional arguments of cell func8.m468 (f3_mult).
Mapping positional arguments of cell func8.a466 (f3_add).
Mapping positional arguments of cell func8.a464 (f3_add).
Mapping positional arguments of cell func8.m462 (f3_mult).
Mapping positional arguments of cell func8.m460 (f3_mult).
Mapping positional arguments of cell func8.m458 (f3_mult).
Mapping positional arguments of cell func8.a456 (f3_add).
Mapping positional arguments of cell func8.a454 (f3_add).
Mapping positional arguments of cell func8.m452 (f3_mult).
Mapping positional arguments of cell func8.m450 (f3_mult).
Mapping positional arguments of cell func8.m448 (f3_mult).
Mapping positional arguments of cell func8.a446 (f3_add).
Mapping positional arguments of cell func8.a444 (f3_add).
Mapping positional arguments of cell func8.m442 (f3_mult).
Mapping positional arguments of cell func8.m440 (f3_mult).
Mapping positional arguments of cell func8.m438 (f3_mult).
Mapping positional arguments of cell func8.a436 (f3_add).
Mapping positional arguments of cell func8.a434 (f3_add).
Mapping positional arguments of cell func8.m432 (f3_mult).
Mapping positional arguments of cell func8.m430 (f3_mult).
Mapping positional arguments of cell func8.m428 (f3_mult).
Mapping positional arguments of cell func8.a426 (f3_add).
Mapping positional arguments of cell func8.a424 (f3_add).
Mapping positional arguments of cell func8.m422 (f3_mult).
Mapping positional arguments of cell func8.m420 (f3_mult).
Mapping positional arguments of cell func8.m418 (f3_mult).
Mapping positional arguments of cell func8.a416 (f3_add).
Mapping positional arguments of cell func8.a414 (f3_add).
Mapping positional arguments of cell func8.m412 (f3_mult).
Mapping positional arguments of cell func8.m410 (f3_mult).
Mapping positional arguments of cell func8.m408 (f3_mult).
Mapping positional arguments of cell func8.a406 (f3_add).
Mapping positional arguments of cell func8.a404 (f3_add).
Mapping positional arguments of cell func8.m402 (f3_mult).
Mapping positional arguments of cell func8.m400 (f3_mult).
Mapping positional arguments of cell func8.m398 (f3_mult).
Mapping positional arguments of cell func8.a396 (f3_add).
Mapping positional arguments of cell func8.a394 (f3_add).
Mapping positional arguments of cell func8.m392 (f3_mult).
Mapping positional arguments of cell func8.m390 (f3_mult).
Mapping positional arguments of cell func8.m388 (f3_mult).
Mapping positional arguments of cell func8.a386 (f3_add).
Mapping positional arguments of cell func8.a384 (f3_add).
Mapping positional arguments of cell func8.m382 (f3_mult).
Mapping positional arguments of cell func8.m380 (f3_mult).
Mapping positional arguments of cell func8.m378 (f3_mult).
Mapping positional arguments of cell func8.a376 (f3_add).
Mapping positional arguments of cell func8.a374 (f3_add).
Mapping positional arguments of cell func8.m372 (f3_mult).
Mapping positional arguments of cell func8.m370 (f3_mult).
Mapping positional arguments of cell func8.m368 (f3_mult).
Mapping positional arguments of cell func8.a366 (f3_add).
Mapping positional arguments of cell func8.a364 (f3_add).
Mapping positional arguments of cell func8.m362 (f3_mult).
Mapping positional arguments of cell func8.m360 (f3_mult).
Mapping positional arguments of cell func8.m358 (f3_mult).
Mapping positional arguments of cell func8.a356 (f3_add).
Mapping positional arguments of cell func8.a354 (f3_add).
Mapping positional arguments of cell func8.m352 (f3_mult).
Mapping positional arguments of cell func8.m350 (f3_mult).
Mapping positional arguments of cell func8.m348 (f3_mult).
Mapping positional arguments of cell func8.a346 (f3_add).
Mapping positional arguments of cell func8.a344 (f3_add).
Mapping positional arguments of cell func8.m342 (f3_mult).
Mapping positional arguments of cell func8.m340 (f3_mult).
Mapping positional arguments of cell func8.m338 (f3_mult).
Mapping positional arguments of cell func8.a336 (f3_add).
Mapping positional arguments of cell func8.a334 (f3_add).
Mapping positional arguments of cell func8.m332 (f3_mult).
Mapping positional arguments of cell func8.m330 (f3_mult).
Mapping positional arguments of cell func8.m328 (f3_mult).
Mapping positional arguments of cell func8.a326 (f3_add).
Mapping positional arguments of cell func8.a324 (f3_add).
Mapping positional arguments of cell func8.m322 (f3_mult).
Mapping positional arguments of cell func8.m320 (f3_mult).
Mapping positional arguments of cell func8.m318 (f3_mult).
Mapping positional arguments of cell func8.a316 (f3_add).
Mapping positional arguments of cell func8.a314 (f3_add).
Mapping positional arguments of cell func8.m312 (f3_mult).
Mapping positional arguments of cell func8.m310 (f3_mult).
Mapping positional arguments of cell func8.m308 (f3_mult).
Mapping positional arguments of cell func8.a306 (f3_add).
Mapping positional arguments of cell func8.a304 (f3_add).
Mapping positional arguments of cell func8.m302 (f3_mult).
Mapping positional arguments of cell func8.m300 (f3_mult).
Mapping positional arguments of cell func8.m298 (f3_mult).
Mapping positional arguments of cell func8.a296 (f3_add).
Mapping positional arguments of cell func8.a294 (f3_add).
Mapping positional arguments of cell func8.m292 (f3_mult).
Mapping positional arguments of cell func8.m290 (f3_mult).
Mapping positional arguments of cell func8.m288 (f3_mult).
Mapping positional arguments of cell func8.a286 (f3_add).
Mapping positional arguments of cell func8.a284 (f3_add).
Mapping positional arguments of cell func8.m282 (f3_mult).
Mapping positional arguments of cell func8.m280 (f3_mult).
Mapping positional arguments of cell func8.m278 (f3_mult).
Mapping positional arguments of cell func8.a276 (f3_add).
Mapping positional arguments of cell func8.a274 (f3_add).
Mapping positional arguments of cell func8.m272 (f3_mult).
Mapping positional arguments of cell func8.m270 (f3_mult).
Mapping positional arguments of cell func8.m268 (f3_mult).
Mapping positional arguments of cell func8.a266 (f3_add).
Mapping positional arguments of cell func8.a264 (f3_add).
Mapping positional arguments of cell func8.m262 (f3_mult).
Mapping positional arguments of cell func8.m260 (f3_mult).
Mapping positional arguments of cell func8.m258 (f3_mult).
Mapping positional arguments of cell func8.a256 (f3_add).
Mapping positional arguments of cell func8.a254 (f3_add).
Mapping positional arguments of cell func8.m252 (f3_mult).
Mapping positional arguments of cell func8.m250 (f3_mult).
Mapping positional arguments of cell func8.m248 (f3_mult).
Mapping positional arguments of cell func8.a246 (f3_add).
Mapping positional arguments of cell func8.a244 (f3_add).
Mapping positional arguments of cell func8.m242 (f3_mult).
Mapping positional arguments of cell func8.m240 (f3_mult).
Mapping positional arguments of cell func8.m238 (f3_mult).
Mapping positional arguments of cell func8.a236 (f3_add).
Mapping positional arguments of cell func8.a234 (f3_add).
Mapping positional arguments of cell func8.m232 (f3_mult).
Mapping positional arguments of cell func8.m230 (f3_mult).
Mapping positional arguments of cell func8.m228 (f3_mult).
Mapping positional arguments of cell func8.a226 (f3_add).
Mapping positional arguments of cell func8.a224 (f3_add).
Mapping positional arguments of cell func8.m222 (f3_mult).
Mapping positional arguments of cell func8.m220 (f3_mult).
Mapping positional arguments of cell func8.m218 (f3_mult).
Mapping positional arguments of cell func8.a216 (f3_add).
Mapping positional arguments of cell func8.a214 (f3_add).
Mapping positional arguments of cell func8.m212 (f3_mult).
Mapping positional arguments of cell func8.m210 (f3_mult).
Mapping positional arguments of cell func8.m208 (f3_mult).
Mapping positional arguments of cell func8.a206 (f3_add).
Mapping positional arguments of cell func8.a204 (f3_add).
Mapping positional arguments of cell func8.m202 (f3_mult).
Mapping positional arguments of cell func8.m200 (f3_mult).
Mapping positional arguments of cell func8.m198 (f3_mult).
Mapping positional arguments of cell func8.a196 (f3_add).
Mapping positional arguments of cell func8.a194 (f3_add).
Mapping positional arguments of cell func8.m192 (f3_mult).
Mapping positional arguments of cell func8.m190 (f3_mult).
Mapping positional arguments of cell func8.m188 (f3_mult).
Mapping positional arguments of cell func8.a186 (f3_add).
Mapping positional arguments of cell func8.a184 (f3_add).
Mapping positional arguments of cell func8.m182 (f3_mult).
Mapping positional arguments of cell func8.m180 (f3_mult).
Mapping positional arguments of cell func8.m178 (f3_mult).
Mapping positional arguments of cell func8.a176 (f3_add).
Mapping positional arguments of cell func8.a174 (f3_add).
Mapping positional arguments of cell func8.m172 (f3_mult).
Mapping positional arguments of cell func8.m170 (f3_mult).
Mapping positional arguments of cell func8.m168 (f3_mult).
Mapping positional arguments of cell func8.a166 (f3_add).
Mapping positional arguments of cell func8.a164 (f3_add).
Mapping positional arguments of cell func8.m162 (f3_mult).
Mapping positional arguments of cell func8.m160 (f3_mult).
Mapping positional arguments of cell func8.m158 (f3_mult).
Mapping positional arguments of cell func8.a156 (f3_add).
Mapping positional arguments of cell func8.a154 (f3_add).
Mapping positional arguments of cell func8.m152 (f3_mult).
Mapping positional arguments of cell func8.m150 (f3_mult).
Mapping positional arguments of cell func8.m148 (f3_mult).
Mapping positional arguments of cell func8.a146 (f3_add).
Mapping positional arguments of cell func8.a144 (f3_add).
Mapping positional arguments of cell func8.a142 (f3_add).
Mapping positional arguments of cell func8.m140 (f3_mult).
Mapping positional arguments of cell func8.m138 (f3_mult).
Mapping positional arguments of cell func8.m136 (f3_mult).
Mapping positional arguments of cell func8.a134 (f3_add).
Mapping positional arguments of cell func8.a132 (f3_add).
Mapping positional arguments of cell func8.a130 (f3_add).
Mapping positional arguments of cell func8.a128 (f3_add).
Mapping positional arguments of cell func8.m126 (f3_mult).
Mapping positional arguments of cell func8.m124 (f3_mult).
Mapping positional arguments of cell func8.m122 (f3_mult).
Mapping positional arguments of cell func8.a120 (f3_add).
Mapping positional arguments of cell func8.a118 (f3_add).
Mapping positional arguments of cell func8.m116 (f3_mult).
Mapping positional arguments of cell func8.m114 (f3_mult).
Mapping positional arguments of cell func8.m112 (f3_mult).
Mapping positional arguments of cell func8.a110 (f3_add).
Mapping positional arguments of cell func8.a108 (f3_add).
Mapping positional arguments of cell func8.m106 (f3_mult).
Mapping positional arguments of cell func8.m104 (f3_mult).
Mapping positional arguments of cell func8.m102 (f3_mult).
Mapping positional arguments of cell func8.a100 (f3_add).
Mapping positional arguments of cell func8.a98 (f3_add).
Mapping positional arguments of cell func8.m96 (f3_mult).
Mapping positional arguments of cell func8.m94 (f3_mult).
Mapping positional arguments of cell func8.m92 (f3_mult).
Mapping positional arguments of cell func8.a90 (f3_add).
Mapping positional arguments of cell func8.a88 (f3_add).
Mapping positional arguments of cell func8.m86 (f3_mult).
Mapping positional arguments of cell func8.m84 (f3_mult).
Mapping positional arguments of cell func8.m82 (f3_mult).
Mapping positional arguments of cell func8.a80 (f3_add).
Mapping positional arguments of cell func8.a78 (f3_add).
Mapping positional arguments of cell func8.m76 (f3_mult).
Mapping positional arguments of cell func8.m74 (f3_mult).
Mapping positional arguments of cell func8.m72 (f3_mult).
Mapping positional arguments of cell func8.a70 (f3_add).
Mapping positional arguments of cell func8.a68 (f3_add).
Mapping positional arguments of cell func8.m66 (f3_mult).
Mapping positional arguments of cell func8.m64 (f3_mult).
Mapping positional arguments of cell func8.m62 (f3_mult).
Mapping positional arguments of cell func8.a60 (f3_add).
Mapping positional arguments of cell func8.a58 (f3_add).
Mapping positional arguments of cell func8.m56 (f3_mult).
Mapping positional arguments of cell func8.m54 (f3_mult).
Mapping positional arguments of cell func8.m52 (f3_mult).
Mapping positional arguments of cell func8.a50 (f3_add).
Mapping positional arguments of cell func8.a48 (f3_add).
Mapping positional arguments of cell func8.m46 (f3_mult).
Mapping positional arguments of cell func8.m44 (f3_mult).
Mapping positional arguments of cell func8.m42 (f3_mult).
Mapping positional arguments of cell func8.a40 (f3_add).
Mapping positional arguments of cell func8.a38 (f3_add).
Mapping positional arguments of cell func8.m36 (f3_mult).
Mapping positional arguments of cell func8.m34 (f3_mult).
Mapping positional arguments of cell func8.m32 (f3_mult).
Mapping positional arguments of cell func8.a30 (f3_add).
Mapping positional arguments of cell func8.a28 (f3_add).
Mapping positional arguments of cell func8.m26 (f3_mult).
Mapping positional arguments of cell func8.m24 (f3_mult).
Mapping positional arguments of cell func8.m22 (f3_mult).
Mapping positional arguments of cell func8.a20 (f3_add).
Mapping positional arguments of cell func8.a18 (f3_add).
Mapping positional arguments of cell func8.m16 (f3_mult).
Mapping positional arguments of cell func8.m14 (f3_mult).
Mapping positional arguments of cell func8.m12 (f3_mult).
Mapping positional arguments of cell func8.a10 (f3_add).
Mapping positional arguments of cell func8.a8 (f3_add).
Mapping positional arguments of cell func8.m6 (f3_mult).
Mapping positional arguments of cell func8.m4 (f3_mult).
Mapping positional arguments of cell func8.m2 (f3_mult).
Mapping positional arguments of cell func7.a2 (f3_add).
Mapping positional arguments of cell func7.a1 (f3_add).
Mapping positional arguments of cell func7.a0 (f3_add).
Mapping positional arguments of cell f3m_mult.ins3 (func7).
Mapping positional arguments of cell f3m_mult.ins2 (f3m_add).
Mapping positional arguments of cell f3m_mult.ins1 (func8).
Mapping positional arguments of cell f3m_add3.ins2 (f3m_add).
Mapping positional arguments of cell f3m_add3.ins1 (f3m_add).
Mapping positional arguments of cell f3m_add.aa[96].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[95].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[94].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[93].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[92].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[91].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[90].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[89].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[88].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[87].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[86].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[85].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[84].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[83].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[82].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[81].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[80].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[79].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[78].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[77].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[76].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[75].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[74].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[73].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[72].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[71].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[70].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[69].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[68].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[67].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[66].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[65].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[64].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[63].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[62].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[61].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[60].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[59].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[58].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[57].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[56].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[55].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[54].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[53].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[52].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[51].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[50].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[49].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[48].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[47].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[46].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[45].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[44].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[43].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[42].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[41].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[40].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[39].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[38].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[37].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[36].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[35].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[34].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[33].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[32].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[31].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[30].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[29].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[28].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[27].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[26].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[25].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[24].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[23].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[22].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[21].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[20].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[19].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[18].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[17].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[16].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[15].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[14].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[13].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[12].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[11].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[10].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[9].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[8].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[7].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[6].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[5].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[4].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[3].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[2].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[1].aa (f3_add).
Mapping positional arguments of cell f3m_add.aa[0].aa (f3_add).
Mapping positional arguments of cell f3m_nine.ins2 (f3m_cubic).
Mapping positional arguments of cell f3m_nine.ins1 (f3m_cubic).
Mapping positional arguments of cell f3m_cubic.a87 (f3_add).
Mapping positional arguments of cell f3m_cubic.a86 (f3_add).
Mapping positional arguments of cell f3m_cubic.a85 (f3_add).
Mapping positional arguments of cell f3m_cubic.a84 (f3_add).
Mapping positional arguments of cell f3m_cubic.a83 (f3_add).
Mapping positional arguments of cell f3m_cubic.a82 (f3_add).
Mapping positional arguments of cell f3m_cubic.a81 (f3_add).
Mapping positional arguments of cell f3m_cubic.a80 (f3_add).
Mapping positional arguments of cell f3m_cubic.a79 (f3_add).
Mapping positional arguments of cell f3m_cubic.a78 (f3_add).
Mapping positional arguments of cell f3m_cubic.a77 (f3_add).
Mapping positional arguments of cell f3m_cubic.a76 (f3_add).
Mapping positional arguments of cell f3m_cubic.a75 (f3_add).
Mapping positional arguments of cell f3m_cubic.a74 (f3_add).
Mapping positional arguments of cell f3m_cubic.a73 (f3_add).
Mapping positional arguments of cell f3m_cubic.a72 (f3_add).
Mapping positional arguments of cell f3m_cubic.a71 (f3_add).
Mapping positional arguments of cell f3m_cubic.a70 (f3_add).
Mapping positional arguments of cell f3m_cubic.a69 (f3_add).
Mapping positional arguments of cell f3m_cubic.a68 (f3_add).
Mapping positional arguments of cell f3m_cubic.a67 (f3_add).
Mapping positional arguments of cell f3m_cubic.a66 (f3_add).
Mapping positional arguments of cell f3m_cubic.a65 (f3_add).
Mapping positional arguments of cell f3m_cubic.a64 (f3_add).
Mapping positional arguments of cell f3m_cubic.a63 (f3_add).
Mapping positional arguments of cell f3m_cubic.a62 (f3_add).
Mapping positional arguments of cell f3m_cubic.a61 (f3_add).
Mapping positional arguments of cell f3m_cubic.a60 (f3_add).
Mapping positional arguments of cell f3m_cubic.a59 (f3_add).
Mapping positional arguments of cell f3m_cubic.a58 (f3_add).
Mapping positional arguments of cell f3m_cubic.a57 (f3_add).
Mapping positional arguments of cell f3m_cubic.a56 (f3_add).
Mapping positional arguments of cell f3m_cubic.a55 (f3_add).
Mapping positional arguments of cell f3m_cubic.a54 (f3_add).
Mapping positional arguments of cell f3m_cubic.a53 (f3_add).
Mapping positional arguments of cell f3m_cubic.a52 (f3_add).
Mapping positional arguments of cell f3m_cubic.a51 (f3_add).
Mapping positional arguments of cell f3m_cubic.a50 (f3_add).
Mapping positional arguments of cell f3m_cubic.a49 (f3_add).
Mapping positional arguments of cell f3m_cubic.a48 (f3_add).
Mapping positional arguments of cell f3m_cubic.a47 (f3_add).
Mapping positional arguments of cell f3m_cubic.a46 (f3_add).
Mapping positional arguments of cell f3m_cubic.a45 (f3_add).
Mapping positional arguments of cell f3m_cubic.a44 (f3_add).
Mapping positional arguments of cell f3m_cubic.a43 (f3_add).
Mapping positional arguments of cell f3m_cubic.a42 (f3_add).
Mapping positional arguments of cell f3m_cubic.a41 (f3_add).
Mapping positional arguments of cell f3m_cubic.a40 (f3_add).
Mapping positional arguments of cell f3m_cubic.a39 (f3_add).
Mapping positional arguments of cell f3m_cubic.a38 (f3_add).
Mapping positional arguments of cell f3m_cubic.a37 (f3_add).
Mapping positional arguments of cell f3m_cubic.a36 (f3_add).
Mapping positional arguments of cell f3m_cubic.a35 (f3_add).
Mapping positional arguments of cell f3m_cubic.a34 (f3_add).
Mapping positional arguments of cell f3m_cubic.a33 (f3_add).
Mapping positional arguments of cell f3m_cubic.a32 (f3_add).
Mapping positional arguments of cell f3m_cubic.a31 (f3_add).
Mapping positional arguments of cell f3m_cubic.a30 (f3_add).
Mapping positional arguments of cell f3m_cubic.a29 (f3_add).
Mapping positional arguments of cell f3m_cubic.a28 (f3_add).
Mapping positional arguments of cell f3m_cubic.a27 (f3_add).
Mapping positional arguments of cell f3m_cubic.a26 (f3_add).
Mapping positional arguments of cell f3m_cubic.a25 (f3_add).
Mapping positional arguments of cell f3m_cubic.a24 (f3_add).
Mapping positional arguments of cell f3m_cubic.a23 (f3_add).
Mapping positional arguments of cell f3m_cubic.a22 (f3_add).
Mapping positional arguments of cell f3m_cubic.a21 (f3_add).
Mapping positional arguments of cell f3m_cubic.a20 (f3_add).
Mapping positional arguments of cell f3m_cubic.a19 (f3_add).
Mapping positional arguments of cell f3m_cubic.a18 (f3_add).
Mapping positional arguments of cell f3m_cubic.a17 (f3_add).
Mapping positional arguments of cell f3m_cubic.a16 (f3_add).
Mapping positional arguments of cell f3m_cubic.a15 (f3_add).
Mapping positional arguments of cell f3m_cubic.a14 (f3_add).
Mapping positional arguments of cell f3m_cubic.a13 (f3_add).
Mapping positional arguments of cell f3m_cubic.a12 (f3_add).
Mapping positional arguments of cell f3m_cubic.a11 (f3_add).
Mapping positional arguments of cell f3m_cubic.a10 (f3_add).
Mapping positional arguments of cell f3m_cubic.a9 (f3_add).
Mapping positional arguments of cell f3m_cubic.a8 (f3_add).
Mapping positional arguments of cell f3m_cubic.a7 (f3_add).
Mapping positional arguments of cell f3m_cubic.a6 (f3_add).
Mapping positional arguments of cell f3m_cubic.a5 (f3_add).
Mapping positional arguments of cell f3m_cubic.a4 (f3_add).
Mapping positional arguments of cell f3m_cubic.a3 (f3_add).
Mapping positional arguments of cell f3m_cubic.a2 (f3_add).
Mapping positional arguments of cell f3m_cubic.a1 (f3_add).
Mapping positional arguments of cell f3m_cubic.a0 (f3_add).
Mapping positional arguments of cell f32m_cubic.ins3 (f3m_neg).
Mapping positional arguments of cell f32m_cubic.ins2 (f3m_cubic).
Mapping positional arguments of cell f32m_cubic.ins1 (f3m_cubic).
Mapping positional arguments of cell f32m_sub.s2 (f3m_sub).
Mapping positional arguments of cell f32m_sub.s1 (f3m_sub).
Mapping positional arguments of cell f36m_cubic.ins6 (f32m_sub).
Mapping positional arguments of cell f36m_cubic.ins5 (f32m_add).
Mapping positional arguments of cell f36m_cubic.ins4 (f32m_add).
Mapping positional arguments of cell f36m_cubic.ins3 (f32m_cubic).
Mapping positional arguments of cell f36m_cubic.ins2 (f32m_cubic).
Mapping positional arguments of cell f36m_cubic.ins1 (f32m_cubic).
Mapping positional arguments of cell f32m_mux6.ins2 (f3m_mux6).
Mapping positional arguments of cell f32m_mux6.ins1 (f3m_mux6).
Mapping positional arguments of cell f32m_mult.ins10 (func6).
Mapping positional arguments of cell f32m_mult.ins9 (f3m_mult3).
Mapping positional arguments of cell f32m_mult.ins8 (f3m_sub).
Mapping positional arguments of cell f32m_mult.ins7 (f3m_sub).
Mapping positional arguments of cell f32m_mult.ins3 (f3m_add).
Mapping positional arguments of cell f32m_mult.ins2 (f3m_add).
Mapping positional arguments of cell f32m_mult.ins1 (f3m_add).
Mapping positional arguments of cell f32m_neg.n2 (f3m_neg).
Mapping positional arguments of cell f32m_neg.n1 (f3m_neg).
Mapping positional arguments of cell f32m_add3.ins2 (f32m_add).
Mapping positional arguments of cell f32m_add3.ins1 (f32m_add).
Mapping positional arguments of cell f32m_add.a2 (f3m_add).
Mapping positional arguments of cell f32m_add.a1 (f3m_add).
Mapping positional arguments of cell f32m_add4.ins3 (f32m_add).
Mapping positional arguments of cell f32m_add4.ins2 (f32m_add).
Mapping positional arguments of cell f32m_add4.ins1 (f32m_add).
Mapping positional arguments of cell f36m_mult.ins19 (f32m_add4).
Mapping positional arguments of cell f36m_mult.ins18 (f32m_add3).
Mapping positional arguments of cell f36m_mult.ins17 (f32m_add3).
Mapping positional arguments of cell f36m_mult.ins16 (f32m_add3).
Mapping positional arguments of cell f36m_mult.ins15 (f32m_neg).
Mapping positional arguments of cell f36m_mult.ins14 (f32m_neg).
Mapping positional arguments of cell f36m_mult.ins13 (f32m_neg).
Mapping positional arguments of cell f36m_mult.ins12 (f32m_add).
Mapping positional arguments of cell f36m_mult.ins11 (f32m_add).
Mapping positional arguments of cell f36m_mult.ins10 (f32m_add).
Mapping positional arguments of cell f36m_mult.ins9 (f32m_add).
Mapping positional arguments of cell f36m_mult.ins8 (f32m_add).
Mapping positional arguments of cell f36m_mult.ins7 (f32m_add).
Mapping positional arguments of cell f36m_mult.ins6 (f32m_add).
Mapping positional arguments of cell f36m_mult.ins5 (f32m_add).
Mapping positional arguments of cell f36m_mult.ins4 (func6).
Mapping positional arguments of cell f36m_mult.ins3 (f32m_mult).
Mapping positional arguments of cell f36m_mult.ins2 (f32m_mux6).
Mapping positional arguments of cell f36m_mult.ins1 (f32m_mux6).
Mapping positional arguments of cell duursma_lee_algo.ins14 (f3_sub1).
Mapping positional arguments of cell duursma_lee_algo.ins13 (func6).
Mapping positional arguments of cell duursma_lee_algo.ins12 (func6).
Mapping positional arguments of cell duursma_lee_algo.ins11 (f36m_mult).
Mapping positional arguments of cell duursma_lee_algo.ins10 (f36m_cubic).
Mapping positional arguments of cell duursma_lee_algo.ins9 (f3m_mult).
Mapping positional arguments of cell duursma_lee_algo.ins8 (f3m_mult).
Mapping positional arguments of cell duursma_lee_algo.ins7 (f3m_neg).
Mapping positional arguments of cell duursma_lee_algo.ins6 (f3m_neg).
Mapping positional arguments of cell duursma_lee_algo.ins5 (f3m_add3).
Mapping positional arguments of cell duursma_lee_algo.ins4 (f3m_nine).
Mapping positional arguments of cell duursma_lee_algo.ins3 (f3m_nine).
Mapping positional arguments of cell duursma_lee_algo.ins2 (f3m_cubic).
Mapping positional arguments of cell duursma_lee_algo.ins1 (f3m_cubic).

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1400$3200 in module func6.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1331$94 in module f3m_mult3.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1324$93 in module f3m_mult3.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1320$91 in module f3m_mult3.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:661$66 in module f3m_mult.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:655$65 in module f3m_mult.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:258$21 in module f32m_mult.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:184$18 in module f36m_mult.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:175$17 in module f36m_mult.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:159$14 in module f36m_mult.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:87$7 in module duursma_lee_algo.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:81$6 in module duursma_lee_algo.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:75$5 in module duursma_lee_algo.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:61$4 in module duursma_lee_algo.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:55$1 in module duursma_lee_algo.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 11 redundant assignments.
Promoted 10 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\func6.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1400$3200'.
     1/2: $0\reg2[0:0]
     2/2: $0\reg1[0:0]
Creating decoders for process `\f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1335$95'.
Creating decoders for process `\f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1331$94'.
     1/1: $0\done[0:0]
Creating decoders for process `\f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1324$93'.
     1/1: $0\mult_reset[0:0]
Creating decoders for process `\f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1320$91'.
     1/1: $0\K[3:0]
Creating decoders for process `\f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1313$90'.
     1/3: $0\c2[193:0]
     2/3: $0\c1[193:0]
     3/3: $0\c0[193:0]
Creating decoders for process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:661$66'.
     1/4: $0\i[33:0]
     2/4: $0\z[193:0]
     3/4: $0\y[193:0]
     4/4: $0\x[193:0]
Creating decoders for process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:655$65'.
     1/1: $0\done[0:0]
Creating decoders for process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:651$64'.
     1/1: $0\C[193:0]
Creating decoders for process `\f3m_nine.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:590$24'.
Creating decoders for process `\f32m_cubic.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:320$23'.
Creating decoders for process `\f36m_cubic.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:299$22'.
Creating decoders for process `\f32m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:258$21'.
     1/2: $0\c[387:0]
     2/2: $0\done[0:0]
Creating decoders for process `\f32m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:255$20'.
Creating decoders for process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:191$19'.
Creating decoders for process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:184$18'.
     1/1: $0\mult_reset[0:0]
Creating decoders for process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:175$17'.
     1/2: $0\c[1163:0]
     2/2: $0\done[0:0]
Creating decoders for process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:165$16'.
     1/6: $0\x5[387:0]
     2/6: $0\x4[387:0]
     3/6: $0\x3[387:0]
     4/6: $0\x2[387:0]
     5/6: $0\x1[387:0]
     6/6: $0\x0[387:0]
Creating decoders for process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:159$14'.
     1/1: $0\K[6:0]
Creating decoders for process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:154$13'.
Creating decoders for process `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:87$7'.
     1/1: $0\f3m_reset[0:0]
Creating decoders for process `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:81$6'.
     1/2: $0\delay2[0:0]
     2/2: $0\delay1[0:0]
Creating decoders for process `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:75$5'.
     1/2: $0\out[1163:0]
     2/2: $0\done[0:0]
Creating decoders for process `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:61$4'.
     1/5: $0\d[1:0]
     2/5: $0\y[193:0]
     3/5: $0\b[193:0]
     4/5: $0\a[193:0]
     5/5: $0\t[1163:0]
Creating decoders for process `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:55$1'.
     1/1: $0\i[97:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\func6.\reg1' using process `\func6.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1400$3200'.
  created $dff cell `$procdff$3345' with positive edge clock.
Creating register for signal `\func6.\reg2' using process `\func6.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1400$3200'.
  created $dff cell `$procdff$3346' with positive edge clock.
Creating register for signal `\f3m_mult3.\delay1' using process `\f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1335$95'.
  created $dff cell `$procdff$3347' with positive edge clock.
Creating register for signal `\f3m_mult3.\delay2' using process `\f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1335$95'.
  created $dff cell `$procdff$3348' with positive edge clock.
Creating register for signal `\f3m_mult3.\done' using process `\f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1331$94'.
  created $dff cell `$procdff$3349' with positive edge clock.
Creating register for signal `\f3m_mult3.\mult_reset' using process `\f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1324$93'.
  created $dff cell `$procdff$3350' with positive edge clock.
Creating register for signal `\f3m_mult3.\K' using process `\f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1320$91'.
  created $dff cell `$procdff$3351' with positive edge clock.
Creating register for signal `\f3m_mult3.\c0' using process `\f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1313$90'.
  created $dff cell `$procdff$3352' with positive edge clock.
Creating register for signal `\f3m_mult3.\c1' using process `\f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1313$90'.
  created $dff cell `$procdff$3353' with positive edge clock.
Creating register for signal `\f3m_mult3.\c2' using process `\f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1313$90'.
  created $dff cell `$procdff$3354' with positive edge clock.
Creating register for signal `\f3m_mult.\y' using process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:661$66'.
  created $dff cell `$procdff$3355' with positive edge clock.
Creating register for signal `\f3m_mult.\i' using process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:661$66'.
  created $dff cell `$procdff$3356' with positive edge clock.
Creating register for signal `\f3m_mult.\x' using process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:661$66'.
  created $dff cell `$procdff$3357' with positive edge clock.
Creating register for signal `\f3m_mult.\z' using process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:661$66'.
  created $dff cell `$procdff$3358' with positive edge clock.
Creating register for signal `\f3m_mult.\done' using process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:655$65'.
  created $dff cell `$procdff$3359' with positive edge clock.
Creating register for signal `\f3m_mult.\C' using process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:651$64'.
  created $dff cell `$procdff$3360' with positive edge clock.
Creating register for signal `\f3m_nine.\out' using process `\f3m_nine.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:590$24'.
  created $dff cell `$procdff$3361' with positive edge clock.
Creating register for signal `\f32m_cubic.\c' using process `\f32m_cubic.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:320$23'.
  created $dff cell `$procdff$3362' with positive edge clock.
Creating register for signal `\f36m_cubic.\c' using process `\f36m_cubic.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:299$22'.
  created $dff cell `$procdff$3363' with positive edge clock.
Creating register for signal `\f32m_mult.\done' using process `\f32m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:258$21'.
  created $dff cell `$procdff$3364' with positive edge clock.
Creating register for signal `\f32m_mult.\c' using process `\f32m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:258$21'.
  created $dff cell `$procdff$3365' with positive edge clock.
Creating register for signal `\f32m_mult.\mult_reset' using process `\f32m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:255$20'.
  created $dff cell `$procdff$3366' with positive edge clock.
Creating register for signal `\f36m_mult.\delay1' using process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:191$19'.
  created $dff cell `$procdff$3367' with positive edge clock.
Creating register for signal `\f36m_mult.\delay2' using process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:191$19'.
  created $dff cell `$procdff$3368' with positive edge clock.
Creating register for signal `\f36m_mult.\mult_reset' using process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:184$18'.
  created $dff cell `$procdff$3369' with positive edge clock.
Creating register for signal `\f36m_mult.\done' using process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:175$17'.
  created $dff cell `$procdff$3370' with positive edge clock.
Creating register for signal `\f36m_mult.\c' using process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:175$17'.
  created $dff cell `$procdff$3371' with positive edge clock.
Creating register for signal `\f36m_mult.\x0' using process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:165$16'.
  created $dff cell `$procdff$3372' with positive edge clock.
Creating register for signal `\f36m_mult.\x1' using process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:165$16'.
  created $dff cell `$procdff$3373' with positive edge clock.
Creating register for signal `\f36m_mult.\x2' using process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:165$16'.
  created $dff cell `$procdff$3374' with positive edge clock.
Creating register for signal `\f36m_mult.\x3' using process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:165$16'.
  created $dff cell `$procdff$3375' with positive edge clock.
Creating register for signal `\f36m_mult.\x4' using process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:165$16'.
  created $dff cell `$procdff$3376' with positive edge clock.
Creating register for signal `\f36m_mult.\x5' using process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:165$16'.
  created $dff cell `$procdff$3377' with positive edge clock.
Creating register for signal `\f36m_mult.\K' using process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:159$14'.
  created $dff cell `$procdff$3378' with positive edge clock.
Creating register for signal `\f36m_mult.\in0d' using process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:154$13'.
  created $dff cell `$procdff$3379' with positive edge clock.
Creating register for signal `\f36m_mult.\in1d' using process `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:154$13'.
  created $dff cell `$procdff$3380' with positive edge clock.
Creating register for signal `\duursma_lee_algo.\f3m_reset' using process `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:87$7'.
  created $dff cell `$procdff$3381' with positive edge clock.
Creating register for signal `\duursma_lee_algo.\delay1' using process `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:81$6'.
  created $dff cell `$procdff$3382' with positive edge clock.
Creating register for signal `\duursma_lee_algo.\delay2' using process `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:81$6'.
  created $dff cell `$procdff$3383' with positive edge clock.
Creating register for signal `\duursma_lee_algo.\done' using process `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:75$5'.
  created $dff cell `$procdff$3384' with positive edge clock.
Creating register for signal `\duursma_lee_algo.\out' using process `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:75$5'.
  created $dff cell `$procdff$3385' with positive edge clock.
Creating register for signal `\duursma_lee_algo.\t' using process `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:61$4'.
  created $dff cell `$procdff$3386' with positive edge clock.
Creating register for signal `\duursma_lee_algo.\a' using process `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:61$4'.
  created $dff cell `$procdff$3387' with positive edge clock.
Creating register for signal `\duursma_lee_algo.\b' using process `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:61$4'.
  created $dff cell `$procdff$3388' with positive edge clock.
Creating register for signal `\duursma_lee_algo.\y' using process `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:61$4'.
  created $dff cell `$procdff$3389' with positive edge clock.
Creating register for signal `\duursma_lee_algo.\d' using process `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:61$4'.
  created $dff cell `$procdff$3390' with positive edge clock.
Creating register for signal `\duursma_lee_algo.\i' using process `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:55$1'.
  created $dff cell `$procdff$3391' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\func6.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1400$3200'.
Removing empty process `func6.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1400$3200'.
Removing empty process `f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1335$95'.
Found and cleaned up 2 empty switches in `\f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1331$94'.
Removing empty process `f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1331$94'.
Found and cleaned up 2 empty switches in `\f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1324$93'.
Removing empty process `f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1324$93'.
Found and cleaned up 2 empty switches in `\f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1320$91'.
Removing empty process `f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1320$91'.
Found and cleaned up 3 empty switches in `\f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1313$90'.
Removing empty process `f3m_mult3.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:1313$90'.
Found and cleaned up 1 empty switch in `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:661$66'.
Removing empty process `f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:661$66'.
Found and cleaned up 2 empty switches in `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:655$65'.
Removing empty process `f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:655$65'.
Found and cleaned up 1 empty switch in `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:651$64'.
Removing empty process `f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:651$64'.
Removing empty process `f3m_nine.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:590$24'.
Removing empty process `f32m_cubic.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:320$23'.
Removing empty process `f36m_cubic.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:299$22'.
Found and cleaned up 2 empty switches in `\f32m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:258$21'.
Removing empty process `f32m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:258$21'.
Removing empty process `f32m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:255$20'.
Removing empty process `f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:191$19'.
Found and cleaned up 2 empty switches in `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:184$18'.
Removing empty process `f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:184$18'.
Found and cleaned up 2 empty switches in `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:175$17'.
Removing empty process `f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:175$17'.
Found and cleaned up 6 empty switches in `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:165$16'.
Removing empty process `f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:165$16'.
Found and cleaned up 2 empty switches in `\f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:159$14'.
Removing empty process `f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:159$14'.
Removing empty process `f36m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:154$13'.
Found and cleaned up 2 empty switches in `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:87$7'.
Removing empty process `duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:87$7'.
Found and cleaned up 1 empty switch in `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:81$6'.
Removing empty process `duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:81$6'.
Found and cleaned up 2 empty switches in `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:75$5'.
Removing empty process `duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:75$5'.
Found and cleaned up 2 empty switches in `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:61$4'.
Removing empty process `duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:61$4'.
Found and cleaned up 2 empty switches in `\duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:55$1'.
Removing empty process `duursma_lee_algo.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:55$1'.
Cleaned up 37 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module func6.
Optimizing module f3_sub.
Optimizing module f3m_sub.
Optimizing module f3m_neg.
Optimizing module f3m_mux6.
Optimizing module f3m_mux3.
Optimizing module f3m_mult3.
Optimizing module f3_mult.
Optimizing module func8.
Optimizing module func7.
Optimizing module f3m_mult.
<suppressed ~2 debug messages>
Optimizing module f3m_add3.
Optimizing module f3m_add.
Optimizing module f3_add.
Optimizing module f3m_nine.
Optimizing module f3m_cubic.
Optimizing module f32m_cubic.
Optimizing module f32m_sub.
Optimizing module f36m_cubic.
Optimizing module f32m_mux6.
Optimizing module f32m_mult.
Optimizing module f32m_neg.
Optimizing module f32m_add3.
Optimizing module f32m_add.
Optimizing module f32m_add4.
Optimizing module f36m_mult.
Optimizing module f3_sub1.
Optimizing module duursma_lee_algo.
<suppressed ~1 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module func6.
Optimizing module f3_sub.
Optimizing module f3m_sub.
Optimizing module f3m_neg.
Optimizing module f3m_mux6.
Optimizing module f3m_mux3.
Optimizing module f3m_mult3.
Optimizing module f3_mult.
Optimizing module func8.
Optimizing module func7.
Optimizing module f3m_mult.
Optimizing module f3m_add3.
Optimizing module f3m_add.
Optimizing module f3_add.
Optimizing module f3m_nine.
Optimizing module f3m_cubic.
Optimizing module f32m_cubic.
Optimizing module f32m_sub.
Optimizing module f36m_cubic.
Optimizing module f32m_mux6.
Optimizing module f32m_mult.
Optimizing module f32m_neg.
Optimizing module f32m_add3.
Optimizing module f32m_add.
Optimizing module f32m_add4.
Optimizing module f36m_mult.
Optimizing module f3_sub1.
Optimizing module duursma_lee_algo.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\func6'.
Finding identical cells in module `\f3_sub'.
Finding identical cells in module `\f3m_sub'.
Finding identical cells in module `\f3m_neg'.
Finding identical cells in module `\f3m_mux6'.
Finding identical cells in module `\f3m_mux3'.
Finding identical cells in module `\f3m_mult3'.
Finding identical cells in module `\f3_mult'.
<suppressed ~18 debug messages>
Finding identical cells in module `\func8'.
Finding identical cells in module `\func7'.
Finding identical cells in module `\f3m_mult'.
Finding identical cells in module `\f3m_add3'.
Finding identical cells in module `\f3m_add'.
Finding identical cells in module `\f3_add'.
<suppressed ~48 debug messages>
Finding identical cells in module `\f3m_nine'.
Finding identical cells in module `\f3m_cubic'.
Finding identical cells in module `\f32m_cubic'.
Finding identical cells in module `\f32m_sub'.
Finding identical cells in module `\f36m_cubic'.
Finding identical cells in module `\f32m_mux6'.
Finding identical cells in module `\f32m_mult'.
Finding identical cells in module `\f32m_neg'.
Finding identical cells in module `\f32m_add3'.
Finding identical cells in module `\f32m_add'.
Finding identical cells in module `\f32m_add4'.
Finding identical cells in module `\f36m_mult'.
Finding identical cells in module `\f3_sub1'.
<suppressed ~3 debug messages>
Finding identical cells in module `\duursma_lee_algo'.
Removed a total of 23 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \func6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \f3_sub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_sub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_neg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_mux6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_mux3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_mult3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \f3_mult..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \func8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \func7..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_mult..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \f3m_add3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_add..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3_add..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_nine..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_cubic..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_cubic..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_sub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f36m_cubic..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_mux6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_mult..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \f32m_neg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_add3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_add..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_add4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f36m_mult..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \f3_sub1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \duursma_lee_algo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \func6.
  Optimizing cells in module \f3_sub.
  Optimizing cells in module \f3m_sub.
  Optimizing cells in module \f3m_neg.
  Optimizing cells in module \f3m_mux6.
  Optimizing cells in module \f3m_mux3.
  Optimizing cells in module \f3m_mult3.
  Optimizing cells in module \f3_mult.
  Optimizing cells in module \func8.
  Optimizing cells in module \func7.
  Optimizing cells in module \f3m_mult.
  Optimizing cells in module \f3m_add3.
  Optimizing cells in module \f3m_add.
  Optimizing cells in module \f3_add.
  Optimizing cells in module \f3m_nine.
  Optimizing cells in module \f3m_cubic.
  Optimizing cells in module \f32m_cubic.
  Optimizing cells in module \f32m_sub.
  Optimizing cells in module \f36m_cubic.
  Optimizing cells in module \f32m_mux6.
  Optimizing cells in module \f32m_mult.
  Optimizing cells in module \f32m_neg.
  Optimizing cells in module \f32m_add3.
  Optimizing cells in module \f32m_add.
  Optimizing cells in module \f32m_add4.
  Optimizing cells in module \f36m_mult.
  Optimizing cells in module \f3_sub1.
  Optimizing cells in module \duursma_lee_algo.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\func6'.
Finding identical cells in module `\f3_sub'.
Finding identical cells in module `\f3m_sub'.
Finding identical cells in module `\f3m_neg'.
Finding identical cells in module `\f3m_mux6'.
Finding identical cells in module `\f3m_mux3'.
Finding identical cells in module `\f3m_mult3'.
Finding identical cells in module `\f3_mult'.
Finding identical cells in module `\func8'.
Finding identical cells in module `\func7'.
Finding identical cells in module `\f3m_mult'.
Finding identical cells in module `\f3m_add3'.
Finding identical cells in module `\f3m_add'.
Finding identical cells in module `\f3_add'.
Finding identical cells in module `\f3m_nine'.
Finding identical cells in module `\f3m_cubic'.
Finding identical cells in module `\f32m_cubic'.
Finding identical cells in module `\f32m_sub'.
Finding identical cells in module `\f36m_cubic'.
Finding identical cells in module `\f32m_mux6'.
Finding identical cells in module `\f32m_mult'.
Finding identical cells in module `\f32m_neg'.
Finding identical cells in module `\f32m_add3'.
Finding identical cells in module `\f32m_add'.
Finding identical cells in module `\f32m_add4'.
Finding identical cells in module `\f36m_mult'.
Finding identical cells in module `\f3_sub1'.
Finding identical cells in module `\duursma_lee_algo'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$3345 ($dff) from module func6 (D = \in, Q = \reg1, rval = 1'0).
Adding SRST signal on $procdff$3346 ($dff) from module func6 (D = \reg1, Q = \reg2, rval = 1'0).
Adding SRST signal on $procdff$3349 ($dff) from module f3m_mult3 (D = $procmux$3209_Y, Q = \done, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3394 ($sdff) from module f3m_mult3 (D = 1'1, Q = \done).
Adding SRST signal on $procdff$3350 ($dff) from module f3m_mult3 (D = $procmux$3215_Y, Q = \mult_reset, rval = 1'1).
Adding SRST signal on $procdff$3351 ($dff) from module f3m_mult3 (D = $procmux$3220_Y, Q = \K, rval = 4'1000).
Adding EN signal on $auto$ff.cc:262:slice$3397 ($sdff) from module f3m_mult3 (D = { 1'0 \K [3:1] }, Q = \K).
Adding EN signal on $procdff$3352 ($dff) from module f3m_mult3 (D = \o, Q = \c0).
Adding EN signal on $procdff$3353 ($dff) from module f3m_mult3 (D = \o, Q = \c1).
Adding EN signal on $procdff$3354 ($dff) from module f3m_mult3 (D = \o, Q = \c2).
Adding EN signal on $procdff$3360 ($dff) from module f3m_mult (D = \z, Q = \C).
Adding SRST signal on $procdff$3359 ($dff) from module f3m_mult (D = $procmux$3243_Y, Q = \done, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3403 ($sdff) from module f3m_mult (D = 1'1, Q = \done).
Adding SRST signal on $procdff$3356 ($dff) from module f3m_mult (D = $shr$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/duursma_lee_algo.v:669$67_Y, Q = \i, rval = 34'1000000000000000000000000000000000).
Adding SRST signal on $procdff$3358 ($dff) from module f3m_mult (D = \z2, Q = \z, rval = 194'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$3364 ($dff) from module f32m_mult (D = $procmux$3255_Y, Q = \done, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3407 ($sdff) from module f32m_mult (D = 1'1, Q = \done).
Adding EN signal on $procdff$3365 ($dff) from module f32m_mult (D = { \c1 \c0 }, Q = \c).
Adding SRST signal on $procdff$3369 ($dff) from module f36m_mult (D = $procmux$3261_Y, Q = \mult_reset, rval = 1'1).
Adding SRST signal on $procdff$3370 ($dff) from module f36m_mult (D = $procmux$3271_Y, Q = \done, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3415 ($sdff) from module f36m_mult (D = 1'1, Q = \done).
Adding EN signal on $procdff$3371 ($dff) from module f36m_mult (D = { \c2 \c1 \c0 }, Q = \c).
Adding EN signal on $procdff$3372 ($dff) from module f36m_mult (D = \o, Q = \x0).
Adding EN signal on $procdff$3373 ($dff) from module f36m_mult (D = \o, Q = \x1).
Adding EN signal on $procdff$3374 ($dff) from module f36m_mult (D = \o, Q = \x2).
Adding EN signal on $procdff$3375 ($dff) from module f36m_mult (D = \o, Q = \x3).
Adding EN signal on $procdff$3376 ($dff) from module f36m_mult (D = \o, Q = \x4).
Adding EN signal on $procdff$3377 ($dff) from module f36m_mult (D = \o, Q = \x5).
Adding SRST signal on $procdff$3378 ($dff) from module f36m_mult (D = $procmux$3288_Y, Q = \K, rval = 7'1000000).
Adding EN signal on $auto$ff.cc:262:slice$3428 ($sdff) from module f36m_mult (D = { 1'0 \K [6:1] }, Q = \K).
Adding SRST signal on $procdff$3391 ($dff) from module duursma_lee_algo (D = $procmux$3340_Y, Q = \i, rval = 98'10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$3430 ($sdff) from module duursma_lee_algo (D = { 1'0 \i [97:1] }, Q = \i).
Adding SRST signal on $procdff$3381 ($dff) from module duursma_lee_algo (D = $procmux$3294_Y, Q = \f3m_reset, rval = 1'1).
Adding SRST signal on $procdff$3382 ($dff) from module duursma_lee_algo (D = \f3m_reset, Q = \delay1, rval = 1'1).
Adding SRST signal on $procdff$3383 ($dff) from module duursma_lee_algo (D = \delay1, Q = \delay2, rval = 1'1).
Adding SRST signal on $procdff$3384 ($dff) from module duursma_lee_algo (D = $procmux$3310_Y, Q = \done, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3435 ($sdff) from module duursma_lee_algo (D = 1'1, Q = \done).
Adding EN signal on $procdff$3385 ($dff) from module duursma_lee_algo (D = \v8, Q = \out).
Adding SRST signal on $procdff$3386 ($dff) from module duursma_lee_algo (D = $procmux$3335_Y, Q = \t, rval
Adding EN signal on $auto$ff.cc:262:slice$3442 ($sdff) from module duursma_lee_algo (D = \v8, Q = \t).
Adding EN signal on $procdff$3387 ($dff) from module duursma_lee_algo (D = $procmux$3333_Y, Q = \a).
Adding EN signal on $procdff$3388 ($dff) from module duursma_lee_algo (D = $procmux$3328_Y, Q = \b).
Adding EN signal on $procdff$3389 ($dff) from module duursma_lee_algo (D = $procmux$3323_Y, Q = \y).
Adding SRST signal on $procdff$3390 ($dff) from module duursma_lee_algo (D = $procmux$3315_Y, Q = \d, rval = 2'01).
Adding EN signal on $auto$ff.cc:262:slice$3453 ($sdff) from module duursma_lee_algo (D = \v9, Q = \d).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \func6..
Finding unused cells or wires in module \f3_sub..
Finding unused cells or wires in module \f3m_sub..
Finding unused cells or wires in module \f3m_neg..
Finding unused cells or wires in module \f3m_mux6..
Finding unused cells or wires in module \f3m_mux3..
Finding unused cells or wires in module \f3m_mult3..
Finding unused cells or wires in module \f3_mult..
Finding unused cells or wires in module \func8..
Finding unused cells or wires in module \func7..
Finding unused cells or wires in module \f3m_mult..
Finding unused cells or wires in module \f3m_add3..
Finding unused cells or wires in module \f3m_add..
Finding unused cells or wires in module \f3_add..
Finding unused cells or wires in module \f3m_nine..
Finding unused cells or wires in module \f3m_cubic..
Finding unused cells or wires in module \f32m_cubic..
Finding unused cells or wires in module \f32m_sub..
Finding unused cells or wires in module \f36m_cubic..
Finding unused cells or wires in module \f32m_mux6..
Finding unused cells or wires in module \f32m_mult..
Finding unused cells or wires in module \f32m_neg..
Finding unused cells or wires in module \f32m_add3..
Finding unused cells or wires in module \f32m_add..
Finding unused cells or wires in module \f32m_add4..
Finding unused cells or wires in module \f36m_mult..
Finding unused cells or wires in module \f3_sub1..
Finding unused cells or wires in module \duursma_lee_algo..
Removed 45 unused cells and 569 unused wires.
<suppressed ~60 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module duursma_lee_algo.
<suppressed ~3 debug messages>
Optimizing module f32m_add.
Optimizing module f32m_add3.
Optimizing module f32m_add4.
Optimizing module f32m_cubic.
Optimizing module f32m_mult.
Optimizing module f32m_mux6.
Optimizing module f32m_neg.
Optimizing module f32m_sub.
Optimizing module f36m_cubic.
Optimizing module f36m_mult.
Optimizing module f3_add.
Optimizing module f3_mult.
Optimizing module f3_sub.
Optimizing module f3_sub1.
Optimizing module f3m_add.
Optimizing module f3m_add3.
Optimizing module f3m_cubic.
Optimizing module f3m_mult.
Optimizing module f3m_mult3.
Optimizing module f3m_mux3.
Optimizing module f3m_mux6.
Optimizing module f3m_neg.
Optimizing module f3m_nine.
Optimizing module f3m_sub.
Optimizing module func6.
Optimizing module func7.
Optimizing module func8.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \duursma_lee_algo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \f32m_add..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_add3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_add4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_cubic..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_mult..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_mux6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_neg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_sub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f36m_cubic..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f36m_mult..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \f3_add..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3_mult..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3_sub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3_sub1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_add..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_add3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_cubic..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_mult..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \f3m_mult3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \f3m_mux3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_mux6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_neg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_nine..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_sub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \func6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \func7..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \func8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \duursma_lee_algo.
  Optimizing cells in module \f32m_add.
  Optimizing cells in module \f32m_add3.
  Optimizing cells in module \f32m_add4.
  Optimizing cells in module \f32m_cubic.
  Optimizing cells in module \f32m_mult.
  Optimizing cells in module \f32m_mux6.
  Optimizing cells in module \f32m_neg.
  Optimizing cells in module \f32m_sub.
  Optimizing cells in module \f36m_cubic.
  Optimizing cells in module \f36m_mult.
  Optimizing cells in module \f3_add.
  Optimizing cells in module \f3_mult.
  Optimizing cells in module \f3_sub.
  Optimizing cells in module \f3_sub1.
  Optimizing cells in module \f3m_add.
  Optimizing cells in module \f3m_add3.
  Optimizing cells in module \f3m_cubic.
  Optimizing cells in module \f3m_mult.
  Optimizing cells in module \f3m_mult3.
  Optimizing cells in module \f3m_mux3.
  Optimizing cells in module \f3m_mux6.
  Optimizing cells in module \f3m_neg.
  Optimizing cells in module \f3m_nine.
  Optimizing cells in module \f3m_sub.
  Optimizing cells in module \func6.
  Optimizing cells in module \func7.
  Optimizing cells in module \func8.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\duursma_lee_algo'.
<suppressed ~6 debug messages>
Finding identical cells in module `\f32m_add'.
Finding identical cells in module `\f32m_add3'.
Finding identical cells in module `\f32m_add4'.
Finding identical cells in module `\f32m_cubic'.
Finding identical cells in module `\f32m_mult'.
Finding identical cells in module `\f32m_mux6'.
Finding identical cells in module `\f32m_neg'.
Finding identical cells in module `\f32m_sub'.
Finding identical cells in module `\f36m_cubic'.
Finding identical cells in module `\f36m_mult'.
Finding identical cells in module `\f3_add'.
Finding identical cells in module `\f3_mult'.
Finding identical cells in module `\f3_sub'.
Finding identical cells in module `\f3_sub1'.
Finding identical cells in module `\f3m_add'.
Finding identical cells in module `\f3m_add3'.
Finding identical cells in module `\f3m_cubic'.
Finding identical cells in module `\f3m_mult'.
Finding identical cells in module `\f3m_mult3'.
Finding identical cells in module `\f3m_mux3'.
Finding identical cells in module `\f3m_mux6'.
Finding identical cells in module `\f3m_neg'.
Finding identical cells in module `\f3m_nine'.
Finding identical cells in module `\f3m_sub'.
Finding identical cells in module `\func6'.
Finding identical cells in module `\func7'.
Finding identical cells in module `\func8'.
Removed a total of 2 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$3355 ($dff) from module f3m_mult (D = \B [193:188], Q = \y [193:188], rval = 6'000000).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \duursma_lee_algo..
Finding unused cells or wires in module \f32m_add..
Finding unused cells or wires in module \f32m_add3..
Finding unused cells or wires in module \f32m_add4..
Finding unused cells or wires in module \f32m_cubic..
Finding unused cells or wires in module \f32m_mult..
Finding unused cells or wires in module \f32m_mux6..
Finding unused cells or wires in module \f32m_neg..
Finding unused cells or wires in module \f32m_sub..
Finding unused cells or wires in module \f36m_cubic..
Finding unused cells or wires in module \f36m_mult..
Finding unused cells or wires in module \f3_add..
Finding unused cells or wires in module \f3_mult..
Finding unused cells or wires in module \f3_sub..
Finding unused cells or wires in module \f3_sub1..
Finding unused cells or wires in module \f3m_add..
Finding unused cells or wires in module \f3m_add3..
Finding unused cells or wires in module \f3m_cubic..
Finding unused cells or wires in module \f3m_mult..
Finding unused cells or wires in module \f3m_mult3..
Finding unused cells or wires in module \f3m_mux3..
Finding unused cells or wires in module \f3m_mux6..
Finding unused cells or wires in module \f3m_neg..
Finding unused cells or wires in module \f3m_nine..
Finding unused cells or wires in module \f3m_sub..
Finding unused cells or wires in module \func6..
Finding unused cells or wires in module \func7..
Finding unused cells or wires in module \func8..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module duursma_lee_algo.
Optimizing module f32m_add.
Optimizing module f32m_add3.
Optimizing module f32m_add4.
Optimizing module f32m_cubic.
Optimizing module f32m_mult.
Optimizing module f32m_mux6.
Optimizing module f32m_neg.
Optimizing module f32m_sub.
Optimizing module f36m_cubic.
Optimizing module f36m_mult.
Optimizing module f3_add.
Optimizing module f3_mult.
Optimizing module f3_sub.
Optimizing module f3_sub1.
Optimizing module f3m_add.
Optimizing module f3m_add3.
Optimizing module f3m_cubic.
Optimizing module f3m_mult.
Optimizing module f3m_mult3.
Optimizing module f3m_mux3.
Optimizing module f3m_mux6.
Optimizing module f3m_neg.
Optimizing module f3m_nine.
Optimizing module f3m_sub.
Optimizing module func6.
Optimizing module func7.
Optimizing module func8.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \duursma_lee_algo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \f32m_add..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_add3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_add4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_cubic..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_mult..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_mux6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_neg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f32m_sub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f36m_cubic..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f36m_mult..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \f3_add..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3_mult..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3_sub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3_sub1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_add..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_add3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_cubic..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_mult..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \f3m_mult3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \f3m_mux3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_mux6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_neg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_nine..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_sub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \func6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \func7..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \func8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \duursma_lee_algo.
  Optimizing cells in module \f32m_add.
  Optimizing cells in module \f32m_add3.
  Optimizing cells in module \f32m_add4.
  Optimizing cells in module \f32m_cubic.
  Optimizing cells in module \f32m_mult.
  Optimizing cells in module \f32m_mux6.
  Optimizing cells in module \f32m_neg.
  Optimizing cells in module \f32m_sub.
  Optimizing cells in module \f36m_cubic.
  Optimizing cells in module \f36m_mult.
  Optimizing cells in module \f3_add.
  Optimizing cells in module \f3_mult.
  Optimizing cells in module \f3_sub.
  Optimizing cells in module \f3_sub1.
  Optimizing cells in module \f3m_add.
  Optimizing cells in module \f3m_add3.
  Optimizing cells in module \f3m_cubic.
  Optimizing cells in module \f3m_mult.
  Optimizing cells in module \f3m_mult3.
  Optimizing cells in module \f3m_mux3.
  Optimizing cells in module \f3m_mux6.
  Optimizing cells in module \f3m_neg.
  Optimizing cells in module \f3m_nine.
  Optimizing cells in module \f3m_sub.
  Optimizing cells in module \func6.
  Optimizing cells in module \func7.
  Optimizing cells in module \func8.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\duursma_lee_algo'.
Finding identical cells in module `\f32m_add'.
Finding identical cells in module `\f32m_add3'.
Finding identical cells in module `\f32m_add4'.
Finding identical cells in module `\f32m_cubic'.
Finding identical cells in module `\f32m_mult'.
Finding identical cells in module `\f32m_mux6'.
Finding identical cells in module `\f32m_neg'.
Finding identical cells in module `\f32m_sub'.
Finding identical cells in module `\f36m_cubic'.
Finding identical cells in module `\f36m_mult'.
Finding identical cells in module `\f3_add'.
Finding identical cells in module `\f3_mult'.
Finding identical cells in module `\f3_sub'.
Finding identical cells in module `\f3_sub1'.
Finding identical cells in module `\f3m_add'.
Finding identical cells in module `\f3m_add3'.
Finding identical cells in module `\f3m_cubic'.
Finding identical cells in module `\f3m_mult'.
Finding identical cells in module `\f3m_mult3'.
Finding identical cells in module `\f3m_mux3'.
Finding identical cells in module `\f3m_mux6'.
Finding identical cells in module `\f3m_neg'.
Finding identical cells in module `\f3m_nine'.
Finding identical cells in module `\f3m_sub'.
Finding identical cells in module `\func6'.
Finding identical cells in module `\func7'.
Finding identical cells in module `\func8'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \duursma_lee_algo..
Finding unused cells or wires in module \f32m_add..
Finding unused cells or wires in module \f32m_add3..
Finding unused cells or wires in module \f32m_add4..
Finding unused cells or wires in module \f32m_cubic..
Finding unused cells or wires in module \f32m_mult..
Finding unused cells or wires in module \f32m_mux6..
Finding unused cells or wires in module \f32m_neg..
Finding unused cells or wires in module \f32m_sub..
Finding unused cells or wires in module \f36m_cubic..
Finding unused cells or wires in module \f36m_mult..
Finding unused cells or wires in module \f3_add..
Finding unused cells or wires in module \f3_mult..
Finding unused cells or wires in module \f3_sub..
Finding unused cells or wires in module \f3_sub1..
Finding unused cells or wires in module \f3m_add..
Finding unused cells or wires in module \f3m_add3..
Finding unused cells or wires in module \f3m_cubic..
Finding unused cells or wires in module \f3m_mult..
Finding unused cells or wires in module \f3m_mult3..
Finding unused cells or wires in module \f3m_mux3..
Finding unused cells or wires in module \f3m_mux6..
Finding unused cells or wires in module \f3m_neg..
Finding unused cells or wires in module \f3m_nine..
Finding unused cells or wires in module \f3m_sub..
Finding unused cells or wires in module \func6..
Finding unused cells or wires in module \func7..
Finding unused cells or wires in module \func8..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module duursma_lee_algo.
Optimizing module f32m_add.
Optimizing module f32m_add3.
Optimizing module f32m_add4.
Optimizing module f32m_cubic.
Optimizing module f32m_mult.
Optimizing module f32m_mux6.
Optimizing module f32m_neg.
Optimizing module f32m_sub.
Optimizing module f36m_cubic.
Optimizing module f36m_mult.
Optimizing module f3_add.
Optimizing module f3_mult.
Optimizing module f3_sub.
Optimizing module f3_sub1.
Optimizing module f3m_add.
Optimizing module f3m_add3.
Optimizing module f3m_cubic.
Optimizing module f3m_mult.
Optimizing module f3m_mult3.
Optimizing module f3m_mux3.
Optimizing module f3m_mux6.
Optimizing module f3m_neg.
Optimizing module f3m_nine.
Optimizing module f3m_sub.
Optimizing module func6.
Optimizing module func7.
Optimizing module func8.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== duursma_lee_algo ===

   Number of wires:                 47
   Number of wire bits:          10207
   Number of public wires:          36
   Number of public wire bits:    9038
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 36
     $dffe                        1746
     $mux                         1165
     $not                            1
     $or                             1
     $reduce_and                     2
     $reduce_bool                    2
     $sdff                           3
     $sdffe                       1265

=== f32m_add ===

   Number of wires:                  3
   Number of wire bits:           1164
   Number of public wires:           3
   Number of public wire bits:    1164
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2

=== f32m_add3 ===

   Number of wires:                  5
   Number of wire bits:           1940
   Number of public wires:           5
   Number of public wire bits:    1940
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2

=== f32m_add4 ===

   Number of wires:                  7
   Number of wire bits:           2716
   Number of public wires:           7
   Number of public wire bits:    2716
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3

=== f32m_cubic ===

   Number of wires:                  8
   Number of wire bits:           1747
   Number of public wires:           8
   Number of public wire bits:    1747
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $dff                          388

=== f32m_mult ===

   Number of wires:                 23
   Number of wire bits:           3500
   Number of public wires:          21
   Number of public wire bits:    3498
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $dff                            1
     $dffe                         388
     $not                            1
     $reduce_and                     2
     $sdffe                          1

=== f32m_mux6 ===

   Number of wires:                 13
   Number of wire bits:           2722
   Number of public wires:          13
   Number of public wire bits:    2722
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2

=== f32m_neg ===

   Number of wires:                  2
   Number of wire bits:            776
   Number of public wires:           2
   Number of public wire bits:     776
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2

=== f32m_sub ===

   Number of wires:                  3
   Number of wire bits:           1164
   Number of public wires:           3
   Number of public wire bits:    1164
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2

=== f36m_cubic ===

   Number of wires:                 13
   Number of wire bits:           6209
   Number of public wires:          13
   Number of public wire bits:    6209
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  7
     $dff                         1164

=== f36m_mult ===

   Number of wires:                 57
   Number of wire bits:          16710
   Number of public wires:          53
   Number of public wire bits:   16706
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 37
     $dff                          778
     $dffe                        3492
     $mux                            1
     $not                            1
     $or                             1
     $reduce_and                     2
     $sdff                           1
     $sdffe                          8

=== f3_add ===

   Number of wires:                 29
   Number of wire bits:             32
   Number of public wires:           9
   Number of public wire bits:      12
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 22
     $and                           14
     $not                            4
     $or                             4

=== f3_mult ===

   Number of wires:                 21
   Number of wire bits:             24
   Number of public wires:           7
   Number of public wire bits:      10
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 16
     $and                           10
     $not                            4
     $or                             2

=== f3_sub ===

   Number of wires:                  3
   Number of wire bits:              6
   Number of public wires:           3
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1

=== f3_sub1 ===

   Number of wires:                  4
   Number of wire bits:              6
   Number of public wires:           2
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $and                            2
     $not                            2

=== f3m_add ===

   Number of wires:                  3
   Number of wire bits:            582
   Number of public wires:           3
   Number of public wire bits:     582
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 97

=== f3m_add3 ===

   Number of wires:                  5
   Number of wire bits:            970
   Number of public wires:           5
   Number of public wire bits:     970
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2

=== f3m_cubic ===

   Number of wires:                 90
   Number of wire bits:            564
   Number of public wires:          90
   Number of public wire bits:     564
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 88

=== f3m_mult ===

   Number of wires:                 17
   Number of wire bits:           2366
   Number of public wires:          15
   Number of public wire bits:    1978
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $dff                          382
     $dffe                         194
     $mux                          388
     $sdff                         234
     $sdffe                          1

=== f3m_mult3 ===

   Number of wires:                 27
   Number of wire bits:           2346
   Number of public wires:          25
   Number of public wire bits:    2344
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 14
     $dff                            2
     $dffe                         582
     $mux                            1
     $or                             1
     $sdff                           1
     $sdffe                          5

=== f3m_mux3 ===

   Number of wires:                783
   Number of wire bits:           1555
   Number of public wires:           7
   Number of public wire bits:     779
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                970
     $and                          582
     $or                           388

=== f3m_mux6 ===

   Number of wires:               1953
   Number of wire bits:           3304
   Number of public wires:          13
   Number of public wire bits:    1364
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2134
     $and                         1164
     $or                           970

=== f3m_neg ===

   Number of wires:                  2
   Number of wire bits:            388
   Number of public wires:           2
   Number of public wire bits:     388
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== f3m_nine ===

   Number of wires:                  5
   Number of wire bits:            777
   Number of public wires:           5
   Number of public wire bits:     777
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $dff                          194

=== f3m_sub ===

   Number of wires:                  3
   Number of wire bits:            582
   Number of public wires:           3
   Number of public wire bits:     582
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 97

=== func6 ===

   Number of wires:                  8
   Number of wire bits:             39
   Number of public wires:           6
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $eq                             2
     $mux                           32
     $sdff                           2

=== func7 ===

   Number of wires:                  5
   Number of wire bits:            394
   Number of public wires:           5
   Number of public wire bits:     394
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3

=== func8 ===

   Number of wires:                491
   Number of wire bits:           1370
   Number of public wires:         491
   Number of public wire bits:    1370
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                488

=== design hierarchy ===

   duursma_lee_algo                  1
     f36m_cubic                      0
       f32m_add                      0
         f3m_add                     0
           f3_add                    0
       f32m_cubic                    0
         f3m_cubic                   0
           f3_add                    0
         f3m_neg                     0
       f32m_sub                      0
         f3m_sub                     0
           f3_sub                    0
             f3_add                  0
     f36m_mult                       0
       f32m_add                      0
         f3m_add                     0
           f3_add                    0
       f32m_add3                     0
         f32m_add                    0
           f3m_add                   0
             f3_add                  0
       f32m_add4                     0
         f32m_add                    0
           f3m_add                   0
             f3_add                  0
       f32m_mult                     0
         f3m_add                     0
           f3_add                    0
         f3m_mult3                   0
           f3m_mult                  0
             f3m_add                 0
               f3_add                0
             func7                   0
               f3_add                0
             func8                   0
               f3_add                0
               f3_mult               0
           f3m_mux3                  0
           func6                     0
         f3m_sub                     0
           f3_sub                    0
             f3_add                  0
         func6                       0
       f32m_mux6                     0
         f3m_mux6                    0
       f32m_neg                      0
         f3m_neg                     0
       func6                         0
     f3_sub1                         0
     f3m_add3                        0
       f3m_add                       0
         f3_add                      0
     f3m_cubic                       0
       f3_add                        0
     f3m_mult                        0
       f3m_add                       0
         f3_add                      0
       func7                         0
         f3_add                      0
       func8                         0
         f3_add                      0
         f3_mult                     0
     f3m_neg                         0
     f3m_nine                        0
       f3m_cubic                     0
         f3_add                      0
     func6                           0

   Number of wires:                 47
   Number of wire bits:          10207
   Number of public wires:          36
   Number of public wire bits:    9038
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 36
     $dffe                        1746
     $mux                         1165
     $not                            1
     $or                             1
     $reduce_and                     2
     $reduce_bool                    2
     $sdff                           3
     $sdffe                       1265

End of script. Logfile hash: 6fbd0f04f5, CPU: user 2.39s system 0.02s, MEM: 50.76 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 26% 3x opt_clean (0 sec), 19% 5x opt_expr (0 sec), ...
