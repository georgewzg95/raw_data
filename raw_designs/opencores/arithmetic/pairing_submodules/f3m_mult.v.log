
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v' to AST representation.
Generating RTLIL representation for module `\f3m_mult'.
Generating RTLIL representation for module `\func7'.
Generating RTLIL representation for module `\func8'.
Generating RTLIL representation for module `\f3_mult'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: f3_mult             
root of   1 design levels: func8               
root of   0 design levels: func7               
root of   2 design levels: f3m_mult            
Automatically selected f3m_mult as design top module.

2.2. Analyzing design hierarchy..
Top module:  \f3m_mult
Used module:     \func7
Used module:     \func8
Used module:         \f3_mult

2.3. Analyzing design hierarchy..
Top module:  \f3m_mult
Used module:     \func7
Used module:     \func8
Used module:         \f3_mult
Removed 0 unused modules.
Mapping positional arguments of cell func8.m972 (f3_mult).
Mapping positional arguments of cell func8.m970 (f3_mult).
Mapping positional arguments of cell func8.m968 (f3_mult).
Mapping positional arguments of cell func8.m962 (f3_mult).
Mapping positional arguments of cell func8.m960 (f3_mult).
Mapping positional arguments of cell func8.m958 (f3_mult).
Mapping positional arguments of cell func8.m952 (f3_mult).
Mapping positional arguments of cell func8.m950 (f3_mult).
Mapping positional arguments of cell func8.m948 (f3_mult).
Mapping positional arguments of cell func8.m942 (f3_mult).
Mapping positional arguments of cell func8.m940 (f3_mult).
Mapping positional arguments of cell func8.m938 (f3_mult).
Mapping positional arguments of cell func8.m932 (f3_mult).
Mapping positional arguments of cell func8.m930 (f3_mult).
Mapping positional arguments of cell func8.m928 (f3_mult).
Mapping positional arguments of cell func8.m922 (f3_mult).
Mapping positional arguments of cell func8.m920 (f3_mult).
Mapping positional arguments of cell func8.m918 (f3_mult).
Mapping positional arguments of cell func8.m912 (f3_mult).
Mapping positional arguments of cell func8.m910 (f3_mult).
Mapping positional arguments of cell func8.m908 (f3_mult).
Mapping positional arguments of cell func8.m902 (f3_mult).
Mapping positional arguments of cell func8.m900 (f3_mult).
Mapping positional arguments of cell func8.m898 (f3_mult).
Mapping positional arguments of cell func8.m892 (f3_mult).
Mapping positional arguments of cell func8.m890 (f3_mult).
Mapping positional arguments of cell func8.m888 (f3_mult).
Mapping positional arguments of cell func8.m882 (f3_mult).
Mapping positional arguments of cell func8.m880 (f3_mult).
Mapping positional arguments of cell func8.m878 (f3_mult).
Mapping positional arguments of cell func8.m872 (f3_mult).
Mapping positional arguments of cell func8.m870 (f3_mult).
Mapping positional arguments of cell func8.m868 (f3_mult).
Mapping positional arguments of cell func8.m862 (f3_mult).
Mapping positional arguments of cell func8.m860 (f3_mult).
Mapping positional arguments of cell func8.m858 (f3_mult).
Mapping positional arguments of cell func8.m852 (f3_mult).
Mapping positional arguments of cell func8.m850 (f3_mult).
Mapping positional arguments of cell func8.m848 (f3_mult).
Mapping positional arguments of cell func8.m842 (f3_mult).
Mapping positional arguments of cell func8.m840 (f3_mult).
Mapping positional arguments of cell func8.m838 (f3_mult).
Mapping positional arguments of cell func8.m832 (f3_mult).
Mapping positional arguments of cell func8.m830 (f3_mult).
Mapping positional arguments of cell func8.m828 (f3_mult).
Mapping positional arguments of cell func8.m822 (f3_mult).
Mapping positional arguments of cell func8.m820 (f3_mult).
Mapping positional arguments of cell func8.m818 (f3_mult).
Mapping positional arguments of cell func8.m812 (f3_mult).
Mapping positional arguments of cell func8.m810 (f3_mult).
Mapping positional arguments of cell func8.m808 (f3_mult).
Mapping positional arguments of cell func8.m802 (f3_mult).
Mapping positional arguments of cell func8.m800 (f3_mult).
Mapping positional arguments of cell func8.m798 (f3_mult).
Mapping positional arguments of cell func8.m792 (f3_mult).
Mapping positional arguments of cell func8.m790 (f3_mult).
Mapping positional arguments of cell func8.m788 (f3_mult).
Mapping positional arguments of cell func8.m782 (f3_mult).
Mapping positional arguments of cell func8.m780 (f3_mult).
Mapping positional arguments of cell func8.m778 (f3_mult).
Mapping positional arguments of cell func8.m772 (f3_mult).
Mapping positional arguments of cell func8.m770 (f3_mult).
Mapping positional arguments of cell func8.m768 (f3_mult).
Mapping positional arguments of cell func8.m762 (f3_mult).
Mapping positional arguments of cell func8.m760 (f3_mult).
Mapping positional arguments of cell func8.m758 (f3_mult).
Mapping positional arguments of cell func8.m752 (f3_mult).
Mapping positional arguments of cell func8.m750 (f3_mult).
Mapping positional arguments of cell func8.m748 (f3_mult).
Mapping positional arguments of cell func8.m742 (f3_mult).
Mapping positional arguments of cell func8.m740 (f3_mult).
Mapping positional arguments of cell func8.m738 (f3_mult).
Mapping positional arguments of cell func8.m732 (f3_mult).
Mapping positional arguments of cell func8.m730 (f3_mult).
Mapping positional arguments of cell func8.m728 (f3_mult).
Mapping positional arguments of cell func8.m722 (f3_mult).
Mapping positional arguments of cell func8.m720 (f3_mult).
Mapping positional arguments of cell func8.m718 (f3_mult).
Mapping positional arguments of cell func8.m712 (f3_mult).
Mapping positional arguments of cell func8.m710 (f3_mult).
Mapping positional arguments of cell func8.m708 (f3_mult).
Mapping positional arguments of cell func8.m702 (f3_mult).
Mapping positional arguments of cell func8.m700 (f3_mult).
Mapping positional arguments of cell func8.m698 (f3_mult).
Mapping positional arguments of cell func8.m692 (f3_mult).
Mapping positional arguments of cell func8.m690 (f3_mult).
Mapping positional arguments of cell func8.m688 (f3_mult).
Mapping positional arguments of cell func8.m682 (f3_mult).
Mapping positional arguments of cell func8.m680 (f3_mult).
Mapping positional arguments of cell func8.m678 (f3_mult).
Mapping positional arguments of cell func8.m672 (f3_mult).
Mapping positional arguments of cell func8.m670 (f3_mult).
Mapping positional arguments of cell func8.m668 (f3_mult).
Mapping positional arguments of cell func8.m662 (f3_mult).
Mapping positional arguments of cell func8.m660 (f3_mult).
Mapping positional arguments of cell func8.m658 (f3_mult).
Mapping positional arguments of cell func8.m652 (f3_mult).
Mapping positional arguments of cell func8.m650 (f3_mult).
Mapping positional arguments of cell func8.m648 (f3_mult).
Mapping positional arguments of cell func8.m642 (f3_mult).
Mapping positional arguments of cell func8.m640 (f3_mult).
Mapping positional arguments of cell func8.m638 (f3_mult).
Mapping positional arguments of cell func8.m632 (f3_mult).
Mapping positional arguments of cell func8.m630 (f3_mult).
Mapping positional arguments of cell func8.m628 (f3_mult).
Mapping positional arguments of cell func8.m622 (f3_mult).
Mapping positional arguments of cell func8.m620 (f3_mult).
Mapping positional arguments of cell func8.m618 (f3_mult).
Mapping positional arguments of cell func8.m612 (f3_mult).
Mapping positional arguments of cell func8.m610 (f3_mult).
Mapping positional arguments of cell func8.m608 (f3_mult).
Mapping positional arguments of cell func8.m602 (f3_mult).
Mapping positional arguments of cell func8.m600 (f3_mult).
Mapping positional arguments of cell func8.m598 (f3_mult).
Mapping positional arguments of cell func8.m592 (f3_mult).
Mapping positional arguments of cell func8.m590 (f3_mult).
Mapping positional arguments of cell func8.m588 (f3_mult).
Mapping positional arguments of cell func8.m582 (f3_mult).
Mapping positional arguments of cell func8.m580 (f3_mult).
Mapping positional arguments of cell func8.m578 (f3_mult).
Mapping positional arguments of cell func8.m572 (f3_mult).
Mapping positional arguments of cell func8.m570 (f3_mult).
Mapping positional arguments of cell func8.m568 (f3_mult).
Mapping positional arguments of cell func8.m562 (f3_mult).
Mapping positional arguments of cell func8.m560 (f3_mult).
Mapping positional arguments of cell func8.m558 (f3_mult).
Mapping positional arguments of cell func8.m552 (f3_mult).
Mapping positional arguments of cell func8.m550 (f3_mult).
Mapping positional arguments of cell func8.m548 (f3_mult).
Mapping positional arguments of cell func8.m542 (f3_mult).
Mapping positional arguments of cell func8.m540 (f3_mult).
Mapping positional arguments of cell func8.m538 (f3_mult).
Mapping positional arguments of cell func8.m532 (f3_mult).
Mapping positional arguments of cell func8.m530 (f3_mult).
Mapping positional arguments of cell func8.m528 (f3_mult).
Mapping positional arguments of cell func8.m522 (f3_mult).
Mapping positional arguments of cell func8.m520 (f3_mult).
Mapping positional arguments of cell func8.m518 (f3_mult).
Mapping positional arguments of cell func8.m512 (f3_mult).
Mapping positional arguments of cell func8.m510 (f3_mult).
Mapping positional arguments of cell func8.m508 (f3_mult).
Mapping positional arguments of cell func8.m502 (f3_mult).
Mapping positional arguments of cell func8.m500 (f3_mult).
Mapping positional arguments of cell func8.m498 (f3_mult).
Mapping positional arguments of cell func8.m492 (f3_mult).
Mapping positional arguments of cell func8.m490 (f3_mult).
Mapping positional arguments of cell func8.m488 (f3_mult).
Mapping positional arguments of cell func8.m482 (f3_mult).
Mapping positional arguments of cell func8.m480 (f3_mult).
Mapping positional arguments of cell func8.m478 (f3_mult).
Mapping positional arguments of cell func8.m472 (f3_mult).
Mapping positional arguments of cell func8.m470 (f3_mult).
Mapping positional arguments of cell func8.m468 (f3_mult).
Mapping positional arguments of cell func8.m462 (f3_mult).
Mapping positional arguments of cell func8.m460 (f3_mult).
Mapping positional arguments of cell func8.m458 (f3_mult).
Mapping positional arguments of cell func8.m452 (f3_mult).
Mapping positional arguments of cell func8.m450 (f3_mult).
Mapping positional arguments of cell func8.m448 (f3_mult).
Mapping positional arguments of cell func8.m442 (f3_mult).
Mapping positional arguments of cell func8.m440 (f3_mult).
Mapping positional arguments of cell func8.m438 (f3_mult).
Mapping positional arguments of cell func8.m432 (f3_mult).
Mapping positional arguments of cell func8.m430 (f3_mult).
Mapping positional arguments of cell func8.m428 (f3_mult).
Mapping positional arguments of cell func8.m422 (f3_mult).
Mapping positional arguments of cell func8.m420 (f3_mult).
Mapping positional arguments of cell func8.m418 (f3_mult).
Mapping positional arguments of cell func8.m412 (f3_mult).
Mapping positional arguments of cell func8.m410 (f3_mult).
Mapping positional arguments of cell func8.m408 (f3_mult).
Mapping positional arguments of cell func8.m402 (f3_mult).
Mapping positional arguments of cell func8.m400 (f3_mult).
Mapping positional arguments of cell func8.m398 (f3_mult).
Mapping positional arguments of cell func8.m392 (f3_mult).
Mapping positional arguments of cell func8.m390 (f3_mult).
Mapping positional arguments of cell func8.m388 (f3_mult).
Mapping positional arguments of cell func8.m382 (f3_mult).
Mapping positional arguments of cell func8.m380 (f3_mult).
Mapping positional arguments of cell func8.m378 (f3_mult).
Mapping positional arguments of cell func8.m372 (f3_mult).
Mapping positional arguments of cell func8.m370 (f3_mult).
Mapping positional arguments of cell func8.m368 (f3_mult).
Mapping positional arguments of cell func8.m362 (f3_mult).
Mapping positional arguments of cell func8.m360 (f3_mult).
Mapping positional arguments of cell func8.m358 (f3_mult).
Mapping positional arguments of cell func8.m352 (f3_mult).
Mapping positional arguments of cell func8.m350 (f3_mult).
Mapping positional arguments of cell func8.m348 (f3_mult).
Mapping positional arguments of cell func8.m342 (f3_mult).
Mapping positional arguments of cell func8.m340 (f3_mult).
Mapping positional arguments of cell func8.m338 (f3_mult).
Mapping positional arguments of cell func8.m332 (f3_mult).
Mapping positional arguments of cell func8.m330 (f3_mult).
Mapping positional arguments of cell func8.m328 (f3_mult).
Mapping positional arguments of cell func8.m322 (f3_mult).
Mapping positional arguments of cell func8.m320 (f3_mult).
Mapping positional arguments of cell func8.m318 (f3_mult).
Mapping positional arguments of cell func8.m312 (f3_mult).
Mapping positional arguments of cell func8.m310 (f3_mult).
Mapping positional arguments of cell func8.m308 (f3_mult).
Mapping positional arguments of cell func8.m302 (f3_mult).
Mapping positional arguments of cell func8.m300 (f3_mult).
Mapping positional arguments of cell func8.m298 (f3_mult).
Mapping positional arguments of cell func8.m292 (f3_mult).
Mapping positional arguments of cell func8.m290 (f3_mult).
Mapping positional arguments of cell func8.m288 (f3_mult).
Mapping positional arguments of cell func8.m282 (f3_mult).
Mapping positional arguments of cell func8.m280 (f3_mult).
Mapping positional arguments of cell func8.m278 (f3_mult).
Mapping positional arguments of cell func8.m272 (f3_mult).
Mapping positional arguments of cell func8.m270 (f3_mult).
Mapping positional arguments of cell func8.m268 (f3_mult).
Mapping positional arguments of cell func8.m262 (f3_mult).
Mapping positional arguments of cell func8.m260 (f3_mult).
Mapping positional arguments of cell func8.m258 (f3_mult).
Mapping positional arguments of cell func8.m252 (f3_mult).
Mapping positional arguments of cell func8.m250 (f3_mult).
Mapping positional arguments of cell func8.m248 (f3_mult).
Mapping positional arguments of cell func8.m242 (f3_mult).
Mapping positional arguments of cell func8.m240 (f3_mult).
Mapping positional arguments of cell func8.m238 (f3_mult).
Mapping positional arguments of cell func8.m232 (f3_mult).
Mapping positional arguments of cell func8.m230 (f3_mult).
Mapping positional arguments of cell func8.m228 (f3_mult).
Mapping positional arguments of cell func8.m222 (f3_mult).
Mapping positional arguments of cell func8.m220 (f3_mult).
Mapping positional arguments of cell func8.m218 (f3_mult).
Mapping positional arguments of cell func8.m212 (f3_mult).
Mapping positional arguments of cell func8.m210 (f3_mult).
Mapping positional arguments of cell func8.m208 (f3_mult).
Mapping positional arguments of cell func8.m202 (f3_mult).
Mapping positional arguments of cell func8.m200 (f3_mult).
Mapping positional arguments of cell func8.m198 (f3_mult).
Mapping positional arguments of cell func8.m192 (f3_mult).
Mapping positional arguments of cell func8.m190 (f3_mult).
Mapping positional arguments of cell func8.m188 (f3_mult).
Mapping positional arguments of cell func8.m182 (f3_mult).
Mapping positional arguments of cell func8.m180 (f3_mult).
Mapping positional arguments of cell func8.m178 (f3_mult).
Mapping positional arguments of cell func8.m172 (f3_mult).
Mapping positional arguments of cell func8.m170 (f3_mult).
Mapping positional arguments of cell func8.m168 (f3_mult).
Mapping positional arguments of cell func8.m162 (f3_mult).
Mapping positional arguments of cell func8.m160 (f3_mult).
Mapping positional arguments of cell func8.m158 (f3_mult).
Mapping positional arguments of cell func8.m152 (f3_mult).
Mapping positional arguments of cell func8.m150 (f3_mult).
Mapping positional arguments of cell func8.m148 (f3_mult).
Mapping positional arguments of cell func8.m140 (f3_mult).
Mapping positional arguments of cell func8.m138 (f3_mult).
Mapping positional arguments of cell func8.m136 (f3_mult).
Mapping positional arguments of cell func8.m126 (f3_mult).
Mapping positional arguments of cell func8.m124 (f3_mult).
Mapping positional arguments of cell func8.m122 (f3_mult).
Mapping positional arguments of cell func8.m116 (f3_mult).
Mapping positional arguments of cell func8.m114 (f3_mult).
Mapping positional arguments of cell func8.m112 (f3_mult).
Mapping positional arguments of cell func8.m106 (f3_mult).
Mapping positional arguments of cell func8.m104 (f3_mult).
Mapping positional arguments of cell func8.m102 (f3_mult).
Mapping positional arguments of cell func8.m96 (f3_mult).
Mapping positional arguments of cell func8.m94 (f3_mult).
Mapping positional arguments of cell func8.m92 (f3_mult).
Mapping positional arguments of cell func8.m86 (f3_mult).
Mapping positional arguments of cell func8.m84 (f3_mult).
Mapping positional arguments of cell func8.m82 (f3_mult).
Mapping positional arguments of cell func8.m76 (f3_mult).
Mapping positional arguments of cell func8.m74 (f3_mult).
Mapping positional arguments of cell func8.m72 (f3_mult).
Mapping positional arguments of cell func8.m66 (f3_mult).
Mapping positional arguments of cell func8.m64 (f3_mult).
Mapping positional arguments of cell func8.m62 (f3_mult).
Mapping positional arguments of cell func8.m56 (f3_mult).
Mapping positional arguments of cell func8.m54 (f3_mult).
Mapping positional arguments of cell func8.m52 (f3_mult).
Mapping positional arguments of cell func8.m46 (f3_mult).
Mapping positional arguments of cell func8.m44 (f3_mult).
Mapping positional arguments of cell func8.m42 (f3_mult).
Mapping positional arguments of cell func8.m36 (f3_mult).
Mapping positional arguments of cell func8.m34 (f3_mult).
Mapping positional arguments of cell func8.m32 (f3_mult).
Mapping positional arguments of cell func8.m26 (f3_mult).
Mapping positional arguments of cell func8.m24 (f3_mult).
Mapping positional arguments of cell func8.m22 (f3_mult).
Mapping positional arguments of cell func8.m16 (f3_mult).
Mapping positional arguments of cell func8.m14 (f3_mult).
Mapping positional arguments of cell func8.m12 (f3_mult).
Mapping positional arguments of cell func8.m6 (f3_mult).
Mapping positional arguments of cell func8.m4 (f3_mult).
Mapping positional arguments of cell func8.m2 (f3_mult).
Mapping positional arguments of cell f3m_mult.ins3 (func7).
Mapping positional arguments of cell f3m_mult.ins1 (func8).

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:42$4 in module f3m_mult.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:36$3 in module f3m_mult.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 4 redundant assignments.
Promoted 0 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:42$4'.
     1/4: $0\i[33:0]
     2/4: $0\z[193:0]
     3/4: $0\y[193:0]
     4/4: $0\x[193:0]
Creating decoders for process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:36$3'.
     1/1: $0\done[0:0]
Creating decoders for process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:32$2'.
     1/1: $0\C[193:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\f3m_mult.\x' using process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:42$4'.
  created $dff cell `$procdff$47' with positive edge clock.
Creating register for signal `\f3m_mult.\y' using process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:42$4'.
  created $dff cell `$procdff$48' with positive edge clock.
Creating register for signal `\f3m_mult.\z' using process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:42$4'.
  created $dff cell `$procdff$49' with positive edge clock.
Creating register for signal `\f3m_mult.\i' using process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:42$4'.
  created $dff cell `$procdff$50' with positive edge clock.
Creating register for signal `\f3m_mult.\done' using process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:36$3'.
  created $dff cell `$procdff$51' with positive edge clock.
Creating register for signal `\f3m_mult.\C' using process `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:32$2'.
  created $dff cell `$procdff$52' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:42$4'.
Removing empty process `f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:42$4'.
Found and cleaned up 2 empty switches in `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:36$3'.
Removing empty process `f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:36$3'.
Found and cleaned up 1 empty switch in `\f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:32$2'.
Removing empty process `f3m_mult.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:32$2'.
Cleaned up 4 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module f3_mult.
Optimizing module func8.
Optimizing module func7.
Optimizing module f3m_mult.
<suppressed ~2 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module f3_mult.
Optimizing module func8.
Optimizing module func7.
Optimizing module f3m_mult.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\f3_mult'.
<suppressed ~18 debug messages>
Finding identical cells in module `\func8'.
Finding identical cells in module `\func7'.
Finding identical cells in module `\f3m_mult'.
Removed a total of 6 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \f3_mult..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \func8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \func7..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_mult..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \f3_mult.
  Optimizing cells in module \func8.
  Optimizing cells in module \func7.
  Optimizing cells in module \f3m_mult.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\f3_mult'.
Finding identical cells in module `\func8'.
Finding identical cells in module `\func7'.
Finding identical cells in module `\f3m_mult'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$52 ($dff) from module f3m_mult (D = \z, Q = \C).
Adding SRST signal on $procdff$51 ($dff) from module f3m_mult (D = $procmux$40_Y, Q = \done, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$54 ($sdff) from module f3m_mult (D = 1'1, Q = \done).
Adding SRST signal on $procdff$49 ($dff) from module f3m_mult (D = \z2, Q = \z, rval = 194'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$50 ($dff) from module f3m_mult (D = $shr$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/pairing_submodules/f3m_mult.v:50$5_Y, Q = \i, rval = 34'1000000000000000000000000000000000).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \f3_mult..
Finding unused cells or wires in module \func8..
Finding unused cells or wires in module \func7..
Finding unused cells or wires in module \f3m_mult..
Removed 5 unused cells and 29 unused wires.
<suppressed ~8 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module f3_mult.
Optimizing module f3m_mult.
Optimizing module func7.
Optimizing module func8.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \f3_mult..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_mult..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \func7..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \func8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \f3_mult.
  Optimizing cells in module \f3m_mult.
  Optimizing cells in module \func7.
  Optimizing cells in module \func8.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\f3_mult'.
Finding identical cells in module `\f3m_mult'.
Finding identical cells in module `\func7'.
Finding identical cells in module `\func8'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$48 ($dff) from module f3m_mult (D = \B [193:188], Q = \y [193:188], rval = 6'000000).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \f3_mult..
Finding unused cells or wires in module \f3m_mult..
Finding unused cells or wires in module \func7..
Finding unused cells or wires in module \func8..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module f3_mult.
Optimizing module f3m_mult.
Optimizing module func7.
Optimizing module func8.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \f3_mult..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \f3m_mult..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \func7..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \func8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \f3_mult.
  Optimizing cells in module \f3m_mult.
  Optimizing cells in module \func7.
  Optimizing cells in module \func8.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\f3_mult'.
Finding identical cells in module `\f3m_mult'.
Finding identical cells in module `\func7'.
Finding identical cells in module `\func8'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \f3_mult..
Finding unused cells or wires in module \f3m_mult..
Finding unused cells or wires in module \func7..
Finding unused cells or wires in module \func8..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module f3_mult.
Optimizing module f3m_mult.
Optimizing module func7.
Optimizing module func8.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== f3_mult ===

   Number of wires:                 21
   Number of wire bits:             24
   Number of public wires:           7
   Number of public wire bits:      10
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 16
     $and                           10
     $not                            4
     $or                             2

=== f3m_mult ===

   Number of wires:                 17
   Number of wire bits:           2366
   Number of public wires:          15
   Number of public wire bits:    1978
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $dff                            2
     $dffe                           1
     $mux                            2
     $sdff                           3
     $sdffe                          1
     f3m_add                         1
     func7                           1
     func8                           1

=== func7 ===

   Number of wires:                  5
   Number of wire bits:            394
   Number of public wires:           5
   Number of public wire bits:     394
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     f3_add                          3

=== func8 ===

   Number of wires:                491
   Number of wire bits:           1370
   Number of public wires:         491
   Number of public wire bits:    1370
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                488
     f3_add                        197
     f3_mult                       291

=== design hierarchy ===

   f3m_mult                          1
     func7                           1
     func8                           1
       f3_mult                     291

   Number of wires:               6624
   Number of wire bits:          11114
   Number of public wires:        2548
   Number of public wire bits:    6652
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4866
     $and                         2910
     $dff                            2
     $dffe                           1
     $mux                            2
     $not                         1164
     $or                           582
     $sdff                           3
     $sdffe                          1
     f3_add                        200
     f3m_add                         1

End of script. Logfile hash: 8c4d48164e, CPU: user 0.18s system 0.00s, MEM: 20.32 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 31% 2x read_verilog (0 sec), 24% 3x opt_clean (0 sec), ...
