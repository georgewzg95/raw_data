
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v' to AST representation.
Warning: Encountered `translate_off' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using a portable and standards-compliant construct such as `ifdef is recommended!
Generating RTLIL representation for module `\ldpc_cn'.
Warning: Replacing memory \addr_del2 with list of registers. See /home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:467
Warning: Replacing memory \we_del2 with list of registers. See /home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:466
Warning: Replacing memory \addr_cn_del with list of registers. See /home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:155
Warning: Replacing memory \sh_msg_del with list of registers. See /home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:154
Warning: Replacing memory \cn_we_del with list of registers. See /home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:153
Warning: Replacing memory \cn_rd_del with list of registers. See /home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:152
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: ldpc_cn             
Automatically selected ldpc_cn as design top module.

2.2. Analyzing design hierarchy..
Top module:  \ldpc_cn

2.3. Analyzing design hierarchy..
Top module:  \ldpc_cn
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:462$120 in module ldpc_cn.
Marked 8 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90 in module ldpc_cn.
Marked 6 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43 in module ldpc_cn.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:257$32 in module ldpc_cn.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27 in module ldpc_cn.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:147$9 in module ldpc_cn.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 52 redundant assignments.
Promoted 19 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst in `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:462$120'.
Found async reset \rst in `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
Found async reset \rst in `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
Found async reset \rst in `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:257$32'.
Found async reset \rst in `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
Found async reset \rst in `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:147$9'.

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:462$120'.
     1/7: $0\addr_del2[2][7:0]
     2/7: $0\we_del2[2][0:0]
     3/7: $1\loopvar2[31:0]
     4/7: $0\addr_del2[1][7:0]
     5/7: $0\we_del2[1][0:0]
     6/7: $0\addr_del2[0][7:0]
     7/7: $0\we_del2[0][0:0]
Creating decoders for process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
     1/18: $3$lookahead\new_signs$89[29:0]$104
     2/18: $2$bitselwrite$data$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:404$7[29:0]$103
     3/18: $2$bitselwrite$mask$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:404$6[29:0]$102
     4/18: $2$lookahead\new_signs$89[29:0]$101
     5/18: $0\new_last_nextleast_llr[4:0]
     6/18: $0\new_last_least_llr[4:0]
     7/18: $0\new_last_leastpos[4:0]
     8/18: $0\new_last_sign_result[0:0]
     9/18: $1$lookahead\new_signs$89[29:0]$96
    10/18: $1$bitselwrite$data$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:404$7[29:0]$95
    11/18: $1$bitselwrite$mask$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:404$6[29:0]$94
    12/18: $0\new_count[4:0]
    13/18: $0\new_up[0:0]
    14/18: $0\new_iteration[0:0]
    15/18: $0\new_nextleast_llr[4:0]
    16/18: $0\new_least_llr[4:0]
    17/18: $0\new_sign_result[0:0]
    18/18: $0\new_leastpos[4:0]
Creating decoders for process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
     1/32: $3\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.result[5:0]$82
     2/32: $2\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.result[5:0]$81
     3/32: $2\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.sat_diffb[3:0]$76
     4/32: $2\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.sat_diffa[3:0]$75
     5/32: $2\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.sat_sum[3:0]$74
     6/32: $0\repeat_access_aligned_msg[0:0]
     7/32: $0\cn_we_aligned_msg[0:0]
     8/32: $0\start_over_aligned_msg[0:0]
     9/32: $0\old_count_del[4:0]
    10/32: $0\old_last_nextleast_llr_del[4:0]
    11/32: $0\old_last_least_llr_del[4:0]
    12/32: $0\old_last_leastpos_del[4:0]
    13/32: $0\old_last_sign_result_del[0:0]
    14/32: $0\old_sign_result_del[0:0]
    15/32: $0\old_signs_del[29:0]
    16/32: $0\old_leastpos_del[4:0]
    17/32: $0\old_nextleast_llr_del[4:0]
    18/32: $0\old_least_llr_del[4:0]
    19/32: $0\fixed_msg[5:0]
    20/32: $1\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.$result[5:0]$57
    21/32: $1\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.result[5:0]$69
    22/32: $1\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.sign[0:0]$68
    23/32: $1\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.b_big[0:0]$67
    24/32: $1\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.add[0:0]$66
    25/32: $1\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.sat_diffb[3:0]$65
    26/32: $1\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.sat_diffa[3:0]$64
    27/32: $1\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.sat_sum[3:0]$63
    28/32: $1\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.diffb[4:0]$62
    29/32: $1\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.diffa[4:0]$61
    30/32: $1\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.sum[5:0]$60
    31/32: $1\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.b[5:0]$59
    32/32: $1\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.a[5:0]$58
Creating decoders for process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:257$32'.
     1/2: $0\cn_msg_int[5:0] [4:0]
     2/2: $0\cn_msg_int[5:0] [5]
Creating decoders for process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
     1/14: $0\old_count[4:0]
     2/14: $0\repeat_access_aligned_old[0:0]
     3/14: $0\cn_we_aligned_old[0:0]
     4/14: $0\start_over_aligned_old[0:0]
     5/14: $0\sh_msg_aligned_old[5:0]
     6/14: $0\old_signs[29:0]
     7/14: $0\old_last_sign_result[0:0]
     8/14: $0\old_sign_result[0:0]
     9/14: $0\old_last_nextleast_llr[4:0]
    10/14: $0\old_last_least_llr[4:0]
    11/14: $0\old_nextleast_llr[4:0]
    12/14: $0\old_least_llr[4:0]
    13/14: $0\old_last_leastpos[4:0]
    14/14: $0\old_leastpos[4:0]
Creating decoders for process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:147$9'.
     1/10: $0\repeat_access[0:0]
     2/10: $1\loopvar1[31:0]
     3/10: $0\addr_cn_del[1][7:0]
     4/10: $0\sh_msg_del[1][5:0]
     5/10: $0\cn_we_del[1][0:0]
     6/10: $0\cn_rd_del[1][0:0]
     7/10: $0\addr_cn_del[0][7:0]
     8/10: $0\sh_msg_del[0][5:0]
     9/10: $0\cn_we_del[0][0:0]
    10/10: $0\cn_rd_del[0][0:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\ldpc_cn.\loopvar2' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:462$120'.
  created $adff cell `$procdff$207' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\we_del2[0]' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:462$120'.
  created $adff cell `$procdff$208' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\we_del2[1]' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:462$120'.
  created $adff cell `$procdff$209' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\we_del2[2]' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:462$120'.
  created $adff cell `$procdff$210' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\addr_del2[0]' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:462$120'.
  created $adff cell `$procdff$211' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\addr_del2[1]' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:462$120'.
  created $adff cell `$procdff$212' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\addr_del2[2]' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:462$120'.
  created $adff cell `$procdff$213' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\new_iteration' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
  created $adff cell `$procdff$214' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\new_up' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
  created $adff cell `$procdff$215' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\new_leastpos' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
  created $adff cell `$procdff$216' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\new_last_sign_result' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
  created $adff cell `$procdff$217' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\new_last_leastpos' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
  created $adff cell `$procdff$218' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\new_signs' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
  created $adff cell `$procdff$219' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\new_sign_result' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
  created $adff cell `$procdff$220' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\new_count' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
  created $adff cell `$procdff$221' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\new_least_llr' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
  created $adff cell `$procdff$222' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\new_nextleast_llr' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
  created $adff cell `$procdff$223' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\new_last_least_llr' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
  created $adff cell `$procdff$224' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\new_last_nextleast_llr' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
  created $adff cell `$procdff$225' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.$bitselwrite$mask$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:404$6' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
  created $adff cell `$procdff$226' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.$bitselwrite$data$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:404$7' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
  created $adff cell `$procdff$227' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.$lookahead\new_signs$89' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
  created $adff cell `$procdff$228' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\fixed_msg' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$229' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_least_llr_del' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$230' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_nextleast_llr_del' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$231' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_count_del' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$232' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_leastpos_del' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$233' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_signs_del' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$234' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_sign_result_del' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$235' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_last_sign_result_del' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$236' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_last_leastpos_del' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$237' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_last_least_llr_del' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$238' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_last_nextleast_llr_del' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$239' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\start_over_aligned_msg' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$240' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\cn_we_aligned_msg' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$241' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\repeat_access_aligned_msg' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$242' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.$result' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$243' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.a' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$244' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.b' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$245' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.sum' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$246' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.diffa' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$247' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.diffb' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$248' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.sat_sum' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$249' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.sat_diffa' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$250' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.sat_diffb' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$251' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.add' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$252' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.b_big' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$253' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.sign' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$254' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\SubSaturate$func$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:318$5.result' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
  created $adff cell `$procdff$255' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\cn_msg_int' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:257$32'.
  created $adff cell `$procdff$256' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_leastpos' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
  created $adff cell `$procdff$257' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_last_leastpos' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
  created $adff cell `$procdff$258' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_sign_result' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
  created $adff cell `$procdff$259' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_count' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
  created $adff cell `$procdff$260' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_least_llr' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
  created $adff cell `$procdff$261' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_nextleast_llr' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
  created $adff cell `$procdff$262' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_last_least_llr' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
  created $adff cell `$procdff$263' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_last_nextleast_llr' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
  created $adff cell `$procdff$264' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_last_sign_result' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
  created $adff cell `$procdff$265' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\old_signs' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
  created $adff cell `$procdff$266' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\sh_msg_aligned_old' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
  created $adff cell `$procdff$267' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\start_over_aligned_old' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
  created $adff cell `$procdff$268' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\repeat_access_aligned_old' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
  created $adff cell `$procdff$269' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\cn_we_aligned_old' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
  created $adff cell `$procdff$270' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\loopvar1' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:147$9'.
  created $adff cell `$procdff$271' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\repeat_access' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:147$9'.
  created $adff cell `$procdff$272' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\cn_rd_del[0]' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:147$9'.
  created $adff cell `$procdff$273' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\cn_rd_del[1]' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:147$9'.
  created $adff cell `$procdff$274' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\cn_we_del[0]' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:147$9'.
  created $adff cell `$procdff$275' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\cn_we_del[1]' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:147$9'.
  created $adff cell `$procdff$276' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\sh_msg_del[0]' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:147$9'.
  created $adff cell `$procdff$277' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\sh_msg_del[1]' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:147$9'.
  created $adff cell `$procdff$278' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\addr_cn_del[0]' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:147$9'.
  created $adff cell `$procdff$279' with positive edge clock and positive level reset.
Creating register for signal `\ldpc_cn.\addr_cn_del[1]' using process `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:147$9'.
  created $adff cell `$procdff$280' with positive edge clock and positive level reset.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:462$120'.
Removing empty process `ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:462$120'.
Found and cleaned up 9 empty switches in `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
Removing empty process `ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:369$90'.
Found and cleaned up 5 empty switches in `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
Removing empty process `ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:298$43'.
Found and cleaned up 1 empty switch in `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:257$32'.
Removing empty process `ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:257$32'.
Found and cleaned up 1 empty switch in `\ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
Removing empty process `ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:208$27'.
Removing empty process `ldpc_cn.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/dvb_s2_ldpc_decoder_submodules/ldpc_cn.v:147$9'.
Cleaned up 17 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module ldpc_cn.
<suppressed ~7 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ldpc_cn.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ldpc_cn'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ldpc_cn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$187.
    dead port 1/2 on $mux $procmux$133.
    dead port 2/2 on $mux $procmux$133.
    dead port 1/2 on $mux $procmux$130.
    dead port 2/2 on $mux $procmux$130.
Removed 5 multiplexer ports.
<suppressed ~22 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ldpc_cn.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ldpc_cn'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 1 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 2 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 3 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 4 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 5 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 6 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 7 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 8 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 9 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 10 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 11 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 12 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 13 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 14 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 15 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 16 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 17 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 18 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 19 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 20 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 21 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 22 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 23 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 24 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 25 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 26 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 27 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 28 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 29 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 30 on $procdff$207 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 31 on $procdff$207 ($adff) from module ldpc_cn.
Adding EN signal on $procdff$220 ($adff) from module ldpc_cn (D = $procmux$173_Y, Q = \new_sign_result).
Setting constant 1-bit at position 0 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 1 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 2 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 3 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 4 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 5 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 6 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 7 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 8 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 9 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 10 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 11 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 12 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 13 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 14 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 15 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 16 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 17 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 18 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 19 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 20 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 21 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 22 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 23 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 24 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 25 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 26 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 27 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 28 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 29 on $procdff$228 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 0 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 1 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 2 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 3 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 4 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 5 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 6 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 7 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 8 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 9 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 10 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 11 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 12 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 13 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 14 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 15 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 16 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 17 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 18 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 19 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 20 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 21 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 22 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 23 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 24 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 25 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 26 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 27 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 28 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 29 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 30 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 0-bit at position 31 on $procdff$271 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 0 on $procdff$248 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 1 on $procdff$248 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 2 on $procdff$248 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 3 on $procdff$248 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 4 on $procdff$248 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 0 on $procdff$251 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 1 on $procdff$251 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 2 on $procdff$251 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 3 on $procdff$251 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 0 on $procdff$254 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 0 on $procdff$255 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 1 on $procdff$255 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 2 on $procdff$255 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 3 on $procdff$255 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 4 on $procdff$255 ($adff) from module ldpc_cn.
Setting constant 1-bit at position 5 on $procdff$255 ($adff) from module ldpc_cn.

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ldpc_cn..
Removed 1 unused cells and 156 unused wires.
<suppressed ~3 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ldpc_cn.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ldpc_cn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ldpc_cn.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ldpc_cn'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ldpc_cn..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ldpc_cn.

4.16. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== ldpc_cn ===

   Number of wires:                175
   Number of wire bits:           1166
   Number of public wires:         100
   Number of public wire bits:     629
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                139
     $add                           70
     $adff                         286
     $adffe                          1
     $and                           36
     $eq                            18
     $le                             5
     $logic_and                      4
     $logic_not                      1
     $logic_or                       1
     $lt                            10
     $mux                          287
     $ne                             4
     $not                           36
     $or                            35
     $reduce_bool                    2
     $shiftx                        30
     $shl                           60
     $sub                           10
     $xor                            4

Warnings: 7 unique messages, 7 total
End of script. Logfile hash: 4d139e89e2, CPU: user 0.10s system 0.00s, MEM: 13.83 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 26% 2x read_verilog (0 sec), 21% 4x opt_expr (0 sec), ...
