
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v' to AST representation.
Generating RTLIL representation for module `\fpu_div'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:260.1-316.12 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:318.1-374.12 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: fpu_div             
Automatically selected fpu_div as design top module.

2.2. Analyzing design hierarchy..
Top module:  \fpu_div

2.3. Analyzing design hierarchy..
Top module:  \fpu_div
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:318$91 in module fpu_div.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:260$90 in module fpu_div.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:251$89 in module fpu_div.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:227$88 in module fpu_div.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57 in module fpu_div.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:147$51 in module fpu_div.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:135$46 in module fpu_div.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:127$28 in module fpu_div.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:114$26 in module fpu_div.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:104$24 in module fpu_div.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:96$22 in module fpu_div.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 13 redundant assignments.
Promoted 4 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:318$91'.
     1/1: $0\divisor_shift[5:0]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:260$90'.
     1/1: $0\dividend_shift[5:0]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:251$89'.
     1/1: $0\enable_reg_2[0:0]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:227$88'.
     1/8: $0\enable_reg_e[0:0]
     2/8: $0\enable_reg_d[0:0]
     3/8: $0\enable_reg_c[0:0]
     4/8: $0\enable_reg_b[0:0]
     5/8: $0\enable_reg_a[0:0]
     6/8: $0\enable_reg[0:0]
     7/8: $0\count_nonzero_reg_2[0:0]
     8/8: $0\count_nonzero_reg[0:0]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
     1/28: $0\remainder_b[107:0]
     2/28: $0\remainder_shift_term[6:0]
     3/28: $0\mantissa_1[51:0]
     4/28: $0\expon_final_5[11:0]
     5/28: $0\expon_final_4_term[0:0]
     6/28: $0\expon_final_4_et0[0:0]
     7/28: $0\expon_final_4[11:0]
     8/28: $0\expon_final_3[11:0]
     9/28: $0\expon_uf_term_4[11:0]
    10/28: $0\expon_uf_gt_maxshift[0:0]
    11/28: $0\expon_uf_term_3[11:0]
    12/28: $0\expon_uf_term_2[11:0]
    13/28: $0\expon_uf_2[0:0]
    14/28: $0\expon_shift_b[11:0]
    15/28: $0\expon_shift_a[11:0]
    16/28: $0\expon_final_2[11:0]
    17/28: $0\expon_final_1[11:0]
    18/28: $0\expon_uf_term_1[11:0]
    19/28: $0\expon_uf_1[0:0]
    20/28: $0\expon_term[11:0]
    21/28: $0\divisor_b_shifted[51:0]
    22/28: $0\divisor_b[51:0]
    23/28: $0\dividend_a_shifted[51:0]
    24/28: $0\dividend_a[51:0]
    25/28: $0\mantissa_b[51:0]
    26/28: $0\mantissa_a[51:0]
    27/28: $0\divisor_shift_2[5:0]
    28/28: $0\dividend_shift_2[5:0]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:147$51'.
     1/2: $0\divisor_reg[53:0]
     2/2: $0\dividend_reg[53:0]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:135$46'.
     1/2: $0\remainder_msb[0:0]
     2/2: $0\remainder[53:0]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:127$28'.
     1/6: $2$lookahead\quotient$27[53:0]$37
     2/6: $2$bitselwrite$data$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:132$2[53:0]$36
     3/6: $2$bitselwrite$mask$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:132$1[53:0]$35
     4/6: $1$lookahead\quotient$27[53:0]$34
     5/6: $1$bitselwrite$data$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:132$2[53:0]$33
     6/6: $1$bitselwrite$mask$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:132$1[53:0]$32
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:114$26'.
     1/2: $0\remainder_out[53:0]
     2/2: $0\quotient_out[53:0]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:104$24'.
     1/1: $0\count_out[5:0]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:96$22'.
     1/1: $0\exponent_out[11:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\fpu_div.\divisor_shift' from process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:318$91'.
No latch inferred for signal `\fpu_div.\dividend_shift' from process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:260$90'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\fpu_div.\enable_reg_2' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:251$89'.
  created $dff cell `$procdff$437' with positive edge clock.
Creating register for signal `\fpu_div.\enable_reg' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:227$88'.
  created $dff cell `$procdff$438' with positive edge clock.
Creating register for signal `\fpu_div.\enable_reg_a' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:227$88'.
  created $dff cell `$procdff$439' with positive edge clock.
Creating register for signal `\fpu_div.\enable_reg_b' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:227$88'.
  created $dff cell `$procdff$440' with positive edge clock.
Creating register for signal `\fpu_div.\enable_reg_c' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:227$88'.
  created $dff cell `$procdff$441' with positive edge clock.
Creating register for signal `\fpu_div.\enable_reg_d' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:227$88'.
  created $dff cell `$procdff$442' with positive edge clock.
Creating register for signal `\fpu_div.\enable_reg_e' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:227$88'.
  created $dff cell `$procdff$443' with positive edge clock.
Creating register for signal `\fpu_div.\count_nonzero_reg' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:227$88'.
  created $dff cell `$procdff$444' with positive edge clock.
Creating register for signal `\fpu_div.\count_nonzero_reg_2' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:227$88'.
  created $dff cell `$procdff$445' with positive edge clock.
Creating register for signal `\fpu_div.\dividend_shift_2' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$446' with positive edge clock.
Creating register for signal `\fpu_div.\divisor_shift_2' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$447' with positive edge clock.
Creating register for signal `\fpu_div.\mantissa_a' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$448' with positive edge clock.
Creating register for signal `\fpu_div.\mantissa_b' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$449' with positive edge clock.
Creating register for signal `\fpu_div.\dividend_a' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$450' with positive edge clock.
Creating register for signal `\fpu_div.\dividend_a_shifted' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$451' with positive edge clock.
Creating register for signal `\fpu_div.\divisor_b' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$452' with positive edge clock.
Creating register for signal `\fpu_div.\divisor_b_shifted' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$453' with positive edge clock.
Creating register for signal `\fpu_div.\expon_term' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$454' with positive edge clock.
Creating register for signal `\fpu_div.\expon_uf_1' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$455' with positive edge clock.
Creating register for signal `\fpu_div.\expon_uf_term_1' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$456' with positive edge clock.
Creating register for signal `\fpu_div.\expon_final_1' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$457' with positive edge clock.
Creating register for signal `\fpu_div.\expon_final_2' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$458' with positive edge clock.
Creating register for signal `\fpu_div.\expon_shift_a' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$459' with positive edge clock.
Creating register for signal `\fpu_div.\expon_shift_b' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$460' with positive edge clock.
Creating register for signal `\fpu_div.\expon_uf_2' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$461' with positive edge clock.
Creating register for signal `\fpu_div.\expon_uf_term_2' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$462' with positive edge clock.
Creating register for signal `\fpu_div.\expon_uf_term_3' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$463' with positive edge clock.
Creating register for signal `\fpu_div.\expon_uf_gt_maxshift' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$464' with positive edge clock.
Creating register for signal `\fpu_div.\expon_uf_term_4' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$465' with positive edge clock.
Creating register for signal `\fpu_div.\expon_final_3' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$466' with positive edge clock.
Creating register for signal `\fpu_div.\expon_final_4' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$467' with positive edge clock.
Creating register for signal `\fpu_div.\expon_final_4_et0' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$468' with positive edge clock.
Creating register for signal `\fpu_div.\expon_final_4_term' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$469' with positive edge clock.
Creating register for signal `\fpu_div.\expon_final_5' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$470' with positive edge clock.
Creating register for signal `\fpu_div.\mantissa_1' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$471' with positive edge clock.
Creating register for signal `\fpu_div.\remainder_shift_term' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$472' with positive edge clock.
Creating register for signal `\fpu_div.\remainder_b' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
  created $dff cell `$procdff$473' with positive edge clock.
Creating register for signal `\fpu_div.\dividend_reg' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:147$51'.
  created $dff cell `$procdff$474' with positive edge clock.
Creating register for signal `\fpu_div.\divisor_reg' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:147$51'.
  created $dff cell `$procdff$475' with positive edge clock.
Creating register for signal `\fpu_div.\remainder' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:135$46'.
  created $dff cell `$procdff$476' with positive edge clock.
Creating register for signal `\fpu_div.\remainder_msb' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:135$46'.
  created $dff cell `$procdff$477' with positive edge clock.
Creating register for signal `\fpu_div.\quotient' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:127$28'.
  created $dff cell `$procdff$478' with positive edge clock.
Creating register for signal `\fpu_div.$bitselwrite$mask$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:132$1' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:127$28'.
  created $dff cell `$procdff$479' with positive edge clock.
Creating register for signal `\fpu_div.$bitselwrite$data$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:132$2' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:127$28'.
  created $dff cell `$procdff$480' with positive edge clock.
Creating register for signal `\fpu_div.$lookahead\quotient$27' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:127$28'.
  created $dff cell `$procdff$481' with positive edge clock.
Creating register for signal `\fpu_div.\quotient_out' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:114$26'.
  created $dff cell `$procdff$482' with positive edge clock.
Creating register for signal `\fpu_div.\remainder_out' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:114$26'.
  created $dff cell `$procdff$483' with positive edge clock.
Creating register for signal `\fpu_div.\count_out' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:104$24'.
  created $dff cell `$procdff$484' with positive edge clock.
Creating register for signal `\fpu_div.\exponent_out' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:96$22'.
  created $dff cell `$procdff$485' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:318$91'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:318$91'.
Found and cleaned up 1 empty switch in `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:260$90'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:260$90'.
Found and cleaned up 2 empty switches in `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:251$89'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:251$89'.
Found and cleaned up 1 empty switch in `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:227$88'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:227$88'.
Found and cleaned up 2 empty switches in `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:163$57'.
Found and cleaned up 3 empty switches in `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:147$51'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:147$51'.
Found and cleaned up 2 empty switches in `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:135$46'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:135$46'.
Found and cleaned up 2 empty switches in `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:127$28'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:127$28'.
Found and cleaned up 1 empty switch in `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:114$26'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:114$26'.
Found and cleaned up 3 empty switches in `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:104$24'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:104$24'.
Found and cleaned up 1 empty switch in `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:96$22'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:96$22'.
Cleaned up 19 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu_div.
<suppressed ~8 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu_div.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu_div'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$418.
    dead port 2/2 on $mux $procmux$418.
    dead port 1/2 on $mux $procmux$415.
    dead port 2/2 on $mux $procmux$415.
    dead port 1/2 on $mux $procmux$409.
    dead port 2/2 on $mux $procmux$409.
    dead port 1/2 on $mux $procmux$406.
    dead port 2/2 on $mux $procmux$406.
    dead port 1/2 on $mux $procmux$403.
    dead port 2/2 on $mux $procmux$403.
    dead port 1/2 on $mux $procmux$400.
    dead port 2/2 on $mux $procmux$400.
    dead port 1/2 on $mux $procmux$397.
Removed 13 multiplexer ports.
<suppressed ~48 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu_div.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu_div'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$482 ($dff) from module fpu_div (D = \quotient, Q = \quotient_out, rval = 54'000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$483 ($dff) from module fpu_div (D = \remainder, Q = \remainder_out, rval = 54'000000000000000000000000000000000000000000000000000000).
Setting constant 1-bit at position 0 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 1 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 2 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 3 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 4 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 5 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 6 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 7 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 8 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 9 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 10 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 11 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 12 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 13 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 14 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 15 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 16 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 17 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 18 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 19 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 20 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 21 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 22 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 23 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 24 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 25 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 26 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 27 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 28 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 29 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 30 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 31 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 32 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 33 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 34 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 35 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 36 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 37 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 38 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 39 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 40 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 41 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 42 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 43 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 44 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 45 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 46 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 47 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 48 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 49 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 50 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 51 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 52 on $procdff$481 ($dff) from module fpu_div.
Setting constant 1-bit at position 53 on $procdff$481 ($dff) from module fpu_div.
Adding SRST signal on $procdff$485 ($dff) from module fpu_div (D = \expon_final_5, Q = \exponent_out, rval = 12'000000000000).
Adding SRST signal on $procdff$484 ($dff) from module fpu_div (D = { $procmux$429_Y [5:4] $procmux$429_Y [2] $procmux$429_Y [0] }, Q = { \count_out [5:4] \count_out [2] \count_out [0] }, rval = 4'0000).
Adding SRST signal on $procdff$484 ($dff) from module fpu_div (D = { $procmux$426_Y [3] $procmux$426_Y [1] }, Q = { \count_out [3] \count_out [1] }, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$494 ($sdff) from module fpu_div (D = { $sub$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:111$25_Y [3] $sub$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:111$25_Y [1] }, Q = { \count_out [3] \count_out [1] }).
Adding EN signal on $auto$ff.cc:262:slice$493 ($sdff) from module fpu_div (D = { $procmux$429_Y [5:4] $procmux$429_Y [2] $procmux$429_Y [0] }, Q = { \count_out [5:4] \count_out [2] \count_out [0] }).
Adding SRST signal on $procdff$472 ($dff) from module fpu_div (D = $procmux$234_Y, Q = \remainder_shift_term, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$501 ($sdff) from module fpu_div (D = $sub$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:219$83_Y [6:0], Q = \remainder_shift_term).
Adding SRST signal on $procdff$473 ($dff) from module fpu_div (D = $procmux$229_Y, Q = \remainder_b, rval = 108'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$503 ($sdff) from module fpu_div (D = $shl$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:220$84_Y, Q = \remainder_b).
Adding SRST signal on $procdff$474 ($dff) from module fpu_div (D = $procmux$378_Y, Q = \dividend_reg, rval = 54'000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$505 ($sdff) from module fpu_div (D = $procmux$378_Y, Q = \dividend_reg).
Adding SRST signal on $procdff$475 ($dff) from module fpu_div (D = $procmux$370_Y, Q = \divisor_reg, rval = 54'000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$509 ($sdff) from module fpu_div (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:49$9_Y, Q = \divisor_reg).
Adding SRST signal on $procdff$476 ($dff) from module fpu_div (D = $procmux$388_Y, Q = \remainder, rval = 54'000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$511 ($sdff) from module fpu_div (D = \dividend_reg, Q = \remainder).
Adding SRST signal on $procdff$477 ($dff) from module fpu_div (D = $procmux$383_Y, Q = \remainder_msb, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$513 ($sdff) from module fpu_div (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:143$50_Y [0], Q = \remainder_msb).
Adding SRST signal on $procdff$478 ($dff) from module fpu_div (D = $2$lookahead\quotient$27[53:0]$37, Q = \quotient, rval = 54'000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$437 ($dff) from module fpu_div (D = $procmux$200_Y, Q = \enable_reg_2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$516 ($sdff) from module fpu_div (D = 1'1, Q = \enable_reg_2).
Adding SRST signal on $procdff$438 ($dff) from module fpu_div (D = \enable_reg_e, Q = \enable_reg, rval = 1'0).
Adding SRST signal on $procdff$439 ($dff) from module fpu_div (D = \enable, Q = \enable_reg_a, rval = 1'0).
Adding SRST signal on $procdff$440 ($dff) from module fpu_div (D = \enable_reg_a, Q = \enable_reg_b, rval = 1'0).
Adding SRST signal on $procdff$441 ($dff) from module fpu_div (D = \enable_reg_b, Q = \enable_reg_c, rval = 1'0).
Adding SRST signal on $procdff$442 ($dff) from module fpu_div (D = \enable_reg_c, Q = \enable_reg_d, rval = 1'0).
Adding SRST signal on $procdff$443 ($dff) from module fpu_div (D = \enable_reg_d, Q = \enable_reg_e, rval = 1'0).
Adding SRST signal on $procdff$444 ($dff) from module fpu_div (D = $logic_not$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:51$11_Y, Q = \count_nonzero_reg, rval = 1'0).
Adding SRST signal on $procdff$445 ($dff) from module fpu_div (D = \count_nonzero_reg, Q = \count_nonzero_reg_2, rval = 1'0).
Adding SRST signal on $procdff$446 ($dff) from module fpu_div (D = $procmux$364_Y, Q = \dividend_shift_2, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$526 ($sdff) from module fpu_div (D = $procmux$146_Y, Q = \dividend_shift_2).
Adding SRST signal on $procdff$447 ($dff) from module fpu_div (D = $procmux$359_Y, Q = \divisor_shift_2, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$528 ($sdff) from module fpu_div (D = $procmux$92_Y, Q = \divisor_shift_2).
Adding SRST signal on $procdff$448 ($dff) from module fpu_div (D = $procmux$354_Y, Q = \mantissa_a, rval = 52'0000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$530 ($sdff) from module fpu_div (D = \opa [51:0], Q = \mantissa_a).
Adding SRST signal on $procdff$449 ($dff) from module fpu_div (D = $procmux$349_Y, Q = \mantissa_b, rval = 52'0000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$532 ($sdff) from module fpu_div (D = \opb [51:0], Q = \mantissa_b).
Adding SRST signal on $procdff$450 ($dff) from module fpu_div (D = $procmux$344_Y, Q = \dividend_a, rval = 52'0000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$534 ($sdff) from module fpu_div (D = \mantissa_a, Q = \dividend_a).
Adding SRST signal on $procdff$451 ($dff) from module fpu_div (D = $procmux$339_Y, Q = \dividend_a_shifted, rval = 52'0000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$536 ($sdff) from module fpu_div (D = $shl$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:221$85_Y, Q = \dividend_a_shifted).
Adding SRST signal on $procdff$452 ($dff) from module fpu_div (D = $procmux$334_Y, Q = \divisor_b, rval = 52'0000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$538 ($sdff) from module fpu_div (D = \mantissa_b, Q = \divisor_b).
Adding SRST signal on $procdff$453 ($dff) from module fpu_div (D = $procmux$329_Y, Q = \divisor_b_shifted, rval = 52'0000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$540 ($sdff) from module fpu_div (D = $shl$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:222$86_Y, Q = \divisor_b_shifted).
Adding SRST signal on $procdff$454 ($dff) from module fpu_div (D = $procmux$324_Y, Q = \expon_term, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$542 ($sdff) from module fpu_div (D = $add$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:196$58_Y [11:0], Q = \expon_term).
Adding SRST signal on $procdff$455 ($dff) from module fpu_div (D = $procmux$319_Y, Q = \expon_uf_1, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$544 ($sdff) from module fpu_div (D = $gt$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:197$59_Y, Q = \expon_uf_1).
Adding SRST signal on $procdff$456 ($dff) from module fpu_div (D = $procmux$314_Y, Q = \expon_uf_term_1, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$546 ($sdff) from module fpu_div (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:198$61_Y [11:0], Q = \expon_uf_term_1).
Adding SRST signal on $procdff$457 ($dff) from module fpu_div (D = $procmux$309_Y, Q = \expon_final_1, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$548 ($sdff) from module fpu_div (D = $sub$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:199$62_Y, Q = \expon_final_1).
Adding SRST signal on $procdff$458 ($dff) from module fpu_div (D = $procmux$304_Y, Q = \expon_final_2, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$550 ($sdff) from module fpu_div (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:200$64_Y [11:0], Q = \expon_final_2).
Adding SRST signal on $procdff$459 ($dff) from module fpu_div (D = $procmux$299_Y, Q = \expon_shift_a, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$552 ($sdff) from module fpu_div (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:201$66_Y [11:0], Q = \expon_shift_a).
Adding SRST signal on $procdff$460 ($dff) from module fpu_div (D = $procmux$294_Y, Q = \expon_shift_b, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$554 ($sdff) from module fpu_div (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:202$68_Y [11:0], Q = \expon_shift_b).
Adding SRST signal on $procdff$461 ($dff) from module fpu_div (D = $procmux$289_Y, Q = \expon_uf_2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$556 ($sdff) from module fpu_div (D = $gt$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:203$69_Y, Q = \expon_uf_2).
Adding SRST signal on $procdff$462 ($dff) from module fpu_div (D = $procmux$284_Y, Q = \expon_uf_term_2, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$558 ($sdff) from module fpu_div (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:204$71_Y [11:0], Q = \expon_uf_term_2).
Adding SRST signal on $procdff$463 ($dff) from module fpu_div (D = $procmux$279_Y, Q = \expon_uf_term_3, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$560 ($sdff) from module fpu_div (D = $add$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:205$72_Y, Q = \expon_uf_term_3).
Adding SRST signal on $procdff$464 ($dff) from module fpu_div (D = $procmux$274_Y, Q = \expon_uf_gt_maxshift, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$562 ($sdff) from module fpu_div (D = $gt$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:206$73_Y, Q = \expon_uf_gt_maxshift).
Adding SRST signal on $procdff$465 ($dff) from module fpu_div (D = $procmux$269_Y, Q = \expon_uf_term_4, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$564 ($sdff) from module fpu_div (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:207$75_Y [11:0], Q = \expon_uf_term_4).
Adding SRST signal on $procdff$466 ($dff) from module fpu_div (D = $procmux$264_Y, Q = \expon_final_3, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$566 ($sdff) from module fpu_div (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:208$77_Y [11:0], Q = \expon_final_3).
Adding SRST signal on $procdff$467 ($dff) from module fpu_div (D = $procmux$259_Y, Q = \expon_final_4, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$568 ($sdff) from module fpu_div (D = $add$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:209$78_Y, Q = \expon_final_4).
Adding SRST signal on $procdff$468 ($dff) from module fpu_div (D = $procmux$254_Y, Q = \expon_final_4_et0, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$570 ($sdff) from module fpu_div (D = $eq$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:210$79_Y, Q = \expon_final_4_et0).
Adding SRST signal on $procdff$469 ($dff) from module fpu_div (D = $procmux$249_Y, Q = \expon_final_4_term, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$572 ($sdff) from module fpu_div (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:211$80_Y [0], Q = \expon_final_4_term).
Adding SRST signal on $procdff$470 ($dff) from module fpu_div (D = $procmux$244_Y, Q = \expon_final_5, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$574 ($sdff) from module fpu_div (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:212$82_Y, Q = \expon_final_5).
Adding SRST signal on $procdff$471 ($dff) from module fpu_div (D = $procmux$239_Y, Q = \mantissa_1, rval = 52'0000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$576 ($sdff) from module fpu_div (D = $shr$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:223$87_Y, Q = \mantissa_1).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu_div..
Removed 80 unused cells and 264 unused wires.
<suppressed ~86 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu_div.
<suppressed ~1 debug messages>

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu_div.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu_div'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$515 ($sdff) from module fpu_div (D = $or$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_div.v:0$45_Y, Q = \quotient).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu_div..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu_div.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu_div.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu_div'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu_div..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu_div.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== fpu_div ===

   Number of wires:                239
   Number of wire bits:           3751
   Number of public wires:          82
   Number of public wire bits:    2168
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                219
     $add                           56
     $and                          109
     $eq                          2766
     $gt                           110
     $logic_not                    178
     $mux                          906
     $ne                             2
     $not                           55
     $or                            54
     $pmux                          12
     $reduce_bool                    2
     $reduce_or                    156
     $sdff                         128
     $sdffe                        864
     $shl                          320
     $shr                           52
     $sub                          238
     $xor                            1

End of script. Logfile hash: f52164b968, CPU: user 0.29s system 0.00s, MEM: 17.48 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 29% 5x opt_expr (0 sec), 16% 3x opt_clean (0 sec), ...
