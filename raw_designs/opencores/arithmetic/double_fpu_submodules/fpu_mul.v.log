
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v' to AST representation.
Generating RTLIL representation for module `\fpu_mul'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:177.1-235.9 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: fpu_mul             
Automatically selected fpu_mul as design top module.

2.2. Analyzing design hierarchy..
Top module:  \fpu_mul

2.3. Analyzing design hierarchy..
Top module:  \fpu_mul
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1 in module fpu_mul.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:177$51'.
     1/1: $0\product_shift[5:0]
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
     1/50: $0\product_lsb[0:0]
     2/50: $0\product_6[105:0]
     3/50: $0\product_5[105:0]
     4/50: $0\product_4[105:0]
     5/50: $0\product_3[105:0]
     6/50: $0\product_2[105:0]
     7/50: $0\product_1[105:0]
     8/50: $0\product[105:0]
     9/50: $0\sum_8[30:0]
    10/50: $0\sum_7[36:0]
    11/50: $0\sum_6[29:0]
    12/50: $0\sum_5[27:0]
    13/50: $0\sum_4[36:0]
    14/50: $0\sum_3[35:0]
    15/50: $0\sum_2[41:0]
    16/50: $0\sum_1[35:0]
    17/50: $0\sum_0[41:0]
    18/50: $0\product_j[30:0]
    19/50: $0\product_i[28:0]
    20/50: $0\product_h[28:0]
    21/50: $0\product_g[35:0]
    22/50: $0\product_f[33:0]
    23/50: $0\product_e[33:0]
    24/50: $0\product_d[25:0]
    25/50: $0\product_c[40:0]
    26/50: $0\product_b[40:0]
    27/50: $0\product_a[40:0]
    28/50: $0\mul_b[52:0]
    29/50: $0\mul_a[52:0]
    30/50: $0\exponent_et_zero[0:0]
    31/50: $0\exponent_4[11:0]
    32/50: $0\exponent_3[11:0]
    33/50: $0\exponent_gt_prodshift[0:0]
    34/50: $0\exponent_2[11:0]
    35/50: $0\exponent_1[11:0]
    36/50: $0\exponent_under[11:0]
    37/50: $0\exponent_gt_expoffset[0:0]
    38/50: $0\exponent_terms[11:0]
    39/50: $0\in_zero[0:0]
    40/50: $0\b_is_zero[0:0]
    41/50: $0\a_is_zero[0:0]
    42/50: $0\b_is_norm[0:0]
    43/50: $0\a_is_norm[0:0]
    44/50: $0\exponent_b[10:0]
    45/50: $0\exponent_a[10:0]
    46/50: $0\mantissa_b[51:0]
    47/50: $0\mantissa_a[51:0]
    48/50: $0\product_shift_2[5:0]
    49/50: $0\exponent_5[11:0]
    50/50: $0\sign[0:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
Latch inferred for signal `\fpu_mul.\product_shift' from process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:177$51': $auto$proc_dlatch.cc:427:proc_dlatch$685

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\fpu_mul.\sign' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$686' with positive edge clock.
Creating register for signal `\fpu_mul.\exponent_5' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$687' with positive edge clock.
Creating register for signal `\fpu_mul.\product_shift_2' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$688' with positive edge clock.
Creating register for signal `\fpu_mul.\mantissa_a' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$689' with positive edge clock.
Creating register for signal `\fpu_mul.\mantissa_b' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$690' with positive edge clock.
Creating register for signal `\fpu_mul.\exponent_a' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$691' with positive edge clock.
Creating register for signal `\fpu_mul.\exponent_b' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$692' with positive edge clock.
Creating register for signal `\fpu_mul.\a_is_norm' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$693' with positive edge clock.
Creating register for signal `\fpu_mul.\b_is_norm' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$694' with positive edge clock.
Creating register for signal `\fpu_mul.\a_is_zero' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$695' with positive edge clock.
Creating register for signal `\fpu_mul.\b_is_zero' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$696' with positive edge clock.
Creating register for signal `\fpu_mul.\in_zero' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$697' with positive edge clock.
Creating register for signal `\fpu_mul.\exponent_terms' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$698' with positive edge clock.
Creating register for signal `\fpu_mul.\exponent_gt_expoffset' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$699' with positive edge clock.
Creating register for signal `\fpu_mul.\exponent_under' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$700' with positive edge clock.
Creating register for signal `\fpu_mul.\exponent_1' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$701' with positive edge clock.
Creating register for signal `\fpu_mul.\exponent_2' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$702' with positive edge clock.
Creating register for signal `\fpu_mul.\exponent_gt_prodshift' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$703' with positive edge clock.
Creating register for signal `\fpu_mul.\exponent_3' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$704' with positive edge clock.
Creating register for signal `\fpu_mul.\exponent_4' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$705' with positive edge clock.
Creating register for signal `\fpu_mul.\exponent_et_zero' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$706' with positive edge clock.
Creating register for signal `\fpu_mul.\mul_a' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$707' with positive edge clock.
Creating register for signal `\fpu_mul.\mul_b' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$708' with positive edge clock.
Creating register for signal `\fpu_mul.\product_a' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$709' with positive edge clock.
Creating register for signal `\fpu_mul.\product_b' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$710' with positive edge clock.
Creating register for signal `\fpu_mul.\product_c' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$711' with positive edge clock.
Creating register for signal `\fpu_mul.\product_d' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$712' with positive edge clock.
Creating register for signal `\fpu_mul.\product_e' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$713' with positive edge clock.
Creating register for signal `\fpu_mul.\product_f' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$714' with positive edge clock.
Creating register for signal `\fpu_mul.\product_g' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$715' with positive edge clock.
Creating register for signal `\fpu_mul.\product_h' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$716' with positive edge clock.
Creating register for signal `\fpu_mul.\product_i' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$717' with positive edge clock.
Creating register for signal `\fpu_mul.\product_j' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$718' with positive edge clock.
Creating register for signal `\fpu_mul.\sum_0' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$719' with positive edge clock.
Creating register for signal `\fpu_mul.\sum_1' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$720' with positive edge clock.
Creating register for signal `\fpu_mul.\sum_2' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$721' with positive edge clock.
Creating register for signal `\fpu_mul.\sum_3' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$722' with positive edge clock.
Creating register for signal `\fpu_mul.\sum_4' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$723' with positive edge clock.
Creating register for signal `\fpu_mul.\sum_5' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$724' with positive edge clock.
Creating register for signal `\fpu_mul.\sum_6' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$725' with positive edge clock.
Creating register for signal `\fpu_mul.\sum_7' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$726' with positive edge clock.
Creating register for signal `\fpu_mul.\sum_8' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$727' with positive edge clock.
Creating register for signal `\fpu_mul.\product' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$728' with positive edge clock.
Creating register for signal `\fpu_mul.\product_1' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$729' with positive edge clock.
Creating register for signal `\fpu_mul.\product_2' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$730' with positive edge clock.
Creating register for signal `\fpu_mul.\product_3' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$731' with positive edge clock.
Creating register for signal `\fpu_mul.\product_4' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$732' with positive edge clock.
Creating register for signal `\fpu_mul.\product_5' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$733' with positive edge clock.
Creating register for signal `\fpu_mul.\product_6' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$734' with positive edge clock.
Creating register for signal `\fpu_mul.\product_lsb' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
  created $dff cell `$procdff$735' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:177$51'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:177$51'.
Found and cleaned up 2 empty switches in `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:67$1'.
Cleaned up 3 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu_mul.
<suppressed ~60 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu_mul.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu_mul'.
Removed a total of 0 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~51 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu_mul.
    New ctrl vector for $pmux cell $procmux$52: { $procmux$105_CMP $procmux$104_CMP $procmux$103_CMP $procmux$102_CMP $procmux$101_CMP $procmux$100_CMP $procmux$99_CMP $procmux$98_CMP $procmux$97_CMP $procmux$96_CMP $procmux$95_CMP $procmux$94_CMP $procmux$93_CMP $procmux$92_CMP $procmux$91_CMP $procmux$90_CMP $procmux$89_CMP $procmux$88_CMP $procmux$87_CMP $procmux$86_CMP $procmux$85_CMP $procmux$84_CMP $procmux$83_CMP $procmux$82_CMP $procmux$81_CMP $procmux$80_CMP $procmux$79_CMP $procmux$78_CMP $procmux$77_CMP $procmux$76_CMP $procmux$75_CMP $procmux$74_CMP $procmux$73_CMP $procmux$72_CMP $procmux$71_CMP $procmux$70_CMP $procmux$69_CMP $procmux$68_CMP $procmux$67_CMP $procmux$66_CMP $procmux$65_CMP $procmux$64_CMP $procmux$63_CMP $procmux$62_CMP $procmux$61_CMP $procmux$60_CMP $procmux$59_CMP $procmux$58_CMP $procmux$57_CMP $procmux$56_CMP $procmux$55_CMP $procmux$54_CMP $procmux$53_CMP }
  Optimizing cells in module \fpu_mul.
Performed a total of 1 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu_mul'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$735 ($dff) from module fpu_mul (D = $procmux$107_Y, Q = \product_lsb, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$736 ($sdff) from module fpu_mul (D = $reduce_or$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:170$49_Y, Q = \product_lsb).
Adding SRST signal on $procdff$734 ($dff) from module fpu_mul (D = $procmux$112_Y, Q = \product_6, rval = 106'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$738 ($sdff) from module fpu_mul (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:169$48_Y, Q = \product_6).
Adding SRST signal on $procdff$733 ($dff) from module fpu_mul (D = $procmux$117_Y, Q = \product_5, rval = 106'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$740 ($sdff) from module fpu_mul (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:168$46_Y, Q = \product_5).
Adding SRST signal on $procdff$732 ($dff) from module fpu_mul (D = $procmux$122_Y, Q = \product_4, rval = 106'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$742 ($sdff) from module fpu_mul (D = $shl$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:167$45_Y, Q = \product_4).
Adding SRST signal on $procdff$731 ($dff) from module fpu_mul (D = $procmux$127_Y, Q = \product_3, rval = 106'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$744 ($sdff) from module fpu_mul (D = $shl$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:166$44_Y, Q = \product_3).
Adding SRST signal on $procdff$730 ($dff) from module fpu_mul (D = $procmux$132_Y, Q = \product_2, rval = 106'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$746 ($sdff) from module fpu_mul (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:165$43_Y, Q = \product_2).
Adding SRST signal on $procdff$729 ($dff) from module fpu_mul (D = $procmux$137_Y, Q = \product_1, rval = 106'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$748 ($sdff) from module fpu_mul (D = $shr$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:164$42_Y, Q = \product_1).
Adding SRST signal on $procdff$728 ($dff) from module fpu_mul (D = $procmux$142_Y, Q = \product, rval = 106'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$750 ($sdff) from module fpu_mul (D = { \sum_8 \sum_7 [16:0] \sum_5 [6:0] \sum_4 [9:0] \sum_2 [6:0] \sum_1 [9:0] \sum_0 [6:0] \product_a [16:0] }, Q = \product).
Adding SRST signal on $procdff$727 ($dff) from module fpu_mul (D = $procmux$147_Y, Q = \sum_8, rval = 31'0000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$752 ($sdff) from module fpu_mul (D = $add$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:161$41_Y, Q = \sum_8).
Adding SRST signal on $procdff$726 ($dff) from module fpu_mul (D = $procmux$152_Y, Q = \sum_7, rval = 37'0000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$754 ($sdff) from module fpu_mul (D = $add$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:160$40_Y, Q = \sum_7).
Adding SRST signal on $procdff$725 ($dff) from module fpu_mul (D = $procmux$157_Y, Q = \sum_6, rval = 30'000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$756 ($sdff) from module fpu_mul (D = $add$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:159$39_Y, Q = \sum_6).
Adding SRST signal on $procdff$724 ($dff) from module fpu_mul (D = $procmux$162_Y, Q = \sum_5, rval = 28'0000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$758 ($sdff) from module fpu_mul (D = $add$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:158$38_Y, Q = \sum_5).
Adding SRST signal on $procdff$723 ($dff) from module fpu_mul (D = $procmux$167_Y, Q = \sum_4, rval = 37'0000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$760 ($sdff) from module fpu_mul (D = $add$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:157$37_Y, Q = \sum_4).
Adding SRST signal on $procdff$722 ($dff) from module fpu_mul (D = $procmux$172_Y, Q = \sum_3, rval = 36'000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$762 ($sdff) from module fpu_mul (D = $add$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:156$36_Y, Q = \sum_3).
Adding SRST signal on $procdff$721 ($dff) from module fpu_mul (D = $procmux$177_Y, Q = \sum_2, rval = 42'000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$764 ($sdff) from module fpu_mul (D = $add$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:155$35_Y, Q = \sum_2).
Adding SRST signal on $procdff$720 ($dff) from module fpu_mul (D = $procmux$182_Y, Q = \sum_1, rval = 36'000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$766 ($sdff) from module fpu_mul (D = $add$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:154$34_Y, Q = \sum_1).
Adding SRST signal on $procdff$719 ($dff) from module fpu_mul (D = $procmux$187_Y, Q = \sum_0, rval = 42'000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$768 ($sdff) from module fpu_mul (D = $add$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:153$33_Y, Q = \sum_0).
Adding SRST signal on $procdff$718 ($dff) from module fpu_mul (D = $procmux$192_Y, Q = \product_j, rval = 31'0000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$770 ($sdff) from module fpu_mul (D = $mul$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:152$32_Y, Q = \product_j).
Adding SRST signal on $procdff$717 ($dff) from module fpu_mul (D = $procmux$197_Y, Q = \product_i, rval = 29'00000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$772 ($sdff) from module fpu_mul (D = $mul$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:151$31_Y, Q = \product_i).
Adding SRST signal on $procdff$716 ($dff) from module fpu_mul (D = $procmux$202_Y, Q = \product_h, rval = 29'00000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$774 ($sdff) from module fpu_mul (D = $mul$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:150$30_Y, Q = \product_h).
Adding SRST signal on $procdff$715 ($dff) from module fpu_mul (D = $procmux$207_Y, Q = \product_g, rval = 36'000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$776 ($sdff) from module fpu_mul (D = $mul$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:149$29_Y, Q = \product_g).
Adding SRST signal on $procdff$714 ($dff) from module fpu_mul (D = $procmux$212_Y, Q = \product_f, rval = 34'0000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$778 ($sdff) from module fpu_mul (D = $mul$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:148$28_Y, Q = \product_f).
Adding SRST signal on $procdff$713 ($dff) from module fpu_mul (D = $procmux$217_Y, Q = \product_e, rval = 34'0000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$780 ($sdff) from module fpu_mul (D = $mul$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:147$27_Y, Q = \product_e).
Adding SRST signal on $procdff$712 ($dff) from module fpu_mul (D = $procmux$222_Y, Q = \product_d, rval = 26'00000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$782 ($sdff) from module fpu_mul (D = $mul$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:146$26_Y, Q = \product_d).
Adding SRST signal on $procdff$711 ($dff) from module fpu_mul (D = $procmux$227_Y, Q = \product_c, rval = 41'00000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$784 ($sdff) from module fpu_mul (D = $mul$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:145$25_Y, Q = \product_c).
Adding SRST signal on $procdff$710 ($dff) from module fpu_mul (D = $procmux$232_Y, Q = \product_b, rval = 41'00000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$786 ($sdff) from module fpu_mul (D = $mul$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:144$24_Y, Q = \product_b).
Adding SRST signal on $procdff$709 ($dff) from module fpu_mul (D = $procmux$237_Y, Q = \product_a, rval = 41'00000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$788 ($sdff) from module fpu_mul (D = $mul$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:143$23_Y, Q = \product_a).
Adding SRST signal on $procdff$708 ($dff) from module fpu_mul (D = $procmux$242_Y, Q = \mul_b, rval = 53'00000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$790 ($sdff) from module fpu_mul (D = { \b_is_norm \mantissa_b }, Q = \mul_b).
Adding SRST signal on $procdff$707 ($dff) from module fpu_mul (D = $procmux$247_Y, Q = \mul_a, rval = 53'00000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$792 ($sdff) from module fpu_mul (D = { \a_is_norm \mantissa_a }, Q = \mul_a).
Adding SRST signal on $procdff$706 ($dff) from module fpu_mul (D = $procmux$252_Y, Q = \exponent_et_zero, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$794 ($sdff) from module fpu_mul (D = $eq$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:140$22_Y, Q = \exponent_et_zero).
Adding SRST signal on $procdff$705 ($dff) from module fpu_mul (D = $procmux$257_Y, Q = \exponent_4, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$796 ($sdff) from module fpu_mul (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:139$21_Y, Q = \exponent_4).
Adding SRST signal on $procdff$704 ($dff) from module fpu_mul (D = $procmux$262_Y, Q = \exponent_3, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$798 ($sdff) from module fpu_mul (D = $sub$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:138$20_Y, Q = \exponent_3).
Adding SRST signal on $procdff$703 ($dff) from module fpu_mul (D = $procmux$267_Y, Q = \exponent_gt_prodshift, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$800 ($sdff) from module fpu_mul (D = $gt$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:137$19_Y, Q = \exponent_gt_prodshift).
Adding SRST signal on $procdff$702 ($dff) from module fpu_mul (D = $procmux$272_Y, Q = \exponent_2, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$802 ($sdff) from module fpu_mul (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:136$18_Y, Q = \exponent_2).
Adding SRST signal on $procdff$701 ($dff) from module fpu_mul (D = $procmux$277_Y, Q = \exponent_1, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$804 ($sdff) from module fpu_mul (D = $sub$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:135$17_Y [11:0], Q = \exponent_1).
Adding SRST signal on $procdff$700 ($dff) from module fpu_mul (D = $procmux$282_Y, Q = \exponent_under, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$806 ($sdff) from module fpu_mul (D = $sub$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:134$16_Y [11:0], Q = \exponent_under).
Adding SRST signal on $procdff$699 ($dff) from module fpu_mul (D = $procmux$287_Y, Q = \exponent_gt_expoffset, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$808 ($sdff) from module fpu_mul (D = $gt$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:133$15_Y, Q = \exponent_gt_expoffset).
Adding SRST signal on $procdff$698 ($dff) from module fpu_mul (D = $procmux$292_Y, Q = \exponent_terms, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$810 ($sdff) from module fpu_mul (D = $add$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:132$14_Y, Q = \exponent_terms).
Adding SRST signal on $procdff$697 ($dff) from module fpu_mul (D = $procmux$297_Y, Q = \in_zero, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$812 ($sdff) from module fpu_mul (D = $or$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:131$9_Y, Q = \in_zero).
Adding SRST signal on $procdff$696 ($dff) from module fpu_mul (D = $procmux$302_Y, Q = \b_is_zero, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$814 ($sdff) from module fpu_mul (D = $logic_not$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:130$8_Y, Q = \b_is_zero).
Adding SRST signal on $procdff$695 ($dff) from module fpu_mul (D = $procmux$307_Y, Q = \a_is_zero, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$816 ($sdff) from module fpu_mul (D = $logic_not$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:129$6_Y, Q = \a_is_zero).
Adding SRST signal on $procdff$694 ($dff) from module fpu_mul (D = $procmux$312_Y, Q = \b_is_norm, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$818 ($sdff) from module fpu_mul (D = $reduce_or$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:128$4_Y, Q = \b_is_norm).
Adding SRST signal on $procdff$693 ($dff) from module fpu_mul (D = $procmux$317_Y, Q = \a_is_norm, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$820 ($sdff) from module fpu_mul (D = $reduce_or$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:127$3_Y, Q = \a_is_norm).
Adding SRST signal on $procdff$692 ($dff) from module fpu_mul (D = $procmux$322_Y, Q = \exponent_b, rval = 11'00000000000).
Adding EN signal on $auto$ff.cc:262:slice$822 ($sdff) from module fpu_mul (D = \opb [62:52], Q = \exponent_b).
Adding SRST signal on $procdff$691 ($dff) from module fpu_mul (D = $procmux$327_Y, Q = \exponent_a, rval = 11'00000000000).
Adding EN signal on $auto$ff.cc:262:slice$824 ($sdff) from module fpu_mul (D = \opa [62:52], Q = \exponent_a).
Adding SRST signal on $procdff$690 ($dff) from module fpu_mul (D = $procmux$332_Y, Q = \mantissa_b, rval = 52'0000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$826 ($sdff) from module fpu_mul (D = \opb [51:0], Q = \mantissa_b).
Adding SRST signal on $procdff$689 ($dff) from module fpu_mul (D = $procmux$337_Y, Q = \mantissa_a, rval = 52'0000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$828 ($sdff) from module fpu_mul (D = \opa [51:0], Q = \mantissa_a).
Adding SRST signal on $procdff$688 ($dff) from module fpu_mul (D = $procmux$342_Y, Q = \product_shift_2, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$830 ($sdff) from module fpu_mul (D = \product_shift, Q = \product_shift_2).
Adding SRST signal on $procdff$687 ($dff) from module fpu_mul (D = $procmux$347_Y, Q = \exponent_5, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$832 ($sdff) from module fpu_mul (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:171$50_Y, Q = \exponent_5).
Adding SRST signal on $procdff$686 ($dff) from module fpu_mul (D = $procmux$352_Y, Q = \sign, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$834 ($sdff) from module fpu_mul (D = $xor$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_mul.v:122$2_Y, Q = \sign).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu_mul..
Removed 101 unused cells and 310 unused wires.
<suppressed ~102 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu_mul.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu_mul.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu_mul'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu_mul..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu_mul.

4.16. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== fpu_mul ===

   Number of wires:                267
   Number of wire bits:           3587
   Number of public wires:          58
   Number of public wire bits:    1940
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                260
     $add                          355
     $and                           53
     $dlatch                         6
     $eq                          1430
     $gt                            44
     $logic_not                     92
     $mul                          342
     $mux                          354
     $not                           54
     $or                             1
     $pmux                           6
     $reduce_or                    200
     $sdffe                       1735
     $shl                          212
     $shr                          106
     $sub                           76
     $xor                            1

End of script. Logfile hash: 684abaf5c3, CPU: user 0.26s system 0.00s, MEM: 18.11 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 21% 4x opt_expr (0 sec), 14% 2x opt_clean (0 sec), ...
