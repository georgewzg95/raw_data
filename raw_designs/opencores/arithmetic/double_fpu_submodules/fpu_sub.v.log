
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v' to AST representation.
Generating RTLIL representation for module `\fpu_sub'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:121.1-179.9 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: fpu_sub             
Automatically selected fpu_sub as design top module.

2.2. Analyzing design hierarchy..
Top module:  \fpu_sub

2.3. Analyzing design hierarchy..
Top module:  \fpu_sub
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:121$49 in module fpu_sub.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7 in module fpu_sub.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 0 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:121$49'.
     1/1: $0\diff_shift[6:0]
Creating decoders for process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
     1/30: $0\exponent[10:0]
     2/30: $0\diff_1[54:0]
     3/30: $0\diffshift_et_55[0:0]
     4/30: $0\diffshift_gt_exponent[0:0]
     5/30: $0\diff[54:0]
     6/30: $0\subtra_shift_3[54:0]
     7/30: $0\subtra_shift[54:0]
     8/30: $0\subtrahend[54:0]
     9/30: $0\minuend[54:0]
    10/30: $0\exponent_diff[10:0]
    11/30: $0\small_is_nonzero[0:0]
    12/30: $0\large_norm_small_denorm[0:0]
    13/30: $0\large_is_denorm[0:0]
    14/30: $0\small_is_denorm[0:0]
    15/30: $0\mantissa_large[51:0]
    16/30: $0\mantissa_small[51:0]
    17/30: $0\exponent_large[10:0]
    18/30: $0\exponent_small[10:0]
    19/30: $0\a_gtet_b[0:0]
    20/30: $0\mana_gtet_manb[0:0]
    21/30: $0\expa_et_expb[0:0]
    22/30: $0\expa_gt_expb[0:0]
    23/30: $0\mantissa_b[51:0]
    24/30: $0\mantissa_a[51:0]
    25/30: $0\exponent_b[10:0]
    26/30: $0\exponent_a[10:0]
    27/30: $0\diff_shift_2[6:0]
    28/30: $0\exponent_2[10:0]
    29/30: $0\diff_2[55:0]
    30/30: $0\sign[0:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\fpu_sub.\diff_shift' from process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:121$49'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\fpu_sub.\sign' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$257' with positive edge clock.
Creating register for signal `\fpu_sub.\diff_2' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$258' with positive edge clock.
Creating register for signal `\fpu_sub.\exponent_2' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$259' with positive edge clock.
Creating register for signal `\fpu_sub.\diff_shift_2' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$260' with positive edge clock.
Creating register for signal `\fpu_sub.\exponent_a' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$261' with positive edge clock.
Creating register for signal `\fpu_sub.\exponent_b' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$262' with positive edge clock.
Creating register for signal `\fpu_sub.\mantissa_a' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$263' with positive edge clock.
Creating register for signal `\fpu_sub.\mantissa_b' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$264' with positive edge clock.
Creating register for signal `\fpu_sub.\expa_gt_expb' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$265' with positive edge clock.
Creating register for signal `\fpu_sub.\expa_et_expb' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$266' with positive edge clock.
Creating register for signal `\fpu_sub.\mana_gtet_manb' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$267' with positive edge clock.
Creating register for signal `\fpu_sub.\a_gtet_b' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$268' with positive edge clock.
Creating register for signal `\fpu_sub.\exponent_small' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$269' with positive edge clock.
Creating register for signal `\fpu_sub.\exponent_large' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$270' with positive edge clock.
Creating register for signal `\fpu_sub.\mantissa_small' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$271' with positive edge clock.
Creating register for signal `\fpu_sub.\mantissa_large' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$272' with positive edge clock.
Creating register for signal `\fpu_sub.\small_is_denorm' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$273' with positive edge clock.
Creating register for signal `\fpu_sub.\large_is_denorm' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$274' with positive edge clock.
Creating register for signal `\fpu_sub.\large_norm_small_denorm' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$275' with positive edge clock.
Creating register for signal `\fpu_sub.\small_is_nonzero' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$276' with positive edge clock.
Creating register for signal `\fpu_sub.\exponent_diff' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$277' with positive edge clock.
Creating register for signal `\fpu_sub.\minuend' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$278' with positive edge clock.
Creating register for signal `\fpu_sub.\subtrahend' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$279' with positive edge clock.
Creating register for signal `\fpu_sub.\subtra_shift' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$280' with positive edge clock.
Creating register for signal `\fpu_sub.\subtra_shift_3' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$281' with positive edge clock.
Creating register for signal `\fpu_sub.\diff' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$282' with positive edge clock.
Creating register for signal `\fpu_sub.\diffshift_gt_exponent' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$283' with positive edge clock.
Creating register for signal `\fpu_sub.\diffshift_et_55' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$284' with positive edge clock.
Creating register for signal `\fpu_sub.\diff_1' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$285' with positive edge clock.
Creating register for signal `\fpu_sub.\exponent' using process `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
  created $dff cell `$procdff$286' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:121$49'.
Removing empty process `fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:121$49'.
Found and cleaned up 2 empty switches in `\fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
Removing empty process `fpu_sub.$proc$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:51$7'.
Cleaned up 3 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu_sub.
<suppressed ~6 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu_sub.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu_sub'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu_sub..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu_sub.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu_sub'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$283 ($dff) from module fpu_sub (D = $procmux$122_Y, Q = \diffshift_gt_exponent, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$287 ($sdff) from module fpu_sub (D = $gt$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:110$38_Y, Q = \diffshift_gt_exponent).
Adding SRST signal on $procdff$284 ($dff) from module fpu_sub (D = $procmux$117_Y, Q = \diffshift_et_55, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$289 ($sdff) from module fpu_sub (D = $eq$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:111$39_Y, Q = \diffshift_et_55).
Adding SRST signal on $procdff$286 ($dff) from module fpu_sub (D = $procmux$107_Y, Q = \exponent, rval = 11'00000000000).
Adding EN signal on $auto$ff.cc:262:slice$291 ($sdff) from module fpu_sub (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:113$44_Y [10:0], Q = \exponent).
Adding SRST signal on $procdff$285 ($dff) from module fpu_sub (D = $procmux$112_Y, Q = \diff_1, rval = 55'0000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$293 ($sdff) from module fpu_sub (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:112$42_Y, Q = \diff_1).
Adding SRST signal on $procdff$257 ($dff) from module fpu_sub (D = $procmux$252_Y, Q = \sign, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$295 ($sdff) from module fpu_sub (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:94$16_Y, Q = \sign).
Adding SRST signal on $procdff$258 ($dff) from module fpu_sub (D = $procmux$247_Y, Q = \diff_2, rval = 56'00000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$297 ($sdff) from module fpu_sub (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:115$48_Y, Q = \diff_2).
Adding SRST signal on $procdff$259 ($dff) from module fpu_sub (D = $procmux$242_Y, Q = \exponent_2, rval = 11'00000000000).
Adding EN signal on $auto$ff.cc:262:slice$299 ($sdff) from module fpu_sub (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:114$46_Y [10:0], Q = \exponent_2).
Adding SRST signal on $procdff$260 ($dff) from module fpu_sub (D = $procmux$237_Y, Q = \diff_shift_2, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$301 ($sdff) from module fpu_sub (D = $procmux$50_Y, Q = \diff_shift_2).
Adding SRST signal on $procdff$261 ($dff) from module fpu_sub (D = $procmux$232_Y, Q = \exponent_a, rval = 11'00000000000).
Adding EN signal on $auto$ff.cc:262:slice$303 ($sdff) from module fpu_sub (D = \opa [62:52], Q = \exponent_a).
Adding SRST signal on $procdff$262 ($dff) from module fpu_sub (D = $procmux$227_Y, Q = \exponent_b, rval = 11'00000000000).
Adding EN signal on $auto$ff.cc:262:slice$305 ($sdff) from module fpu_sub (D = \opb [62:52], Q = \exponent_b).
Adding SRST signal on $procdff$263 ($dff) from module fpu_sub (D = $procmux$222_Y, Q = \mantissa_a, rval = 52'0000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$307 ($sdff) from module fpu_sub (D = \opa [51:0], Q = \mantissa_a).
Adding SRST signal on $procdff$264 ($dff) from module fpu_sub (D = $procmux$217_Y, Q = \mantissa_b, rval = 52'0000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$309 ($sdff) from module fpu_sub (D = \opb [51:0], Q = \mantissa_b).
Adding SRST signal on $procdff$265 ($dff) from module fpu_sub (D = $procmux$212_Y, Q = \expa_gt_expb, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$311 ($sdff) from module fpu_sub (D = $gt$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:90$8_Y, Q = \expa_gt_expb).
Adding SRST signal on $procdff$266 ($dff) from module fpu_sub (D = $procmux$207_Y, Q = \expa_et_expb, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$313 ($sdff) from module fpu_sub (D = $eq$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:91$9_Y, Q = \expa_et_expb).
Adding SRST signal on $procdff$267 ($dff) from module fpu_sub (D = $procmux$202_Y, Q = \mana_gtet_manb, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$315 ($sdff) from module fpu_sub (D = $ge$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:92$10_Y, Q = \mana_gtet_manb).
Adding SRST signal on $procdff$268 ($dff) from module fpu_sub (D = $procmux$197_Y, Q = \a_gtet_b, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$317 ($sdff) from module fpu_sub (D = $or$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:93$12_Y, Q = \a_gtet_b).
Adding SRST signal on $procdff$269 ($dff) from module fpu_sub (D = $procmux$192_Y, Q = \exponent_small, rval = 11'00000000000).
Adding EN signal on $auto$ff.cc:262:slice$319 ($sdff) from module fpu_sub (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:95$17_Y, Q = \exponent_small).
Adding SRST signal on $procdff$270 ($dff) from module fpu_sub (D = $procmux$187_Y, Q = \exponent_large, rval = 11'00000000000).
Adding EN signal on $auto$ff.cc:262:slice$321 ($sdff) from module fpu_sub (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:96$18_Y, Q = \exponent_large).
Adding SRST signal on $procdff$271 ($dff) from module fpu_sub (D = $procmux$182_Y, Q = \mantissa_small, rval = 52'0000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$323 ($sdff) from module fpu_sub (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:97$19_Y, Q = \mantissa_small).
Adding SRST signal on $procdff$272 ($dff) from module fpu_sub (D = $procmux$177_Y, Q = \mantissa_large, rval = 52'0000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$325 ($sdff) from module fpu_sub (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:98$20_Y, Q = \mantissa_large).
Adding SRST signal on $procdff$273 ($dff) from module fpu_sub (D = $procmux$172_Y, Q = \small_is_denorm, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$327 ($sdff) from module fpu_sub (D = $logic_not$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:99$22_Y, Q = \small_is_denorm).
Adding SRST signal on $procdff$274 ($dff) from module fpu_sub (D = $procmux$167_Y, Q = \large_is_denorm, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$329 ($sdff) from module fpu_sub (D = $logic_not$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:100$24_Y, Q = \large_is_denorm).
Adding SRST signal on $procdff$275 ($dff) from module fpu_sub (D = $procmux$162_Y, Q = \large_norm_small_denorm, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$331 ($sdff) from module fpu_sub (D = $logic_and$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:101$27_Y, Q = \large_norm_small_denorm).
Adding SRST signal on $procdff$276 ($dff) from module fpu_sub (D = $procmux$157_Y, Q = \small_is_nonzero, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$333 ($sdff) from module fpu_sub (D = $or$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:102$30_Y, Q = \small_is_nonzero).
Adding SRST signal on $procdff$277 ($dff) from module fpu_sub (D = $procmux$152_Y, Q = \exponent_diff, rval = 11'00000000000).
Adding EN signal on $auto$ff.cc:262:slice$335 ($sdff) from module fpu_sub (D = $sub$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:103$32_Y, Q = \exponent_diff).
Adding SRST signal on $procdff$278 ($dff) from module fpu_sub (D = $procmux$147_Y, Q = \minuend, rval = 55'0000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$337 ($sdff) from module fpu_sub (D = { $logic_not$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:104$33_Y \mantissa_large 2'00 }, Q = \minuend).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$338 ($sdffe) from module fpu_sub.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$338 ($sdffe) from module fpu_sub.
Adding SRST signal on $procdff$279 ($dff) from module fpu_sub (D = $procmux$142_Y, Q = \subtrahend, rval = 55'0000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$340 ($sdff) from module fpu_sub (D = { $logic_not$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:105$34_Y \mantissa_small 2'00 }, Q = \subtrahend).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$341 ($sdffe) from module fpu_sub.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$341 ($sdffe) from module fpu_sub.
Adding SRST signal on $procdff$280 ($dff) from module fpu_sub (D = $procmux$137_Y, Q = \subtra_shift, rval = 55'0000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$343 ($sdff) from module fpu_sub (D = $shr$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:106$35_Y, Q = \subtra_shift).
Adding SRST signal on $procdff$281 ($dff) from module fpu_sub (D = $procmux$132_Y, Q = \subtra_shift_3, rval = 55'0000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$345 ($sdff) from module fpu_sub (D = $ternary$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:107$36_Y, Q = \subtra_shift_3).
Adding SRST signal on $procdff$282 ($dff) from module fpu_sub (D = $procmux$127_Y, Q = \diff, rval = 55'0000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$347 ($sdff) from module fpu_sub (D = $sub$/home/zhigang/raw_data/raw_designs/opencores/arithmetic/double_fpu_submodules/fpu_sub.v:109$37_Y, Q = \diff).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu_sub..
Removed 60 unused cells and 161 unused wires.
<suppressed ~62 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu_sub.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu_sub..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu_sub.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu_sub'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu_sub..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu_sub.

4.16. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== fpu_sub ===

   Number of wires:                135
   Number of wire bits:           1596
   Number of public wires:          41
   Number of public wire bits:     888
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                128
     $and                            3
     $eq                          1557
     $ge                            52
     $gt                            86
     $logic_and                      1
     $logic_not                     75
     $mux                          357
     $not                            1
     $or                             2
     $pmux                           7
     $reduce_or                    107
     $sdffe                        685
     $shl                          110
     $shr                           55
     $sub                          109
     $xor                            1

End of script. Logfile hash: c506633d0c, CPU: user 0.11s system 0.00s, MEM: 14.57 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 28% 4x opt_expr (0 sec), 14% 2x opt_dff (0 sec), ...
