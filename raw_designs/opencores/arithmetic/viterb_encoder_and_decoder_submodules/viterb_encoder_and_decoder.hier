
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/arithmetic//viterb_encoder_and_decoder.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/arithmetic//viterb_encoder_and_decoder.v' to AST representation.
Generating RTLIL representation for module `\ACS'.
Generating RTLIL representation for module `\decoder'.
Warning: Replacing memory \path_cost with list of registers. See /home/zhigang/raw_data/raw_designs/opencores/arithmetic//viterb_encoder_and_decoder.v:223
/home/zhigang/raw_data/raw_designs/opencores/arithmetic//viterb_encoder_and_decoder.v:539: Warning: Identifier `\d_o_disp_mem_0' is implicitly declared.
/home/zhigang/raw_data/raw_designs/opencores/arithmetic//viterb_encoder_and_decoder.v:548: Warning: Identifier `\d_o_disp_mem_1' is implicitly declared.
Generating RTLIL representation for module `\encoder'.
Generating RTLIL representation for module `\mem_disp'.
Generating RTLIL representation for module `\mem'.
Generating RTLIL representation for module `\tbu'.
Generating RTLIL representation for module `\viterbi_tx_rx'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   2 design levels: viterbi_tx_rx       
root of   0 design levels: tbu                 
root of   0 design levels: mem                 
root of   0 design levels: mem_disp            
root of   0 design levels: encoder             
root of   1 design levels: decoder             
root of   0 design levels: ACS                 
Automatically selected viterbi_tx_rx as design top module.

2.2. Analyzing design hierarchy..
Top module:  \viterbi_tx_rx
Used module:     \decoder
Used module:         \mem_disp
Used module:         \tbu
Used module:         \mem
Used module:         \ACS
Used module:     \encoder

2.3. Analyzing design hierarchy..
Top module:  \viterbi_tx_rx
Used module:     \decoder
Used module:         \mem_disp
Used module:         \tbu
Used module:         \mem
Used module:         \ACS
Used module:     \encoder
Removed 0 unused modules.
Mapping positional arguments of cell decoder.ACS111 (ACS).
Mapping positional arguments of cell decoder.ACS110 (ACS).
Mapping positional arguments of cell decoder.ACS101 (ACS).
Mapping positional arguments of cell decoder.ACS100 (ACS).
Mapping positional arguments of cell decoder.ACS011 (ACS).
Mapping positional arguments of cell decoder.ACS010 (ACS).
Mapping positional arguments of cell decoder.ACS001 (ACS).
Mapping positional arguments of cell decoder.ACS000 (ACS).

Warnings: 3 unique messages, 3 total
End of script. Logfile hash: 3e67c05758, CPU: user 0.06s system 0.00s, MEM: 14.29 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 99% 2x read_verilog (0 sec), 0% 1x hierarchy (0 sec)
