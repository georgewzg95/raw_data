
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 4d87019, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v
Parsing SystemVerilog input from `/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v' to AST representation.
Warning: Encountered `full_case' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using the Verilog `full_case' attribute or the SystemVerilog `unique' or `unique0' keywords is recommended!
Warning: Encountered `parallel_case' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using the Verilog `parallel_case' attribute or the SystemVerilog `unique' or `priority' keywords is recommended!
Generating RTLIL representation for module `\ode'.
Generating RTLIL representation for module `\fpu_mul'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:377.1-378.22 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\except'.
Generating RTLIL representation for module `\pre_norm_fmul'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:802.1-808.11 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\mul_r2'.
Generating RTLIL representation for module `\post_norm'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1187.1-1193.9 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1195.1-1201.9 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\pri_encoder'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1347.1-1447.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\b_right_shifter'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1463.1-1517.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\b_left_shifter'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1534.1-1588.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\b_left_shifter_new'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1604.1-1665.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\fpu_add'.
Generating RTLIL representation for module `\pre_norm'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2122.1-2152.11 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2177.1-2191.11 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2230.1-2244.11 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\b_right_shifter_new'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2262.1-2294.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\add_sub27'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: add_sub27           
root of   0 design levels: b_right_shifter_new 
root of   1 design levels: pre_norm            
root of   2 design levels: fpu_add             
root of   0 design levels: b_left_shifter_new  
root of   0 design levels: b_left_shifter      
root of   0 design levels: b_right_shifter     
root of   0 design levels: pri_encoder         
root of   1 design levels: post_norm           
root of   0 design levels: mul_r2              
root of   0 design levels: pre_norm_fmul       
root of   0 design levels: except              
root of   2 design levels: fpu_mul             
root of   3 design levels: ode                 
Automatically selected ode as design top module.

2.2. Analyzing design hierarchy..
Top module:  \ode
Used module:     \fpu_add
Used module:         \post_norm
Used module:             \b_left_shifter_new
Used module:             \b_left_shifter
Used module:             \b_right_shifter
Used module:             \pri_encoder
Used module:         \add_sub27
Used module:         \pre_norm
Used module:             \b_right_shifter_new
Used module:         \except
Used module:     \fpu_mul
Used module:         \mul_r2
Used module:         \pre_norm_fmul

2.3. Analyzing design hierarchy..
Top module:  \ode
Used module:     \fpu_add
Used module:         \post_norm
Used module:             \b_left_shifter_new
Used module:             \b_left_shifter
Used module:             \b_right_shifter
Used module:             \pri_encoder
Used module:         \add_sub27
Used module:         \pre_norm
Used module:             \b_right_shifter_new
Used module:         \except
Used module:     \fpu_mul
Used module:         \mul_r2
Used module:         \pre_norm_fmul
Removed 0 unused modules.
Warning: Resizing cell port fpu_add.u0.opb from 32 bits to 31 bits.
Warning: Resizing cell port fpu_add.u0.opa from 32 bits to 31 bits.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2262$1299 in module b_right_shifter_new.
Removed 1 dead cases from process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2230$1297 in module pre_norm.
Removed 1 dead cases from process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2177$1260 in module pre_norm.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1604$1054 in module b_left_shifter_new.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1534$1005 in module b_left_shifter.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1463$956 in module b_right_shifter.
Marked 49 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1347$906 in module pri_encoder.
Removed 1 dead cases from process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1195$657 in module post_norm.
Removed 1 dead cases from process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1187$656 in module post_norm.
Removed 1 dead cases from process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:802$333 in module pre_norm_fmul.
Removed a total of 5 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 159 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\b_right_shifter_new.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2262$1299'.
     1/1: $1\shift_out[26:0]
Creating decoders for process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2246$1298'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2230$1297'.
     1/1: $1\add_d[0:0]
Creating decoders for process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2221$1293'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2216$1288'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2213$1286'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2206$1267'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2203$1266'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2200$1265'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2197$1264'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2193$1263'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2177$1260'.
     1/1: $1\sign_d[0:0]
Creating decoders for process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2170$1259'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2167$1258'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2122$1224'.
     1/1: $1\sticky[0:0]
Creating decoders for process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2088$1211'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1983$1197'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1979$1196'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1976$1192'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1973$1191'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1968$1172'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1965$1167'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1959$1166'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1956$1165'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1951$1160'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1945$1155'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1938$1144'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1932$1138'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1923$1132'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1920$1131'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1882$1127'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1877$1126'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1874$1125'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1867$1124'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1863$1123'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1844$1122'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1828$1121'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1776$1119'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1773$1118'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1770$1117'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1767$1116'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1764$1115'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1761$1114'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1758$1113'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1755$1112'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1746$1111'.
Creating decoders for process `\b_left_shifter_new.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1604$1054'.
     1/1: $1\shift_out[55:0]
Creating decoders for process `\b_left_shifter.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1534$1005'.
     1/1: $1\shift_out[47:0]
Creating decoders for process `\b_right_shifter.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1463$956'.
     1/1: $1\shift_out[47:0]
Creating decoders for process `\pri_encoder.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1347$906'.
     1/49: $49\fi_ldz_r0[5:0]
     2/49: $48\fi_ldz_r0[5:0]
     3/49: $47\fi_ldz_r0[5:0]
     4/49: $46\fi_ldz_r0[5:0]
     5/49: $45\fi_ldz_r0[5:0]
     6/49: $44\fi_ldz_r0[5:0]
     7/49: $43\fi_ldz_r0[5:0]
     8/49: $42\fi_ldz_r0[5:0]
     9/49: $41\fi_ldz_r0[5:0]
    10/49: $40\fi_ldz_r0[5:0]
    11/49: $39\fi_ldz_r0[5:0]
    12/49: $38\fi_ldz_r0[5:0]
    13/49: $37\fi_ldz_r0[5:0]
    14/49: $36\fi_ldz_r0[5:0]
    15/49: $35\fi_ldz_r0[5:0]
    16/49: $34\fi_ldz_r0[5:0]
    17/49: $33\fi_ldz_r0[5:0]
    18/49: $32\fi_ldz_r0[5:0]
    19/49: $31\fi_ldz_r0[5:0]
    20/49: $30\fi_ldz_r0[5:0]
    21/49: $29\fi_ldz_r0[5:0]
    22/49: $28\fi_ldz_r0[5:0]
    23/49: $27\fi_ldz_r0[5:0]
    24/49: $26\fi_ldz_r0[5:0]
    25/49: $25\fi_ldz_r0[5:0]
    26/49: $24\fi_ldz_r0[5:0]
    27/49: $23\fi_ldz_r0[5:0]
    28/49: $22\fi_ldz_r0[5:0]
    29/49: $21\fi_ldz_r0[5:0]
    30/49: $20\fi_ldz_r0[5:0]
    31/49: $19\fi_ldz_r0[5:0]
    32/49: $18\fi_ldz_r0[5:0]
    33/49: $17\fi_ldz_r0[5:0]
    34/49: $16\fi_ldz_r0[5:0]
    35/49: $15\fi_ldz_r0[5:0]
    36/49: $14\fi_ldz_r0[5:0]
    37/49: $13\fi_ldz_r0[5:0]
    38/49: $12\fi_ldz_r0[5:0]
    39/49: $11\fi_ldz_r0[5:0]
    40/49: $10\fi_ldz_r0[5:0]
    41/49: $9\fi_ldz_r0[5:0]
    42/49: $8\fi_ldz_r0[5:0]
    43/49: $7\fi_ldz_r0[5:0]
    44/49: $6\fi_ldz_r0[5:0]
    45/49: $5\fi_ldz_r0[5:0]
    46/49: $4\fi_ldz_r0[5:0]
    47/49: $3\fi_ldz_r0[5:0]
    48/49: $2\fi_ldz_r0[5:0]
    49/49: $1\fi_ldz_r0[5:0]
Creating decoders for process `\post_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1195$657'.
     1/1: $1\fract_out_rnd[22:0]
Creating decoders for process `\post_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1187$656'.
     1/1: $1\exp_out_rnd[7:0]
Creating decoders for process `\mul_r2.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:834$339'.
Creating decoders for process `\mul_r2.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:831$337'.
Creating decoders for process `\pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:813$335'.
Creating decoders for process `\pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:810$334'.
Creating decoders for process `\pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:802$333'.
     1/1: $1\sign_d[0:0]
Creating decoders for process `\pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:792$328'.
Creating decoders for process `\pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:789$327'.
Creating decoders for process `\pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:781$302'.
Creating decoders for process `\pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:772$280'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:691$253'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:688$252'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:685$250'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:682$248'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:679$245'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:676$242'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:673$239'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:670$236'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:667$234'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:664$232'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:661$228'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:658$224'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:655$220'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:652$216'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:649$212'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:646$208'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:643$204'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:640$203'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:637$199'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:634$198'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:631$195'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:628$192'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:625$190'.
Creating decoders for process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:622$188'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:564$187'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:559$181'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:556$177'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:553$176'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:538$146'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:529$126'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:525$125'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:522$124'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:485$106'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:482$105'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:476$97'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:465$69'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:456$49'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:439$27'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:388$22'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:383$21'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:380$20'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:377$19'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:373$18'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:370$17'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:343$16'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:340$15'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:337$14'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:334$13'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:276$12'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:273$11'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:270$10'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:267$9'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:264$8'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:261$7'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:258$6'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:255$5'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:251$4'.
Creating decoders for process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
Latch inferred for signal `\b_right_shifter_new.\shift_out' from process `\b_right_shifter_new.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2262$1299': $auto$proc_dlatch.cc:427:proc_dlatch$5431
No latch inferred for signal `\pre_norm.\add_d' from process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2230$1297'.
No latch inferred for signal `\pre_norm.\sign_d' from process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2177$1260'.
No latch inferred for signal `\pre_norm.\sticky' from process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2122$1224'.
Latch inferred for signal `\b_left_shifter_new.\shift_out' from process `\b_left_shifter_new.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1604$1054': $auto$proc_dlatch.cc:427:proc_dlatch$5778
Latch inferred for signal `\b_left_shifter.\shift_out' from process `\b_left_shifter.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1534$1005': $auto$proc_dlatch.cc:427:proc_dlatch$6077
Latch inferred for signal `\b_right_shifter.\shift_out' from process `\b_right_shifter.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1463$956': $auto$proc_dlatch.cc:427:proc_dlatch$6376
Latch inferred for signal `\pri_encoder.\fi_ldz_r0' from process `\pri_encoder.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1347$906': $auto$proc_dlatch.cc:427:proc_dlatch$16179
No latch inferred for signal `\post_norm.\fract_out_rnd' from process `\post_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1195$657'.
No latch inferred for signal `\post_norm.\exp_out_rnd' from process `\post_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1187$656'.
No latch inferred for signal `\pre_norm_fmul.\sign_d' from process `\pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:802$333'.
No latch inferred for signal `\fpu_mul.\fract_denorm' from process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:377$19'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\pre_norm.\fasu_op' using process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2246$1298'.
  created $dff cell `$procdff$16180' with positive edge clock.
Creating register for signal `\pre_norm.\nan_sign' using process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2221$1293'.
  created $dff cell `$procdff$16181' with positive edge clock.
Creating register for signal `\pre_norm.\fracta_eq_fractb' using process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2216$1288'.
  created $dff cell `$procdff$16182' with positive edge clock.
Creating register for signal `\pre_norm.\fracta_lt_fractb' using process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2213$1286'.
  created $dff cell `$procdff$16183' with positive edge clock.
Creating register for signal `\pre_norm.\result_zero_sign' using process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2206$1267'.
  created $dff cell `$procdff$16184' with positive edge clock.
Creating register for signal `\pre_norm.\add_r' using process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2203$1266'.
  created $dff cell `$procdff$16185' with positive edge clock.
Creating register for signal `\pre_norm.\signb_r' using process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2200$1265'.
  created $dff cell `$procdff$16186' with positive edge clock.
Creating register for signal `\pre_norm.\signa_r' using process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2197$1264'.
  created $dff cell `$procdff$16187' with positive edge clock.
Creating register for signal `\pre_norm.\sign' using process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2193$1263'.
  created $dff cell `$procdff$16188' with positive edge clock.
Creating register for signal `\pre_norm.\fractb_out' using process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2170$1259'.
  created $dff cell `$procdff$16189' with positive edge clock.
Creating register for signal `\pre_norm.\fracta_out' using process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2167$1258'.
  created $dff cell `$procdff$16190' with positive edge clock.
Creating register for signal `\pre_norm.\exp_dn_out' using process `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2088$1211'.
  created $dff cell `$procdff$16191' with positive edge clock.
Creating register for signal `\fpu_add.\out' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1983$1197'.
  created $dff cell `$procdff$16192' with positive edge clock.
Creating register for signal `\fpu_add.\zero' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1983$1197'.
  created $dff cell `$procdff$16193' with positive edge clock.
Creating register for signal `\fpu_add.\div_by_zero' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1983$1197'.
  created $dff cell `$procdff$16194' with positive edge clock.
Creating register for signal `\fpu_add.\overflow' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1983$1197'.
  created $dff cell `$procdff$16195' with positive edge clock.
Creating register for signal `\fpu_add.\underflow' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1983$1197'.
  created $dff cell `$procdff$16196' with positive edge clock.
Creating register for signal `\fpu_add.\inf' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1983$1197'.
  created $dff cell `$procdff$16197' with positive edge clock.
Creating register for signal `\fpu_add.\snan' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1983$1197'.
  created $dff cell `$procdff$16198' with positive edge clock.
Creating register for signal `\fpu_add.\qnan' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1983$1197'.
  created $dff cell `$procdff$16199' with positive edge clock.
Creating register for signal `\fpu_add.\ine' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1983$1197'.
  created $dff cell `$procdff$16200' with positive edge clock.
Creating register for signal `\fpu_add.\div_by_zero_o1' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1979$1196'.
  created $dff cell `$procdff$16201' with positive edge clock.
Creating register for signal `\fpu_add.\opa_nan_r' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1976$1192'.
  created $dff cell `$procdff$16202' with positive edge clock.
Creating register for signal `\fpu_add.\zero_o1' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1973$1191'.
  created $dff cell `$procdff$16203' with positive edge clock.
Creating register for signal `\fpu_add.\inf_o1' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1968$1172'.
  created $dff cell `$procdff$16204' with positive edge clock.
Creating register for signal `\fpu_add.\qnan_o1' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1965$1167'.
  created $dff cell `$procdff$16205' with positive edge clock.
Creating register for signal `\fpu_add.\snan_o1' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1959$1166'.
  created $dff cell `$procdff$16206' with positive edge clock.
Creating register for signal `\fpu_add.\underflow_o1' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1956$1165'.
  created $dff cell `$procdff$16207' with positive edge clock.
Creating register for signal `\fpu_add.\overflow_o1' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1951$1160'.
  created $dff cell `$procdff$16208' with positive edge clock.
Creating register for signal `\fpu_add.\ine_o1' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1945$1155'.
  created $dff cell `$procdff$16209' with positive edge clock.
Creating register for signal `\fpu_add.\out_o1 [31]' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1938$1144'.
  created $dff cell `$procdff$16210' with positive edge clock.
Creating register for signal `\fpu_add.\out_o1 [30:0]' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1932$1138'.
  created $dff cell `$procdff$16211' with positive edge clock.
Creating register for signal `\fpu_add.\fasu_op_r2' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1923$1132'.
  created $dff cell `$procdff$16212' with positive edge clock.
Creating register for signal `\fpu_add.\fasu_op_r1' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1920$1131'.
  created $dff cell `$procdff$16213' with positive edge clock.
Creating register for signal `\fpu_add.\sign' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1882$1127'.
  created $dff cell `$procdff$16214' with positive edge clock.
Creating register for signal `\fpu_add.\opas_r2' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1877$1126'.
  created $dff cell `$procdff$16215' with positive edge clock.
Creating register for signal `\fpu_add.\opas_r1' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1874$1125'.
  created $dff cell `$procdff$16216' with positive edge clock.
Creating register for signal `\fpu_add.\opa_r1' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1867$1124'.
  created $dff cell `$procdff$16217' with positive edge clock.
Creating register for signal `\fpu_add.\exp_r' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1863$1123'.
  created $dff cell `$procdff$16218' with positive edge clock.
Creating register for signal `\fpu_add.\fract_out_q' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1844$1122'.
  created $dff cell `$procdff$16219' with positive edge clock.
Creating register for signal `\fpu_add.\sign_fasu_r' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1828$1121'.
  created $dff cell `$procdff$16220' with positive edge clock.
Creating register for signal `\fpu_add.\fpu_op_r3' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1776$1119'.
  created $dff cell `$procdff$16221' with positive edge clock.
Creating register for signal `\fpu_add.\fpu_op_r2' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1773$1118'.
  created $dff cell `$procdff$16222' with positive edge clock.
Creating register for signal `\fpu_add.\fpu_op_r1' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1770$1117'.
  created $dff cell `$procdff$16223' with positive edge clock.
Creating register for signal `\fpu_add.\rmode_r3' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1767$1116'.
  created $dff cell `$procdff$16224' with positive edge clock.
Creating register for signal `\fpu_add.\rmode_r2' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1764$1115'.
  created $dff cell `$procdff$16225' with positive edge clock.
Creating register for signal `\fpu_add.\rmode_r1' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1761$1114'.
  created $dff cell `$procdff$16226' with positive edge clock.
Creating register for signal `\fpu_add.\opb_r' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1758$1113'.
  created $dff cell `$procdff$16227' with positive edge clock.
Creating register for signal `\fpu_add.\opa_r' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1755$1112'.
  created $dff cell `$procdff$16228' with positive edge clock.
Creating register for signal `\fpu_add.\fpu_op' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1746$1111'.
  created $dff cell `$procdff$16229' with positive edge clock.
Creating register for signal `\mul_r2.\prod' using process `\mul_r2.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:834$339'.
  created $dff cell `$procdff$16230' with positive edge clock.
Creating register for signal `\mul_r2.\prod1' using process `\mul_r2.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:831$337'.
  created $dff cell `$procdff$16231' with positive edge clock.
Creating register for signal `\pre_norm_fmul.\sign_exe' using process `\pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:813$335'.
  created $dff cell `$procdff$16232' with positive edge clock.
Creating register for signal `\pre_norm_fmul.\sign' using process `\pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:810$334'.
  created $dff cell `$procdff$16233' with positive edge clock.
Creating register for signal `\pre_norm_fmul.\inf' using process `\pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:792$328'.
  created $dff cell `$procdff$16234' with positive edge clock.
Creating register for signal `\pre_norm_fmul.\underflow' using process `\pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:789$327'.
  created $dff cell `$procdff$16235' with positive edge clock.
Creating register for signal `\pre_norm_fmul.\exp_ovf' using process `\pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:781$302'.
  created $dff cell `$procdff$16236' with positive edge clock.
Creating register for signal `\pre_norm_fmul.\exp_out' using process `\pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:772$280'.
  created $dff cell `$procdff$16237' with positive edge clock.
Creating register for signal `\except.\opb_dn' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:691$253'.
  created $dff cell `$procdff$16238' with positive edge clock.
Creating register for signal `\except.\opa_dn' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:688$252'.
  created $dff cell `$procdff$16239' with positive edge clock.
Creating register for signal `\except.\opb_00' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:685$250'.
  created $dff cell `$procdff$16240' with positive edge clock.
Creating register for signal `\except.\opa_00' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:682$248'.
  created $dff cell `$procdff$16241' with positive edge clock.
Creating register for signal `\except.\fractb_00' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:679$245'.
  created $dff cell `$procdff$16242' with positive edge clock.
Creating register for signal `\except.\fracta_00' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:676$242'.
  created $dff cell `$procdff$16243' with positive edge clock.
Creating register for signal `\except.\expb_00' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:673$239'.
  created $dff cell `$procdff$16244' with positive edge clock.
Creating register for signal `\except.\expa_00' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:670$236'.
  created $dff cell `$procdff$16245' with positive edge clock.
Creating register for signal `\except.\opb_inf' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:667$234'.
  created $dff cell `$procdff$16246' with positive edge clock.
Creating register for signal `\except.\opa_inf' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:664$232'.
  created $dff cell `$procdff$16247' with positive edge clock.
Creating register for signal `\except.\opb_nan' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:661$228'.
  created $dff cell `$procdff$16248' with positive edge clock.
Creating register for signal `\except.\opa_nan' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:658$224'.
  created $dff cell `$procdff$16249' with positive edge clock.
Creating register for signal `\except.\snan' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:655$220'.
  created $dff cell `$procdff$16250' with positive edge clock.
Creating register for signal `\except.\qnan' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:652$216'.
  created $dff cell `$procdff$16251' with positive edge clock.
Creating register for signal `\except.\inf' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:649$212'.
  created $dff cell `$procdff$16252' with positive edge clock.
Creating register for signal `\except.\ind' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:646$208'.
  created $dff cell `$procdff$16253' with positive edge clock.
Creating register for signal `\except.\snan_r_b' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:643$204'.
  created $dff cell `$procdff$16254' with positive edge clock.
Creating register for signal `\except.\qnan_r_b' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:640$203'.
  created $dff cell `$procdff$16255' with positive edge clock.
Creating register for signal `\except.\snan_r_a' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:637$199'.
  created $dff cell `$procdff$16256' with positive edge clock.
Creating register for signal `\except.\qnan_r_a' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:634$198'.
  created $dff cell `$procdff$16257' with positive edge clock.
Creating register for signal `\except.\infb_f_r' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:631$195'.
  created $dff cell `$procdff$16258' with positive edge clock.
Creating register for signal `\except.\infa_f_r' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:628$192'.
  created $dff cell `$procdff$16259' with positive edge clock.
Creating register for signal `\except.\expb_ff' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:625$190'.
  created $dff cell `$procdff$16260' with positive edge clock.
Creating register for signal `\except.\expa_ff' using process `\except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:622$188'.
  created $dff cell `$procdff$16261' with positive edge clock.
Creating register for signal `\fpu_mul.\out' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:564$187'.
  created $dff cell `$procdff$16262' with positive edge clock.
Creating register for signal `\fpu_mul.\zero' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:564$187'.
  created $dff cell `$procdff$16263' with positive edge clock.
Creating register for signal `\fpu_mul.\div_by_zero' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:564$187'.
  created $dff cell `$procdff$16264' with positive edge clock.
Creating register for signal `\fpu_mul.\overflow' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:564$187'.
  created $dff cell `$procdff$16265' with positive edge clock.
Creating register for signal `\fpu_mul.\underflow' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:564$187'.
  created $dff cell `$procdff$16266' with positive edge clock.
Creating register for signal `\fpu_mul.\inf' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:564$187'.
  created $dff cell `$procdff$16267' with positive edge clock.
Creating register for signal `\fpu_mul.\snan' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:564$187'.
  created $dff cell `$procdff$16268' with positive edge clock.
Creating register for signal `\fpu_mul.\qnan' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:564$187'.
  created $dff cell `$procdff$16269' with positive edge clock.
Creating register for signal `\fpu_mul.\ine' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:564$187'.
  created $dff cell `$procdff$16270' with positive edge clock.
Creating register for signal `\fpu_mul.\div_by_zero_o1' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:559$181'.
  created $dff cell `$procdff$16271' with positive edge clock.
Creating register for signal `\fpu_mul.\opa_nan_r' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:556$177'.
  created $dff cell `$procdff$16272' with positive edge clock.
Creating register for signal `\fpu_mul.\zero_o1' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:553$176'.
  created $dff cell `$procdff$16273' with positive edge clock.
Creating register for signal `\fpu_mul.\inf_o1' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:538$146'.
  created $dff cell `$procdff$16274' with positive edge clock.
Creating register for signal `\fpu_mul.\qnan_o1' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:529$126'.
  created $dff cell `$procdff$16275' with positive edge clock.
Creating register for signal `\fpu_mul.\snan_o1' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:525$125'.
  created $dff cell `$procdff$16276' with positive edge clock.
Creating register for signal `\fpu_mul.\underflow_o1' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:522$124'.
  created $dff cell `$procdff$16277' with positive edge clock.
Creating register for signal `\fpu_mul.\underflow_fmul_r' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:485$106'.
  created $dff cell `$procdff$16278' with positive edge clock.
Creating register for signal `\fpu_mul.\overflow_o1' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:482$105'.
  created $dff cell `$procdff$16279' with positive edge clock.
Creating register for signal `\fpu_mul.\ine_o1' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:476$97'.
  created $dff cell `$procdff$16280' with positive edge clock.
Creating register for signal `\fpu_mul.\out_o1 [31]' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:465$69'.
  created $dff cell `$procdff$16281' with positive edge clock.
Creating register for signal `\fpu_mul.\out_o1 [30:0]' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:456$49'.
  created $dff cell `$procdff$16282' with positive edge clock.
Creating register for signal `\fpu_mul.\inf_mul2' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:439$27'.
  created $dff cell `$procdff$16283' with positive edge clock.
Creating register for signal `\fpu_mul.\sign' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:388$22'.
  created $dff cell `$procdff$16284' with positive edge clock.
Creating register for signal `\fpu_mul.\opas_r2' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:383$21'.
  created $dff cell `$procdff$16285' with positive edge clock.
Creating register for signal `\fpu_mul.\opas_r1' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:380$20'.
  created $dff cell `$procdff$16286' with positive edge clock.
Creating register for signal `\fpu_mul.\opa_r1' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:373$18'.
  created $dff cell `$procdff$16287' with positive edge clock.
Creating register for signal `\fpu_mul.\exp_r' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:370$17'.
  created $dff cell `$procdff$16288' with positive edge clock.
Creating register for signal `\fpu_mul.\exp_ovf_r' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:343$16'.
  created $dff cell `$procdff$16289' with positive edge clock.
Creating register for signal `\fpu_mul.\inf_mul_r' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:340$15'.
  created $dff cell `$procdff$16290' with positive edge clock.
Creating register for signal `\fpu_mul.\sign_exe_r' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:337$14'.
  created $dff cell `$procdff$16291' with positive edge clock.
Creating register for signal `\fpu_mul.\sign_mul_r' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:334$13'.
  created $dff cell `$procdff$16292' with positive edge clock.
Creating register for signal `\fpu_mul.\fpu_op_r3' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:276$12'.
  created $dff cell `$procdff$16293' with positive edge clock.
Creating register for signal `\fpu_mul.\fpu_op_r2' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:273$11'.
  created $dff cell `$procdff$16294' with positive edge clock.
Creating register for signal `\fpu_mul.\fpu_op_r1' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:270$10'.
  created $dff cell `$procdff$16295' with positive edge clock.
Creating register for signal `\fpu_mul.\rmode_r3' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:267$9'.
  created $dff cell `$procdff$16296' with positive edge clock.
Creating register for signal `\fpu_mul.\rmode_r2' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:264$8'.
  created $dff cell `$procdff$16297' with positive edge clock.
Creating register for signal `\fpu_mul.\rmode_r1' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:261$7'.
  created $dff cell `$procdff$16298' with positive edge clock.
Creating register for signal `\fpu_mul.\opb_r' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:258$6'.
  created $dff cell `$procdff$16299' with positive edge clock.
Creating register for signal `\fpu_mul.\opa_r' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:255$5'.
  created $dff cell `$procdff$16300' with positive edge clock.
Creating register for signal `\fpu_mul.\fpu_op' using process `\fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:251$4'.
  created $dff cell `$procdff$16301' with positive edge clock.
Creating register for signal `\ode.\t_reg1' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16302' with positive edge clock.
Creating register for signal `\ode.\t_reg2' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16303' with positive edge clock.
Creating register for signal `\ode.\t_reg3' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16304' with positive edge clock.
Creating register for signal `\ode.\t_reg4' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16305' with positive edge clock.
Creating register for signal `\ode.\t_reg5' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16306' with positive edge clock.
Creating register for signal `\ode.\t_reg6' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16307' with positive edge clock.
Creating register for signal `\ode.\t_reg7' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16308' with positive edge clock.
Creating register for signal `\ode.\t_reg8' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16309' with positive edge clock.
Creating register for signal `\ode.\t_reg9' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16310' with positive edge clock.
Creating register for signal `\ode.\t_reg10' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16311' with positive edge clock.
Creating register for signal `\ode.\t_reg11' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16312' with positive edge clock.
Creating register for signal `\ode.\t_reg12' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16313' with positive edge clock.
Creating register for signal `\ode.\y_pi_reg1' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16314' with positive edge clock.
Creating register for signal `\ode.\y_pi_reg2' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16315' with positive edge clock.
Creating register for signal `\ode.\y_pi_reg3' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16316' with positive edge clock.
Creating register for signal `\ode.\y_pi_reg4' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16317' with positive edge clock.
Creating register for signal `\ode.\y_pi_reg5' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16318' with positive edge clock.
Creating register for signal `\ode.\y_pi_reg6' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16319' with positive edge clock.
Creating register for signal `\ode.\y_pi_reg7' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16320' with positive edge clock.
Creating register for signal `\ode.\y_pi_reg8' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16321' with positive edge clock.
Creating register for signal `\ode.\y_pi_reg9' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16322' with positive edge clock.
Creating register for signal `\ode.\y_pi_reg10' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16323' with positive edge clock.
Creating register for signal `\ode.\y_pi_reg11' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16324' with positive edge clock.
Creating register for signal `\ode.\y_pi_reg12' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16325' with positive edge clock.
Creating register for signal `\ode.\y_pi_out_reg' using process `\ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
  created $dff cell `$procdff$16326' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\b_right_shifter_new.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2262$1299'.
Removing empty process `b_right_shifter_new.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2262$1299'.
Removing empty process `pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2246$1298'.
Found and cleaned up 1 empty switch in `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2230$1297'.
Removing empty process `pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2230$1297'.
Removing empty process `pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2221$1293'.
Removing empty process `pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2216$1288'.
Removing empty process `pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2213$1286'.
Removing empty process `pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2206$1267'.
Removing empty process `pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2203$1266'.
Removing empty process `pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2200$1265'.
Removing empty process `pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2197$1264'.
Removing empty process `pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2193$1263'.
Found and cleaned up 1 empty switch in `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2177$1260'.
Removing empty process `pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2177$1260'.
Removing empty process `pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2170$1259'.
Removing empty process `pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2167$1258'.
Found and cleaned up 1 empty switch in `\pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2122$1224'.
Removing empty process `pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2122$1224'.
Removing empty process `pre_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2088$1211'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1983$1197'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1979$1196'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1976$1192'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1973$1191'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1968$1172'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1965$1167'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1959$1166'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1956$1165'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1951$1160'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1945$1155'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1938$1144'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1932$1138'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1923$1132'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1920$1131'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1882$1127'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1877$1126'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1874$1125'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1867$1124'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1863$1123'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1844$1122'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1828$1121'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1776$1119'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1773$1118'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1770$1117'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1767$1116'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1764$1115'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1761$1114'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1758$1113'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1755$1112'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1746$1111'.
Found and cleaned up 1 empty switch in `\b_left_shifter_new.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1604$1054'.
Removing empty process `b_left_shifter_new.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1604$1054'.
Found and cleaned up 1 empty switch in `\b_left_shifter.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1534$1005'.
Removing empty process `b_left_shifter.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1534$1005'.
Found and cleaned up 1 empty switch in `\b_right_shifter.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1463$956'.
Removing empty process `b_right_shifter.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1463$956'.
Found and cleaned up 49 empty switches in `\pri_encoder.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1347$906'.
Removing empty process `pri_encoder.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1347$906'.
Found and cleaned up 1 empty switch in `\post_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1195$657'.
Removing empty process `post_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1195$657'.
Found and cleaned up 1 empty switch in `\post_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1187$656'.
Removing empty process `post_norm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1187$656'.
Removing empty process `mul_r2.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:834$339'.
Removing empty process `mul_r2.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:831$337'.
Removing empty process `pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:813$335'.
Removing empty process `pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:810$334'.
Found and cleaned up 1 empty switch in `\pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:802$333'.
Removing empty process `pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:802$333'.
Removing empty process `pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:792$328'.
Removing empty process `pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:789$327'.
Removing empty process `pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:781$302'.
Removing empty process `pre_norm_fmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:772$280'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:691$253'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:688$252'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:685$250'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:682$248'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:679$245'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:676$242'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:673$239'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:670$236'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:667$234'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:664$232'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:661$228'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:658$224'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:655$220'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:652$216'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:649$212'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:646$208'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:643$204'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:640$203'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:637$199'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:634$198'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:631$195'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:628$192'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:625$190'.
Removing empty process `except.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:622$188'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:564$187'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:559$181'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:556$177'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:553$176'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:538$146'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:529$126'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:525$125'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:522$124'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:485$106'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:482$105'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:476$97'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:465$69'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:456$49'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:439$27'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:388$22'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:383$21'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:380$20'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:377$19'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:373$18'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:370$17'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:343$16'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:340$15'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:337$14'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:334$13'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:276$12'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:273$11'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:270$10'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:267$9'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:264$8'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:261$7'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:258$6'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:255$5'.
Removing empty process `fpu_mul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:251$4'.
Removing empty process `ode.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:133$3'.
Cleaned up 59 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_right_shifter_new.
<suppressed ~59 debug messages>
Optimizing module pre_norm.
<suppressed ~8 debug messages>
Optimizing module fpu_add.
Optimizing module b_left_shifter_new.
<suppressed ~117 debug messages>
Optimizing module b_left_shifter.
<suppressed ~101 debug messages>
Optimizing module b_right_shifter.
<suppressed ~101 debug messages>
Optimizing module pri_encoder.
<suppressed ~3632 debug messages>
Optimizing module post_norm.
<suppressed ~16 debug messages>
Optimizing module mul_r2.
Optimizing module pre_norm_fmul.
<suppressed ~9 debug messages>
Optimizing module except.
Optimizing module fpu_mul.
<suppressed ~5 debug messages>
Optimizing module ode.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_right_shifter_new.
Optimizing module pre_norm.
Optimizing module fpu_add.
Optimizing module b_left_shifter_new.
Optimizing module b_left_shifter.
Optimizing module b_right_shifter.
Optimizing module pri_encoder.
Optimizing module post_norm.
Optimizing module mul_r2.
Optimizing module pre_norm_fmul.
Optimizing module except.
Optimizing module fpu_mul.
Optimizing module ode.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\add_sub27'.
Finding identical cells in module `\b_right_shifter_new'.
Finding identical cells in module `\pre_norm'.
<suppressed ~36 debug messages>
Finding identical cells in module `\fpu_add'.
<suppressed ~51 debug messages>
Finding identical cells in module `\b_left_shifter_new'.
Finding identical cells in module `\b_left_shifter'.
Finding identical cells in module `\b_right_shifter'.
Finding identical cells in module `\pri_encoder'.
<suppressed ~3528 debug messages>
Finding identical cells in module `\post_norm'.
<suppressed ~396 debug messages>
Finding identical cells in module `\mul_r2'.
Finding identical cells in module `\pre_norm_fmul'.
<suppressed ~12 debug messages>
Finding identical cells in module `\except'.
<suppressed ~42 debug messages>
Finding identical cells in module `\fpu_mul'.
<suppressed ~108 debug messages>
Finding identical cells in module `\ode'.
Removed a total of 1391 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \add_sub27..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pri_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \post_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1097$507: \opas -> 1'1
      Replacing known input bits on port A of cell $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1096$503: \opas -> 1'0
  Analyzing evaluation results.
Running muxtree optimizer on module \mul_r2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pre_norm_fmul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \except..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:463$68.
    dead port 2/2 on $mux $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:463$68.
Running muxtree optimizer on module \ode..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 2 multiplexer ports.
<suppressed ~59 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \add_sub27.
  Optimizing cells in module \b_right_shifter_new.
    New ctrl vector for $pmux cell $procmux$1331: { $procmux$1358_CMP $procmux$1357_CMP $procmux$1356_CMP $procmux$1355_CMP $procmux$1354_CMP $procmux$1353_CMP $procmux$1352_CMP $procmux$1351_CMP $procmux$1350_CMP $procmux$1349_CMP $procmux$1348_CMP $procmux$1347_CMP $procmux$1346_CMP $procmux$1345_CMP $procmux$1344_CMP $procmux$1343_CMP $procmux$1342_CMP $procmux$1341_CMP $procmux$1340_CMP $procmux$1339_CMP $procmux$1338_CMP $procmux$1337_CMP $procmux$1336_CMP $procmux$1335_CMP $procmux$1334_CMP $procmux$1333_CMP $procmux$1332_CMP }
  Optimizing cells in module \b_right_shifter_new.
  Optimizing cells in module \pre_norm.
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2129$1228: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [1:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2130$1229: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [2:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2131$1230: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [3:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2132$1231: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [4:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2133$1232: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [5:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2134$1233: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [6:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2135$1234: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [7:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2136$1235: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [8:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2137$1236: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [9:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2138$1237: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [10:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2139$1238: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [11:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2140$1239: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [12:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2141$1240: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [13:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2142$1241: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [14:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2143$1242: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [15:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2144$1243: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [16:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2145$1244: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [17:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2146$1245: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [18:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2147$1246: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [19:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2148$1247: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [20:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2149$1248: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y [21:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2150$1249: $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2151$1250: { $not$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2098$1220_Y $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:2096$1219_Y }
    New ctrl vector for $pmux cell $procmux$1379: { $auto$opt_reduce.cc:134:opt_mux$16328 $procmux$1403_CMP $procmux$1402_CMP $procmux$1401_CMP $procmux$1400_CMP $procmux$1399_CMP $procmux$1398_CMP $procmux$1397_CMP $procmux$1396_CMP $procmux$1395_CMP $procmux$1394_CMP $procmux$1393_CMP $procmux$1392_CMP $procmux$1391_CMP $procmux$1390_CMP $procmux$1389_CMP $procmux$1388_CMP $procmux$1387_CMP $procmux$1386_CMP $procmux$1385_CMP $procmux$1384_CMP $procmux$1383_CMP $procmux$1382_CMP $procmux$1381_CMP $procmux$1380_CMP }
    New ctrl vector for $pmux cell $procmux$1369: { $auto$opt_reduce.cc:134:opt_mux$16336 $auto$opt_reduce.cc:134:opt_mux$16334 $auto$opt_reduce.cc:134:opt_mux$16332 $auto$opt_reduce.cc:134:opt_mux$16330 }
    New ctrl vector for $pmux cell $procmux$1360: { $auto$opt_reduce.cc:134:opt_mux$16340 $auto$opt_reduce.cc:134:opt_mux$16338 }
  Optimizing cells in module \pre_norm.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \b_left_shifter_new.
    New ctrl vector for $pmux cell $procmux$1409: { $procmux$1465_CMP $procmux$1464_CMP $procmux$1463_CMP $procmux$1462_CMP $procmux$1461_CMP $procmux$1460_CMP $procmux$1459_CMP $procmux$1458_CMP $procmux$1457_CMP $procmux$1456_CMP $procmux$1455_CMP $procmux$1454_CMP $procmux$1453_CMP $procmux$1452_CMP $procmux$1451_CMP $procmux$1450_CMP $procmux$1449_CMP $procmux$1448_CMP $procmux$1447_CMP $procmux$1446_CMP $procmux$1445_CMP $procmux$1444_CMP $procmux$1443_CMP $procmux$1442_CMP $procmux$1441_CMP $procmux$1440_CMP $procmux$1439_CMP $procmux$1438_CMP $procmux$1437_CMP $procmux$1436_CMP $procmux$1435_CMP $procmux$1434_CMP $procmux$1433_CMP $procmux$1432_CMP $procmux$1431_CMP $procmux$1430_CMP $procmux$1429_CMP $procmux$1428_CMP $procmux$1427_CMP $procmux$1426_CMP $procmux$1425_CMP $procmux$1424_CMP $procmux$1423_CMP $procmux$1422_CMP $procmux$1421_CMP $procmux$1420_CMP $procmux$1419_CMP $procmux$1418_CMP $procmux$1417_CMP $procmux$1416_CMP $procmux$1415_CMP $procmux$1414_CMP $procmux$1413_CMP $procmux$1412_CMP $procmux$1411_CMP $procmux$1410_CMP }
  Optimizing cells in module \b_left_shifter_new.
  Optimizing cells in module \b_left_shifter.
    New ctrl vector for $pmux cell $procmux$1468: { $procmux$1516_CMP $procmux$1515_CMP $procmux$1514_CMP $procmux$1513_CMP $procmux$1512_CMP $procmux$1511_CMP $procmux$1510_CMP $procmux$1509_CMP $procmux$1508_CMP $procmux$1507_CMP $procmux$1506_CMP $procmux$1505_CMP $procmux$1504_CMP $procmux$1503_CMP $procmux$1502_CMP $procmux$1501_CMP $procmux$1500_CMP $procmux$1499_CMP $procmux$1498_CMP $procmux$1497_CMP $procmux$1496_CMP $procmux$1495_CMP $procmux$1494_CMP $procmux$1493_CMP $procmux$1492_CMP $procmux$1491_CMP $procmux$1490_CMP $procmux$1489_CMP $procmux$1488_CMP $procmux$1487_CMP $procmux$1486_CMP $procmux$1485_CMP $procmux$1484_CMP $procmux$1483_CMP $procmux$1482_CMP $procmux$1481_CMP $procmux$1480_CMP $procmux$1479_CMP $procmux$1478_CMP $procmux$1477_CMP $procmux$1476_CMP $procmux$1475_CMP $procmux$1474_CMP $procmux$1473_CMP $procmux$1472_CMP $procmux$1471_CMP $procmux$1470_CMP $procmux$1469_CMP }
  Optimizing cells in module \b_left_shifter.
  Optimizing cells in module \b_right_shifter.
    New ctrl vector for $pmux cell $procmux$1519: { $procmux$1567_CMP $procmux$1566_CMP $procmux$1565_CMP $procmux$1564_CMP $procmux$1563_CMP $procmux$1562_CMP $procmux$1561_CMP $procmux$1560_CMP $procmux$1559_CMP $procmux$1558_CMP $procmux$1557_CMP $procmux$1556_CMP $procmux$1555_CMP $procmux$1554_CMP $procmux$1553_CMP $procmux$1552_CMP $procmux$1551_CMP $procmux$1550_CMP $procmux$1549_CMP $procmux$1548_CMP $procmux$1547_CMP $procmux$1546_CMP $procmux$1545_CMP $procmux$1544_CMP $procmux$1543_CMP $procmux$1542_CMP $procmux$1541_CMP $procmux$1540_CMP $procmux$1539_CMP $procmux$1538_CMP $procmux$1537_CMP $procmux$1536_CMP $procmux$1535_CMP $procmux$1534_CMP $procmux$1533_CMP $procmux$1532_CMP $procmux$1531_CMP $procmux$1530_CMP $procmux$1529_CMP $procmux$1528_CMP $procmux$1527_CMP $procmux$1526_CMP $procmux$1525_CMP $procmux$1524_CMP $procmux$1523_CMP $procmux$1522_CMP $procmux$1521_CMP $procmux$1520_CMP }
  Optimizing cells in module \b_right_shifter.
  Optimizing cells in module \pri_encoder.
  Optimizing cells in module \post_norm.
    New ctrl vector for $pmux cell $procmux$5244: { $procmux$5248_CMP $procmux$5247_CMP $auto$opt_reduce.cc:134:opt_mux$16342 }
    New ctrl vector for $pmux cell $procmux$5249: { $procmux$5248_CMP $procmux$5247_CMP $auto$opt_reduce.cc:134:opt_mux$16344 }
    New ctrl vector for $mux cell $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1097$507: { }
    New ctrl vector for $mux cell $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1096$503: { }
    New ctrl vector for $mux cell $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/fpu/softlogic/ode.v:1096$504: { }
  Optimizing cells in module \post_norm.
  Optimizing cells in module \mul_r2.
  Optimizing cells in module \pre_norm_fmul.
    New ctrl vector for $pmux cell $procmux$5254: { $auto$opt_reduce.cc:134:opt_mux$16348 $auto$opt_reduce.cc:134:opt_mux$16346 }
  Optimizing cells in module \pre_norm_fmul.
  Optimizing cells in module \except.
  Optimizing cells in module \fpu_mul.
  Optimizing cells in module \ode.
Performed a total of 36 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\add_sub27'.
Finding identical cells in module `\b_right_shifter_new'.
Finding identical cells in module `\pre_norm'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\b_left_shifter_new'.
Finding identical cells in module `\b_left_shifter'.
Finding identical cells in module `\b_right_shifter'.
Finding identical cells in module `\pri_encoder'.
Finding identical cells in module `\post_norm'.
<suppressed ~3 debug messages>
Finding identical cells in module `\mul_r2'.
Finding identical cells in module `\pre_norm_fmul'.
Finding identical cells in module `\except'.
Finding identical cells in module `\fpu_mul'.
Finding identical cells in module `\ode'.
Removed a total of 1 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$16191 ($dff) from module pre_norm (D = \exp_large, Q = \exp_dn_out, rval = 8'00000000).
Setting constant 0-bit at position 0 on $procdff$16226 ($dff) from module fpu_add.
Setting constant 0-bit at position 1 on $procdff$16226 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16229 ($dff) from module fpu_add.
Setting constant 0-bit at position 1 on $procdff$16229 ($dff) from module fpu_add.
Setting constant 0-bit at position 2 on $procdff$16229 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16201 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16298 ($dff) from module fpu_mul.
Setting constant 0-bit at position 1 on $procdff$16298 ($dff) from module fpu_mul.
Setting constant 0-bit at position 0 on $procdff$16301 ($dff) from module fpu_mul.
Setting constant 1-bit at position 1 on $procdff$16301 ($dff) from module fpu_mul.
Setting constant 0-bit at position 2 on $procdff$16301 ($dff) from module fpu_mul.

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \add_sub27..
Finding unused cells or wires in module \b_right_shifter_new..
Finding unused cells or wires in module \pre_norm..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \b_left_shifter_new..
Finding unused cells or wires in module \b_left_shifter..
Finding unused cells or wires in module \b_right_shifter..
Finding unused cells or wires in module \pri_encoder..
Finding unused cells or wires in module \post_norm..
Finding unused cells or wires in module \mul_r2..
Finding unused cells or wires in module \pre_norm_fmul..
Finding unused cells or wires in module \except..
Finding unused cells or wires in module \fpu_mul..
Finding unused cells or wires in module \ode..
Removed 18 unused cells and 7086 unused wires.
<suppressed ~66 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_left_shifter.
Optimizing module b_left_shifter_new.
Optimizing module b_right_shifter.
Optimizing module b_right_shifter_new.
Optimizing module except.
Optimizing module fpu_add.
Optimizing module fpu_mul.
Optimizing module mul_r2.
Optimizing module ode.
Optimizing module post_norm.
Optimizing module pre_norm.
Optimizing module pre_norm_fmul.
Optimizing module pri_encoder.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \add_sub27..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \except..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mul_r2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ode..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \post_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm_fmul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pri_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~58 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \add_sub27.
  Optimizing cells in module \b_left_shifter.
  Optimizing cells in module \b_left_shifter_new.
  Optimizing cells in module \b_right_shifter.
  Optimizing cells in module \b_right_shifter_new.
  Optimizing cells in module \except.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_mul.
  Optimizing cells in module \mul_r2.
  Optimizing cells in module \ode.
  Optimizing cells in module \post_norm.
  Optimizing cells in module \pre_norm.
  Optimizing cells in module \pre_norm_fmul.
  Optimizing cells in module \pri_encoder.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\add_sub27'.
Finding identical cells in module `\b_left_shifter'.
Finding identical cells in module `\b_left_shifter_new'.
Finding identical cells in module `\b_right_shifter'.
Finding identical cells in module `\b_right_shifter_new'.
Finding identical cells in module `\except'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\fpu_mul'.
Finding identical cells in module `\mul_r2'.
Finding identical cells in module `\ode'.
Finding identical cells in module `\post_norm'.
Finding identical cells in module `\pre_norm'.
Finding identical cells in module `\pre_norm_fmul'.
Finding identical cells in module `\pri_encoder'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$16225 ($dff) from module fpu_add.
Setting constant 0-bit at position 1 on $procdff$16225 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16223 ($dff) from module fpu_add.
Setting constant 0-bit at position 1 on $procdff$16223 ($dff) from module fpu_add.
Setting constant 0-bit at position 2 on $procdff$16223 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16194 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16297 ($dff) from module fpu_mul.
Setting constant 0-bit at position 1 on $procdff$16297 ($dff) from module fpu_mul.
Setting constant 0-bit at position 0 on $procdff$16295 ($dff) from module fpu_mul.
Setting constant 1-bit at position 1 on $procdff$16295 ($dff) from module fpu_mul.
Setting constant 0-bit at position 2 on $procdff$16295 ($dff) from module fpu_mul.

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \add_sub27..
Finding unused cells or wires in module \b_left_shifter..
Finding unused cells or wires in module \b_left_shifter_new..
Finding unused cells or wires in module \b_right_shifter..
Finding unused cells or wires in module \b_right_shifter_new..
Finding unused cells or wires in module \except..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_mul..
Finding unused cells or wires in module \mul_r2..
Finding unused cells or wires in module \ode..
Finding unused cells or wires in module \post_norm..
Finding unused cells or wires in module \pre_norm..
Finding unused cells or wires in module \pre_norm_fmul..
Finding unused cells or wires in module \pri_encoder..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_left_shifter.
Optimizing module b_left_shifter_new.
Optimizing module b_right_shifter.
Optimizing module b_right_shifter_new.
Optimizing module except.
Optimizing module fpu_add.
<suppressed ~3 debug messages>
Optimizing module fpu_mul.
<suppressed ~2 debug messages>
Optimizing module mul_r2.
Optimizing module ode.
Optimizing module post_norm.
Optimizing module pre_norm.
Optimizing module pre_norm_fmul.
Optimizing module pri_encoder.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \add_sub27..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \except..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mul_r2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ode..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \post_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm_fmul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pri_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \add_sub27.
  Optimizing cells in module \b_left_shifter.
  Optimizing cells in module \b_left_shifter_new.
  Optimizing cells in module \b_right_shifter.
  Optimizing cells in module \b_right_shifter_new.
  Optimizing cells in module \except.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_mul.
  Optimizing cells in module \mul_r2.
  Optimizing cells in module \ode.
  Optimizing cells in module \post_norm.
  Optimizing cells in module \pre_norm.
  Optimizing cells in module \pre_norm_fmul.
  Optimizing cells in module \pri_encoder.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\add_sub27'.
Finding identical cells in module `\b_left_shifter'.
Finding identical cells in module `\b_left_shifter_new'.
Finding identical cells in module `\b_right_shifter'.
Finding identical cells in module `\b_right_shifter_new'.
Finding identical cells in module `\except'.
Finding identical cells in module `\fpu_add'.
<suppressed ~3 debug messages>
Finding identical cells in module `\fpu_mul'.
<suppressed ~3 debug messages>
Finding identical cells in module `\mul_r2'.
Finding identical cells in module `\ode'.
Finding identical cells in module `\post_norm'.
Finding identical cells in module `\pre_norm'.
Finding identical cells in module `\pre_norm_fmul'.
Finding identical cells in module `\pri_encoder'.
Removed a total of 2 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$16224 ($dff) from module fpu_add.
Setting constant 0-bit at position 1 on $procdff$16224 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16222 ($dff) from module fpu_add.
Setting constant 0-bit at position 1 on $procdff$16222 ($dff) from module fpu_add.
Setting constant 0-bit at position 2 on $procdff$16222 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16296 ($dff) from module fpu_mul.
Setting constant 0-bit at position 1 on $procdff$16296 ($dff) from module fpu_mul.
Setting constant 0-bit at position 0 on $procdff$16294 ($dff) from module fpu_mul.
Setting constant 1-bit at position 1 on $procdff$16294 ($dff) from module fpu_mul.
Setting constant 0-bit at position 2 on $procdff$16294 ($dff) from module fpu_mul.

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \add_sub27..
Finding unused cells or wires in module \b_left_shifter..
Finding unused cells or wires in module \b_left_shifter_new..
Finding unused cells or wires in module \b_right_shifter..
Finding unused cells or wires in module \b_right_shifter_new..
Finding unused cells or wires in module \except..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_mul..
Finding unused cells or wires in module \mul_r2..
Finding unused cells or wires in module \ode..
Finding unused cells or wires in module \post_norm..
Finding unused cells or wires in module \pre_norm..
Finding unused cells or wires in module \pre_norm_fmul..
Finding unused cells or wires in module \pri_encoder..
Removed 2 unused cells and 6 unused wires.
<suppressed ~4 debug messages>

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_left_shifter.
Optimizing module b_left_shifter_new.
Optimizing module b_right_shifter.
Optimizing module b_right_shifter_new.
Optimizing module except.
Optimizing module fpu_add.
Optimizing module fpu_mul.
<suppressed ~10 debug messages>
Optimizing module mul_r2.
Optimizing module ode.
Optimizing module post_norm.
Optimizing module pre_norm.
Optimizing module pre_norm_fmul.
Optimizing module pri_encoder.

4.23. Rerunning OPT passes. (Maybe there is more to do..)

4.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \add_sub27..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \except..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mul_r2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ode..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \post_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm_fmul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pri_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

4.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \add_sub27.
  Optimizing cells in module \b_left_shifter.
  Optimizing cells in module \b_left_shifter_new.
  Optimizing cells in module \b_right_shifter.
  Optimizing cells in module \b_right_shifter_new.
  Optimizing cells in module \except.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_mul.
  Optimizing cells in module \mul_r2.
  Optimizing cells in module \ode.
  Optimizing cells in module \post_norm.
  Optimizing cells in module \pre_norm.
  Optimizing cells in module \pre_norm_fmul.
  Optimizing cells in module \pri_encoder.
Performed a total of 0 changes.

4.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\add_sub27'.
Finding identical cells in module `\b_left_shifter'.
Finding identical cells in module `\b_left_shifter_new'.
Finding identical cells in module `\b_right_shifter'.
Finding identical cells in module `\b_right_shifter_new'.
Finding identical cells in module `\except'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\fpu_mul'.
<suppressed ~6 debug messages>
Finding identical cells in module `\mul_r2'.
Finding identical cells in module `\ode'.
Finding identical cells in module `\post_norm'.
Finding identical cells in module `\pre_norm'.
Finding identical cells in module `\pre_norm_fmul'.
Finding identical cells in module `\pri_encoder'.
Removed a total of 2 cells.

4.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$16221 ($dff) from module fpu_add.
Setting constant 0-bit at position 1 on $procdff$16221 ($dff) from module fpu_add.
Setting constant 0-bit at position 2 on $procdff$16221 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16293 ($dff) from module fpu_mul.
Setting constant 1-bit at position 1 on $procdff$16293 ($dff) from module fpu_mul.
Setting constant 0-bit at position 2 on $procdff$16293 ($dff) from module fpu_mul.
Setting constant 0-bit at position 0 on $procdff$16272 ($dff) from module fpu_mul.

4.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \add_sub27..
Finding unused cells or wires in module \b_left_shifter..
Finding unused cells or wires in module \b_left_shifter_new..
Finding unused cells or wires in module \b_right_shifter..
Finding unused cells or wires in module \b_right_shifter_new..
Finding unused cells or wires in module \except..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_mul..
Finding unused cells or wires in module \mul_r2..
Finding unused cells or wires in module \ode..
Finding unused cells or wires in module \post_norm..
Finding unused cells or wires in module \pre_norm..
Finding unused cells or wires in module \pre_norm_fmul..
Finding unused cells or wires in module \pri_encoder..
Removed 1 unused cells and 12 unused wires.
<suppressed ~2 debug messages>

4.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_left_shifter.
Optimizing module b_left_shifter_new.
Optimizing module b_right_shifter.
Optimizing module b_right_shifter_new.
Optimizing module except.
Optimizing module fpu_add.
<suppressed ~2 debug messages>
Optimizing module fpu_mul.
<suppressed ~18 debug messages>
Optimizing module mul_r2.
Optimizing module ode.
Optimizing module post_norm.
Optimizing module pre_norm.
Optimizing module pre_norm_fmul.
Optimizing module pri_encoder.

4.30. Rerunning OPT passes. (Maybe there is more to do..)

4.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \add_sub27..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \except..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mul_r2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ode..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \post_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm_fmul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pri_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

4.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \add_sub27.
  Optimizing cells in module \b_left_shifter.
  Optimizing cells in module \b_left_shifter_new.
  Optimizing cells in module \b_right_shifter.
  Optimizing cells in module \b_right_shifter_new.
  Optimizing cells in module \except.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_mul.
  Optimizing cells in module \mul_r2.
  Optimizing cells in module \ode.
  Optimizing cells in module \post_norm.
  Optimizing cells in module \pre_norm.
  Optimizing cells in module \pre_norm_fmul.
  Optimizing cells in module \pri_encoder.
Performed a total of 0 changes.

4.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\add_sub27'.
Finding identical cells in module `\b_left_shifter'.
Finding identical cells in module `\b_left_shifter_new'.
Finding identical cells in module `\b_right_shifter'.
Finding identical cells in module `\b_right_shifter_new'.
Finding identical cells in module `\except'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\fpu_mul'.
Finding identical cells in module `\mul_r2'.
Finding identical cells in module `\ode'.
Finding identical cells in module `\post_norm'.
Finding identical cells in module `\pre_norm'.
Finding identical cells in module `\pre_norm_fmul'.
Finding identical cells in module `\pri_encoder'.
Removed a total of 0 cells.

4.34. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$16271 ($dff) from module fpu_mul.

4.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \add_sub27..
Finding unused cells or wires in module \b_left_shifter..
Finding unused cells or wires in module \b_left_shifter_new..
Finding unused cells or wires in module \b_right_shifter..
Finding unused cells or wires in module \b_right_shifter_new..
Finding unused cells or wires in module \except..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_mul..
Finding unused cells or wires in module \mul_r2..
Finding unused cells or wires in module \ode..
Finding unused cells or wires in module \post_norm..
Finding unused cells or wires in module \pre_norm..
Finding unused cells or wires in module \pre_norm_fmul..
Finding unused cells or wires in module \pri_encoder..
Removed 3 unused cells and 20 unused wires.
<suppressed ~5 debug messages>

4.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_left_shifter.
Optimizing module b_left_shifter_new.
Optimizing module b_right_shifter.
Optimizing module b_right_shifter_new.
Optimizing module except.
Optimizing module fpu_add.
Optimizing module fpu_mul.
Optimizing module mul_r2.
Optimizing module ode.
Optimizing module post_norm.
Optimizing module pre_norm.
Optimizing module pre_norm_fmul.
Optimizing module pri_encoder.

4.37. Rerunning OPT passes. (Maybe there is more to do..)

4.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \add_sub27..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \except..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mul_r2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ode..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \post_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm_fmul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pri_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

4.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \add_sub27.
  Optimizing cells in module \b_left_shifter.
  Optimizing cells in module \b_left_shifter_new.
  Optimizing cells in module \b_right_shifter.
  Optimizing cells in module \b_right_shifter_new.
  Optimizing cells in module \except.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_mul.
  Optimizing cells in module \mul_r2.
  Optimizing cells in module \ode.
  Optimizing cells in module \post_norm.
  Optimizing cells in module \pre_norm.
  Optimizing cells in module \pre_norm_fmul.
  Optimizing cells in module \pri_encoder.
Performed a total of 0 changes.

4.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\add_sub27'.
Finding identical cells in module `\b_left_shifter'.
Finding identical cells in module `\b_left_shifter_new'.
Finding identical cells in module `\b_right_shifter'.
Finding identical cells in module `\b_right_shifter_new'.
Finding identical cells in module `\except'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\fpu_mul'.
Finding identical cells in module `\mul_r2'.
Finding identical cells in module `\ode'.
Finding identical cells in module `\post_norm'.
Finding identical cells in module `\pre_norm'.
Finding identical cells in module `\pre_norm_fmul'.
Finding identical cells in module `\pri_encoder'.
Removed a total of 0 cells.

4.41. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$16264 ($dff) from module fpu_mul.

4.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \add_sub27..
Finding unused cells or wires in module \b_left_shifter..
Finding unused cells or wires in module \b_left_shifter_new..
Finding unused cells or wires in module \b_right_shifter..
Finding unused cells or wires in module \b_right_shifter_new..
Finding unused cells or wires in module \except..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_mul..
Finding unused cells or wires in module \mul_r2..
Finding unused cells or wires in module \ode..
Finding unused cells or wires in module \post_norm..
Finding unused cells or wires in module \pre_norm..
Finding unused cells or wires in module \pre_norm_fmul..
Finding unused cells or wires in module \pri_encoder..

4.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_left_shifter.
Optimizing module b_left_shifter_new.
Optimizing module b_right_shifter.
Optimizing module b_right_shifter_new.
Optimizing module except.
Optimizing module fpu_add.
Optimizing module fpu_mul.
Optimizing module mul_r2.
Optimizing module ode.
Optimizing module post_norm.
Optimizing module pre_norm.
Optimizing module pre_norm_fmul.
Optimizing module pri_encoder.

4.44. Rerunning OPT passes. (Maybe there is more to do..)

4.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \add_sub27..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \except..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mul_r2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ode..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \post_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm_fmul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pri_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

4.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \add_sub27.
  Optimizing cells in module \b_left_shifter.
  Optimizing cells in module \b_left_shifter_new.
  Optimizing cells in module \b_right_shifter.
  Optimizing cells in module \b_right_shifter_new.
  Optimizing cells in module \except.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_mul.
  Optimizing cells in module \mul_r2.
  Optimizing cells in module \ode.
  Optimizing cells in module \post_norm.
  Optimizing cells in module \pre_norm.
  Optimizing cells in module \pre_norm_fmul.
  Optimizing cells in module \pri_encoder.
Performed a total of 0 changes.

4.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\add_sub27'.
Finding identical cells in module `\b_left_shifter'.
Finding identical cells in module `\b_left_shifter_new'.
Finding identical cells in module `\b_right_shifter'.
Finding identical cells in module `\b_right_shifter_new'.
Finding identical cells in module `\except'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\fpu_mul'.
Finding identical cells in module `\mul_r2'.
Finding identical cells in module `\ode'.
Finding identical cells in module `\post_norm'.
Finding identical cells in module `\pre_norm'.
Finding identical cells in module `\pre_norm_fmul'.
Finding identical cells in module `\pri_encoder'.
Removed a total of 0 cells.

4.48. Executing OPT_DFF pass (perform DFF optimizations).

4.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \add_sub27..
Finding unused cells or wires in module \b_left_shifter..
Finding unused cells or wires in module \b_left_shifter_new..
Finding unused cells or wires in module \b_right_shifter..
Finding unused cells or wires in module \b_right_shifter_new..
Finding unused cells or wires in module \except..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_mul..
Finding unused cells or wires in module \mul_r2..
Finding unused cells or wires in module \ode..
Finding unused cells or wires in module \post_norm..
Finding unused cells or wires in module \pre_norm..
Finding unused cells or wires in module \pre_norm_fmul..
Finding unused cells or wires in module \pri_encoder..

4.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_left_shifter.
Optimizing module b_left_shifter_new.
Optimizing module b_right_shifter.
Optimizing module b_right_shifter_new.
Optimizing module except.
Optimizing module fpu_add.
Optimizing module fpu_mul.
Optimizing module mul_r2.
Optimizing module ode.
Optimizing module post_norm.
Optimizing module pre_norm.
Optimizing module pre_norm_fmul.
Optimizing module pri_encoder.

4.51. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== add_sub27 ===

   Number of wires:                  7
   Number of wire bits:            139
   Number of public wires:           5
   Number of public wire bits:      83
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $add                            1
     $mux                            1
     $sub                            1

=== b_left_shifter ===

   Number of wires:                150
   Number of wire bits:            296
   Number of public wires:           3
   Number of public wire bits:     102
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                148
     $and                           48
     $dlatch                         1
     $eq                            48
     $logic_not                      1
     $not                           49
     $pmux                           1

=== b_left_shifter_new ===

   Number of wires:                174
   Number of wire bits:            344
   Number of public wires:           3
   Number of public wire bits:     118
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                172
     $and                           56
     $dlatch                         1
     $eq                            56
     $logic_not                      1
     $not                           57
     $pmux                           1

=== b_right_shifter ===

   Number of wires:                150
   Number of wire bits:            296
   Number of public wires:           3
   Number of public wire bits:     102
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                148
     $and                           48
     $dlatch                         1
     $eq                            48
     $logic_not                      1
     $not                           49
     $pmux                           1

=== b_right_shifter_new ===

   Number of wires:                 87
   Number of wire bits:            169
   Number of public wires:           3
   Number of public wire bits:      59
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 85
     $and                           27
     $dlatch                         1
     $eq                            27
     $logic_not                      1
     $not                           28
     $pmux                           1

=== except ===

   Number of wires:                 61
   Number of wire bits:            179
   Number of public wires:          31
   Number of public wire bits:     149
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 52
     $and                           13
     $dff                           22
     $logic_not                      6
     $or                             3
     $reduce_and                     2
     $reduce_or                      6

=== fpu_add ===

   Number of wires:                103
   Number of wire bits:            654
   Number of public wires:          78
   Number of public wire bits:     599
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 61
     $and                            8
     $dff                           26
     $logic_not                      7
     $mux                            4
     $or                             9
     $reduce_and                     1
     $reduce_or                      2
     add_sub27                       1
     except                          1
     post_norm                       1
     pre_norm                        1

=== fpu_mul ===

   Number of wires:                151
   Number of wire bits:            696
   Number of public wires:          91
   Number of public wire bits:     606
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                105
     $and                           21
     $dff                           28
     $eq                             1
     $logic_not                     15
     $mux                            3
     $or                            29
     $reduce_and                     1
     $reduce_bool                    1
     $reduce_or                      2
     except                          1
     mul_r2                          1
     post_norm                       1
     pre_norm_fmul                   1

=== mul_r2 ===

   Number of wires:                  6
   Number of wire bits:            193
   Number of public wires:           5
   Number of public wire bits:     145
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $dff                            2
     $mul                            1

=== ode ===

   Number of wires:                 46
   Number of wire bits:           1259
   Number of public wires:          46
   Number of public wire bits:    1259
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 32
     $dff                           25
     $mux                            2
     fpu_add                         3
     fpu_mul                         2

=== post_norm ===

   Number of wires:                458
   Number of wire bits:           1475
   Number of public wires:         133
   Number of public wire bits:     995
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                435
     $add                            8
     $and                          169
     $eq                            10
     $gt                             7
     $logic_not                     37
     $lt                             9
     $mux                           70
     $ne                             4
     $or                            83
     $pmux                           2
     $reduce_and                     5
     $reduce_or                     12
     $sub                           15
     b_left_shifter                  1
     b_left_shifter_new              1
     b_right_shifter                 1
     pri_encoder                     1

=== pre_norm ===

   Number of wires:                150
   Number of wire bits:            580
   Number of public wires:          52
   Number of public wire bits:     482
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                135
     $and                           13
     $dff                           11
     $eq                            38
     $gt                             3
     $logic_not                      8
     $lt                             1
     $mux                           15
     $not                            1
     $or                             6
     $pmux                           3
     $reduce_or                     32
     $sdff                           1
     $sub                            2
     b_right_shifter_new             1

=== pre_norm_fmul ===

   Number of wires:                 82
   Number of wire bits:            349
   Number of public wires:          34
   Number of public wire bits:     227
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 75
     $add                            4
     $and                           15
     $dff                            6
     $eq                             5
     $gt                             1
     $logic_not                      9
     $lt                             1
     $mux                           13
     $or                             8
     $pmux                           1
     $reduce_or                      8
     $sub                            4

=== pri_encoder ===

   Number of wires:               1371
   Number of wire bits:           1663
   Number of public wires:           3
   Number of public wire bits:      60
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1369
     $and                         1224
     $dlatch                         1
     $eq                            47
     $logic_not                      1
     $mux                           47
     $not                           49

=== design hierarchy ===

   ode                               1
     fpu_add                         3
       add_sub27                     1
       except                        1
       post_norm                     1
         b_left_shifter              1
         b_left_shifter_new          1
         b_right_shifter             1
         pri_encoder                 1
       pre_norm                      1
         b_right_shifter_new         1
     fpu_mul                         2
       except                        1
       mul_r2                        1
       post_norm                     1
         b_left_shifter              1
         b_left_shifter_new          1
         b_right_shifter             1
         pri_encoder                 1
       pre_norm_fmul                 1

   Number of wires:              13385
   Number of wire bits:          29626
   Number of public wires:        1600
   Number of public wire bits:   14514
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              12822
     $add                           51
     $and                         8006
     $dff                          318
     $dlatch                        23
     $eq                          1252
     $gt                            46
     $logic_not                    331
     $lt                            50
     $mul                            2
     $mux                          679
     $ne                            20
     $not                         1107
     $or                           549
     $pmux                          39
     $reduce_and                    40
     $reduce_bool                    2
     $reduce_or                    212
     $sdff                           3
     $sub                           92

Warnings: 4 unique messages, 4 total
End of script. Logfile hash: 530c3dae95, CPU: user 2.54s system 0.01s, MEM: 45.29 MB peak
Yosys 0.10+12 (git sha1 4d87019, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 33% 9x opt_expr (0 sec), 15% 7x opt_clean (0 sec), ...
