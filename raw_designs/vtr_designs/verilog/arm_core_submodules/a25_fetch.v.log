
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v
Parsing SystemVerilog input from `/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v' to AST representation.
Generating RTLIL representation for module `\a25_fetch'.
Generating RTLIL representation for module `\a25_icache'.
Warning: wire '\o_stall' is assigned in a block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:449.2-449.52.
Warning: reg '\read_miss' is assigned in a continuous assignment at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:603.8-603.63.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: a25_icache          
root of   1 design levels: a25_fetch           
Automatically selected a25_fetch as design top module.

2.2. Analyzing design hierarchy..
Top module:  \a25_fetch
Used module:     \a25_icache

2.3. Analyzing design hierarchy..
Top module:  \a25_fetch
Used module:     \a25_icache
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:565$132 in module a25_icache.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:477$124 in module a25_icache.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:457$119 in module a25_icache.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 13 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:414$236'.
  Set init value: \wb_address = 0
Found init rule in `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:412$235'.
  Set init value: \address_r = 0
Found init rule in `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:403$234'.
  Set init value: \miss_address = 0
Found init rule in `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:388$233'.
  Set init value: \random_num = 4'1111
Found init rule in `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:386$232'.
  Set init value: \valid_bits_r = 4'0000
Found init rule in `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:384$231'.
  Set init value: \select_way = 4'0000
Found init rule in `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:371$230'.
  Set init value: \init_count = 9'000000000
Found init rule in `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:370$229'.
  Set init value: \source_sel = 4'0010
Found init rule in `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:369$228'.
  Set init value: \c_state = 4'0001
Found init rule in `\a25_fetch.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:73$111'.
  Set init value: \wb_req_r = 1'0

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:414$236'.
Creating decoders for process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:412$235'.
Creating decoders for process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:403$234'.
Creating decoders for process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:388$233'.
Creating decoders for process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:386$232'.
Creating decoders for process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:384$231'.
Creating decoders for process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:371$230'.
Creating decoders for process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:370$229'.
Creating decoders for process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:369$228'.
Creating decoders for process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:769$202'.
     1/1: $0\valid_bits_r[3:0]
Creating decoders for process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:565$132'.
     1/1: $0\wb_address[31:0]
Creating decoders for process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:559$130'.
Creating decoders for process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:554$128'.
     1/1: $0\miss_address[31:0]
Creating decoders for process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:477$124'.
     1/5: $0\random_num[3:0]
     2/5: $0\select_way[3:0]
     3/5: $0\init_count[8:0]
     4/5: $0\source_sel[3:0]
     5/5: $0\c_state[3:0]
Creating decoders for process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:457$119'.
     1/3: $0\read_buf_valid_r[0:0]
     2/3: $0\read_buf_addr_r[31:0]
     3/3: $0\read_buf_data_r[127:0]
Creating decoders for process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:448$115'.
Creating decoders for process `\a25_fetch.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:73$111'.
Creating decoders for process `\a25_fetch.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:170$105'.

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\a25_icache.\valid_bits_r' using process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:769$202'.
  created $dff cell `$procdff$319' with positive edge clock.
Creating register for signal `\a25_icache.\wb_address' using process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:565$132'.
  created $dff cell `$procdff$320' with positive edge clock.
Creating register for signal `\a25_icache.\address_r' using process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:559$130'.
  created $dff cell `$procdff$321' with positive edge clock.
Creating register for signal `\a25_icache.\miss_address' using process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:554$128'.
  created $dff cell `$procdff$322' with positive edge clock.
Creating register for signal `\a25_icache.\c_state' using process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:477$124'.
  created $dff cell `$procdff$323' with positive edge clock.
Creating register for signal `\a25_icache.\source_sel' using process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:477$124'.
  created $dff cell `$procdff$324' with positive edge clock.
Creating register for signal `\a25_icache.\init_count' using process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:477$124'.
  created $dff cell `$procdff$325' with positive edge clock.
Creating register for signal `\a25_icache.\select_way' using process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:477$124'.
  created $dff cell `$procdff$326' with positive edge clock.
Creating register for signal `\a25_icache.\random_num' using process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:477$124'.
  created $dff cell `$procdff$327' with positive edge clock.
Creating register for signal `\a25_icache.\read_buf_data_r' using process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:457$119'.
  created $dff cell `$procdff$328' with positive edge clock.
Creating register for signal `\a25_icache.\read_buf_addr_r' using process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:457$119'.
  created $dff cell `$procdff$329' with positive edge clock.
Creating register for signal `\a25_icache.\read_buf_valid_r' using process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:457$119'.
  created $dff cell `$procdff$330' with positive edge clock.
Creating register for signal `\a25_icache.\o_stall' using process `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:448$115'.
  created $dff cell `$procdff$331' with positive edge clock.
Creating register for signal `\a25_fetch.\wb_req_r' using process `\a25_fetch.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:170$105'.
  created $dff cell `$procdff$332' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:414$236'.
Removing empty process `a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:412$235'.
Removing empty process `a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:403$234'.
Removing empty process `a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:388$233'.
Removing empty process `a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:386$232'.
Removing empty process `a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:384$231'.
Removing empty process `a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:371$230'.
Removing empty process `a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:370$229'.
Removing empty process `a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:369$228'.
Found and cleaned up 1 empty switch in `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:769$202'.
Removing empty process `a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:769$202'.
Found and cleaned up 2 empty switches in `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:565$132'.
Removing empty process `a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:565$132'.
Removing empty process `a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:559$130'.
Found and cleaned up 1 empty switch in `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:554$128'.
Removing empty process `a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:554$128'.
Found and cleaned up 5 empty switches in `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:477$124'.
Removing empty process `a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:477$124'.
Found and cleaned up 3 empty switches in `\a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:457$119'.
Removing empty process `a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:457$119'.
Removing empty process `a25_icache.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:448$115'.
Removing empty process `a25_fetch.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:73$111'.
Removing empty process `a25_fetch.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:170$105'.
Cleaned up 12 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_icache.
<suppressed ~14 debug messages>
Optimizing module a25_fetch.
<suppressed ~3 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_icache.
Optimizing module a25_fetch.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_icache'.
<suppressed ~84 debug messages>
Finding identical cells in module `\a25_fetch'.
<suppressed ~24 debug messages>
Removed a total of 36 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \a25_icache..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \a25_fetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \a25_icache.
    New ctrl vector for $pmux cell $procmux$273: { $procmux$295_CMP $auto$opt_reduce.cc:134:opt_mux$334 }
  Optimizing cells in module \a25_icache.
  Optimizing cells in module \a25_fetch.
Performed a total of 1 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_icache'.
Finding identical cells in module `\a25_fetch'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$319 ($dff) from module a25_icache (D = { \tag_rdata_way3 [20] \tag_rdata_way2 [20] \tag_rdata_way1 [20] \tag_rdata_way0 [20] }, Q = \valid_bits_r).
Adding EN signal on $procdff$320 ($dff) from module a25_icache (D = $procmux$242_Y [3:0], Q = \wb_address [3:0]).
Adding EN signal on $procdff$320 ($dff) from module a25_icache (D = $procmux$242_Y [31:4], Q = \wb_address [31:4]).
Adding EN signal on $procdff$322 ($dff) from module a25_icache (D = \i_address, Q = \miss_address).
Adding SRST signal on $procdff$323 ($dff) from module a25_icache (D = $procmux$283_Y, Q = \c_state, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$347 ($sdff) from module a25_icache (D = $procmux$283_Y, Q = \c_state).
Adding SRST signal on $procdff$324 ($dff) from module a25_icache (D = $procmux$273_Y, Q = \source_sel, rval = 4'0001).
Adding EN signal on $auto$ff.cc:262:slice$359 ($sdff) from module a25_icache (D = $procmux$273_Y, Q = \source_sel).
Adding SRST signal on $procdff$325 ($dff) from module a25_icache (D = $procmux$267_Y, Q = \init_count, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:262:slice$363 ($sdff) from module a25_icache (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:493$126_Y, Q = \init_count).
Adding EN signal on $procdff$326 ($dff) from module a25_icache (D = $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:786$227_Y, Q = \select_way).
Adding SRST signal on $auto$ff.cc:262:slice$367 ($dffe) from module a25_icache (D = $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:787$226_Y [1:0], Q = \select_way [1:0], rval = 2'01).
Adding SRST signal on $auto$ff.cc:262:slice$367 ($dffe) from module a25_icache (D = $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:788$225_Y [2], Q = \select_way [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$367 ($dffe) from module a25_icache (D = $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:789$224_Y [3], Q = \select_way [3], rval = 1'0).
Adding EN signal on $procdff$327 ($dff) from module a25_icache (D = { \random_num [2:0] $xor$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core_submodules/a25_fetch.v:518$127_Y }, Q = \random_num).
Adding EN signal on $procdff$328 ($dff) from module a25_icache (D = \i_wb_read_data, Q = \read_buf_data_r).
Adding EN signal on $procdff$329 ($dff) from module a25_icache (D = \miss_address, Q = \read_buf_addr_r).
Adding SRST signal on $procdff$330 ($dff) from module a25_icache (D = $procmux$302_Y, Q = \read_buf_valid_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$394 ($sdff) from module a25_icache (D = $procmux$302_Y, Q = \read_buf_valid_r).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_icache..
Finding unused cells or wires in module \a25_fetch..
Removed 21 unused cells and 145 unused wires.
<suppressed ~25 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_fetch.
Optimizing module a25_icache.
<suppressed ~5 debug messages>

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \a25_fetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \a25_icache..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \a25_fetch.
  Optimizing cells in module \a25_icache.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_fetch'.
Finding identical cells in module `\a25_icache'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_fetch..
Finding unused cells or wires in module \a25_icache..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_fetch.
Optimizing module a25_icache.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \a25_fetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \a25_icache..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \a25_fetch.
  Optimizing cells in module \a25_icache.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_fetch'.
Finding identical cells in module `\a25_icache'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_fetch..
Finding unused cells or wires in module \a25_icache..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_fetch.
Optimizing module a25_icache.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== a25_fetch ===

   Number of wires:                119
   Number of wire bits:            745
   Number of public wires:          28
   Number of public wire bits:     499
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                103
     $dff                            1
     $eq                            33
     $ge                             1
     $logic_and                     10
     $logic_not                      7
     $logic_or                       9
     $lt                             2
     $mux                           39
     a25_icache                      1

=== a25_icache ===

   Number of wires:                134
   Number of wire bits:           2151
   Number of public wires:          52
   Number of public wire bits:    1438
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                136
     $add                            2
     $dff                            2
     $dffe                           7
     $eq                            15
     $logic_and                     28
     $logic_not                      6
     $logic_or                       7
     $lt                             1
     $mux                           32
     $ne                             5
     $not                            1
     $pmux                           2
     $reduce_and                     7
     $reduce_bool                    3
     $reduce_or                      2
     $sdffce                         3
     $sdffe                          4
     $xor                            1
     single_port_ram_128_8           4
     single_port_ram_21_8            4

=== design hierarchy ===

   a25_fetch                         1
     a25_icache                      1

   Number of wires:                253
   Number of wire bits:           2896
   Number of public wires:          80
   Number of public wire bits:    1937
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                238
     $add                            2
     $dff                            3
     $dffe                           7
     $eq                            48
     $ge                             1
     $logic_and                     38
     $logic_not                     13
     $logic_or                      16
     $lt                             3
     $mux                           71
     $ne                             5
     $not                            1
     $pmux                           2
     $reduce_and                     7
     $reduce_bool                    3
     $reduce_or                      2
     $sdffce                         3
     $sdffe                          4
     $xor                            1
     single_port_ram_128_8           4
     single_port_ram_21_8            4

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: c87750cf3d, CPU: user 0.22s system 0.00s, MEM: 15.27 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 32% 5x opt_expr (0 sec), 17% 3x opt_clean (0 sec), ...
