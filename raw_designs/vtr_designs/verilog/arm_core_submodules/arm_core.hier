
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core.v
Parsing SystemVerilog input from `/home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core.v' to AST representation.
Warning: Encountered `translate_off' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using a portable and standards-compliant construct such as `ifdef is recommended!
Generating RTLIL representation for module `\single_port_ram_21_8'.
Generating RTLIL representation for module `\single_port_ram_128_8'.
Generating RTLIL representation for module `\a25_icache'.
Warning: wire '\o_stall' is assigned in a block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core.v:323.2-323.52.
Warning: reg '\read_miss' is assigned in a continuous assignment at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core.v:477.8-477.63.
Generating RTLIL representation for module `\a25_fetch'.
Generating RTLIL representation for module `\a25_decode'.
Generating RTLIL representation for module `\a25_shifter_quick'.
Generating RTLIL representation for module `\a25_shifter_full'.
Generating RTLIL representation for module `\a25_barrel_shift'.
Generating RTLIL representation for module `\a25_register_bank'.
Generating RTLIL representation for module `\a25_multiply'.
Generating RTLIL representation for module `\a25_alu'.
Generating RTLIL representation for module `\a25_execute'.
Generating RTLIL representation for module `\a25_dcache'.
Generating RTLIL representation for module `\a25_mem'.
Generating RTLIL representation for module `\a25_write_back'.
Generating RTLIL representation for module `\a25_wishbone_buf'.
Warning: reg '\push' is assigned in a continuous assignment at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core.v:7202.8-7202.107.
Warning: reg '\pop' is assigned in a continuous assignment at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/arm_core.v:7203.8-7203.62.
Generating RTLIL representation for module `\a25_wishbone'.
Generating RTLIL representation for module `\a25_coprocessor'.
Generating RTLIL representation for module `\arm_core'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   3 design levels: arm_core            
root of   0 design levels: a25_coprocessor     
root of   1 design levels: a25_wishbone        
root of   0 design levels: a25_wishbone_buf    
root of   0 design levels: a25_write_back      
root of   2 design levels: a25_mem             
root of   1 design levels: a25_dcache          
root of   2 design levels: a25_execute         
root of   0 design levels: a25_alu             
root of   0 design levels: a25_multiply        
root of   0 design levels: a25_register_bank   
root of   1 design levels: a25_barrel_shift    
root of   0 design levels: a25_shifter_full    
root of   0 design levels: a25_shifter_quick   
root of   0 design levels: a25_decode          
root of   2 design levels: a25_fetch           
root of   1 design levels: a25_icache          
root of   0 design levels: single_port_ram_128_8
root of   0 design levels: single_port_ram_21_8
Automatically selected arm_core as design top module.

2.2. Analyzing design hierarchy..
Top module:  \arm_core
Used module:     \a25_coprocessor
Used module:     \a25_wishbone
Used module:         \a25_wishbone_buf
Used module:     \a25_write_back
Used module:     \a25_mem
Used module:         \a25_dcache
Used module:             \single_port_ram_128_8
Used module:             \single_port_ram_21_8
Used module:     \a25_execute
Used module:         \a25_register_bank
Used module:         \a25_multiply
Used module:         \a25_alu
Used module:         \a25_barrel_shift
Used module:             \a25_shifter_quick
Used module:             \a25_shifter_full
Used module:     \a25_decode
Used module:     \a25_fetch
Used module:         \a25_icache

2.3. Analyzing design hierarchy..
Top module:  \arm_core
Used module:     \a25_coprocessor
Used module:     \a25_wishbone
Used module:         \a25_wishbone_buf
Used module:     \a25_write_back
Used module:     \a25_mem
Used module:         \a25_dcache
Used module:             \single_port_ram_128_8
Used module:             \single_port_ram_21_8
Used module:     \a25_execute
Used module:         \a25_register_bank
Used module:         \a25_multiply
Used module:         \a25_alu
Used module:         \a25_barrel_shift
Used module:             \a25_shifter_quick
Used module:             \a25_shifter_full
Used module:     \a25_decode
Used module:     \a25_fetch
Used module:         \a25_icache
Removed 0 unused modules.

Warnings: 5 unique messages, 5 total
End of script. Logfile hash: ec8a088bd6, CPU: user 0.40s system 0.00s, MEM: 46.80 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 97% 2x read_verilog (0 sec), 2% 1x hierarchy (0 sec)
