
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v' to AST representation.
Warning: Encountered `parallel_case' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using the Verilog `parallel_case' attribute or the SystemVerilog `unique' or `priority' keywords is recommended!
Generating RTLIL representation for module `\or1200_lsu'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:628.1-652.9 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\or1200_reg2mem'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:700.1-706.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:711.1-716.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:721.1-726.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:731.1-732.28 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\or1200_mem2reg'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:764.1-777.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:782.1-799.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:804.1-825.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:830.1-851.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:856.1-874.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:879.1-906.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:911.1-935.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:940.1-962.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:973.1-984.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: or1200_mem2reg      
root of   0 design levels: or1200_reg2mem      
root of   1 design levels: or1200_lsu          
Automatically selected or1200_lsu as design top module.

2.2. Analyzing design hierarchy..
Top module:  \or1200_lsu
Used module:     \or1200_reg2mem
Used module:     \or1200_mem2reg

2.3. Analyzing design hierarchy..
Top module:  \or1200_lsu
Used module:     \or1200_reg2mem
Used module:     \or1200_mem2reg
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:973$41 in module or1200_mem2reg.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:973$41 in module or1200_mem2reg.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:940$40 in module or1200_mem2reg.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:911$39 in module or1200_mem2reg.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:879$38 in module or1200_mem2reg.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:856$37 in module or1200_mem2reg.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:830$36 in module or1200_mem2reg.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:804$35 in module or1200_mem2reg.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:782$34 in module or1200_mem2reg.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:764$33 in module or1200_mem2reg.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:721$31 in module or1200_reg2mem.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:711$30 in module or1200_reg2mem.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:700$29 in module or1200_reg2mem.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:628$28 in module or1200_lsu.
Removed a total of 1 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 14 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:973$41'.
     1/1: $1\aligned[31:0]
Creating decoders for process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:940$40'.
     1/1: $1\regdata_hh[7:0]
Creating decoders for process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:911$39'.
     1/1: $1\regdata_hl[7:0]
Creating decoders for process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:879$38'.
     1/1: $1\regdata_lh[7:0]
Creating decoders for process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:856$37'.
     1/1: $1\regdata_ll[7:0]
Creating decoders for process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:830$36'.
     1/1: $1\sel_byte3[3:0]
Creating decoders for process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:804$35'.
     1/1: $1\sel_byte2[3:0]
Creating decoders for process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:782$34'.
     1/1: $1\sel_byte1[3:0]
Creating decoders for process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:764$33'.
     1/1: $1\sel_byte0[3:0]
Creating decoders for process `\or1200_reg2mem.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:731$32'.
Creating decoders for process `\or1200_reg2mem.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:721$31'.
     1/1: $1\memdata_lh[7:0]
Creating decoders for process `\or1200_reg2mem.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:711$30'.
     1/1: $1\memdata_hl[7:0]
Creating decoders for process `\or1200_reg2mem.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:700$29'.
     1/1: $1\memdata_hh[7:0]
Creating decoders for process `\or1200_lsu.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:628$28'.
     1/1: $1\dcpu_sel_o[3:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\or1200_mem2reg.\aligned' from process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:973$41'.
Latch inferred for signal `\or1200_mem2reg.\regdata_hh' from process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:940$40': $auto$proc_dlatch.cc:427:proc_dlatch$182
No latch inferred for signal `\or1200_mem2reg.\regdata_hl' from process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:911$39'.
No latch inferred for signal `\or1200_mem2reg.\regdata_lh' from process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:879$38'.
No latch inferred for signal `\or1200_mem2reg.\regdata_ll' from process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:856$37'.
No latch inferred for signal `\or1200_mem2reg.\sel_byte3' from process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:830$36'.
No latch inferred for signal `\or1200_mem2reg.\sel_byte2' from process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:804$35'.
No latch inferred for signal `\or1200_mem2reg.\sel_byte1' from process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:782$34'.
No latch inferred for signal `\or1200_mem2reg.\sel_byte0' from process `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:764$33'.
No latch inferred for signal `\or1200_reg2mem.\memdata_ll' from process `\or1200_reg2mem.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:731$32'.
No latch inferred for signal `\or1200_reg2mem.\memdata_lh' from process `\or1200_reg2mem.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:721$31'.
No latch inferred for signal `\or1200_reg2mem.\memdata_hl' from process `\or1200_reg2mem.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:711$30'.
No latch inferred for signal `\or1200_reg2mem.\memdata_hh' from process `\or1200_reg2mem.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:700$29'.
No latch inferred for signal `\or1200_lsu.\dcpu_sel_o' from process `\or1200_lsu.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:628$28'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:973$41'.
Removing empty process `or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:973$41'.
Found and cleaned up 1 empty switch in `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:940$40'.
Removing empty process `or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:940$40'.
Found and cleaned up 1 empty switch in `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:911$39'.
Removing empty process `or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:911$39'.
Found and cleaned up 1 empty switch in `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:879$38'.
Removing empty process `or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:879$38'.
Found and cleaned up 1 empty switch in `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:856$37'.
Removing empty process `or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:856$37'.
Found and cleaned up 1 empty switch in `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:830$36'.
Removing empty process `or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:830$36'.
Found and cleaned up 1 empty switch in `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:804$35'.
Removing empty process `or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:804$35'.
Found and cleaned up 1 empty switch in `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:782$34'.
Removing empty process `or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:782$34'.
Found and cleaned up 1 empty switch in `\or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:764$33'.
Removing empty process `or1200_mem2reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:764$33'.
Removing empty process `or1200_reg2mem.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:731$32'.
Found and cleaned up 1 empty switch in `\or1200_reg2mem.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:721$31'.
Removing empty process `or1200_reg2mem.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:721$31'.
Found and cleaned up 1 empty switch in `\or1200_reg2mem.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:711$30'.
Removing empty process `or1200_reg2mem.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:711$30'.
Found and cleaned up 1 empty switch in `\or1200_reg2mem.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:700$29'.
Removing empty process `or1200_reg2mem.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:700$29'.
Found and cleaned up 1 empty switch in `\or1200_lsu.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:628$28'.
Removing empty process `or1200_lsu.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/or1200_submodules/or1200_lsu.v:628$28'.
Cleaned up 13 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module or1200_mem2reg.
<suppressed ~14 debug messages>
Optimizing module or1200_reg2mem.
Optimizing module or1200_lsu.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module or1200_mem2reg.
Optimizing module or1200_reg2mem.
Optimizing module or1200_lsu.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\or1200_mem2reg'.
<suppressed ~54 debug messages>
Finding identical cells in module `\or1200_reg2mem'.
Finding identical cells in module `\or1200_lsu'.
Removed a total of 18 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \or1200_mem2reg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/5 on $pmux $procmux$42.
    dead port 2/5 on $pmux $procmux$42.
    dead port 3/5 on $pmux $procmux$42.
    dead port 4/5 on $pmux $procmux$42.
    dead port 5/5 on $pmux $procmux$42.
Running muxtree optimizer on module \or1200_reg2mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \or1200_lsu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 5 multiplexer ports.
<suppressed ~14 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \or1200_mem2reg.
    New ctrl vector for $pmux cell $procmux$86: { $auto$opt_reduce.cc:134:opt_mux$188 $auto$opt_reduce.cc:134:opt_mux$186 $procmux$107_CMP $auto$opt_reduce.cc:134:opt_mux$184 $procmux$98_CMP }
    New ctrl vector for $pmux cell $procmux$104: { $procmux$108_CMP $auto$opt_reduce.cc:134:opt_mux$190 $procmux$105_CMP }
    New ctrl vector for $pmux cell $procmux$76: { $auto$opt_reduce.cc:134:opt_mux$196 $auto$opt_reduce.cc:134:opt_mux$194 $procmux$107_CMP $auto$opt_reduce.cc:134:opt_mux$192 $procmux$98_CMP }
    New ctrl vector for $pmux cell $procmux$48: { $procmux$53_CMP $procmux$52_CMP $procmux$51_CMP $procmux$50_CMP $procmux$49_CMP }
  Optimizing cells in module \or1200_mem2reg.
  Optimizing cells in module \or1200_reg2mem.
  Optimizing cells in module \or1200_lsu.
    New ctrl vector for $pmux cell $procmux$120: { $auto$opt_reduce.cc:134:opt_mux$210 $auto$opt_reduce.cc:134:opt_mux$208 $auto$opt_reduce.cc:134:opt_mux$206 $auto$opt_reduce.cc:134:opt_mux$204 $auto$opt_reduce.cc:134:opt_mux$202 $auto$opt_reduce.cc:134:opt_mux$200 $auto$opt_reduce.cc:134:opt_mux$198 }
  Optimizing cells in module \or1200_lsu.
Performed a total of 5 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\or1200_mem2reg'.
<suppressed ~9 debug messages>
Finding identical cells in module `\or1200_reg2mem'.
Finding identical cells in module `\or1200_lsu'.
Removed a total of 3 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \or1200_mem2reg..
Finding unused cells or wires in module \or1200_reg2mem..
Finding unused cells or wires in module \or1200_lsu..
Removed 5 unused cells and 82 unused wires.
<suppressed ~9 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module or1200_lsu.
Optimizing module or1200_mem2reg.
Optimizing module or1200_reg2mem.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \or1200_lsu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \or1200_mem2reg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \or1200_reg2mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \or1200_lsu.
  Optimizing cells in module \or1200_mem2reg.
  Optimizing cells in module \or1200_reg2mem.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\or1200_lsu'.
Finding identical cells in module `\or1200_mem2reg'.
Finding identical cells in module `\or1200_reg2mem'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \or1200_lsu..
Finding unused cells or wires in module \or1200_mem2reg..
Finding unused cells or wires in module \or1200_reg2mem..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module or1200_lsu.
Optimizing module or1200_mem2reg.
Optimizing module or1200_reg2mem.

4.16. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== or1200_lsu ===

   Number of wires:                 70
   Number of wire bits:            299
   Number of public wires:          23
   Number of public wire bits:     252
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 58
     $add                           32
     $and                            6
     $eq                           162
     $mux                            5
     $or                             7
     $pmux                           4
     $reduce_or                     27

=== or1200_mem2reg ===

   Number of wires:                 57
   Number of wire bits:            178
   Number of public wires:          13
   Number of public wire bits:     127
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 52
     $and                            5
     $dlatch                         8
     $eq                           104
     $logic_not                     16
     $not                            6
     $pmux                          48
     $reduce_or                      8

=== or1200_reg2mem ===

   Number of wires:                 12
   Number of wire bits:            106
   Number of public wires:           8
   Number of public wire bits:     102
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  7
     $eq                            24
     $mux                           16
     $pmux                           8

=== design hierarchy ===

   or1200_lsu                        1
     or1200_mem2reg                  0
     or1200_reg2mem                  0

   Number of wires:                 70
   Number of wire bits:            299
   Number of public wires:          23
   Number of public wire bits:     252
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 58
     $add                           32
     $and                            6
     $eq                           162
     $mux                            5
     $or                             7
     $pmux                           4
     $reduce_or                     27

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: ec12effa54, CPU: user 0.14s system 0.00s, MEM: 12.67 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 27% 4x opt_expr (0 sec), 21% 2x read_verilog (0 sec), ...
