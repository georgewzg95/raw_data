
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v' to AST representation.
Generating RTLIL representation for module `\multiclock_reader_writer'.
Warning: wire '\out' is assigned in a block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:45.7-45.25.
Warning: wire '\out' is assigned in a block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:46.7-46.25.
Warning: wire '\out' is assigned in a block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:47.7-47.25.
Warning: wire '\out' is assigned in a block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:48.7-48.25.
Warning: wire '\out' is assigned in a block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:49.7-49.25.
Warning: wire '\out' is assigned in a block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:50.7-50.25.
Warning: wire '\out' is assigned in a block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:51.7-51.25.
Warning: wire '\out' is assigned in a block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:52.7-52.25.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: multiclock_reader_writer
Automatically selected multiclock_reader_writer as design top module.

2.2. Analyzing design hierarchy..
Top module:  \multiclock_reader_writer

2.3. Analyzing design hierarchy..
Top module:  \multiclock_reader_writer
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:41$4 in module multiclock_reader_writer.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:20$1 in module multiclock_reader_writer.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 3 redundant assignments.
Promoted 0 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\multiclock_reader_writer.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:41$4'.
     1/2: $0\writer_head[2:0]
     2/2: $0\out[0:0]
Creating decoders for process `\multiclock_reader_writer.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:20$1'.
     1/9: $0\reader_head[2:0]
     2/9: $0\register[7:0] [7]
     3/9: $0\register[7:0] [6]
     4/9: $0\register[7:0] [5]
     5/9: $0\register[7:0] [4]
     6/9: $0\register[7:0] [3]
     7/9: $0\register[7:0] [2]
     8/9: $0\register[7:0] [1]
     9/9: $0\register[7:0] [0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\multiclock_reader_writer.\out' using process `\multiclock_reader_writer.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:41$4'.
  created $dff cell `$procdff$66' with positive edge clock.
Creating register for signal `\multiclock_reader_writer.\writer_head' using process `\multiclock_reader_writer.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:41$4'.
  created $dff cell `$procdff$67' with positive edge clock.
Creating register for signal `\multiclock_reader_writer.\reader_head' using process `\multiclock_reader_writer.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:20$1'.
  created $dff cell `$procdff$68' with positive edge clock.
Creating register for signal `\multiclock_reader_writer.\register' using process `\multiclock_reader_writer.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:20$1'.
  created $dff cell `$procdff$69' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 2 empty switches in `\multiclock_reader_writer.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:41$4'.
Removing empty process `multiclock_reader_writer.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:41$4'.
Found and cleaned up 2 empty switches in `\multiclock_reader_writer.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:20$1'.
Removing empty process `multiclock_reader_writer.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:20$1'.
Cleaned up 4 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module multiclock_reader_writer.
<suppressed ~2 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module multiclock_reader_writer.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\multiclock_reader_writer'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \multiclock_reader_writer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \multiclock_reader_writer.
    New ctrl vector for $pmux cell $procmux$10: { $auto$opt_reduce.cc:134:opt_mux$77 $auto$opt_reduce.cc:134:opt_mux$75 $auto$opt_reduce.cc:134:opt_mux$73 $auto$opt_reduce.cc:134:opt_mux$71 }
  Optimizing cells in module \multiclock_reader_writer.
Performed a total of 1 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\multiclock_reader_writer'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$68 ($dff) from module multiclock_reader_writer (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:37$3_Y [2:0], Q = \reader_head, rval = 3'000).
Adding EN signal on $procdff$69 ($dff) from module multiclock_reader_writer (D = \in, Q = \register [7]).
Adding EN signal on $procdff$69 ($dff) from module multiclock_reader_writer (D = \in, Q = \register [6]).
Adding EN signal on $procdff$69 ($dff) from module multiclock_reader_writer (D = \in, Q = \register [5]).
Adding EN signal on $procdff$69 ($dff) from module multiclock_reader_writer (D = \in, Q = \register [4]).
Adding EN signal on $procdff$69 ($dff) from module multiclock_reader_writer (D = \in, Q = \register [3]).
Adding EN signal on $procdff$69 ($dff) from module multiclock_reader_writer (D = \in, Q = \register [2]).
Adding EN signal on $procdff$69 ($dff) from module multiclock_reader_writer (D = \in, Q = \register [1]).
Adding EN signal on $procdff$69 ($dff) from module multiclock_reader_writer (D = \in, Q = \register [0]).
Adding SRST signal on $procdff$67 ($dff) from module multiclock_reader_writer (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/multiclock_reader_writer.v:58$6_Y [2:0], Q = \writer_head, rval = 3'000).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \multiclock_reader_writer..
Removed 17 unused cells and 21 unused wires.
<suppressed ~18 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module multiclock_reader_writer.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \multiclock_reader_writer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \multiclock_reader_writer.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\multiclock_reader_writer'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \multiclock_reader_writer..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module multiclock_reader_writer.

4.16. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== multiclock_reader_writer ===

   Number of wires:                 27
   Number of wire bits:            100
   Number of public wires:           7
   Number of public wire bits:      18
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 27
     $add                           64
     $dff                            1
     $dffe                           4
     $eq                            33
     $logic_not                      6
     $pmux                           1
     $reduce_or                      8
     $sdff                           6

Warnings: 8 unique messages, 8 total
End of script. Logfile hash: 225f1a4fcd, CPU: user 0.04s system 0.01s, MEM: 11.13 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 22% 4x opt_expr (0 sec), 22% 2x opt_clean (0 sec), ...
