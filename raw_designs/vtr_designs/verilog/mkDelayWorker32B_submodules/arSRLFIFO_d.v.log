
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v' to AST representation.
Generating RTLIL representation for module `\arSRLFIFO_d'.
Generating RTLIL representation for module `\generic_fifo_sc_d'.
Generating RTLIL representation for module `\dual_port_ram'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: dual_port_ram       
root of   1 design levels: generic_fifo_sc_d   
root of   2 design levels: arSRLFIFO_d         
Automatically selected arSRLFIFO_d as design top module.

2.2. Analyzing design hierarchy..
Top module:  \arSRLFIFO_d
Used module:     \generic_fifo_sc_d
Used module:         \dual_port_ram
Parameter \DATA_WIDTH = 128
Parameter \ADDR_WIDTH = 4

2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\dual_port_ram'.
Parameter \DATA_WIDTH = 128
Parameter \ADDR_WIDTH = 4
Generating RTLIL representation for module `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram'.

2.4. Analyzing design hierarchy..
Top module:  \arSRLFIFO_d
Used module:     \generic_fifo_sc_d
Used module:         $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram

2.5. Analyzing design hierarchy..
Top module:  \arSRLFIFO_d
Used module:     \generic_fifo_sc_d
Used module:         $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram
Removing unused module `\dual_port_ram'.
Removed 1 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:307$109 in module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:298$101 in module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:261$71 in module generic_fifo_sc_d.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:252$61 in module generic_fifo_sc_d.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:238$53 in module generic_fifo_sc_d.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:219$36 in module generic_fifo_sc_d.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:210$23 in module generic_fifo_sc_d.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:201$17 in module generic_fifo_sc_d.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:186$13 in module generic_fifo_sc_d.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:168$5 in module generic_fifo_sc_d.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:158$1 in module generic_fifo_sc_d.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 6 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:307$109'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:309$100_EN[127:0]$115
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:309$100_DATA[127:0]$114
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:309$100_ADDR[3:0]$113
     4/4: $0\out2[127:0]
Creating decoders for process `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:298$101'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:300$99_EN[127:0]$107
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:300$99_DATA[127:0]$106
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:300$99_ADDR[3:0]$105
     4/4: $0\out1[127:0]
Creating decoders for process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:261$71'.
     1/1: $0\full_n_r[0:0]
Creating decoders for process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:252$61'.
     1/1: $0\empty_n_r[0:0]
Creating decoders for process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:238$53'.
     1/1: $0\cnt[4:0]
Creating decoders for process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:219$36'.
     1/1: $0\empty_r[0:0]
Creating decoders for process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:210$23'.
     1/1: $0\full_r[0:0]
Creating decoders for process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:201$17'.
     1/1: $0\gb2[0:0]
Creating decoders for process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:186$13'.
     1/1: $0\gb[0:0]
Creating decoders for process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:168$5'.
     1/1: $0\rp[3:0]
Creating decoders for process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:158$1'.
     1/1: $0\wp[3:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.\out2' using process `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:307$109'.
  created $dff cell `$procdff$234' with positive edge clock.
Creating register for signal `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:309$100_ADDR' using process `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:307$109'.
  created $dff cell `$procdff$235' with positive edge clock.
Creating register for signal `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:309$100_DATA' using process `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:307$109'.
  created $dff cell `$procdff$236' with positive edge clock.
Creating register for signal `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:309$100_EN' using process `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:307$109'.
  created $dff cell `$procdff$237' with positive edge clock.
Creating register for signal `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.\out1' using process `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:298$101'.
  created $dff cell `$procdff$238' with positive edge clock.
Creating register for signal `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:300$99_ADDR' using process `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:298$101'.
  created $dff cell `$procdff$239' with positive edge clock.
Creating register for signal `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:300$99_DATA' using process `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:298$101'.
  created $dff cell `$procdff$240' with positive edge clock.
Creating register for signal `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:300$99_EN' using process `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:298$101'.
  created $dff cell `$procdff$241' with positive edge clock.
Creating register for signal `\generic_fifo_sc_d.\full_n_r' using process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:261$71'.
  created $dff cell `$procdff$242' with positive edge clock.
Creating register for signal `\generic_fifo_sc_d.\empty_n_r' using process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:252$61'.
  created $dff cell `$procdff$243' with positive edge clock.
Creating register for signal `\generic_fifo_sc_d.\cnt' using process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:238$53'.
  created $dff cell `$procdff$244' with positive edge clock.
Creating register for signal `\generic_fifo_sc_d.\empty_r' using process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:219$36'.
  created $dff cell `$procdff$245' with positive edge clock.
Creating register for signal `\generic_fifo_sc_d.\full_r' using process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:210$23'.
  created $dff cell `$procdff$246' with positive edge clock.
Creating register for signal `\generic_fifo_sc_d.\gb2' using process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:201$17'.
  created $dff cell `$procdff$247' with positive edge clock.
Creating register for signal `\generic_fifo_sc_d.\gb' using process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:186$13'.
  created $dff cell `$procdff$248' with positive edge clock.
Creating register for signal `\generic_fifo_sc_d.\rp' using process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:168$5'.
  created $dff cell `$procdff$249' with positive edge clock.
Creating register for signal `\generic_fifo_sc_d.\wp' using process `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:158$1'.
  created $dff cell `$procdff$250' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:307$109'.
Removing empty process `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:307$109'.
Found and cleaned up 1 empty switch in `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:298$101'.
Removing empty process `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:298$101'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:261$71'.
Removing empty process `generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:261$71'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:252$61'.
Removing empty process `generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:252$61'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:238$53'.
Removing empty process `generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:238$53'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:219$36'.
Removing empty process `generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:219$36'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:210$23'.
Removing empty process `generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:210$23'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:201$17'.
Removing empty process `generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:201$17'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:186$13'.
Removing empty process `generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:186$13'.
Found and cleaned up 3 empty switches in `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:168$5'.
Removing empty process `generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:168$5'.
Found and cleaned up 3 empty switches in `\generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:158$1'.
Removing empty process `generic_fifo_sc_d.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:158$1'.
Cleaned up 36 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.
Optimizing module generic_fifo_sc_d.
<suppressed ~9 debug messages>
Optimizing module arSRLFIFO_d.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.
Optimizing module generic_fifo_sc_d.
Optimizing module arSRLFIFO_d.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram'.
Finding identical cells in module `\generic_fifo_sc_d'.
<suppressed ~57 debug messages>
Finding identical cells in module `\arSRLFIFO_d'.
Removed a total of 19 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \generic_fifo_sc_d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \arSRLFIFO_d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.
    Consolidated identical input bits for $mux cell $procmux$130:
      Old ports: A=128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, B=128'11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111, Y=$procmux$130_Y
      New ports: A=1'0, B=1'1, Y=$procmux$130_Y [0]
      New connections: $procmux$130_Y [127:1] = { $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] $procmux$130_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$118:
      Old ports: A=128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, B=128'11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111, Y=$procmux$118_Y
      New ports: A=1'0, B=1'1, Y=$procmux$118_Y [0]
      New connections: $procmux$118_Y [127:1] = { $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] $procmux$118_Y [0] }
  Optimizing cells in module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.
  Optimizing cells in module \generic_fifo_sc_d.
  Optimizing cells in module \arSRLFIFO_d.
Performed a total of 2 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram'.
Finding identical cells in module `\generic_fifo_sc_d'.
Finding identical cells in module `\arSRLFIFO_d'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$234 ($dff) from module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:312$116_DATA, Q = \out2).
Adding EN signal on $procdff$238 ($dff) from module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:303$108_DATA, Q = \out1).
Adding SRST signal on $procdff$242 ($dff) from module generic_fifo_sc_d (D = $procmux$144_Y, Q = \full_n_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$255 ($sdff) from module generic_fifo_sc_d (D = $procmux$144_Y, Q = \full_n_r).
Adding SRST signal on $procdff$243 ($dff) from module generic_fifo_sc_d (D = $procmux$155_Y, Q = \empty_n_r, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$263 ($sdff) from module generic_fifo_sc_d (D = $procmux$155_Y, Q = \empty_n_r).
Adding SRST signal on $procdff$244 ($dff) from module generic_fifo_sc_d (D = $procmux$166_Y, Q = \cnt, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$271 ($sdff) from module generic_fifo_sc_d (D = $procmux$166_Y, Q = \cnt).
Adding SRST signal on $procdff$245 ($dff) from module generic_fifo_sc_d (D = $procmux$177_Y, Q = \empty_r, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$279 ($sdff) from module generic_fifo_sc_d (D = $procmux$177_Y, Q = \empty_r).
Adding SRST signal on $procdff$246 ($dff) from module generic_fifo_sc_d (D = $procmux$188_Y, Q = \full_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$287 ($sdff) from module generic_fifo_sc_d (D = $procmux$188_Y, Q = \full_r).
Adding SRST signal on $procdff$247 ($dff) from module generic_fifo_sc_d (D = $procmux$199_Y, Q = \gb2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$295 ($sdff) from module generic_fifo_sc_d (D = $procmux$199_Y, Q = \gb2).
Adding SRST signal on $procdff$248 ($dff) from module generic_fifo_sc_d (D = $procmux$210_Y, Q = \gb, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$303 ($sdff) from module generic_fifo_sc_d (D = $procmux$210_Y, Q = \gb).
Adding SRST signal on $procdff$249 ($dff) from module generic_fifo_sc_d (D = $procmux$218_Y, Q = \rp, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$311 ($sdff) from module generic_fifo_sc_d (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:175$7_Y, Q = \rp).
Adding SRST signal on $procdff$250 ($dff) from module generic_fifo_sc_d (D = $procmux$226_Y, Q = \wp, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$317 ($sdff) from module generic_fifo_sc_d (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkDelayWorker32B_submodules/arSRLFIFO_d.v:165$3_Y, Q = \wp).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram..
Finding unused cells or wires in module \generic_fifo_sc_d..
Finding unused cells or wires in module \arSRLFIFO_d..
Removed 29 unused cells and 121 unused wires.
<suppressed ~31 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.
Optimizing module arSRLFIFO_d.
Optimizing module generic_fifo_sc_d.
<suppressed ~7 debug messages>

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \arSRLFIFO_d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \generic_fifo_sc_d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.
  Optimizing cells in module \arSRLFIFO_d.
  Optimizing cells in module \generic_fifo_sc_d.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram'.
Finding identical cells in module `\arSRLFIFO_d'.
Finding identical cells in module `\generic_fifo_sc_d'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram..
Finding unused cells or wires in module \arSRLFIFO_d..
Finding unused cells or wires in module \generic_fifo_sc_d..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.
Optimizing module arSRLFIFO_d.
Optimizing module generic_fifo_sc_d.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \arSRLFIFO_d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \generic_fifo_sc_d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.
  Optimizing cells in module \arSRLFIFO_d.
  Optimizing cells in module \generic_fifo_sc_d.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram'.
Finding identical cells in module `\arSRLFIFO_d'.
Finding identical cells in module `\generic_fifo_sc_d'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram..
Finding unused cells or wires in module \arSRLFIFO_d..
Finding unused cells or wires in module \generic_fifo_sc_d..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram.
Optimizing module arSRLFIFO_d.
Optimizing module generic_fifo_sc_d.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram ===

   Number of wires:                 17
   Number of wire bits:           1299
   Number of public wires:           9
   Number of public wire bits:     523
   Number of memories:               1
   Number of memory bits:          512
   Number of processes:              0
   Number of cells:                 12
     $dffe                         256
     $mux                          266

=== arSRLFIFO_d ===

   Number of wires:                 18
   Number of wire bits:            273
   Number of public wires:          18
   Number of public wire bits:     273
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1

=== generic_fifo_sc_d ===

   Number of wires:                 93
   Number of wire bits:            637
   Number of public wires:          27
   Number of public wire bits:     555
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 84
     $add                           22
     $and                           25
     $eq                            16
     $ge                            64
     $le                            64
     $logic_not                      5
     $lt                            64
     $mux                           22
     $ne                            12
     $not                            1
     $or                             4
     $reduce_bool                   14
     $reduce_or                      2
     $sdffe                         19

=== design hierarchy ===

   arSRLFIFO_d                       1
     generic_fifo_sc_d               0
       $paramod$9d532e1247fd046db4594eb5930a19efcf851bc8\dual_port_ram      0

   Number of wires:                 18
   Number of wire bits:            273
   Number of public wires:          18
   Number of public wire bits:     273
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1

End of script. Logfile hash: bf0d9eae36, CPU: user 0.12s system 0.00s, MEM: 13.55 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 27% 5x opt_expr (0 sec), 20% 3x opt_clean (0 sec), ...
