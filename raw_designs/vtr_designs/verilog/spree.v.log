
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v' to AST representation.
Generating RTLIL representation for module `\single_port_ram'.
Generating RTLIL representation for module `\dual_port_ram'.
Generating RTLIL representation for module `\system'.
Generating RTLIL representation for module `\addersub'.
Generating RTLIL representation for module `\dummy_add_sub'.
Generating RTLIL representation for module `\full_adder'.
Generating RTLIL representation for module `\reg_file'.
Generating RTLIL representation for module `\mul'.
Generating RTLIL representation for module `\dummy_mult'.
Generating RTLIL representation for module `\ifetch'.
Generating RTLIL representation for module `\dummy_counter'.
Generating RTLIL representation for module `\data_mem'.
Generating RTLIL representation for module `\store_data_translator'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2283.1-2328.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\load_data_translator'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2357.1-2360.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\logic_unit'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2485.1-2495.9 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\pcadder'.
Generating RTLIL representation for module `\signext16'.
Generating RTLIL representation for module `\merge26lo'.
Generating RTLIL representation for module `\lo_reg'.
Generating RTLIL representation for module `\hi_reg'.
Generating RTLIL representation for module `\register_1bit'.
Generating RTLIL representation for module `\pipereg_w32'.
Generating RTLIL representation for module `\pipereg_w26'.
Generating RTLIL representation for module `\pipereg_w6'.
Generating RTLIL representation for module `\pipereg_w5'.
Generating RTLIL representation for module `\pipereg_w1'.
Generating RTLIL representation for module `\onecyclestall'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2957.3-2963.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\fakedelay'.
Generating RTLIL representation for module `\zeroer'.
Generating RTLIL representation for module `\nop'.
Generating RTLIL representation for module `\branchresolve'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: branchresolve       
root of   0 design levels: nop                 
root of   0 design levels: zeroer              
root of   0 design levels: fakedelay           
root of   0 design levels: onecyclestall       
root of   0 design levels: pipereg_w1          
root of   0 design levels: pipereg_w5          
root of   0 design levels: pipereg_w6          
root of   0 design levels: pipereg_w26         
root of   0 design levels: pipereg_w32         
root of   0 design levels: register_1bit       
root of   0 design levels: hi_reg              
root of   0 design levels: lo_reg              
root of   0 design levels: merge26lo           
root of   0 design levels: signext16           
root of   0 design levels: pcadder             
root of   0 design levels: logic_unit          
root of   0 design levels: load_data_translator
root of   0 design levels: store_data_translator
root of   1 design levels: data_mem            
root of   0 design levels: dummy_counter       
root of   1 design levels: ifetch              
root of   0 design levels: dummy_mult          
root of   1 design levels: mul                 
root of   1 design levels: reg_file            
root of   0 design levels: full_adder          
root of   1 design levels: dummy_add_sub       
root of   2 design levels: addersub            
root of   3 design levels: system              
root of   0 design levels: dual_port_ram       
root of   0 design levels: single_port_ram     
Automatically selected system as design top module.

2.2. Analyzing design hierarchy..
Top module:  \system
Used module:     \pipereg_w5
Used module:     \pipereg_w6
Used module:     \pipereg_w1
Used module:     \fakedelay
Used module:     \zeroer
Used module:     \nop
Used module:     \pipereg_w32
Used module:     \pipereg_w26
Used module:     \lo_reg
Used module:     \branchresolve
Used module:     \hi_reg
Used module:     \merge26lo
Used module:     \signext16
Used module:     \pcadder
Used module:     \logic_unit
Used module:     \data_mem
Used module:         \onecyclestall
Used module:         \single_port_ram
Used module:         \load_data_translator
Used module:         \store_data_translator
Used module:     \ifetch
Used module:         \dummy_counter
Used module:         \dual_port_ram
Used module:         \register_1bit
Used module:     \mul
Used module:         \dummy_mult
Used module:     \reg_file
Used module:     \addersub
Used module:         \dummy_add_sub
Used module:             \full_adder
Parameter \DATA_WIDTH = 32
Parameter \ADDR_WIDTH = 5

2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\single_port_ram'.
Parameter \DATA_WIDTH = 32
Parameter \ADDR_WIDTH = 5
Generating RTLIL representation for module `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram'.
Parameter \DATA_WIDTH = 32
Parameter \ADDR_WIDTH = 5
Found cached RTLIL representation for module `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram'.
Parameter \DATA_WIDTH = 32
Parameter \ADDR_WIDTH = 10

2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\dual_port_ram'.
Parameter \DATA_WIDTH = 32
Parameter \ADDR_WIDTH = 10
Generating RTLIL representation for module `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram'.
Parameter \DATA_WIDTH = 32
Parameter \ADDR_WIDTH = 10

2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\single_port_ram'.
Parameter \DATA_WIDTH = 32
Parameter \ADDR_WIDTH = 10
Generating RTLIL representation for module `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram'.

2.6. Analyzing design hierarchy..
Top module:  \system
Used module:     \pipereg_w5
Used module:     \pipereg_w6
Used module:     \pipereg_w1
Used module:     \fakedelay
Used module:     \zeroer
Used module:     \nop
Used module:     \pipereg_w32
Used module:     \pipereg_w26
Used module:     \lo_reg
Used module:     \branchresolve
Used module:     \hi_reg
Used module:     \merge26lo
Used module:     \signext16
Used module:     \pcadder
Used module:     \logic_unit
Used module:     \data_mem
Used module:         \onecyclestall
Used module:         $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram
Used module:         \load_data_translator
Used module:         \store_data_translator
Used module:     \ifetch
Used module:         \dummy_counter
Used module:         $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram
Used module:         \register_1bit
Used module:     \mul
Used module:         \dummy_mult
Used module:     \reg_file
Used module:         $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram
Used module:     \addersub
Used module:         \dummy_add_sub
Used module:             \full_adder

2.7. Analyzing design hierarchy..
Top module:  \system
Used module:     \pipereg_w5
Used module:     \pipereg_w6
Used module:     \pipereg_w1
Used module:     \fakedelay
Used module:     \zeroer
Used module:     \nop
Used module:     \pipereg_w32
Used module:     \pipereg_w26
Used module:     \lo_reg
Used module:     \branchresolve
Used module:     \hi_reg
Used module:     \merge26lo
Used module:     \signext16
Used module:     \pcadder
Used module:     \logic_unit
Used module:     \data_mem
Used module:         \onecyclestall
Used module:         $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram
Used module:         \load_data_translator
Used module:         \store_data_translator
Used module:     \ifetch
Used module:         \dummy_counter
Used module:         $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram
Used module:         \register_1bit
Used module:     \mul
Used module:         \dummy_mult
Used module:     \reg_file
Used module:         $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram
Used module:     \addersub
Used module:         \dummy_add_sub
Used module:             \full_adder
Removing unused module `\dual_port_ram'.
Removing unused module `\single_port_ram'.
Removed 2 unused modules.
Mapping positional arguments of cell data_mem.staller (onecyclestall).
Mapping positional arguments of cell ifetch.pc_reg (dummy_counter).
Mapping positional arguments of cell ifetch.sync_pcs_up (register_1bit).
Mapping positional arguments of cell mul.staller (onecyclestall).
Mapping positional arguments of cell mul.fake_mult_one (dummy_mult).
Mapping positional arguments of cell dummy_add_sub.bit31 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit30 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit29 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit28 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit27 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit26 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit25 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit24 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit23 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit22 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit21 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit20 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit19 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit18 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit17 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit16 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit15 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit14 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit13 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit12 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit11 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit10 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit9 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit8 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit7 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit6 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit5 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit4 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit3 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit2 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit1 (full_adder).
Mapping positional arguments of cell dummy_add_sub.bit0 (full_adder).
Mapping positional arguments of cell addersub.adder32bit (dummy_add_sub).
Warning: Resizing cell port ifetch.pc_reg.data from 31 bits to 30 bits.
Warning: Resizing cell port mul.fake_mult_one.opB_mux_out from 33 bits to 32 bits.
Warning: Resizing cell port system.pipereg13.q from 5 bits to 32 bits.
Warning: Resizing cell port system.pipereg13.d from 5 bits to 32 bits.
Warning: Resizing cell port system.pipereg12.q from 6 bits to 32 bits.
Warning: Resizing cell port system.pipereg12.d from 6 bits to 32 bits.
Warning: Resizing cell port system.pipereg11.q from 6 bits to 32 bits.
Warning: Resizing cell port system.pipereg11.d from 6 bits to 32 bits.
Warning: Resizing cell port system.zeroer4.d from 32 bits to 5 bits.
Warning: Resizing cell port system.pipereg2.q from 5 bits to 32 bits.
Warning: Resizing cell port system.pipereg2.d from 5 bits to 32 bits.
Warning: Resizing cell port system.ifetch.next_pc from 32 bits to 30 bits.
Warning: Resizing cell port system.mul.dst from 32 bits to 5 bits.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:135$404 in module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2964$381 in module onecyclestall.
Removed 1 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2957$380 in module onecyclestall.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2957$380 in module onecyclestall.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2892$375 in module pipereg_w1.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2858$370 in module pipereg_w5.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2823$365 in module pipereg_w6.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2792$360 in module pipereg_w26.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2761$355 in module pipereg_w32.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2676$352 in module register_1bit.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2618$349 in module hi_reg.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2587$346 in module lo_reg.
Removed 1 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2485$335 in module logic_unit.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2485$335 in module logic_unit.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2283$333 in module store_data_translator.
Removed 1 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2127$327 in module dummy_counter.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2127$327 in module dummy_counter.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:1954$311 in module dummy_mult.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28 in module system.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:135$431 in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:181$422 in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:172$414 in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.
Removed a total of 3 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 3 redundant assignments.
Promoted 20 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:135$404'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:137$403_EN[31:0]$410
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:137$403_DATA[31:0]$409
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:137$403_ADDR[4:0]$408
     4/4: $0\out[31:0]
Creating decoders for process `\onecyclestall.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2964$381'.
     1/1: $0\T[0:0]
Creating decoders for process `\onecyclestall.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2957$380'.
     1/1: $1\Tnext[0:0]
Creating decoders for process `\pipereg_w1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2892$375'.
     1/1: $0\q[0:0]
Creating decoders for process `\pipereg_w5.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2858$370'.
     1/2: $0\q[31:0] [31:5]
     2/2: $0\q[31:0] [4:0]
Creating decoders for process `\pipereg_w6.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2823$365'.
     1/2: $0\q[31:0] [31:6]
     2/2: $0\q[31:0] [5:0]
Creating decoders for process `\pipereg_w26.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2792$360'.
     1/1: $0\q[25:0]
Creating decoders for process `\pipereg_w32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2761$355'.
     1/1: $0\q[31:0]
Creating decoders for process `\register_1bit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2676$352'.
     1/1: $0\q[0:0]
Creating decoders for process `\hi_reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2618$349'.
     1/1: $0\q[31:0]
Creating decoders for process `\lo_reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2587$346'.
     1/1: $0\q[31:0]
Creating decoders for process `\logic_unit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2485$335'.
     1/1: $1\logic_result[31:0]
Creating decoders for process `\load_data_translator.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2357$334'.
Creating decoders for process `\store_data_translator.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2283$333'.
     1/6: $3\d_writedataout[31:0]
     2/6: $3\d_byteena[3:0]
     3/6: $2\d_writedataout[31:0]
     4/6: $2\d_byteena[3:0]
     5/6: $1\d_writedataout[31:0]
     6/6: $1\d_byteena[3:0]
Creating decoders for process `\dummy_counter.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2127$327'.
     1/1: $0\q[29:0]
Creating decoders for process `\dummy_mult.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:1954$311'.
     1/1: $0\result[31:0]
Creating decoders for process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
     1/24: $0\ctrl_mul_start[0:0]
     2/24: $0\ctrl_ifetch_we[0:0]
     3/24: $0\ctrl_data_mem_en[0:0]
     4/24: $0\ctrl_reg_file_c_we[0:0]
     5/24: $0\ctrl_branchresolve_en[0:0]
     6/24: $0\ctrl_lo_reg_en[0:0]
     7/24: $0\ctrl_hi_reg_en[0:0]
     8/24: $0\ctrl_logic_unit_op[1:0]
     9/24: $0\ctrl_mul_op[2:0]
    10/24: $0\ctrl_ifetch_op[0:0]
    11/24: $0\ctrl_addersub_op[2:0]
    12/24: $0\ctrl_data_mem_op[3:0]
    13/24: $0\ctrl_zeroer_en[0:0]
    14/24: $0\ctrl_zeroer0_en[0:0]
    15/24: $0\ctrl_zeroer4_en[0:0]
    16/24: $0\ctrl_mux3to1_zeroer4_d_sel[1:0]
    17/24: $0\ctrl_mux3to1_ifetch_load_data_sel[1:0]
    18/24: $0\ctrl_mux3to1_mul_sa_sel[1:0]
    19/24: $0\ctrl_mux2to1_mul_opA_sel[0:0]
    20/24: $0\ctrl_mux3to1_nop6_d_sel[1:0]
    21/24: $0\ctrl_mux6to1_ifetch_load_sel[2:0]
    22/24: $0\ctrl_mux2to1_addersub_opA_sel[0:0]
    23/24: $0\ctrl_mux7to1_nop10_d_sel[2:0]
    24/24: $0\ctrl_mux2to1_pipereg_d_sel[0:0]
Creating decoders for process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:135$431'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:137$430_EN[31:0]$437
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:137$430_DATA[31:0]$436
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:137$430_ADDR[9:0]$435
     4/4: $0\out[31:0]
Creating decoders for process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:181$422'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:183$413_EN[31:0]$428
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:183$413_DATA[31:0]$427
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:183$413_ADDR[9:0]$426
     4/4: $0\out2[31:0]
Creating decoders for process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:172$414'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:174$412_EN[31:0]$420
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:174$412_DATA[31:0]$419
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:174$412_ADDR[9:0]$418
     4/4: $0\out1[31:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\onecyclestall.\Tnext' from process `\onecyclestall.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2957$380'.
No latch inferred for signal `\logic_unit.\logic_result' from process `\logic_unit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2485$335'.
No latch inferred for signal `\load_data_translator.\d_loadresult' from process `\load_data_translator.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2357$334'.
No latch inferred for signal `\store_data_translator.\d_byteena' from process `\store_data_translator.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2283$333'.
No latch inferred for signal `\store_data_translator.\d_writedataout' from process `\store_data_translator.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2283$333'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.\out' using process `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:135$404'.
  created $dff cell `$procdff$1199' with positive edge clock.
Creating register for signal `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:137$403_ADDR' using process `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:135$404'.
  created $dff cell `$procdff$1200' with positive edge clock.
Creating register for signal `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:137$403_DATA' using process `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:135$404'.
  created $dff cell `$procdff$1201' with positive edge clock.
Creating register for signal `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:137$403_EN' using process `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:135$404'.
  created $dff cell `$procdff$1202' with positive edge clock.
Creating register for signal `\onecyclestall.\T' using process `\onecyclestall.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2964$381'.
  created $dff cell `$procdff$1203' with positive edge clock.
Creating register for signal `\pipereg_w1.\q' using process `\pipereg_w1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2892$375'.
  created $dff cell `$procdff$1204' with positive edge clock.
Creating register for signal `\pipereg_w5.\q' using process `\pipereg_w5.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2858$370'.
  created $dff cell `$procdff$1205' with positive edge clock.
Creating register for signal `\pipereg_w6.\q' using process `\pipereg_w6.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2823$365'.
  created $dff cell `$procdff$1206' with positive edge clock.
Creating register for signal `\pipereg_w26.\q' using process `\pipereg_w26.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2792$360'.
  created $dff cell `$procdff$1207' with positive edge clock.
Creating register for signal `\pipereg_w32.\q' using process `\pipereg_w32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2761$355'.
  created $dff cell `$procdff$1208' with positive edge clock.
Creating register for signal `\register_1bit.\q' using process `\register_1bit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2676$352'.
  created $dff cell `$procdff$1209' with positive edge clock.
Creating register for signal `\hi_reg.\q' using process `\hi_reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2618$349'.
  created $dff cell `$procdff$1210' with positive edge clock.
Creating register for signal `\lo_reg.\q' using process `\lo_reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2587$346'.
  created $dff cell `$procdff$1211' with positive edge clock.
Creating register for signal `\dummy_counter.\q' using process `\dummy_counter.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2127$327'.
  created $dff cell `$procdff$1212' with positive edge clock.
Creating register for signal `\dummy_mult.\result' using process `\dummy_mult.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:1954$311'.
  created $dff cell `$procdff$1213' with positive edge clock.
Creating register for signal `\system.\ctrl_mux2to1_pipereg_d_sel' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1214' with positive edge clock.
Creating register for signal `\system.\ctrl_mux7to1_nop10_d_sel' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1215' with positive edge clock.
Creating register for signal `\system.\ctrl_mux2to1_addersub_opA_sel' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1216' with positive edge clock.
Creating register for signal `\system.\ctrl_mux6to1_ifetch_load_sel' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1217' with positive edge clock.
Creating register for signal `\system.\ctrl_mux3to1_nop6_d_sel' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1218' with positive edge clock.
Creating register for signal `\system.\ctrl_mux2to1_mul_opA_sel' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1219' with positive edge clock.
Creating register for signal `\system.\ctrl_mux3to1_mul_sa_sel' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1220' with positive edge clock.
Creating register for signal `\system.\ctrl_mux3to1_ifetch_load_data_sel' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1221' with positive edge clock.
Creating register for signal `\system.\ctrl_mux3to1_zeroer4_d_sel' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1222' with positive edge clock.
Creating register for signal `\system.\ctrl_zeroer4_en' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1223' with positive edge clock.
Creating register for signal `\system.\ctrl_zeroer0_en' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1224' with positive edge clock.
Creating register for signal `\system.\ctrl_zeroer_en' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1225' with positive edge clock.
Creating register for signal `\system.\ctrl_data_mem_op' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1226' with positive edge clock.
Creating register for signal `\system.\ctrl_addersub_op' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1227' with positive edge clock.
Creating register for signal `\system.\ctrl_ifetch_op' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1228' with positive edge clock.
Creating register for signal `\system.\ctrl_mul_op' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1229' with positive edge clock.
Creating register for signal `\system.\ctrl_logic_unit_op' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1230' with positive edge clock.
Creating register for signal `\system.\ctrl_hi_reg_en' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1231' with positive edge clock.
Creating register for signal `\system.\ctrl_lo_reg_en' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1232' with positive edge clock.
Creating register for signal `\system.\ctrl_branchresolve_en' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1233' with positive edge clock.
Creating register for signal `\system.\ctrl_reg_file_c_we' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1234' with positive edge clock.
Creating register for signal `\system.\ctrl_reg_file_b_en' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1235' with positive edge clock.
Creating register for signal `\system.\ctrl_reg_file_a_en' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1236' with positive edge clock.
Creating register for signal `\system.\ctrl_data_mem_en' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1237' with positive edge clock.
Creating register for signal `\system.\ctrl_ifetch_we' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1238' with positive edge clock.
Creating register for signal `\system.\ctrl_ifetch_en' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1239' with positive edge clock.
Creating register for signal `\system.\ctrl_mul_start' using process `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
  created $dff cell `$procdff$1240' with positive edge clock.
Creating register for signal `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.\out' using process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:135$431'.
  created $dff cell `$procdff$1241' with positive edge clock.
Creating register for signal `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:137$430_ADDR' using process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:135$431'.
  created $dff cell `$procdff$1242' with positive edge clock.
Creating register for signal `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:137$430_DATA' using process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:135$431'.
  created $dff cell `$procdff$1243' with positive edge clock.
Creating register for signal `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:137$430_EN' using process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:135$431'.
  created $dff cell `$procdff$1244' with positive edge clock.
Creating register for signal `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.\out2' using process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:181$422'.
  created $dff cell `$procdff$1245' with positive edge clock.
Creating register for signal `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:183$413_ADDR' using process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:181$422'.
  created $dff cell `$procdff$1246' with positive edge clock.
Creating register for signal `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:183$413_DATA' using process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:181$422'.
  created $dff cell `$procdff$1247' with positive edge clock.
Creating register for signal `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:183$413_EN' using process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:181$422'.
  created $dff cell `$procdff$1248' with positive edge clock.
Creating register for signal `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.\out1' using process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:172$414'.
  created $dff cell `$procdff$1249' with positive edge clock.
Creating register for signal `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:174$412_ADDR' using process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:172$414'.
  created $dff cell `$procdff$1250' with positive edge clock.
Creating register for signal `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:174$412_DATA' using process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:172$414'.
  created $dff cell `$procdff$1251' with positive edge clock.
Creating register for signal `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:174$412_EN' using process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:172$414'.
  created $dff cell `$procdff$1252' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:135$404'.
Removing empty process `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:135$404'.
Found and cleaned up 1 empty switch in `\onecyclestall.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2964$381'.
Removing empty process `onecyclestall.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2964$381'.
Found and cleaned up 1 empty switch in `\onecyclestall.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2957$380'.
Removing empty process `onecyclestall.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2957$380'.
Found and cleaned up 2 empty switches in `\pipereg_w1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2892$375'.
Removing empty process `pipereg_w1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2892$375'.
Found and cleaned up 2 empty switches in `\pipereg_w5.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2858$370'.
Removing empty process `pipereg_w5.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2858$370'.
Found and cleaned up 2 empty switches in `\pipereg_w6.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2823$365'.
Removing empty process `pipereg_w6.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2823$365'.
Found and cleaned up 2 empty switches in `\pipereg_w26.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2792$360'.
Removing empty process `pipereg_w26.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2792$360'.
Found and cleaned up 2 empty switches in `\pipereg_w32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2761$355'.
Removing empty process `pipereg_w32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2761$355'.
Found and cleaned up 2 empty switches in `\register_1bit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2676$352'.
Removing empty process `register_1bit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2676$352'.
Found and cleaned up 2 empty switches in `\hi_reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2618$349'.
Removing empty process `hi_reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2618$349'.
Found and cleaned up 2 empty switches in `\lo_reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2587$346'.
Removing empty process `lo_reg.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2587$346'.
Found and cleaned up 1 empty switch in `\logic_unit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2485$335'.
Removing empty process `logic_unit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2485$335'.
Removing empty process `load_data_translator.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2357$334'.
Found and cleaned up 3 empty switches in `\store_data_translator.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2283$333'.
Removing empty process `store_data_translator.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2283$333'.
Found and cleaned up 2 empty switches in `\dummy_counter.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2127$327'.
Removing empty process `dummy_counter.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:2127$327'.
Found and cleaned up 1 empty switch in `\dummy_mult.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:1954$311'.
Removing empty process `dummy_mult.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:1954$311'.
Found and cleaned up 9 empty switches in `\system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
Removing empty process `system.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:365$28'.
Found and cleaned up 1 empty switch in `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:135$431'.
Removing empty process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:135$431'.
Found and cleaned up 1 empty switch in `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:181$422'.
Removing empty process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:181$422'.
Found and cleaned up 1 empty switch in `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:172$414'.
Removing empty process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:172$414'.
Cleaned up 38 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.
Optimizing module branchresolve.
Optimizing module nop.
Optimizing module zeroer.
Optimizing module fakedelay.
Optimizing module onecyclestall.
<suppressed ~2 debug messages>
Optimizing module pipereg_w1.
<suppressed ~3 debug messages>
Optimizing module pipereg_w5.
<suppressed ~3 debug messages>
Optimizing module pipereg_w6.
<suppressed ~3 debug messages>
Optimizing module pipereg_w26.
<suppressed ~3 debug messages>
Optimizing module pipereg_w32.
<suppressed ~3 debug messages>
Optimizing module register_1bit.
<suppressed ~3 debug messages>
Optimizing module hi_reg.
<suppressed ~3 debug messages>
Optimizing module lo_reg.
<suppressed ~3 debug messages>
Optimizing module merge26lo.
Optimizing module signext16.
Optimizing module pcadder.
Optimizing module logic_unit.
<suppressed ~1 debug messages>
Optimizing module load_data_translator.
Optimizing module store_data_translator.
<suppressed ~6 debug messages>
Optimizing module data_mem.
Optimizing module dummy_counter.
<suppressed ~1 debug messages>
Optimizing module ifetch.
Optimizing module dummy_mult.
Optimizing module mul.
Optimizing module reg_file.
Optimizing module full_adder.
Optimizing module dummy_add_sub.
Optimizing module addersub.
Optimizing module system.
<suppressed ~57 debug messages>
Optimizing module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
Optimizing module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.
Optimizing module branchresolve.
Optimizing module nop.
Optimizing module zeroer.
Optimizing module fakedelay.
Optimizing module onecyclestall.
Optimizing module pipereg_w1.
Optimizing module pipereg_w5.
Optimizing module pipereg_w6.
Optimizing module pipereg_w26.
Optimizing module pipereg_w32.
Optimizing module register_1bit.
Optimizing module hi_reg.
Optimizing module lo_reg.
Optimizing module merge26lo.
Optimizing module signext16.
Optimizing module pcadder.
Optimizing module logic_unit.
Optimizing module load_data_translator.
Optimizing module store_data_translator.
Optimizing module data_mem.
Optimizing module dummy_counter.
Optimizing module ifetch.
Optimizing module dummy_mult.
Optimizing module mul.
Optimizing module reg_file.
Optimizing module full_adder.
Optimizing module dummy_add_sub.
Optimizing module addersub.
Optimizing module system.
Optimizing module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
Optimizing module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram'.
Finding identical cells in module `\branchresolve'.
<suppressed ~9 debug messages>
Finding identical cells in module `\nop'.
Finding identical cells in module `\zeroer'.
Finding identical cells in module `\fakedelay'.
Finding identical cells in module `\onecyclestall'.
<suppressed ~3 debug messages>
Finding identical cells in module `\pipereg_w1'.
Finding identical cells in module `\pipereg_w5'.
Finding identical cells in module `\pipereg_w6'.
Finding identical cells in module `\pipereg_w26'.
Finding identical cells in module `\pipereg_w32'.
Finding identical cells in module `\register_1bit'.
Finding identical cells in module `\hi_reg'.
Finding identical cells in module `\lo_reg'.
Finding identical cells in module `\merge26lo'.
Finding identical cells in module `\signext16'.
Finding identical cells in module `\pcadder'.
Finding identical cells in module `\logic_unit'.
<suppressed ~3 debug messages>
Finding identical cells in module `\load_data_translator'.
Finding identical cells in module `\store_data_translator'.
<suppressed ~30 debug messages>
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\dummy_counter'.
Finding identical cells in module `\ifetch'.
<suppressed ~3 debug messages>
Finding identical cells in module `\dummy_mult'.
Finding identical cells in module `\mul'.
Finding identical cells in module `\reg_file'.
Finding identical cells in module `\full_adder'.
Finding identical cells in module `\dummy_add_sub'.
Finding identical cells in module `\addersub'.
Finding identical cells in module `\system'.
<suppressed ~1467 debug messages>
Finding identical cells in module `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram'.
Finding identical cells in module `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram'.
Removed a total of 505 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \branchresolve..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \nop..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \zeroer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fakedelay..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \onecyclestall..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pipereg_w1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pipereg_w5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pipereg_w6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pipereg_w26..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pipereg_w32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \register_1bit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hi_reg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lo_reg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \merge26lo..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \signext16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pcadder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \logic_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \load_data_translator..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_data_translator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$535.
    dead port 2/2 on $mux $procmux$544.
    dead port 2/2 on $mux $procmux$526.
    dead port 2/2 on $mux $procmux$520.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \dummy_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ifetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \dummy_mult..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \reg_file..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \full_adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \dummy_add_sub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \addersub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \system..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 4 multiplexer ports.
<suppressed ~70 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.
    Consolidated identical input bits for $mux cell $procmux$444:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$444_Y
      New ports: A=1'0, B=1'1, Y=$procmux$444_Y [0]
      New connections: $procmux$444_Y [31:1] = { $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] $procmux$444_Y [0] }
  Optimizing cells in module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.
  Optimizing cells in module \branchresolve.
  Optimizing cells in module \nop.
  Optimizing cells in module \zeroer.
  Optimizing cells in module \fakedelay.
  Optimizing cells in module \onecyclestall.
  Optimizing cells in module \pipereg_w1.
  Optimizing cells in module \pipereg_w5.
  Optimizing cells in module \pipereg_w6.
  Optimizing cells in module \pipereg_w26.
  Optimizing cells in module \pipereg_w32.
  Optimizing cells in module \register_1bit.
  Optimizing cells in module \hi_reg.
  Optimizing cells in module \lo_reg.
  Optimizing cells in module \merge26lo.
  Optimizing cells in module \signext16.
  Optimizing cells in module \pcadder.
  Optimizing cells in module \logic_unit.
  Optimizing cells in module \load_data_translator.
  Optimizing cells in module \store_data_translator.
  Optimizing cells in module \data_mem.
  Optimizing cells in module \dummy_counter.
    New ctrl vector for $pmux cell $procmux$554: { $auto$opt_reduce.cc:134:opt_mux$1258 $procmux$560_CMP $procmux$559_CMP $procmux$555_CMP }
  Optimizing cells in module \dummy_counter.
  Optimizing cells in module \ifetch.
  Optimizing cells in module \dummy_mult.
  Optimizing cells in module \mul.
  Optimizing cells in module \reg_file.
  Optimizing cells in module \full_adder.
  Optimizing cells in module \dummy_add_sub.
  Optimizing cells in module \addersub.
  Optimizing cells in module \system.
    New ctrl vector for $pmux cell $procmux$809: { $procmux$1133_CMP $procmux$1131_CMP $procmux$1130_CMP $procmux$1128_CMP $auto$opt_reduce.cc:134:opt_mux$1260 $procmux$1092_CMP $procmux$1079_CMP }
    New ctrl vector for $pmux cell $procmux$926: $auto$opt_reduce.cc:134:opt_mux$1262
    New ctrl vector for $pmux cell $procmux$621: $auto$opt_reduce.cc:134:opt_mux$1264
    New ctrl vector for $pmux cell $procmux$924: { $procmux$946_CMP $auto$opt_reduce.cc:134:opt_mux$1266 }
    New ctrl vector for $pmux cell $procmux$1078: { $procmux$1134_CMP $procmux$1124_CMP $auto$opt_reduce.cc:134:opt_mux$1268 }
    New ctrl vector for $pmux cell $procmux$787: { $procmux$1123_CMP $auto$opt_reduce.cc:134:opt_mux$1270 $procmux$1113_CMP $procmux$1112_CMP $procmux$1107_CMP $procmux$1106_CMP }
    New ctrl vector for $pmux cell $procmux$784: { $auto$opt_reduce.cc:134:opt_mux$1274 $procmux$1126_CMP $procmux$1125_CMP $procmux$1124_CMP $auto$opt_reduce.cc:134:opt_mux$1272 }
    New ctrl vector for $pmux cell $procmux$1145: $auto$opt_reduce.cc:134:opt_mux$1276
    New ctrl vector for $pmux cell $procmux$610: $auto$opt_reduce.cc:134:opt_mux$1278
    New ctrl vector for $pmux cell $procmux$773: $auto$opt_reduce.cc:134:opt_mux$1280
    New ctrl vector for $pmux cell $procmux$771: { $auto$opt_reduce.cc:134:opt_mux$1284 $auto$opt_reduce.cc:134:opt_mux$1282 $procmux$1072_CMP $procmux$1124_CMP }
    New ctrl vector for $pmux cell $procmux$608: { $auto$opt_reduce.cc:134:opt_mux$1286 $procmux$1072_CMP $procmux$1124_CMP }
    New ctrl vector for $pmux cell $procmux$768: $auto$opt_reduce.cc:134:opt_mux$1288
    New ctrl vector for $pmux cell $procmux$821: $auto$opt_reduce.cc:134:opt_mux$1290
    New ctrl vector for $pmux cell $procmux$605: $auto$opt_reduce.cc:134:opt_mux$1292
    New ctrl vector for $pmux cell $procmux$1138: { $procmux$1148_CMP $auto$opt_reduce.cc:134:opt_mux$1294 }
    New ctrl vector for $pmux cell $procmux$1081: { $procmux$1120_CMP $auto$opt_reduce.cc:134:opt_mux$1296 }
    New ctrl vector for $pmux cell $procmux$737: { $procmux$1022_CMP $procmux$1021_CMP $auto$opt_reduce.cc:134:opt_mux$1302 $auto$opt_reduce.cc:134:opt_mux$1300 $auto$opt_reduce.cc:134:opt_mux$1298 }
    New ctrl vector for $pmux cell $procmux$818: { $procmux$1148_CMP $procmux$946_CMP $auto$opt_reduce.cc:134:opt_mux$1304 }
    New ctrl vector for $pmux cell $procmux$890: $auto$opt_reduce.cc:134:opt_mux$1306
    New ctrl vector for $pmux cell $procmux$888: { $procmux$946_CMP $auto$opt_reduce.cc:134:opt_mux$1308 }
    New ctrl vector for $pmux cell $procmux$717: $auto$opt_reduce.cc:134:opt_mux$1310
    New ctrl vector for $pmux cell $procmux$574: $auto$opt_reduce.cc:134:opt_mux$1312
    New ctrl vector for $pmux cell $procmux$697: $auto$opt_reduce.cc:134:opt_mux$1314
    New ctrl vector for $pmux cell $procmux$1029: $auto$opt_reduce.cc:134:opt_mux$1316
    New ctrl vector for $pmux cell $procmux$676: { $auto$opt_reduce.cc:134:opt_mux$1318 $procmux$1072_CMP }
    New ctrl vector for $pmux cell $procmux$1026: { $procmux$1124_CMP $auto$opt_reduce.cc:134:opt_mux$1320 }
    New ctrl vector for $pmux cell $procmux$673: $auto$opt_reduce.cc:134:opt_mux$1322
    New ctrl vector for $pmux cell $procmux$864: $auto$opt_reduce.cc:134:opt_mux$1324
    New ctrl vector for $pmux cell $procmux$1014: { $auto$opt_reduce.cc:134:opt_mux$1328 $auto$opt_reduce.cc:134:opt_mux$1326 }
    New ctrl vector for $pmux cell $procmux$862: { $procmux$946_CMP $auto$opt_reduce.cc:134:opt_mux$1330 }
    New ctrl vector for $pmux cell $procmux$1104: { $procmux$1119_CMP $procmux$1118_CMP $auto$opt_reduce.cc:134:opt_mux$1338 $auto$opt_reduce.cc:134:opt_mux$1336 $auto$opt_reduce.cc:134:opt_mux$1334 $auto$opt_reduce.cc:134:opt_mux$1332 }
    New ctrl vector for $pmux cell $procmux$1102: { $auto$opt_reduce.cc:134:opt_mux$1346 $procmux$1129_CMP $auto$opt_reduce.cc:134:opt_mux$1344 $auto$opt_reduce.cc:134:opt_mux$1342 $procmux$1124_CMP $auto$opt_reduce.cc:134:opt_mux$1340 }
    New ctrl vector for $pmux cell $procmux$999: { $auto$opt_reduce.cc:134:opt_mux$1350 $auto$opt_reduce.cc:134:opt_mux$1348 }
    New ctrl vector for $pmux cell $procmux$844: $auto$opt_reduce.cc:134:opt_mux$1352
    New ctrl vector for $pmux cell $procmux$632: $auto$opt_reduce.cc:134:opt_mux$1354
    New ctrl vector for $pmux cell $procmux$984: $auto$opt_reduce.cc:134:opt_mux$1356
    New ctrl vector for $pmux cell $procmux$630: { $procmux$1124_CMP $auto$opt_reduce.cc:134:opt_mux$1358 }
    New ctrl vector for $pmux cell $procmux$982: { $auto$opt_reduce.cc:134:opt_mux$1362 $auto$opt_reduce.cc:134:opt_mux$1360 $procmux$1072_CMP $procmux$1124_CMP }
    New ctrl vector for $pmux cell $procmux$979: $auto$opt_reduce.cc:134:opt_mux$1364
  Optimizing cells in module \system.
  Optimizing cells in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
    Consolidated identical input bits for $mux cell $procmux$1164:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$1164_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1164_Y [0]
      New connections: $procmux$1164_Y [31:1] = { $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] $procmux$1164_Y [0] }
  Optimizing cells in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
  Optimizing cells in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.
    Consolidated identical input bits for $mux cell $procmux$1188:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$1188_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1188_Y [0]
      New connections: $procmux$1188_Y [31:1] = { $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] $procmux$1188_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$1176:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$1176_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1176_Y [0]
      New connections: $procmux$1176_Y [31:1] = { $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] $procmux$1176_Y [0] }
  Optimizing cells in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.
Performed a total of 45 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram'.
Finding identical cells in module `\branchresolve'.
Finding identical cells in module `\nop'.
Finding identical cells in module `\zeroer'.
Finding identical cells in module `\fakedelay'.
Finding identical cells in module `\onecyclestall'.
Finding identical cells in module `\pipereg_w1'.
Finding identical cells in module `\pipereg_w5'.
Finding identical cells in module `\pipereg_w6'.
Finding identical cells in module `\pipereg_w26'.
Finding identical cells in module `\pipereg_w32'.
Finding identical cells in module `\register_1bit'.
Finding identical cells in module `\hi_reg'.
Finding identical cells in module `\lo_reg'.
Finding identical cells in module `\merge26lo'.
Finding identical cells in module `\signext16'.
Finding identical cells in module `\pcadder'.
Finding identical cells in module `\logic_unit'.
Finding identical cells in module `\load_data_translator'.
Finding identical cells in module `\store_data_translator'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\dummy_counter'.
Finding identical cells in module `\ifetch'.
Finding identical cells in module `\dummy_mult'.
Finding identical cells in module `\mul'.
Finding identical cells in module `\reg_file'.
Finding identical cells in module `\full_adder'.
Finding identical cells in module `\dummy_add_sub'.
Finding identical cells in module `\addersub'.
Finding identical cells in module `\system'.
<suppressed ~48 debug messages>
Finding identical cells in module `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram'.
Finding identical cells in module `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram'.
Removed a total of 16 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$1199 ($dff) from module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:140$411_DATA, Q = \out).
Adding SRST signal on $procdff$1203 ($dff) from module onecyclestall (D = $procmux$458_Y, Q = \T, rval = 1'0).
Adding SRST signal on $procdff$1204 ($dff) from module pipereg_w1 (D = $procmux$461_Y, Q = \q, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$1367 ($sdff) from module pipereg_w1 (D = \d, Q = \q).
Adding SRST signal on $procdff$1205 ($dff) from module pipereg_w5 (D = { $procmux$466_Y $procmux$471_Y }, Q = \q, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$1369 ($sdff) from module pipereg_w5 (D = { 27'000000000000000000000000000 \d [4:0] }, Q = \q).
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 8 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 10 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$1370 ($sdffe) from module pipereg_w5.
Adding SRST signal on $procdff$1206 ($dff) from module pipereg_w6 (D = { $procmux$476_Y $procmux$481_Y }, Q = \q, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$1372 ($sdff) from module pipereg_w6 (D = { 26'00000000000000000000000000 \d [5:0] }, Q = \q).
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 8 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 10 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$1373 ($sdffe) from module pipereg_w6.
Adding SRST signal on $procdff$1207 ($dff) from module pipereg_w26 (D = $procmux$486_Y, Q = \q, rval = 26'00000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$1375 ($sdff) from module pipereg_w26 (D = \d, Q = \q).
Adding SRST signal on $procdff$1208 ($dff) from module pipereg_w32 (D = $procmux$491_Y, Q = \q, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$1377 ($sdff) from module pipereg_w32 (D = \d, Q = \q).
Adding SRST signal on $procdff$1209 ($dff) from module register_1bit (D = $procmux$496_Y, Q = \q, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$1379 ($sdff) from module register_1bit (D = \d, Q = \q).
Adding SRST signal on $procdff$1210 ($dff) from module hi_reg (D = $procmux$501_Y, Q = \q, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$1381 ($sdff) from module hi_reg (D = \d, Q = \q).
Adding SRST signal on $procdff$1211 ($dff) from module lo_reg (D = $procmux$506_Y, Q = \q, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$1383 ($sdff) from module lo_reg (D = \d, Q = \q).
Adding EN signal on $procdff$1212 ($dff) from module dummy_counter (D = $procmux$554_Y, Q = \q).
Adding SRST signal on $procdff$1213 ($dff) from module dummy_mult (D = $mul$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:1961$312_Y, Q = \result, rval = 0).
Adding EN signal on $procdff$1214 ($dff) from module system (D = $procmux$1138_Y, Q = \ctrl_mux2to1_pipereg_d_sel).
Adding EN signal on $procdff$1223 ($dff) from module system (D = $procmux$888_Y, Q = \ctrl_zeroer4_en).
Adding EN signal on $procdff$1215 ($dff) from module system (D = $procmux$1102_Y, Q = \ctrl_mux7to1_nop10_d_sel).
Adding EN signal on $procdff$1216 ($dff) from module system (D = $procmux$1078_Y, Q = \ctrl_mux2to1_addersub_opA_sel).
Adding EN signal on $procdff$1217 ($dff) from module system (D = $procmux$1071_Y, Q = \ctrl_mux6to1_ifetch_load_sel).
Adding EN signal on $procdff$1218 ($dff) from module system (D = $procmux$1026_Y, Q = \ctrl_mux3to1_nop6_d_sel).
Adding EN signal on $procdff$1219 ($dff) from module system (D = $procmux$1023_Y, Q = \ctrl_mux2to1_mul_opA_sel).
Adding EN signal on $procdff$1220 ($dff) from module system (D = $procmux$1006_Y, Q = \ctrl_mux3to1_mul_sa_sel).
Adding EN signal on $procdff$1222 ($dff) from module system (D = $procmux$924_Y, Q = \ctrl_mux3to1_zeroer4_d_sel).
Adding EN signal on $procdff$1221 ($dff) from module system (D = $procmux$982_Y, Q = \ctrl_mux3to1_ifetch_load_data_sel).
Adding EN signal on $procdff$1240 ($dff) from module system (D = $procmux$583_Y, Q = \ctrl_mul_start).
Adding EN signal on $procdff$1238 ($dff) from module system (D = $procmux$608_Y, Q = \ctrl_ifetch_we).
Adding EN signal on $procdff$1237 ($dff) from module system (D = 1'1, Q = \ctrl_data_mem_en).
Setting constant 1-bit at position 0 on $auto$ff.cc:262:slice$1469 ($dffe) from module system.
Adding EN signal on $procdff$1234 ($dff) from module system (D = $procmux$630_Y, Q = \ctrl_reg_file_c_we).
Adding EN signal on $procdff$1233 ($dff) from module system (D = $procmux$676_Y, Q = \ctrl_branchresolve_en).
Adding EN signal on $procdff$1232 ($dff) from module system (D = $and$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:1157$190_Y, Q = \ctrl_lo_reg_en).
Adding EN signal on $procdff$1231 ($dff) from module system (D = $and$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:1157$190_Y, Q = \ctrl_hi_reg_en).
Adding EN signal on $procdff$1230 ($dff) from module system (D = $procmux$722_Y, Q = \ctrl_logic_unit_op).
Adding EN signal on $procdff$1229 ($dff) from module system (D = $procmux$746_Y, Q = \ctrl_mul_op).
Adding EN signal on $procdff$1228 ($dff) from module system (D = $procmux$771_Y, Q = \ctrl_ifetch_op).
Adding EN signal on $procdff$1227 ($dff) from module system (D = $procmux$784_Y, Q = \ctrl_addersub_op).
Adding EN signal on $procdff$1226 ($dff) from module system (D = $procmux$809_Y, Q = \ctrl_data_mem_op).
Adding EN signal on $procdff$1225 ($dff) from module system (D = $procmux$818_Y, Q = \ctrl_zeroer_en).
Adding EN signal on $procdff$1224 ($dff) from module system (D = $procmux$862_Y, Q = \ctrl_zeroer0_en).
Adding EN signal on $procdff$1241 ($dff) from module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:140$438_DATA, Q = \out).
Adding EN signal on $procdff$1245 ($dff) from module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:186$429_DATA, Q = \out2).
Adding EN signal on $procdff$1249 ($dff) from module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree.v:177$421_DATA, Q = \out1).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram..
Finding unused cells or wires in module \branchresolve..
Finding unused cells or wires in module \nop..
Finding unused cells or wires in module \zeroer..
Finding unused cells or wires in module \fakedelay..
Finding unused cells or wires in module \onecyclestall..
Finding unused cells or wires in module \pipereg_w1..
Finding unused cells or wires in module \pipereg_w5..
Finding unused cells or wires in module \pipereg_w6..
Finding unused cells or wires in module \pipereg_w26..
Finding unused cells or wires in module \pipereg_w32..
Finding unused cells or wires in module \register_1bit..
Finding unused cells or wires in module \hi_reg..
Finding unused cells or wires in module \lo_reg..
Finding unused cells or wires in module \merge26lo..
Finding unused cells or wires in module \signext16..
Finding unused cells or wires in module \pcadder..
Finding unused cells or wires in module \logic_unit..
Finding unused cells or wires in module \load_data_translator..
Finding unused cells or wires in module \store_data_translator..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \dummy_counter..
Finding unused cells or wires in module \ifetch..
Finding unused cells or wires in module \dummy_mult..
Finding unused cells or wires in module \mul..
Finding unused cells or wires in module \reg_file..
Finding unused cells or wires in module \full_adder..
Finding unused cells or wires in module \dummy_add_sub..
Finding unused cells or wires in module \addersub..
Finding unused cells or wires in module \system..
Finding unused cells or wires in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram..
Finding unused cells or wires in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram..
Removed 68 unused cells and 811 unused wires.
<suppressed ~119 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.
Optimizing module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.
Optimizing module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
Optimizing module addersub.
Optimizing module branchresolve.
Optimizing module data_mem.
Optimizing module dummy_add_sub.
Optimizing module dummy_counter.
<suppressed ~1 debug messages>
Optimizing module dummy_mult.
Optimizing module fakedelay.
Optimizing module full_adder.
Optimizing module hi_reg.
Optimizing module ifetch.
Optimizing module lo_reg.
Optimizing module load_data_translator.
Optimizing module logic_unit.
Optimizing module merge26lo.
Optimizing module mul.
Optimizing module nop.
Optimizing module onecyclestall.
Optimizing module pcadder.
Optimizing module pipereg_w1.
Optimizing module pipereg_w26.
Optimizing module pipereg_w32.
Optimizing module pipereg_w5.
Optimizing module pipereg_w6.
Optimizing module reg_file.
Optimizing module register_1bit.
Optimizing module signext16.
Optimizing module store_data_translator.
Optimizing module system.
<suppressed ~27 debug messages>
Optimizing module zeroer.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \addersub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \branchresolve..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \dummy_add_sub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \dummy_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \dummy_mult..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fakedelay..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \full_adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hi_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ifetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lo_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \load_data_translator..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \logic_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \merge26lo..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \nop..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \onecyclestall..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pcadder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pipereg_w1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pipereg_w26..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pipereg_w32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pipereg_w5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pipereg_w6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \reg_file..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \register_1bit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \signext16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_data_translator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \system..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \zeroer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~52 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.
  Optimizing cells in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.
  Optimizing cells in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
  Optimizing cells in module \addersub.
  Optimizing cells in module \branchresolve.
  Optimizing cells in module \data_mem.
  Optimizing cells in module \dummy_add_sub.
  Optimizing cells in module \dummy_counter.
    New ctrl vector for $pmux cell $procmux$554: { $procmux$560_CMP $procmux$559_CMP $procmux$555_CMP }
  Optimizing cells in module \dummy_counter.
  Optimizing cells in module \dummy_mult.
  Optimizing cells in module \fakedelay.
  Optimizing cells in module \full_adder.
  Optimizing cells in module \hi_reg.
  Optimizing cells in module \ifetch.
  Optimizing cells in module \lo_reg.
  Optimizing cells in module \load_data_translator.
  Optimizing cells in module \logic_unit.
  Optimizing cells in module \merge26lo.
  Optimizing cells in module \mul.
  Optimizing cells in module \nop.
  Optimizing cells in module \onecyclestall.
  Optimizing cells in module \pcadder.
  Optimizing cells in module \pipereg_w1.
  Optimizing cells in module \pipereg_w26.
  Optimizing cells in module \pipereg_w32.
  Optimizing cells in module \pipereg_w5.
  Optimizing cells in module \pipereg_w6.
  Optimizing cells in module \reg_file.
  Optimizing cells in module \register_1bit.
  Optimizing cells in module \signext16.
  Optimizing cells in module \store_data_translator.
  Optimizing cells in module \system.
    New ctrl vector for $pmux cell $procmux$1138: $auto$opt_reduce.cc:134:opt_mux$1535
    New ctrl vector for $pmux cell $procmux$608: { $auto$opt_reduce.cc:134:opt_mux$1537 $procmux$1007_CMP }
    New ctrl vector for $pmux cell $procmux$676: $auto$opt_reduce.cc:134:opt_mux$1539
    New ctrl vector for $pmux cell $procmux$771: { $auto$opt_reduce.cc:134:opt_mux$1282 $auto$opt_reduce.cc:134:opt_mux$1541 $procmux$1007_CMP }
    New ctrl vector for $pmux cell $procmux$818: { $procmux$839_CMP $auto$opt_reduce.cc:134:opt_mux$1543 }
    New ctrl vector for $pmux cell $procmux$982: { $auto$opt_reduce.cc:134:opt_mux$1282 $auto$opt_reduce.cc:134:opt_mux$1545 $procmux$1007_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$1534: { $procmux$1162_CMP $procmux$1161_CMP $procmux$1160_CMP $procmux$1159_CMP $procmux$1158_CMP $procmux$1157_CMP $procmux$1156_CMP $procmux$1155_CMP $procmux$1154_CMP $procmux$1153_CMP $procmux$1152_CMP $procmux$1151_CMP $procmux$1150_CMP $procmux$1149_CMP $procmux$1148_CMP $procmux$1144_CMP $procmux$1143_CMP $procmux$1142_CMP $procmux$1141_CMP $procmux$1140_CMP $procmux$1139_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$1536: { $procmux$1099_CMP $procmux$1076_CMP $procmux$1075_CMP $procmux$1074_CMP $procmux$1073_CMP $procmux$1072_CMP $procmux$615_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$1538: { $procmux$1076_CMP $procmux$1075_CMP $procmux$1074_CMP $procmux$1073_CMP $procmux$1072_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$1540: { $procmux$1076_CMP $procmux$1075_CMP $procmux$1074_CMP $procmux$1073_CMP $procmux$1072_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$1542: { $procmux$1162_CMP $procmux$1161_CMP $procmux$1160_CMP $procmux$1159_CMP $procmux$1158_CMP $procmux$1157_CMP $procmux$1156_CMP $procmux$1155_CMP $procmux$1154_CMP $procmux$1153_CMP $procmux$1152_CMP $procmux$1150_CMP $procmux$1149_CMP $procmux$1148_CMP $procmux$1144_CMP $procmux$1143_CMP $procmux$1142_CMP $procmux$1141_CMP $procmux$1140_CMP $procmux$1139_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$1544: { $procmux$1076_CMP $procmux$1075_CMP $procmux$1074_CMP $procmux$1073_CMP $procmux$1072_CMP }
  Optimizing cells in module \system.
  Optimizing cells in module \zeroer.
Performed a total of 13 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram'.
Finding identical cells in module `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram'.
Finding identical cells in module `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram'.
Finding identical cells in module `\addersub'.
Finding identical cells in module `\branchresolve'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\dummy_add_sub'.
Finding identical cells in module `\dummy_counter'.
Finding identical cells in module `\dummy_mult'.
Finding identical cells in module `\fakedelay'.
Finding identical cells in module `\full_adder'.
Finding identical cells in module `\hi_reg'.
Finding identical cells in module `\ifetch'.
Finding identical cells in module `\lo_reg'.
Finding identical cells in module `\load_data_translator'.
Finding identical cells in module `\logic_unit'.
Finding identical cells in module `\merge26lo'.
Finding identical cells in module `\mul'.
Finding identical cells in module `\nop'.
Finding identical cells in module `\onecyclestall'.
Finding identical cells in module `\pcadder'.
Finding identical cells in module `\pipereg_w1'.
Finding identical cells in module `\pipereg_w26'.
Finding identical cells in module `\pipereg_w32'.
Finding identical cells in module `\pipereg_w5'.
Finding identical cells in module `\pipereg_w6'.
Finding identical cells in module `\reg_file'.
Finding identical cells in module `\register_1bit'.
Finding identical cells in module `\signext16'.
Finding identical cells in module `\store_data_translator'.
Finding identical cells in module `\system'.
<suppressed ~42 debug messages>
Finding identical cells in module `\zeroer'.
Removed a total of 14 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$1393 ($dffe) from module system (D = 1'x, Q = \ctrl_mux2to1_pipereg_d_sel, rval = 1'1).
Setting constant 1-bit at position 0 on $auto$ff.cc:262:slice$1546 ($sdffce) from module system.

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram..
Finding unused cells or wires in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram..
Finding unused cells or wires in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram..
Finding unused cells or wires in module \addersub..
Finding unused cells or wires in module \branchresolve..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \dummy_add_sub..
Finding unused cells or wires in module \dummy_counter..
Finding unused cells or wires in module \dummy_mult..
Finding unused cells or wires in module \fakedelay..
Finding unused cells or wires in module \full_adder..
Finding unused cells or wires in module \hi_reg..
Finding unused cells or wires in module \ifetch..
Finding unused cells or wires in module \lo_reg..
Finding unused cells or wires in module \load_data_translator..
Finding unused cells or wires in module \logic_unit..
Finding unused cells or wires in module \merge26lo..
Finding unused cells or wires in module \mul..
Finding unused cells or wires in module \nop..
Finding unused cells or wires in module \onecyclestall..
Finding unused cells or wires in module \pcadder..
Finding unused cells or wires in module \pipereg_w1..
Finding unused cells or wires in module \pipereg_w26..
Finding unused cells or wires in module \pipereg_w32..
Finding unused cells or wires in module \pipereg_w5..
Finding unused cells or wires in module \pipereg_w6..
Finding unused cells or wires in module \reg_file..
Finding unused cells or wires in module \register_1bit..
Finding unused cells or wires in module \signext16..
Finding unused cells or wires in module \store_data_translator..
Finding unused cells or wires in module \system..
Finding unused cells or wires in module \zeroer..
Removed 5 unused cells and 24 unused wires.
<suppressed ~6 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.
Optimizing module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.
Optimizing module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
Optimizing module addersub.
Optimizing module branchresolve.
Optimizing module data_mem.
Optimizing module dummy_add_sub.
Optimizing module dummy_counter.
Optimizing module dummy_mult.
Optimizing module fakedelay.
Optimizing module full_adder.
Optimizing module hi_reg.
Optimizing module ifetch.
Optimizing module lo_reg.
Optimizing module load_data_translator.
Optimizing module logic_unit.
Optimizing module merge26lo.
Optimizing module mul.
Optimizing module nop.
Optimizing module onecyclestall.
Optimizing module pcadder.
Optimizing module pipereg_w1.
Optimizing module pipereg_w26.
Optimizing module pipereg_w32.
Optimizing module pipereg_w5.
Optimizing module pipereg_w6.
Optimizing module reg_file.
Optimizing module register_1bit.
Optimizing module signext16.
Optimizing module store_data_translator.
Optimizing module system.
<suppressed ~1 debug messages>
Optimizing module zeroer.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \addersub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \branchresolve..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \dummy_add_sub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \dummy_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \dummy_mult..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fakedelay..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \full_adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hi_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ifetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lo_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \load_data_translator..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \logic_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \merge26lo..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \nop..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \onecyclestall..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pcadder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pipereg_w1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pipereg_w26..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pipereg_w32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pipereg_w5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pipereg_w6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \reg_file..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \register_1bit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \signext16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_data_translator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \system..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \zeroer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~50 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.
  Optimizing cells in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.
  Optimizing cells in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
  Optimizing cells in module \addersub.
  Optimizing cells in module \branchresolve.
  Optimizing cells in module \data_mem.
  Optimizing cells in module \dummy_add_sub.
  Optimizing cells in module \dummy_counter.
  Optimizing cells in module \dummy_mult.
  Optimizing cells in module \fakedelay.
  Optimizing cells in module \full_adder.
  Optimizing cells in module \hi_reg.
  Optimizing cells in module \ifetch.
  Optimizing cells in module \lo_reg.
  Optimizing cells in module \load_data_translator.
  Optimizing cells in module \logic_unit.
  Optimizing cells in module \merge26lo.
  Optimizing cells in module \mul.
  Optimizing cells in module \nop.
  Optimizing cells in module \onecyclestall.
  Optimizing cells in module \pcadder.
  Optimizing cells in module \pipereg_w1.
  Optimizing cells in module \pipereg_w26.
  Optimizing cells in module \pipereg_w32.
  Optimizing cells in module \pipereg_w5.
  Optimizing cells in module \pipereg_w6.
  Optimizing cells in module \reg_file.
  Optimizing cells in module \register_1bit.
  Optimizing cells in module \signext16.
  Optimizing cells in module \store_data_translator.
  Optimizing cells in module \system.
  Optimizing cells in module \zeroer.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram'.
Finding identical cells in module `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram'.
Finding identical cells in module `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram'.
Finding identical cells in module `\addersub'.
Finding identical cells in module `\branchresolve'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\dummy_add_sub'.
Finding identical cells in module `\dummy_counter'.
Finding identical cells in module `\dummy_mult'.
Finding identical cells in module `\fakedelay'.
Finding identical cells in module `\full_adder'.
Finding identical cells in module `\hi_reg'.
Finding identical cells in module `\ifetch'.
Finding identical cells in module `\lo_reg'.
Finding identical cells in module `\load_data_translator'.
Finding identical cells in module `\logic_unit'.
Finding identical cells in module `\merge26lo'.
Finding identical cells in module `\mul'.
Finding identical cells in module `\nop'.
Finding identical cells in module `\onecyclestall'.
Finding identical cells in module `\pcadder'.
Finding identical cells in module `\pipereg_w1'.
Finding identical cells in module `\pipereg_w26'.
Finding identical cells in module `\pipereg_w32'.
Finding identical cells in module `\pipereg_w5'.
Finding identical cells in module `\pipereg_w6'.
Finding identical cells in module `\reg_file'.
Finding identical cells in module `\register_1bit'.
Finding identical cells in module `\signext16'.
Finding identical cells in module `\store_data_translator'.
Finding identical cells in module `\system'.
Finding identical cells in module `\zeroer'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram..
Finding unused cells or wires in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram..
Finding unused cells or wires in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram..
Finding unused cells or wires in module \addersub..
Finding unused cells or wires in module \branchresolve..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \dummy_add_sub..
Finding unused cells or wires in module \dummy_counter..
Finding unused cells or wires in module \dummy_mult..
Finding unused cells or wires in module \fakedelay..
Finding unused cells or wires in module \full_adder..
Finding unused cells or wires in module \hi_reg..
Finding unused cells or wires in module \ifetch..
Finding unused cells or wires in module \lo_reg..
Finding unused cells or wires in module \load_data_translator..
Finding unused cells or wires in module \logic_unit..
Finding unused cells or wires in module \merge26lo..
Finding unused cells or wires in module \mul..
Finding unused cells or wires in module \nop..
Finding unused cells or wires in module \onecyclestall..
Finding unused cells or wires in module \pcadder..
Finding unused cells or wires in module \pipereg_w1..
Finding unused cells or wires in module \pipereg_w26..
Finding unused cells or wires in module \pipereg_w32..
Finding unused cells or wires in module \pipereg_w5..
Finding unused cells or wires in module \pipereg_w6..
Finding unused cells or wires in module \reg_file..
Finding unused cells or wires in module \register_1bit..
Finding unused cells or wires in module \signext16..
Finding unused cells or wires in module \store_data_translator..
Finding unused cells or wires in module \system..
Finding unused cells or wires in module \zeroer..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.
Optimizing module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.
Optimizing module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
Optimizing module addersub.
Optimizing module branchresolve.
Optimizing module data_mem.
Optimizing module dummy_add_sub.
Optimizing module dummy_counter.
Optimizing module dummy_mult.
Optimizing module fakedelay.
Optimizing module full_adder.
Optimizing module hi_reg.
Optimizing module ifetch.
Optimizing module lo_reg.
Optimizing module load_data_translator.
Optimizing module logic_unit.
Optimizing module merge26lo.
Optimizing module mul.
Optimizing module nop.
Optimizing module onecyclestall.
Optimizing module pcadder.
Optimizing module pipereg_w1.
Optimizing module pipereg_w26.
Optimizing module pipereg_w32.
Optimizing module pipereg_w5.
Optimizing module pipereg_w6.
Optimizing module reg_file.
Optimizing module register_1bit.
Optimizing module signext16.
Optimizing module store_data_translator.
Optimizing module system.
Optimizing module zeroer.

4.23. Rerunning OPT passes. (Maybe there is more to do..)

4.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \addersub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \branchresolve..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \dummy_add_sub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \dummy_counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \dummy_mult..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fakedelay..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \full_adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hi_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ifetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lo_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \load_data_translator..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \logic_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \merge26lo..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \nop..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \onecyclestall..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pcadder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pipereg_w1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pipereg_w26..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pipereg_w32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pipereg_w5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pipereg_w6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \reg_file..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \register_1bit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \signext16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \store_data_translator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \system..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \zeroer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~50 debug messages>

4.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.
  Optimizing cells in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.
  Optimizing cells in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
  Optimizing cells in module \addersub.
  Optimizing cells in module \branchresolve.
  Optimizing cells in module \data_mem.
  Optimizing cells in module \dummy_add_sub.
  Optimizing cells in module \dummy_counter.
  Optimizing cells in module \dummy_mult.
  Optimizing cells in module \fakedelay.
  Optimizing cells in module \full_adder.
  Optimizing cells in module \hi_reg.
  Optimizing cells in module \ifetch.
  Optimizing cells in module \lo_reg.
  Optimizing cells in module \load_data_translator.
  Optimizing cells in module \logic_unit.
  Optimizing cells in module \merge26lo.
  Optimizing cells in module \mul.
  Optimizing cells in module \nop.
  Optimizing cells in module \onecyclestall.
  Optimizing cells in module \pcadder.
  Optimizing cells in module \pipereg_w1.
  Optimizing cells in module \pipereg_w26.
  Optimizing cells in module \pipereg_w32.
  Optimizing cells in module \pipereg_w5.
  Optimizing cells in module \pipereg_w6.
  Optimizing cells in module \reg_file.
  Optimizing cells in module \register_1bit.
  Optimizing cells in module \signext16.
  Optimizing cells in module \store_data_translator.
  Optimizing cells in module \system.
  Optimizing cells in module \zeroer.
Performed a total of 0 changes.

4.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram'.
Finding identical cells in module `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram'.
Finding identical cells in module `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram'.
Finding identical cells in module `\addersub'.
Finding identical cells in module `\branchresolve'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\dummy_add_sub'.
Finding identical cells in module `\dummy_counter'.
Finding identical cells in module `\dummy_mult'.
Finding identical cells in module `\fakedelay'.
Finding identical cells in module `\full_adder'.
Finding identical cells in module `\hi_reg'.
Finding identical cells in module `\ifetch'.
Finding identical cells in module `\lo_reg'.
Finding identical cells in module `\load_data_translator'.
Finding identical cells in module `\logic_unit'.
Finding identical cells in module `\merge26lo'.
Finding identical cells in module `\mul'.
Finding identical cells in module `\nop'.
Finding identical cells in module `\onecyclestall'.
Finding identical cells in module `\pcadder'.
Finding identical cells in module `\pipereg_w1'.
Finding identical cells in module `\pipereg_w26'.
Finding identical cells in module `\pipereg_w32'.
Finding identical cells in module `\pipereg_w5'.
Finding identical cells in module `\pipereg_w6'.
Finding identical cells in module `\reg_file'.
Finding identical cells in module `\register_1bit'.
Finding identical cells in module `\signext16'.
Finding identical cells in module `\store_data_translator'.
Finding identical cells in module `\system'.
Finding identical cells in module `\zeroer'.
Removed a total of 0 cells.

4.27. Executing OPT_DFF pass (perform DFF optimizations).

4.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram..
Finding unused cells or wires in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram..
Finding unused cells or wires in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram..
Finding unused cells or wires in module \addersub..
Finding unused cells or wires in module \branchresolve..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \dummy_add_sub..
Finding unused cells or wires in module \dummy_counter..
Finding unused cells or wires in module \dummy_mult..
Finding unused cells or wires in module \fakedelay..
Finding unused cells or wires in module \full_adder..
Finding unused cells or wires in module \hi_reg..
Finding unused cells or wires in module \ifetch..
Finding unused cells or wires in module \lo_reg..
Finding unused cells or wires in module \load_data_translator..
Finding unused cells or wires in module \logic_unit..
Finding unused cells or wires in module \merge26lo..
Finding unused cells or wires in module \mul..
Finding unused cells or wires in module \nop..
Finding unused cells or wires in module \onecyclestall..
Finding unused cells or wires in module \pcadder..
Finding unused cells or wires in module \pipereg_w1..
Finding unused cells or wires in module \pipereg_w26..
Finding unused cells or wires in module \pipereg_w32..
Finding unused cells or wires in module \pipereg_w5..
Finding unused cells or wires in module \pipereg_w6..
Finding unused cells or wires in module \reg_file..
Finding unused cells or wires in module \register_1bit..
Finding unused cells or wires in module \signext16..
Finding unused cells or wires in module \store_data_translator..
Finding unused cells or wires in module \system..
Finding unused cells or wires in module \zeroer..

4.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram.
Optimizing module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram.
Optimizing module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
Optimizing module addersub.
Optimizing module branchresolve.
Optimizing module data_mem.
Optimizing module dummy_add_sub.
Optimizing module dummy_counter.
Optimizing module dummy_mult.
Optimizing module fakedelay.
Optimizing module full_adder.
Optimizing module hi_reg.
Optimizing module ifetch.
Optimizing module lo_reg.
Optimizing module load_data_translator.
Optimizing module logic_unit.
Optimizing module merge26lo.
Optimizing module mul.
Optimizing module nop.
Optimizing module onecyclestall.
Optimizing module pcadder.
Optimizing module pipereg_w1.
Optimizing module pipereg_w26.
Optimizing module pipereg_w32.
Optimizing module pipereg_w5.
Optimizing module pipereg_w6.
Optimizing module reg_file.
Optimizing module register_1bit.
Optimizing module signext16.
Optimizing module store_data_translator.
Optimizing module system.
Optimizing module zeroer.

4.30. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram ===

   Number of wires:                  9
   Number of wire bits:            172
   Number of public wires:           5
   Number of public wire bits:      71
   Number of memories:               1
   Number of memory bits:          160
   Number of processes:              0
   Number of cells:                  6
     $dffe                          32
     $mux                           38

=== $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram ===

   Number of wires:                 17
   Number of wire bits:            363
   Number of public wires:           9
   Number of public wire bits:     151
   Number of memories:               1
   Number of memory bits:          320
   Number of processes:              0
   Number of cells:                 12
     $dffe                          64
     $mux                           86

=== $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram ===

   Number of wires:                  9
   Number of wire bits:            182
   Number of public wires:           5
   Number of public wire bits:      76
   Number of memories:               1
   Number of memory bits:          320
   Number of processes:              0
   Number of cells:                  6
     $dffe                          32
     $mux                           43

=== addersub ===

   Number of wires:                  8
   Number of wire bits:            135
   Number of public wires:           8
   Number of public wire bits:     135
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $not                            1

=== branchresolve ===

   Number of wires:                 16
   Number of wire bits:             78
   Number of public wires:          10
   Number of public wire bits:      72
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 13
     $and                            6
     $eq                            32
     $not                            4
     $or                             1
     $reduce_or                     32

=== data_mem ===

   Number of wires:                 20
   Number of wire bits:            193
   Number of public wires:          20
   Number of public wire bits:     193
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  7
     $and                            1
     $not                            2

=== dummy_add_sub ===

   Number of wires:                  6
   Number of wire bits:            162
   Number of public wires:           6
   Number of public wire bits:     162
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 32

=== dummy_counter ===

   Number of wires:                 23
   Number of wire bits:            172
   Number of public wires:           8
   Number of public wire bits:      68
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 16
     $add                           32
     $dffe                          30
     $eq                            21
     $logic_not                      3
     $mux                           30
     $ne                             2
     $not                            1
     $pmux                          30
     $reduce_and                     2
     $reduce_or                      5

=== dummy_mult ===

   Number of wires:                  6
   Number of wire bits:            130
   Number of public wires:           5
   Number of public wire bits:      98
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $mul                           32
     $sdff                          32

=== fakedelay ===

   Number of wires:                  4
   Number of wire bits:             66
   Number of public wires:           4
   Number of public wire bits:      66
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== full_adder ===

   Number of wires:                 10
   Number of wire bits:             10
   Number of public wires:           5
   Number of public wire bits:       5
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  7
     $and                            3
     $or                             2
     $xor                            2

=== hi_reg ===

   Number of wires:                  5
   Number of wire bits:             67
   Number of public wires:           5
   Number of public wire bits:      67
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $sdffe                         32

=== ifetch ===

   Number of wires:                 42
   Number of wire bits:            451
   Number of public wires:          36
   Number of public wire bits:     445
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 15
     $and                            4
     $mux                           30
     $not                            5
     $or                             2

=== lo_reg ===

   Number of wires:                  5
   Number of wire bits:             67
   Number of public wires:           5
   Number of public wire bits:      67
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $sdffe                         32

=== load_data_translator ===

   Number of wires:                  4
   Number of wire bits:             67
   Number of public wires:           4
   Number of public wire bits:      67
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== logic_unit ===

   Number of wires:                 13
   Number of wire bits:            262
   Number of public wires:           5
   Number of public wire bits:     130
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  9
     $and                           32
     $eq                             6
     $logic_not                      2
     $not                           32
     $or                            32
     $pmux                          32
     $xor                           32

=== merge26lo ===

   Number of wires:                  3
   Number of wire bits:             90
   Number of public wires:           3
   Number of public wire bits:      90
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== mul ===

   Number of wires:                 25
   Number of wire bits:            253
   Number of public wires:          20
   Number of public wire bits:     248
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $and                            4
     $mux                           32
     $not                            1
     $or                             1
     $reduce_or                     10

=== nop ===

   Number of wires:                  2
   Number of wire bits:             64
   Number of public wires:           2
   Number of public wire bits:      64
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== onecyclestall ===

   Number of wires:                  7
   Number of wire bits:              7
   Number of public wires:           6
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $and                            1
     $not                            1
     $pmux                           1
     $sdff                           1

=== pcadder ===

   Number of wires:                  5
   Number of wire bits:            131
   Number of public wires:           4
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $add                           34

=== pipereg_w1 ===

   Number of wires:                  9
   Number of wire bits:              9
   Number of public wires:           6
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $logic_or                       1
     $not                            2
     $sdffe                          1

=== pipereg_w26 ===

   Number of wires:                  9
   Number of wire bits:             59
   Number of public wires:           6
   Number of public wire bits:      56
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $logic_or                       1
     $not                            2
     $sdffe                         26

=== pipereg_w32 ===

   Number of wires:                  9
   Number of wire bits:             71
   Number of public wires:           6
   Number of public wire bits:      68
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $logic_or                       1
     $not                            2
     $sdffe                         32

=== pipereg_w5 ===

   Number of wires:                  9
   Number of wire bits:             71
   Number of public wires:           6
   Number of public wire bits:      68
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $logic_or                       1
     $not                            2
     $sdffe                          5

=== pipereg_w6 ===

   Number of wires:                  9
   Number of wire bits:             71
   Number of public wires:           6
   Number of public wire bits:      68
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $logic_or                       1
     $not                            2
     $sdffe                          6

=== reg_file ===

   Number of wires:                 15
   Number of wire bits:            263
   Number of public wires:          14
   Number of public wire bits:     262
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $and                            1
     $reduce_or                     32

=== register_1bit ===

   Number of wires:                  5
   Number of wire bits:              5
   Number of public wires:           5
   Number of public wire bits:       5
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $sdffe                          1

=== signext16 ===

   Number of wires:                  2
   Number of wire bits:             48
   Number of public wires:           2
   Number of public wire bits:      48
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== store_data_translator ===

   Number of wires:                 14
   Number of wire bits:            149
   Number of public wires:           5
   Number of public wire bits:      72
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $eq                             8
     $logic_not                      2
     $mux                           36
     $pmux                          72

=== system ===

   Number of wires:                398
   Number of wire bits:           2301
   Number of public wires:         141
   Number of public wire bits:    1603
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                318
     $and                            1
     $dff                            1
     $dffe                          37
     $eq                           635
     $logic_and                      2
     $logic_not                     24
     $mux                          595
     $ne                            48
     $not                            4
     $or                             1
     $pmux                          53
     $reduce_and                    32
     $reduce_bool                   52
     $reduce_or                    352

=== zeroer ===

   Number of wires:                  4
   Number of wire bits:             70
   Number of public wires:           3
   Number of public wire bits:      38
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $mux                           32

=== design hierarchy ===

   system                            1
     addersub                        0
       dummy_add_sub                 0
         full_adder                  0
     branchresolve                   0
     data_mem                        0
       $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram      0
       load_data_translator          0
       onecyclestall                 0
       store_data_translator         0
     fakedelay                       0
     hi_reg                          0
     ifetch                          0
       $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\dual_port_ram      0
       dummy_counter                 0
       register_1bit                 0
     lo_reg                          0
     logic_unit                      0
     merge26lo                       0
     mul                             0
       dummy_mult                    0
       onecyclestall                 0
     nop                             0
     pcadder                         0
     pipereg_w1                      0
     pipereg_w26                     0
     pipereg_w32                     0
     pipereg_w5                      0
     pipereg_w6                      0
     reg_file                        0
       $paramod$9b20c7c7990eeca2a248be4fd72c1393416d670c\single_port_ram      0
     zeroer                          0

   Number of wires:                398
   Number of wire bits:           2301
   Number of public wires:         141
   Number of public wire bits:    1603
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                318
     $and                            1
     $dff                            1
     $dffe                          37
     $eq                           635
     $logic_and                      2
     $logic_not                     24
     $mux                          595
     $ne                            48
     $not                            4
     $or                             1
     $pmux                          53
     $reduce_and                    32
     $reduce_bool                   52
     $reduce_or                    352

Warnings: 13 unique messages, 13 total
End of script. Logfile hash: 88d554fa67, CPU: user 0.76s system 0.00s, MEM: 19.45 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 24% 6x opt_expr (0 sec), 17% 4x opt_dff (0 sec), ...
