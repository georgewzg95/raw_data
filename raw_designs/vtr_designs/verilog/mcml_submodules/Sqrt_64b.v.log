
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v' to AST representation.
Generating RTLIL representation for module `\Sqrt_64b'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:179.2-281.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:320.2-351.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:359.2-399.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:407.2-447.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:455.2-495.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:503.2-533.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:541.2-571.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:579.2-609.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:617.2-647.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:655.2-685.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: Sqrt_64b            
Automatically selected Sqrt_64b as design top module.

2.2. Analyzing design hierarchy..
Top module:  \Sqrt_64b

2.3. Analyzing design hierarchy..
Top module:  \Sqrt_64b
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 32 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:717$1302 in module Sqrt_64b.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:693$1285 in module Sqrt_64b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:655$1259 in module Sqrt_64b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:617$1233 in module Sqrt_64b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:579$1207 in module Sqrt_64b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:541$1181 in module Sqrt_64b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:503$1155 in module Sqrt_64b.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:455$1121 in module Sqrt_64b.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:407$1087 in module Sqrt_64b.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:359$1053 in module Sqrt_64b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:320$1027 in module Sqrt_64b.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 221 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:717$1302'.
     1/32: $32\res[31:0]
     2/32: $31\res[31:0]
     3/32: $30\res[31:0]
     4/32: $29\res[31:0]
     5/32: $28\res[31:0]
     6/32: $27\res[31:0]
     7/32: $26\res[31:0]
     8/32: $25\res[31:0]
     9/32: $24\res[31:0]
    10/32: $23\res[31:0]
    11/32: $22\res[31:0]
    12/32: $21\res[31:0]
    13/32: $20\res[31:0]
    14/32: $19\res[31:0]
    15/32: $18\res[31:0]
    16/32: $17\res[31:0]
    17/32: $16\res[31:0]
    18/32: $15\res[31:0]
    19/32: $14\res[31:0]
    20/32: $13\res[31:0]
    21/32: $12\res[31:0]
    22/32: $11\res[31:0]
    23/32: $10\res[31:0]
    24/32: $9\res[31:0]
    25/32: $8\res[31:0]
    26/32: $7\res[31:0]
    27/32: $6\res[31:0]
    28/32: $5\res[31:0]
    29/32: $4\res[31:0]
    30/32: $3\res[31:0]
    31/32: $2\res[31:0]
    32/32: $1\res[31:0]
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:693$1285'.
     1/4: $1\res__32[63:0]
     2/4: $1\op__32[63:0]
     3/4: $1\res__31[63:0]
     4/4: $1\op__31[63:0]
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:687$1284'.
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:655$1259'.
     1/6: $1\res__30_d[63:0]
     2/6: $1\op__30_d[63:0]
     3/6: $1\res__29[63:0]
     4/6: $1\op__29[63:0]
     5/6: $1\res__28[63:0]
     6/6: $1\op__28[63:0]
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:649$1258'.
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:617$1233'.
     1/6: $1\res__27_d[63:0]
     2/6: $1\op__27_d[63:0]
     3/6: $1\res__26[63:0]
     4/6: $1\op__26[63:0]
     5/6: $1\res__25[63:0]
     6/6: $1\op__25[63:0]
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:611$1232'.
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:579$1207'.
     1/6: $1\res__24_d[63:0]
     2/6: $1\op__24_d[63:0]
     3/6: $1\res__23[63:0]
     4/6: $1\op__23[63:0]
     5/6: $1\res__22[63:0]
     6/6: $1\op__22[63:0]
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:573$1206'.
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:541$1181'.
     1/6: $1\res__21_d[63:0]
     2/6: $1\op__21_d[63:0]
     3/6: $1\res__20[63:0]
     4/6: $1\op__20[63:0]
     5/6: $1\res__19[63:0]
     6/6: $1\op__19[63:0]
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:535$1180'.
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:503$1155'.
     1/6: $1\res__18_d[63:0]
     2/6: $1\op__18_d[63:0]
     3/6: $1\res__17[63:0]
     4/6: $1\op__17[63:0]
     5/6: $1\res__16[63:0]
     6/6: $1\op__16[63:0]
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:497$1154'.
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:455$1121'.
     1/8: $1\res__15_d[63:0]
     2/8: $1\op__15_d[63:0]
     3/8: $1\res__14[63:0]
     4/8: $1\op__14[63:0]
     5/8: $1\res__13[63:0]
     6/8: $1\op__13[63:0]
     7/8: $1\res__12[63:0]
     8/8: $1\op__12[63:0]
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:449$1120'.
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:407$1087'.
     1/8: $1\res__11_d[63:0]
     2/8: $1\op__11_d[63:0]
     3/8: $1\res__10[63:0]
     4/8: $1\op__10[63:0]
     5/8: $1\res__9[63:0]
     6/8: $1\op__9[63:0]
     7/8: $1\res__8[63:0]
     8/8: $1\op__8[63:0]
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:401$1086'.
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:359$1053'.
     1/8: $1\res__7_d[63:0]
     2/8: $1\op__7_d[63:0]
     3/8: $1\res__6[63:0]
     4/8: $1\op__6[63:0]
     5/8: $1\res__5[63:0]
     6/8: $1\op__5[63:0]
     7/8: $1\res__4[63:0]
     8/8: $1\op__4[63:0]
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:353$1052'.
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:320$1027'.
     1/6: $1\res__3_d[63:0]
     2/6: $1\op__3_d[63:0]
     3/6: $1\res__2[63:0]
     4/6: $1\op__2[63:0]
     5/6: $1\res__1[63:0]
     6/6: $1\op__1[63:0]
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:179$2'.
Creating decoders for process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:62$1'.

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\Sqrt_64b.\res' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:717$1302'.
No latch inferred for signal `\Sqrt_64b.\one__31' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:693$1285'.
No latch inferred for signal `\Sqrt_64b.\one__32' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:693$1285'.
No latch inferred for signal `\Sqrt_64b.\res__31' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:693$1285'.
No latch inferred for signal `\Sqrt_64b.\res__32' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:693$1285'.
No latch inferred for signal `\Sqrt_64b.\op__31' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:693$1285'.
No latch inferred for signal `\Sqrt_64b.\op__32' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:693$1285'.
No latch inferred for signal `\Sqrt_64b.\one__28' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:655$1259'.
No latch inferred for signal `\Sqrt_64b.\one__29' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:655$1259'.
No latch inferred for signal `\Sqrt_64b.\one__30_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:655$1259'.
No latch inferred for signal `\Sqrt_64b.\res__28' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:655$1259'.
No latch inferred for signal `\Sqrt_64b.\res__29' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:655$1259'.
No latch inferred for signal `\Sqrt_64b.\res__30_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:655$1259'.
No latch inferred for signal `\Sqrt_64b.\op__28' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:655$1259'.
No latch inferred for signal `\Sqrt_64b.\op__29' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:655$1259'.
No latch inferred for signal `\Sqrt_64b.\op__30_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:655$1259'.
No latch inferred for signal `\Sqrt_64b.\one__25' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:617$1233'.
No latch inferred for signal `\Sqrt_64b.\one__26' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:617$1233'.
No latch inferred for signal `\Sqrt_64b.\one__27_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:617$1233'.
No latch inferred for signal `\Sqrt_64b.\res__25' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:617$1233'.
No latch inferred for signal `\Sqrt_64b.\res__26' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:617$1233'.
No latch inferred for signal `\Sqrt_64b.\res__27_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:617$1233'.
No latch inferred for signal `\Sqrt_64b.\op__25' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:617$1233'.
No latch inferred for signal `\Sqrt_64b.\op__26' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:617$1233'.
No latch inferred for signal `\Sqrt_64b.\op__27_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:617$1233'.
No latch inferred for signal `\Sqrt_64b.\one__22' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:579$1207'.
No latch inferred for signal `\Sqrt_64b.\one__23' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:579$1207'.
No latch inferred for signal `\Sqrt_64b.\one__24_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:579$1207'.
No latch inferred for signal `\Sqrt_64b.\res__22' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:579$1207'.
No latch inferred for signal `\Sqrt_64b.\res__23' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:579$1207'.
No latch inferred for signal `\Sqrt_64b.\res__24_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:579$1207'.
No latch inferred for signal `\Sqrt_64b.\op__22' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:579$1207'.
No latch inferred for signal `\Sqrt_64b.\op__23' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:579$1207'.
No latch inferred for signal `\Sqrt_64b.\op__24_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:579$1207'.
No latch inferred for signal `\Sqrt_64b.\one__19' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:541$1181'.
No latch inferred for signal `\Sqrt_64b.\one__20' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:541$1181'.
No latch inferred for signal `\Sqrt_64b.\one__21_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:541$1181'.
No latch inferred for signal `\Sqrt_64b.\res__19' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:541$1181'.
No latch inferred for signal `\Sqrt_64b.\res__20' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:541$1181'.
No latch inferred for signal `\Sqrt_64b.\res__21_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:541$1181'.
No latch inferred for signal `\Sqrt_64b.\op__19' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:541$1181'.
No latch inferred for signal `\Sqrt_64b.\op__20' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:541$1181'.
No latch inferred for signal `\Sqrt_64b.\op__21_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:541$1181'.
No latch inferred for signal `\Sqrt_64b.\one__16' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:503$1155'.
No latch inferred for signal `\Sqrt_64b.\one__17' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:503$1155'.
No latch inferred for signal `\Sqrt_64b.\one__18_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:503$1155'.
No latch inferred for signal `\Sqrt_64b.\res__16' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:503$1155'.
No latch inferred for signal `\Sqrt_64b.\res__17' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:503$1155'.
No latch inferred for signal `\Sqrt_64b.\res__18_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:503$1155'.
No latch inferred for signal `\Sqrt_64b.\op__16' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:503$1155'.
No latch inferred for signal `\Sqrt_64b.\op__17' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:503$1155'.
No latch inferred for signal `\Sqrt_64b.\op__18_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:503$1155'.
No latch inferred for signal `\Sqrt_64b.\one__12' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:455$1121'.
No latch inferred for signal `\Sqrt_64b.\one__13' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:455$1121'.
No latch inferred for signal `\Sqrt_64b.\one__14' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:455$1121'.
No latch inferred for signal `\Sqrt_64b.\one__15_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:455$1121'.
No latch inferred for signal `\Sqrt_64b.\res__12' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:455$1121'.
No latch inferred for signal `\Sqrt_64b.\res__13' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:455$1121'.
No latch inferred for signal `\Sqrt_64b.\res__14' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:455$1121'.
No latch inferred for signal `\Sqrt_64b.\res__15_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:455$1121'.
No latch inferred for signal `\Sqrt_64b.\op__12' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:455$1121'.
No latch inferred for signal `\Sqrt_64b.\op__13' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:455$1121'.
No latch inferred for signal `\Sqrt_64b.\op__14' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:455$1121'.
No latch inferred for signal `\Sqrt_64b.\op__15_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:455$1121'.
No latch inferred for signal `\Sqrt_64b.\one__8' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:407$1087'.
No latch inferred for signal `\Sqrt_64b.\one__9' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:407$1087'.
No latch inferred for signal `\Sqrt_64b.\one__10' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:407$1087'.
No latch inferred for signal `\Sqrt_64b.\one__11_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:407$1087'.
No latch inferred for signal `\Sqrt_64b.\res__8' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:407$1087'.
No latch inferred for signal `\Sqrt_64b.\res__9' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:407$1087'.
No latch inferred for signal `\Sqrt_64b.\res__10' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:407$1087'.
No latch inferred for signal `\Sqrt_64b.\res__11_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:407$1087'.
No latch inferred for signal `\Sqrt_64b.\op__8' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:407$1087'.
No latch inferred for signal `\Sqrt_64b.\op__9' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:407$1087'.
No latch inferred for signal `\Sqrt_64b.\op__10' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:407$1087'.
No latch inferred for signal `\Sqrt_64b.\op__11_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:407$1087'.
No latch inferred for signal `\Sqrt_64b.\one__4' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:359$1053'.
No latch inferred for signal `\Sqrt_64b.\one__5' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:359$1053'.
No latch inferred for signal `\Sqrt_64b.\one__6' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:359$1053'.
No latch inferred for signal `\Sqrt_64b.\one__7_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:359$1053'.
No latch inferred for signal `\Sqrt_64b.\res__4' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:359$1053'.
No latch inferred for signal `\Sqrt_64b.\res__5' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:359$1053'.
No latch inferred for signal `\Sqrt_64b.\res__6' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:359$1053'.
No latch inferred for signal `\Sqrt_64b.\res__7_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:359$1053'.
No latch inferred for signal `\Sqrt_64b.\op__4' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:359$1053'.
No latch inferred for signal `\Sqrt_64b.\op__5' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:359$1053'.
No latch inferred for signal `\Sqrt_64b.\op__6' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:359$1053'.
No latch inferred for signal `\Sqrt_64b.\op__7_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:359$1053'.
No latch inferred for signal `\Sqrt_64b.\one__1' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:320$1027'.
No latch inferred for signal `\Sqrt_64b.\one__2' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:320$1027'.
No latch inferred for signal `\Sqrt_64b.\one__3_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:320$1027'.
No latch inferred for signal `\Sqrt_64b.\res__1' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:320$1027'.
No latch inferred for signal `\Sqrt_64b.\res__2' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:320$1027'.
No latch inferred for signal `\Sqrt_64b.\res__3_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:320$1027'.
No latch inferred for signal `\Sqrt_64b.\op__1' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:320$1027'.
No latch inferred for signal `\Sqrt_64b.\op__2' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:320$1027'.
No latch inferred for signal `\Sqrt_64b.\op__3_d' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:320$1027'.
No latch inferred for signal `\Sqrt_64b.\one' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:179$2'.
No latch inferred for signal `\Sqrt_64b.\one_tmp' from process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:179$2'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\Sqrt_64b.\one__30_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:687$1284'.
  created $dff cell `$procdff$3111' with positive edge clock.
Creating register for signal `\Sqrt_64b.\res__30_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:687$1284'.
  created $dff cell `$procdff$3112' with positive edge clock.
Creating register for signal `\Sqrt_64b.\op__30_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:687$1284'.
  created $dff cell `$procdff$3113' with positive edge clock.
Creating register for signal `\Sqrt_64b.\one__27_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:649$1258'.
  created $dff cell `$procdff$3114' with positive edge clock.
Creating register for signal `\Sqrt_64b.\res__27_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:649$1258'.
  created $dff cell `$procdff$3115' with positive edge clock.
Creating register for signal `\Sqrt_64b.\op__27_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:649$1258'.
  created $dff cell `$procdff$3116' with positive edge clock.
Creating register for signal `\Sqrt_64b.\one__24_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:611$1232'.
  created $dff cell `$procdff$3117' with positive edge clock.
Creating register for signal `\Sqrt_64b.\res__24_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:611$1232'.
  created $dff cell `$procdff$3118' with positive edge clock.
Creating register for signal `\Sqrt_64b.\op__24_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:611$1232'.
  created $dff cell `$procdff$3119' with positive edge clock.
Creating register for signal `\Sqrt_64b.\one__21_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:573$1206'.
  created $dff cell `$procdff$3120' with positive edge clock.
Creating register for signal `\Sqrt_64b.\res__21_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:573$1206'.
  created $dff cell `$procdff$3121' with positive edge clock.
Creating register for signal `\Sqrt_64b.\op__21_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:573$1206'.
  created $dff cell `$procdff$3122' with positive edge clock.
Creating register for signal `\Sqrt_64b.\one__18_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:535$1180'.
  created $dff cell `$procdff$3123' with positive edge clock.
Creating register for signal `\Sqrt_64b.\res__18_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:535$1180'.
  created $dff cell `$procdff$3124' with positive edge clock.
Creating register for signal `\Sqrt_64b.\op__18_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:535$1180'.
  created $dff cell `$procdff$3125' with positive edge clock.
Creating register for signal `\Sqrt_64b.\one__15_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:497$1154'.
  created $dff cell `$procdff$3126' with positive edge clock.
Creating register for signal `\Sqrt_64b.\res__15_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:497$1154'.
  created $dff cell `$procdff$3127' with positive edge clock.
Creating register for signal `\Sqrt_64b.\op__15_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:497$1154'.
  created $dff cell `$procdff$3128' with positive edge clock.
Creating register for signal `\Sqrt_64b.\one__11_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:449$1120'.
  created $dff cell `$procdff$3129' with positive edge clock.
Creating register for signal `\Sqrt_64b.\res__11_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:449$1120'.
  created $dff cell `$procdff$3130' with positive edge clock.
Creating register for signal `\Sqrt_64b.\op__11_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:449$1120'.
  created $dff cell `$procdff$3131' with positive edge clock.
Creating register for signal `\Sqrt_64b.\one__7_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:401$1086'.
  created $dff cell `$procdff$3132' with positive edge clock.
Creating register for signal `\Sqrt_64b.\res__7_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:401$1086'.
  created $dff cell `$procdff$3133' with positive edge clock.
Creating register for signal `\Sqrt_64b.\op__7_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:401$1086'.
  created $dff cell `$procdff$3134' with positive edge clock.
Creating register for signal `\Sqrt_64b.\one__3_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:353$1052'.
  created $dff cell `$procdff$3135' with positive edge clock.
Creating register for signal `\Sqrt_64b.\res__3_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:353$1052'.
  created $dff cell `$procdff$3136' with positive edge clock.
Creating register for signal `\Sqrt_64b.\op__3_q' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:353$1052'.
  created $dff cell `$procdff$3137' with positive edge clock.
Creating register for signal `\Sqrt_64b.\num' using process `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:62$1'.
  created $dff cell `$procdff$3138' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 32 empty switches in `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:717$1302'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:717$1302'.
Found and cleaned up 2 empty switches in `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:693$1285'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:693$1285'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:687$1284'.
Found and cleaned up 3 empty switches in `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:655$1259'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:655$1259'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:649$1258'.
Found and cleaned up 3 empty switches in `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:617$1233'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:617$1233'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:611$1232'.
Found and cleaned up 3 empty switches in `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:579$1207'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:579$1207'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:573$1206'.
Found and cleaned up 3 empty switches in `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:541$1181'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:541$1181'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:535$1180'.
Found and cleaned up 3 empty switches in `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:503$1155'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:503$1155'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:497$1154'.
Found and cleaned up 4 empty switches in `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:455$1121'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:455$1121'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:449$1120'.
Found and cleaned up 4 empty switches in `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:407$1087'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:407$1087'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:401$1086'.
Found and cleaned up 4 empty switches in `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:359$1053'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:359$1053'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:353$1052'.
Found and cleaned up 3 empty switches in `\Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:320$1027'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:320$1027'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:179$2'.
Removing empty process `Sqrt_64b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:62$1'.
Cleaned up 64 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module Sqrt_64b.
<suppressed ~128 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Sqrt_64b.
<suppressed ~3 debug messages>

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Sqrt_64b'.
<suppressed ~2703 debug messages>
Removed a total of 901 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Sqrt_64b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$2797.
    dead port 1/2 on $mux $procmux$2794.
    dead port 1/2 on $mux $procmux$2791.
    dead port 1/2 on $mux $procmux$2788.
    dead port 1/2 on $mux $procmux$2782.
    dead port 1/2 on $mux $procmux$2779.
    dead port 1/2 on $mux $procmux$1402.
    dead port 1/2 on $mux $procmux$2776.
    dead port 1/2 on $mux $procmux$1486.
    dead port 1/2 on $mux $procmux$2773.
    dead port 1/2 on $mux $procmux$2770.
    dead port 1/2 on $mux $procmux$2767.
    dead port 1/2 on $mux $procmux$2764.
    dead port 1/2 on $mux $procmux$2761.
    dead port 1/2 on $mux $procmux$2758.
    dead port 1/2 on $mux $procmux$2752.
    dead port 1/2 on $mux $procmux$2749.
    dead port 1/2 on $mux $procmux$1399.
    dead port 1/2 on $mux $procmux$2746.
    dead port 1/2 on $mux $procmux$1483.
    dead port 1/2 on $mux $procmux$2743.
    dead port 1/2 on $mux $procmux$2740.
    dead port 1/2 on $mux $procmux$2737.
    dead port 1/2 on $mux $procmux$2734.
    dead port 1/2 on $mux $procmux$2731.
    dead port 1/2 on $mux $procmux$2728.
    dead port 1/2 on $mux $procmux$2725.
    dead port 1/2 on $mux $procmux$2908.
    dead port 1/2 on $mux $procmux$2719.
    dead port 1/2 on $mux $procmux$2716.
    dead port 1/2 on $mux $procmux$1396.
    dead port 1/2 on $mux $procmux$2713.
    dead port 1/2 on $mux $procmux$1480.
    dead port 1/2 on $mux $procmux$2710.
    dead port 1/2 on $mux $procmux$2707.
    dead port 1/2 on $mux $procmux$2704.
    dead port 1/2 on $mux $procmux$2701.
    dead port 1/2 on $mux $procmux$2698.
    dead port 1/2 on $mux $procmux$2695.
    dead port 1/2 on $mux $procmux$2692.
    dead port 1/2 on $mux $procmux$2689.
    dead port 1/2 on $mux $procmux$2683.
    dead port 1/2 on $mux $procmux$2680.
    dead port 1/2 on $mux $procmux$1393.
    dead port 1/2 on $mux $procmux$2677.
    dead port 1/2 on $mux $procmux$1477.
    dead port 1/2 on $mux $procmux$2674.
    dead port 1/2 on $mux $procmux$2671.
    dead port 1/2 on $mux $procmux$2668.
    dead port 1/2 on $mux $procmux$2665.
    dead port 1/2 on $mux $procmux$2662.
    dead port 1/2 on $mux $procmux$2659.
    dead port 1/2 on $mux $procmux$2656.
    dead port 1/2 on $mux $procmux$2653.
    dead port 1/2 on $mux $procmux$2650.
    dead port 1/2 on $mux $procmux$2644.
    dead port 1/2 on $mux $procmux$2641.
    dead port 1/2 on $mux $procmux$1390.
    dead port 1/2 on $mux $procmux$2638.
    dead port 1/2 on $mux $procmux$1474.
    dead port 1/2 on $mux $procmux$2635.
    dead port 1/2 on $mux $procmux$2632.
    dead port 1/2 on $mux $procmux$2629.
    dead port 1/2 on $mux $procmux$2626.
    dead port 1/2 on $mux $procmux$2623.
    dead port 1/2 on $mux $procmux$2620.
    dead port 1/2 on $mux $procmux$2617.
    dead port 1/2 on $mux $procmux$2614.
    dead port 1/2 on $mux $procmux$2611.
    dead port 1/2 on $mux $procmux$2608.
    dead port 1/2 on $mux $procmux$2914.
    dead port 1/2 on $mux $procmux$2602.
    dead port 1/2 on $mux $procmux$2599.
    dead port 1/2 on $mux $procmux$1387.
    dead port 1/2 on $mux $procmux$2596.
    dead port 1/2 on $mux $procmux$1471.
    dead port 1/2 on $mux $procmux$2593.
    dead port 1/2 on $mux $procmux$2590.
    dead port 1/2 on $mux $procmux$2587.
    dead port 1/2 on $mux $procmux$2584.
    dead port 1/2 on $mux $procmux$2581.
    dead port 1/2 on $mux $procmux$2578.
    dead port 1/2 on $mux $procmux$2575.
    dead port 1/2 on $mux $procmux$2572.
    dead port 1/2 on $mux $procmux$2569.
    dead port 1/2 on $mux $procmux$2566.
    dead port 1/2 on $mux $procmux$2563.
    dead port 1/2 on $mux $procmux$2557.
    dead port 1/2 on $mux $procmux$2554.
    dead port 1/2 on $mux $procmux$1384.
    dead port 1/2 on $mux $procmux$2551.
    dead port 1/2 on $mux $procmux$1468.
    dead port 1/2 on $mux $procmux$2548.
    dead port 1/2 on $mux $procmux$2545.
    dead port 1/2 on $mux $procmux$2542.
    dead port 1/2 on $mux $procmux$2539.
    dead port 1/2 on $mux $procmux$2536.
    dead port 1/2 on $mux $procmux$2533.
    dead port 1/2 on $mux $procmux$2530.
    dead port 1/2 on $mux $procmux$2527.
    dead port 1/2 on $mux $procmux$2524.
    dead port 1/2 on $mux $procmux$2521.
    dead port 1/2 on $mux $procmux$2518.
    dead port 1/2 on $mux $procmux$2515.
    dead port 1/2 on $mux $procmux$2509.
    dead port 1/2 on $mux $procmux$2506.
    dead port 1/2 on $mux $procmux$1381.
    dead port 1/2 on $mux $procmux$2503.
    dead port 1/2 on $mux $procmux$1465.
    dead port 1/2 on $mux $procmux$2500.
    dead port 1/2 on $mux $procmux$2497.
    dead port 1/2 on $mux $procmux$2494.
    dead port 1/2 on $mux $procmux$2491.
    dead port 1/2 on $mux $procmux$2488.
    dead port 1/2 on $mux $procmux$2485.
    dead port 1/2 on $mux $procmux$2482.
    dead port 1/2 on $mux $procmux$2479.
    dead port 1/2 on $mux $procmux$2476.
    dead port 1/2 on $mux $procmux$2473.
    dead port 1/2 on $mux $procmux$2470.
    dead port 1/2 on $mux $procmux$2467.
    dead port 1/2 on $mux $procmux$2464.
    dead port 1/2 on $mux $procmux$2458.
    dead port 1/2 on $mux $procmux$2455.
    dead port 1/2 on $mux $procmux$1378.
    dead port 1/2 on $mux $procmux$2452.
    dead port 1/2 on $mux $procmux$1462.
    dead port 1/2 on $mux $procmux$2449.
    dead port 1/2 on $mux $procmux$2446.
    dead port 1/2 on $mux $procmux$2443.
    dead port 1/2 on $mux $procmux$2440.
    dead port 1/2 on $mux $procmux$2437.
    dead port 1/2 on $mux $procmux$2434.
    dead port 1/2 on $mux $procmux$2431.
    dead port 1/2 on $mux $procmux$2428.
    dead port 1/2 on $mux $procmux$2425.
    dead port 1/2 on $mux $procmux$2422.
    dead port 1/2 on $mux $procmux$2419.
    dead port 1/2 on $mux $procmux$2416.
    dead port 1/2 on $mux $procmux$2413.
    dead port 1/2 on $mux $procmux$2410.
    dead port 1/2 on $mux $procmux$2404.
    dead port 1/2 on $mux $procmux$2401.
    dead port 1/2 on $mux $procmux$1375.
    dead port 1/2 on $mux $procmux$2398.
    dead port 1/2 on $mux $procmux$1459.
    dead port 1/2 on $mux $procmux$2395.
    dead port 1/2 on $mux $procmux$2392.
    dead port 1/2 on $mux $procmux$2896.
    dead port 1/2 on $mux $procmux$2389.
    dead port 1/2 on $mux $procmux$2905.
    dead port 1/2 on $mux $procmux$2386.
    dead port 1/2 on $mux $procmux$2383.
    dead port 1/2 on $mux $procmux$2380.
    dead port 1/2 on $mux $procmux$2377.
    dead port 1/2 on $mux $procmux$2374.
    dead port 1/2 on $mux $procmux$2371.
    dead port 1/2 on $mux $procmux$2368.
    dead port 1/2 on $mux $procmux$2365.
    dead port 1/2 on $mux $procmux$2362.
    dead port 1/2 on $mux $procmux$2359.
    dead port 1/2 on $mux $procmux$2356.
    dead port 1/2 on $mux $procmux$2353.
    dead port 1/2 on $mux $procmux$2347.
    dead port 1/2 on $mux $procmux$2344.
    dead port 1/2 on $mux $procmux$1372.
    dead port 1/2 on $mux $procmux$2341.
    dead port 1/2 on $mux $procmux$1456.
    dead port 1/2 on $mux $procmux$2338.
    dead port 1/2 on $mux $procmux$2335.
    dead port 1/2 on $mux $procmux$2332.
    dead port 1/2 on $mux $procmux$2329.
    dead port 1/2 on $mux $procmux$2326.
    dead port 1/2 on $mux $procmux$2323.
    dead port 1/2 on $mux $procmux$2320.
    dead port 1/2 on $mux $procmux$2317.
    dead port 1/2 on $mux $procmux$2314.
    dead port 1/2 on $mux $procmux$2311.
    dead port 1/2 on $mux $procmux$2308.
    dead port 1/2 on $mux $procmux$2305.
    dead port 1/2 on $mux $procmux$2302.
    dead port 1/2 on $mux $procmux$2299.
    dead port 1/2 on $mux $procmux$2296.
    dead port 1/2 on $mux $procmux$2293.
    dead port 1/2 on $mux $procmux$2287.
    dead port 1/2 on $mux $procmux$2284.
    dead port 1/2 on $mux $procmux$1369.
    dead port 1/2 on $mux $procmux$2281.
    dead port 1/2 on $mux $procmux$1453.
    dead port 1/2 on $mux $procmux$2278.
    dead port 1/2 on $mux $procmux$2275.
    dead port 1/2 on $mux $procmux$2872.
    dead port 1/2 on $mux $procmux$2272.
    dead port 1/2 on $mux $procmux$2884.
    dead port 1/2 on $mux $procmux$2269.
    dead port 1/2 on $mux $procmux$2266.
    dead port 1/2 on $mux $procmux$2263.
    dead port 1/2 on $mux $procmux$2260.
    dead port 1/2 on $mux $procmux$2257.
    dead port 1/2 on $mux $procmux$2254.
    dead port 1/2 on $mux $procmux$2251.
    dead port 1/2 on $mux $procmux$2248.
    dead port 1/2 on $mux $procmux$2245.
    dead port 1/2 on $mux $procmux$2242.
    dead port 1/2 on $mux $procmux$2239.
    dead port 1/2 on $mux $procmux$2236.
    dead port 1/2 on $mux $procmux$2233.
    dead port 1/2 on $mux $procmux$2230.
    dead port 1/2 on $mux $procmux$2224.
    dead port 1/2 on $mux $procmux$2221.
    dead port 1/2 on $mux $procmux$1366.
    dead port 1/2 on $mux $procmux$2218.
    dead port 1/2 on $mux $procmux$1450.
    dead port 1/2 on $mux $procmux$2215.
    dead port 1/2 on $mux $procmux$2212.
    dead port 1/2 on $mux $procmux$2209.
    dead port 1/2 on $mux $procmux$2206.
    dead port 1/2 on $mux $procmux$1417.
    dead port 1/2 on $mux $procmux$2203.
    dead port 1/2 on $mux $procmux$2200.
    dead port 1/2 on $mux $procmux$2197.
    dead port 1/2 on $mux $procmux$2194.
    dead port 1/2 on $mux $procmux$2191.
    dead port 1/2 on $mux $procmux$2188.
    dead port 1/2 on $mux $procmux$2185.
    dead port 1/2 on $mux $procmux$2182.
    dead port 1/2 on $mux $procmux$2179.
    dead port 1/2 on $mux $procmux$2176.
    dead port 1/2 on $mux $procmux$2173.
    dead port 1/2 on $mux $procmux$2170.
    dead port 1/2 on $mux $procmux$2167.
    dead port 1/2 on $mux $procmux$2164.
    dead port 1/2 on $mux $procmux$2923.
    dead port 2/2 on $mux $procmux$2923.
    dead port 1/2 on $mux $procmux$2158.
    dead port 1/2 on $mux $procmux$2155.
    dead port 1/2 on $mux $procmux$1363.
    dead port 1/2 on $mux $procmux$2152.
    dead port 1/2 on $mux $procmux$1447.
    dead port 1/2 on $mux $procmux$2149.
    dead port 1/2 on $mux $procmux$2146.
    dead port 1/2 on $mux $procmux$1495.
    dead port 1/2 on $mux $procmux$2143.
    dead port 1/2 on $mux $procmux$2140.
    dead port 1/2 on $mux $procmux$2869.
    dead port 1/2 on $mux $procmux$2137.
    dead port 1/2 on $mux $procmux$2881.
    dead port 1/2 on $mux $procmux$2134.
    dead port 1/2 on $mux $procmux$1420.
    dead port 1/2 on $mux $procmux$2131.
    dead port 1/2 on $mux $procmux$2128.
    dead port 1/2 on $mux $procmux$2125.
    dead port 1/2 on $mux $procmux$2122.
    dead port 1/2 on $mux $procmux$2119.
    dead port 1/2 on $mux $procmux$2116.
    dead port 1/2 on $mux $procmux$2113.
    dead port 1/2 on $mux $procmux$2110.
    dead port 1/2 on $mux $procmux$2107.
    dead port 1/2 on $mux $procmux$2104.
    dead port 1/2 on $mux $procmux$2101.
    dead port 1/2 on $mux $procmux$2098.
    dead port 1/2 on $mux $procmux$2095.
    dead port 1/2 on $mux $procmux$2089.
    dead port 1/2 on $mux $procmux$2086.
    dead port 1/2 on $mux $procmux$1360.
    dead port 1/2 on $mux $procmux$2083.
    dead port 1/2 on $mux $procmux$1444.
    dead port 1/2 on $mux $procmux$2080.
    dead port 1/2 on $mux $procmux$2077.
    dead port 1/2 on $mux $procmux$2074.
    dead port 1/2 on $mux $procmux$2845.
    dead port 1/2 on $mux $procmux$2071.
    dead port 1/2 on $mux $procmux$2068.
    dead port 1/2 on $mux $procmux$1414.
    dead port 1/2 on $mux $procmux$2065.
    dead port 1/2 on $mux $procmux$1501.
    dead port 1/2 on $mux $procmux$2062.
    dead port 1/2 on $mux $procmux$2893.
    dead port 1/2 on $mux $procmux$2059.
    dead port 1/2 on $mux $procmux$2056.
    dead port 1/2 on $mux $procmux$2053.
    dead port 1/2 on $mux $procmux$2050.
    dead port 1/2 on $mux $procmux$2047.
    dead port 1/2 on $mux $procmux$2044.
    dead port 1/2 on $mux $procmux$2041.
    dead port 1/2 on $mux $procmux$2038.
    dead port 1/2 on $mux $procmux$2035.
    dead port 1/2 on $mux $procmux$2032.
    dead port 1/2 on $mux $procmux$2029.
    dead port 1/2 on $mux $procmux$2026.
    dead port 1/2 on $mux $procmux$2023.
    dead port 1/2 on $mux $procmux$2017.
    dead port 1/2 on $mux $procmux$2014.
    dead port 1/2 on $mux $procmux$1357.
    dead port 1/2 on $mux $procmux$2011.
    dead port 1/2 on $mux $procmux$1441.
    dead port 1/2 on $mux $procmux$2008.
    dead port 1/2 on $mux $procmux$2005.
    dead port 1/2 on $mux $procmux$2827.
    dead port 1/2 on $mux $procmux$2002.
    dead port 1/2 on $mux $procmux$1999.
    dead port 1/2 on $mux $procmux$2842.
    dead port 1/2 on $mux $procmux$1996.
    dead port 1/2 on $mux $procmux$1993.
    dead port 1/2 on $mux $procmux$2866.
    dead port 1/2 on $mux $procmux$1990.
    dead port 1/2 on $mux $procmux$2878.
    dead port 1/2 on $mux $procmux$1987.
    dead port 1/2 on $mux $procmux$1504.
    dead port 1/2 on $mux $procmux$1984.
    dead port 1/2 on $mux $procmux$1981.
    dead port 1/2 on $mux $procmux$1978.
    dead port 1/2 on $mux $procmux$1975.
    dead port 1/2 on $mux $procmux$1972.
    dead port 1/2 on $mux $procmux$1969.
    dead port 1/2 on $mux $procmux$1966.
    dead port 1/2 on $mux $procmux$1963.
    dead port 1/2 on $mux $procmux$1960.
    dead port 1/2 on $mux $procmux$1957.
    dead port 1/2 on $mux $procmux$1954.
    dead port 1/2 on $mux $procmux$1951.
    dead port 1/2 on $mux $procmux$1948.
    dead port 1/2 on $mux $procmux$1942.
    dead port 1/2 on $mux $procmux$1939.
    dead port 1/2 on $mux $procmux$1354.
    dead port 1/2 on $mux $procmux$1936.
    dead port 1/2 on $mux $procmux$1438.
    dead port 1/2 on $mux $procmux$1933.
    dead port 1/2 on $mux $procmux$1930.
    dead port 1/2 on $mux $procmux$1927.
    dead port 1/2 on $mux $procmux$1492.
    dead port 1/2 on $mux $procmux$1924.
    dead port 1/2 on $mux $procmux$1921.
    dead port 1/2 on $mux $procmux$1918.
    dead port 1/2 on $mux $procmux$2854.
    dead port 1/2 on $mux $procmux$1915.
    dead port 1/2 on $mux $procmux$1498.
    dead port 1/2 on $mux $procmux$1912.
    dead port 1/2 on $mux $procmux$1909.
    dead port 1/2 on $mux $procmux$1906.
    dead port 1/2 on $mux $procmux$1903.
    dead port 1/2 on $mux $procmux$1900.
    dead port 1/2 on $mux $procmux$1897.
    dead port 1/2 on $mux $procmux$1894.
    dead port 1/2 on $mux $procmux$1891.
    dead port 1/2 on $mux $procmux$1888.
    dead port 1/2 on $mux $procmux$1885.
    dead port 1/2 on $mux $procmux$1882.
    dead port 1/2 on $mux $procmux$1879.
    dead port 1/2 on $mux $procmux$1876.
    dead port 1/2 on $mux $procmux$1873.
    dead port 1/2 on $mux $procmux$1870.
    dead port 1/2 on $mux $procmux$1864.
    dead port 1/2 on $mux $procmux$1861.
    dead port 1/2 on $mux $procmux$1351.
    dead port 1/2 on $mux $procmux$1858.
    dead port 1/2 on $mux $procmux$1435.
    dead port 1/2 on $mux $procmux$1855.
    dead port 1/2 on $mux $procmux$1852.
    dead port 1/2 on $mux $procmux$1849.
    dead port 1/2 on $mux $procmux$1846.
    dead port 1/2 on $mux $procmux$2824.
    dead port 1/2 on $mux $procmux$1843.
    dead port 1/2 on $mux $procmux$2833.
    dead port 1/2 on $mux $procmux$1840.
    dead port 1/2 on $mux $procmux$1837.
    dead port 1/2 on $mux $procmux$1834.
    dead port 1/2 on $mux $procmux$2863.
    dead port 1/2 on $mux $procmux$1831.
    dead port 1/2 on $mux $procmux$1828.
    dead port 1/2 on $mux $procmux$2887.
    dead port 1/2 on $mux $procmux$1825.
    dead port 1/2 on $mux $procmux$1822.
    dead port 1/2 on $mux $procmux$1819.
    dead port 1/2 on $mux $procmux$1816.
    dead port 1/2 on $mux $procmux$1813.
    dead port 1/2 on $mux $procmux$1810.
    dead port 1/2 on $mux $procmux$1807.
    dead port 1/2 on $mux $procmux$1804.
    dead port 1/2 on $mux $procmux$1801.
    dead port 1/2 on $mux $procmux$1798.
    dead port 1/2 on $mux $procmux$1795.
    dead port 1/2 on $mux $procmux$1792.
    dead port 1/2 on $mux $procmux$1789.
    dead port 1/2 on $mux $procmux$1783.
    dead port 1/2 on $mux $procmux$1780.
    dead port 1/2 on $mux $procmux$1348.
    dead port 1/2 on $mux $procmux$1777.
    dead port 1/2 on $mux $procmux$1774.
    dead port 1/2 on $mux $procmux$1771.
    dead port 1/2 on $mux $procmux$1768.
    dead port 1/2 on $mux $procmux$1765.
    dead port 1/2 on $mux $procmux$2818.
    dead port 1/2 on $mux $procmux$1762.
    dead port 1/2 on $mux $procmux$2821.
    dead port 1/2 on $mux $procmux$1759.
    dead port 1/2 on $mux $procmux$1756.
    dead port 1/2 on $mux $procmux$1753.
    dead port 1/2 on $mux $procmux$2851.
    dead port 1/2 on $mux $procmux$1750.
    dead port 1/2 on $mux $procmux$2860.
    dead port 1/2 on $mux $procmux$1747.
    dead port 1/2 on $mux $procmux$1744.
    dead port 1/2 on $mux $procmux$1741.
    dead port 1/2 on $mux $procmux$1738.
    dead port 1/2 on $mux $procmux$1735.
    dead port 1/2 on $mux $procmux$1732.
    dead port 1/2 on $mux $procmux$1729.
    dead port 1/2 on $mux $procmux$1726.
    dead port 1/2 on $mux $procmux$1723.
    dead port 1/2 on $mux $procmux$1720.
    dead port 1/2 on $mux $procmux$1717.
    dead port 1/2 on $mux $procmux$1714.
    dead port 1/2 on $mux $procmux$1711.
    dead port 1/2 on $mux $procmux$1708.
    dead port 1/2 on $mux $procmux$1705.
    dead port 1/2 on $mux $procmux$1699.
    dead port 1/2 on $mux $procmux$1696.
    dead port 1/2 on $mux $procmux$1345.
    dead port 1/2 on $mux $procmux$1693.
    dead port 1/2 on $mux $procmux$1429.
    dead port 1/2 on $mux $procmux$1690.
    dead port 1/2 on $mux $procmux$1687.
    dead port 1/2 on $mux $procmux$2803.
    dead port 1/2 on $mux $procmux$1684.
    dead port 1/2 on $mux $procmux$2806.
    dead port 1/2 on $mux $procmux$1681.
    dead port 1/2 on $mux $procmux$1678.
    dead port 1/2 on $mux $procmux$1675.
    dead port 1/2 on $mux $procmux$1672.
    dead port 1/2 on $mux $procmux$2830.
    dead port 1/2 on $mux $procmux$1669.
    dead port 1/2 on $mux $procmux$1666.
    dead port 1/2 on $mux $procmux$1411.
    dead port 1/2 on $mux $procmux$1663.
    dead port 1/2 on $mux $procmux$1660.
    dead port 1/2 on $mux $procmux$1657.
    dead port 1/2 on $mux $procmux$1654.
    dead port 1/2 on $mux $procmux$1507.
    dead port 1/2 on $mux $procmux$1651.
    dead port 1/2 on $mux $procmux$1648.
    dead port 1/2 on $mux $procmux$1645.
    dead port 1/2 on $mux $procmux$1642.
    dead port 1/2 on $mux $procmux$1639.
    dead port 1/2 on $mux $procmux$1636.
    dead port 1/2 on $mux $procmux$1633.
    dead port 1/2 on $mux $procmux$1630.
    dead port 1/2 on $mux $procmux$1627.
    dead port 1/2 on $mux $procmux$1624.
    dead port 1/2 on $mux $procmux$1621.
    dead port 1/2 on $mux $procmux$1618.
    dead port 1/2 on $mux $procmux$1612.
    dead port 1/2 on $mux $procmux$1609.
    dead port 1/2 on $mux $procmux$1342.
    dead port 1/2 on $mux $procmux$1606.
    dead port 1/2 on $mux $procmux$1426.
    dead port 1/2 on $mux $procmux$1603.
    dead port 1/2 on $mux $procmux$1600.
    dead port 1/2 on $mux $procmux$2800.
    dead port 1/2 on $mux $procmux$1597.
    dead port 1/2 on $mux $procmux$1489.
    dead port 1/2 on $mux $procmux$1594.
    dead port 1/2 on $mux $procmux$1405.
    dead port 1/2 on $mux $procmux$1591.
    dead port 1/2 on $mux $procmux$2809.
    dead port 1/2 on $mux $procmux$1588.
    dead port 1/2 on $mux $procmux$2815.
    dead port 1/2 on $mux $procmux$1585.
    dead port 1/2 on $mux $procmux$1582.
    dead port 1/2 on $mux $procmux$1408.
    dead port 1/2 on $mux $procmux$1579.
    dead port 1/2 on $mux $procmux$2839.
    dead port 1/2 on $mux $procmux$1576.
    dead port 1/2 on $mux $procmux$2848.
    dead port 1/2 on $mux $procmux$1573.
    dead port 1/2 on $mux $procmux$1570.
    dead port 1/2 on $mux $procmux$1567.
    dead port 1/2 on $mux $procmux$1564.
    dead port 1/2 on $mux $procmux$2899.
    dead port 1/2 on $mux $procmux$1561.
    dead port 1/2 on $mux $procmux$1558.
    dead port 1/2 on $mux $procmux$1555.
    dead port 1/2 on $mux $procmux$1552.
    dead port 1/2 on $mux $procmux$1549.
    dead port 1/2 on $mux $procmux$1546.
    dead port 1/2 on $mux $procmux$1543.
    dead port 1/2 on $mux $procmux$1540.
    dead port 1/2 on $mux $procmux$1537.
    dead port 1/2 on $mux $procmux$1534.
    dead port 1/2 on $mux $procmux$1531.
    dead port 1/2 on $mux $procmux$1528.
    dead port 1/2 on $mux $procmux$1522.
    dead port 1/2 on $mux $procmux$1519.
    dead port 1/2 on $mux $procmux$1339.
    dead port 1/2 on $mux $procmux$1516.
    dead port 1/2 on $mux $procmux$1423.
    dead port 1/2 on $mux $procmux$1513.
    dead port 1/2 on $mux $procmux$1510.
Removed 498 multiplexer ports.
<suppressed ~63 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Sqrt_64b.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Sqrt_64b'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Sqrt_64b..
Removed 2 unused cells and 2441 unused wires.
<suppressed ~6 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Sqrt_64b.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Sqrt_64b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Sqrt_64b.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Sqrt_64b'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$3136 ($dff) from module Sqrt_64b (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:345$1049_Y [63], Q = \res__3_q [63], rval = 1'0).
Setting constant 0-bit at position 1 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 3 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 5 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 7 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 9 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 11 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 13 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 15 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 17 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 19 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 21 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 23 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 25 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 27 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 29 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 31 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 33 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 35 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 37 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 39 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 41 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 43 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 45 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 47 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 49 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 51 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 53 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 55 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 57 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 58 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 59 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 60 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 61 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 62 on $procdff$3135 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 63 on $procdff$3135 ($dff) from module Sqrt_64b.
Adding SRST signal on $procdff$3133 ($dff) from module Sqrt_64b (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:393$1083_Y [63], Q = \res__7_q [63], rval = 1'0).
Setting constant 0-bit at position 56 on $procdff$3132 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 57 on $procdff$3132 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 58 on $procdff$3132 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 59 on $procdff$3132 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 60 on $procdff$3132 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 61 on $procdff$3132 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 62 on $procdff$3132 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 63 on $procdff$3132 ($dff) from module Sqrt_64b.
Adding SRST signal on $procdff$3130 ($dff) from module Sqrt_64b (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:441$1117_Y [63], Q = \res__11_q [63], rval = 1'0).
Setting constant 0-bit at position 56 on $procdff$3129 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 57 on $procdff$3129 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 58 on $procdff$3129 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 59 on $procdff$3129 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 60 on $procdff$3129 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 61 on $procdff$3129 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 62 on $procdff$3129 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 63 on $procdff$3129 ($dff) from module Sqrt_64b.
Adding SRST signal on $procdff$3127 ($dff) from module Sqrt_64b (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:489$1151_Y [63], Q = \res__15_q [63], rval = 1'0).
Setting constant 0-bit at position 56 on $procdff$3126 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 57 on $procdff$3126 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 58 on $procdff$3126 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 59 on $procdff$3126 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 60 on $procdff$3126 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 61 on $procdff$3126 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 62 on $procdff$3126 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 63 on $procdff$3126 ($dff) from module Sqrt_64b.
Adding SRST signal on $procdff$3124 ($dff) from module Sqrt_64b (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:527$1177_Y [63], Q = \res__18_q [63], rval = 1'0).
Setting constant 0-bit at position 58 on $procdff$3123 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 59 on $procdff$3123 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 60 on $procdff$3123 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 61 on $procdff$3123 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 62 on $procdff$3123 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 63 on $procdff$3123 ($dff) from module Sqrt_64b.
Adding SRST signal on $procdff$3121 ($dff) from module Sqrt_64b (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:565$1203_Y [63], Q = \res__21_q [63], rval = 1'0).
Setting constant 0-bit at position 58 on $procdff$3120 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 59 on $procdff$3120 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 60 on $procdff$3120 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 61 on $procdff$3120 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 62 on $procdff$3120 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 63 on $procdff$3120 ($dff) from module Sqrt_64b.
Adding SRST signal on $procdff$3118 ($dff) from module Sqrt_64b (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:603$1229_Y [63], Q = \res__24_q [63], rval = 1'0).
Setting constant 0-bit at position 58 on $procdff$3117 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 59 on $procdff$3117 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 60 on $procdff$3117 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 61 on $procdff$3117 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 62 on $procdff$3117 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 63 on $procdff$3117 ($dff) from module Sqrt_64b.
Adding SRST signal on $procdff$3115 ($dff) from module Sqrt_64b (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:641$1255_Y [63], Q = \res__27_q [63], rval = 1'0).
Setting constant 0-bit at position 58 on $procdff$3114 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 59 on $procdff$3114 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 60 on $procdff$3114 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 61 on $procdff$3114 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 62 on $procdff$3114 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 63 on $procdff$3114 ($dff) from module Sqrt_64b.
Adding SRST signal on $procdff$3112 ($dff) from module Sqrt_64b (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mcml_submodules/Sqrt_64b.v:679$1281_Y [63], Q = \res__30_q [63], rval = 1'0).
Setting constant 0-bit at position 58 on $procdff$3111 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 59 on $procdff$3111 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 60 on $procdff$3111 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 61 on $procdff$3111 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 62 on $procdff$3111 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 63 on $procdff$3111 ($dff) from module Sqrt_64b.

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Sqrt_64b..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Sqrt_64b.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Sqrt_64b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Sqrt_64b.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Sqrt_64b'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 52 on $auto$ff.cc:262:slice$3165 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 53 on $auto$ff.cc:262:slice$3165 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 54 on $auto$ff.cc:262:slice$3165 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 55 on $auto$ff.cc:262:slice$3165 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 56 on $auto$ff.cc:262:slice$3165 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 57 on $auto$ff.cc:262:slice$3165 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 52 on $auto$ff.cc:262:slice$3162 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 53 on $auto$ff.cc:262:slice$3162 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 54 on $auto$ff.cc:262:slice$3162 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 55 on $auto$ff.cc:262:slice$3162 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 56 on $auto$ff.cc:262:slice$3162 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 57 on $auto$ff.cc:262:slice$3162 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 52 on $auto$ff.cc:262:slice$3159 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 53 on $auto$ff.cc:262:slice$3159 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 54 on $auto$ff.cc:262:slice$3159 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 55 on $auto$ff.cc:262:slice$3159 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 56 on $auto$ff.cc:262:slice$3159 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 57 on $auto$ff.cc:262:slice$3159 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 52 on $auto$ff.cc:262:slice$3156 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 53 on $auto$ff.cc:262:slice$3156 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 54 on $auto$ff.cc:262:slice$3156 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 55 on $auto$ff.cc:262:slice$3156 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 56 on $auto$ff.cc:262:slice$3156 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 57 on $auto$ff.cc:262:slice$3156 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 50 on $auto$ff.cc:262:slice$3153 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 51 on $auto$ff.cc:262:slice$3153 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 52 on $auto$ff.cc:262:slice$3153 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 53 on $auto$ff.cc:262:slice$3153 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 54 on $auto$ff.cc:262:slice$3153 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 55 on $auto$ff.cc:262:slice$3153 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 56 on $auto$ff.cc:262:slice$3153 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 57 on $auto$ff.cc:262:slice$3153 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 48 on $auto$ff.cc:262:slice$3150 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 49 on $auto$ff.cc:262:slice$3150 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 50 on $auto$ff.cc:262:slice$3150 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 51 on $auto$ff.cc:262:slice$3150 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 52 on $auto$ff.cc:262:slice$3150 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 53 on $auto$ff.cc:262:slice$3150 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 54 on $auto$ff.cc:262:slice$3150 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 55 on $auto$ff.cc:262:slice$3150 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 48 on $auto$ff.cc:262:slice$3147 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 49 on $auto$ff.cc:262:slice$3147 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 50 on $auto$ff.cc:262:slice$3147 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 51 on $auto$ff.cc:262:slice$3147 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 52 on $auto$ff.cc:262:slice$3147 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 53 on $auto$ff.cc:262:slice$3147 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 54 on $auto$ff.cc:262:slice$3147 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 55 on $auto$ff.cc:262:slice$3147 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 33 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 35 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 37 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 39 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 41 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 43 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 45 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 47 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 49 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 50 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 51 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 52 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 53 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 54 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 55 on $auto$ff.cc:262:slice$3144 ($dff) from module Sqrt_64b.

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Sqrt_64b..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module Sqrt_64b.

4.23. Rerunning OPT passes. (Maybe there is more to do..)

4.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Sqrt_64b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

4.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Sqrt_64b.
Performed a total of 0 changes.

4.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Sqrt_64b'.
Removed a total of 0 cells.

4.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 33 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 35 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 37 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 39 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 41 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 42 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 43 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 44 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 45 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 46 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 47 on $auto$ff.cc:262:slice$3172 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 40 on $auto$ff.cc:262:slice$3171 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 41 on $auto$ff.cc:262:slice$3171 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 42 on $auto$ff.cc:262:slice$3171 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 43 on $auto$ff.cc:262:slice$3171 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 44 on $auto$ff.cc:262:slice$3171 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 45 on $auto$ff.cc:262:slice$3171 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 46 on $auto$ff.cc:262:slice$3171 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 47 on $auto$ff.cc:262:slice$3171 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 42 on $auto$ff.cc:262:slice$3170 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 43 on $auto$ff.cc:262:slice$3170 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 44 on $auto$ff.cc:262:slice$3170 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 45 on $auto$ff.cc:262:slice$3170 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 46 on $auto$ff.cc:262:slice$3170 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 47 on $auto$ff.cc:262:slice$3170 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 48 on $auto$ff.cc:262:slice$3170 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 49 on $auto$ff.cc:262:slice$3170 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 44 on $auto$ff.cc:262:slice$3169 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 45 on $auto$ff.cc:262:slice$3169 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 46 on $auto$ff.cc:262:slice$3169 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 47 on $auto$ff.cc:262:slice$3169 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 48 on $auto$ff.cc:262:slice$3169 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 49 on $auto$ff.cc:262:slice$3169 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 50 on $auto$ff.cc:262:slice$3169 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 51 on $auto$ff.cc:262:slice$3169 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 46 on $auto$ff.cc:262:slice$3168 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 47 on $auto$ff.cc:262:slice$3168 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 48 on $auto$ff.cc:262:slice$3168 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 49 on $auto$ff.cc:262:slice$3168 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 50 on $auto$ff.cc:262:slice$3168 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 51 on $auto$ff.cc:262:slice$3168 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 46 on $auto$ff.cc:262:slice$3167 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 47 on $auto$ff.cc:262:slice$3167 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 48 on $auto$ff.cc:262:slice$3167 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 49 on $auto$ff.cc:262:slice$3167 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 50 on $auto$ff.cc:262:slice$3167 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 51 on $auto$ff.cc:262:slice$3167 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 46 on $auto$ff.cc:262:slice$3166 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 47 on $auto$ff.cc:262:slice$3166 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 48 on $auto$ff.cc:262:slice$3166 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 49 on $auto$ff.cc:262:slice$3166 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 50 on $auto$ff.cc:262:slice$3166 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 51 on $auto$ff.cc:262:slice$3166 ($dff) from module Sqrt_64b.

4.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Sqrt_64b..

4.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module Sqrt_64b.

4.30. Rerunning OPT passes. (Maybe there is more to do..)

4.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Sqrt_64b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

4.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Sqrt_64b.
Performed a total of 0 changes.

4.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Sqrt_64b'.
Removed a total of 0 cells.

4.34. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 40 on $auto$ff.cc:262:slice$3180 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 41 on $auto$ff.cc:262:slice$3180 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 42 on $auto$ff.cc:262:slice$3180 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 43 on $auto$ff.cc:262:slice$3180 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 44 on $auto$ff.cc:262:slice$3180 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 45 on $auto$ff.cc:262:slice$3180 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 40 on $auto$ff.cc:262:slice$3179 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 41 on $auto$ff.cc:262:slice$3179 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 42 on $auto$ff.cc:262:slice$3179 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 43 on $auto$ff.cc:262:slice$3179 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 44 on $auto$ff.cc:262:slice$3179 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 45 on $auto$ff.cc:262:slice$3179 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 38 on $auto$ff.cc:262:slice$3178 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 39 on $auto$ff.cc:262:slice$3178 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 40 on $auto$ff.cc:262:slice$3178 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 41 on $auto$ff.cc:262:slice$3178 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 42 on $auto$ff.cc:262:slice$3178 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 43 on $auto$ff.cc:262:slice$3178 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 44 on $auto$ff.cc:262:slice$3178 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 45 on $auto$ff.cc:262:slice$3178 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 36 on $auto$ff.cc:262:slice$3177 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 37 on $auto$ff.cc:262:slice$3177 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 38 on $auto$ff.cc:262:slice$3177 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 39 on $auto$ff.cc:262:slice$3177 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 40 on $auto$ff.cc:262:slice$3177 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 41 on $auto$ff.cc:262:slice$3177 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 42 on $auto$ff.cc:262:slice$3177 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 43 on $auto$ff.cc:262:slice$3177 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 34 on $auto$ff.cc:262:slice$3176 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 35 on $auto$ff.cc:262:slice$3176 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 36 on $auto$ff.cc:262:slice$3176 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 37 on $auto$ff.cc:262:slice$3176 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 38 on $auto$ff.cc:262:slice$3176 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 39 on $auto$ff.cc:262:slice$3176 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 40 on $auto$ff.cc:262:slice$3176 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 41 on $auto$ff.cc:262:slice$3176 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 33 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 34 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 35 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 36 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 37 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 38 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 39 on $auto$ff.cc:262:slice$3175 ($dff) from module Sqrt_64b.

4.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Sqrt_64b..

4.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module Sqrt_64b.

4.37. Rerunning OPT passes. (Maybe there is more to do..)

4.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Sqrt_64b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

4.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Sqrt_64b.
Performed a total of 0 changes.

4.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Sqrt_64b'.
Removed a total of 0 cells.

4.41. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 32 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 33 on $auto$ff.cc:262:slice$3185 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$3184 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$3184 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$3184 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$3184 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 32 on $auto$ff.cc:262:slice$3184 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 33 on $auto$ff.cc:262:slice$3184 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 34 on $auto$ff.cc:262:slice$3184 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 35 on $auto$ff.cc:262:slice$3184 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$3183 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$3183 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 32 on $auto$ff.cc:262:slice$3183 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 33 on $auto$ff.cc:262:slice$3183 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 34 on $auto$ff.cc:262:slice$3183 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 35 on $auto$ff.cc:262:slice$3183 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 36 on $auto$ff.cc:262:slice$3183 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 37 on $auto$ff.cc:262:slice$3183 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 32 on $auto$ff.cc:262:slice$3182 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 33 on $auto$ff.cc:262:slice$3182 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 34 on $auto$ff.cc:262:slice$3182 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 35 on $auto$ff.cc:262:slice$3182 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 36 on $auto$ff.cc:262:slice$3182 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 37 on $auto$ff.cc:262:slice$3182 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 38 on $auto$ff.cc:262:slice$3182 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 39 on $auto$ff.cc:262:slice$3182 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 34 on $auto$ff.cc:262:slice$3181 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 35 on $auto$ff.cc:262:slice$3181 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 36 on $auto$ff.cc:262:slice$3181 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 37 on $auto$ff.cc:262:slice$3181 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 38 on $auto$ff.cc:262:slice$3181 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 39 on $auto$ff.cc:262:slice$3181 ($dff) from module Sqrt_64b.

4.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Sqrt_64b..

4.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module Sqrt_64b.

4.44. Rerunning OPT passes. (Maybe there is more to do..)

4.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Sqrt_64b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

4.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Sqrt_64b.
Performed a total of 0 changes.

4.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Sqrt_64b'.
Removed a total of 0 cells.

4.48. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$3191 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$3191 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$3191 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$3191 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$3191 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$3191 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 32 on $auto$ff.cc:262:slice$3191 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 33 on $auto$ff.cc:262:slice$3191 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$3190 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$3190 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$3190 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$3190 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$3190 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$3190 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$3190 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$3190 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$3189 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$3189 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$3189 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$3189 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$3189 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$3189 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$3189 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$3189 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3188 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$3188 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$3188 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$3188 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$3188 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$3188 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$3188 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$3188 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$3188 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$3188 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$3188 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$3188 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$3188 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$3188 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$3188 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$3188 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$3188 ($dff) from module Sqrt_64b.

4.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Sqrt_64b..

4.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module Sqrt_64b.

4.51. Rerunning OPT passes. (Maybe there is more to do..)

4.52. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Sqrt_64b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

4.53. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Sqrt_64b.
Performed a total of 0 changes.

4.54. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Sqrt_64b'.
Removed a total of 0 cells.

4.55. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3194 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$3194 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$3194 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$3194 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$3194 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$3194 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$3194 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$3194 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$3194 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$3194 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$3194 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$3194 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$3194 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$3194 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$3193 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$3193 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$3193 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$3193 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$3193 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$3193 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$3193 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$3193 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$3192 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$3192 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$3192 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$3192 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$3192 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$3192 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$3192 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$3192 ($dff) from module Sqrt_64b.

4.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Sqrt_64b..

4.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module Sqrt_64b.

4.58. Rerunning OPT passes. (Maybe there is more to do..)

4.59. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Sqrt_64b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

4.60. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Sqrt_64b.
Performed a total of 0 changes.

4.61. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Sqrt_64b'.
Removed a total of 0 cells.

4.62. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 10 on $auto$ff.cc:262:slice$3198 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$3198 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$3198 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$3198 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$3198 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$3198 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$3198 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$3198 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3197 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$3197 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$3197 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$3197 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$3197 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 10 on $auto$ff.cc:262:slice$3197 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$3197 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$3197 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$3197 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$3197 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$3197 ($dff) from module Sqrt_64b.

4.63. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Sqrt_64b..

4.64. Executing OPT_EXPR pass (perform const folding).
Optimizing module Sqrt_64b.

4.65. Rerunning OPT passes. (Maybe there is more to do..)

4.66. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Sqrt_64b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

4.67. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Sqrt_64b.
Performed a total of 0 changes.

4.68. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Sqrt_64b'.
Removed a total of 0 cells.

4.69. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3199 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$3199 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$3199 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$3199 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$3199 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$3199 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 8 on $auto$ff.cc:262:slice$3199 ($dff) from module Sqrt_64b.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$3199 ($dff) from module Sqrt_64b.

4.70. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Sqrt_64b..

4.71. Executing OPT_EXPR pass (perform const folding).
Optimizing module Sqrt_64b.

4.72. Rerunning OPT passes. (Maybe there is more to do..)

4.73. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Sqrt_64b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

4.74. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Sqrt_64b.
Performed a total of 0 changes.

4.75. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Sqrt_64b'.
Removed a total of 0 cells.

4.76. Executing OPT_DFF pass (perform DFF optimizations).

4.77. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Sqrt_64b..

4.78. Executing OPT_EXPR pass (perform const folding).
Optimizing module Sqrt_64b.

4.79. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== Sqrt_64b ===

   Number of wires:                410
   Number of wire bits:          17246
   Number of public wires:         131
   Number of public wire bits:    8257
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                443
     $add                         3968
     $and                           61
     $dff                         1339
     $ge                          2048
     $logic_not                   2048
     $mux                         5056
     $not                           31
     $or                            32
     $sdff                           9
     $sub                         3904

End of script. Logfile hash: 31a8c79c80, CPU: user 2.56s system 0.02s, MEM: 42.81 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 26% 13x opt_expr (0 sec), 26% 11x opt_clean (0 sec), ...
