
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v' to AST representation.
Generating RTLIL representation for module `\rfifo'.
Generating RTLIL representation for module `\dual_port_ram'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: dual_port_ram       
root of   1 design levels: rfifo               
Automatically selected rfifo as design top module.

2.2. Analyzing design hierarchy..
Top module:  \rfifo
Used module:     \dual_port_ram
Parameter \DATA_WIDTH = 8'01000000
Parameter \ADDR_WIDTH = 4

2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\dual_port_ram'.
Parameter \DATA_WIDTH = 8'01000000
Parameter \ADDR_WIDTH = 4
Generating RTLIL representation for module `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram'.

2.4. Analyzing design hierarchy..
Top module:  \rfifo
Used module:     $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram

2.5. Analyzing design hierarchy..
Top module:  \rfifo
Used module:     $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram
Removing unused module `\dual_port_ram'.
Removed 1 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:342$63 in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:333$55 in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:283$24 in module rfifo.
Marked 16 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:228$6 in module rfifo.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 6 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:342$63'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:344$54_EN[63:0]$69
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:344$54_DATA[63:0]$68
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:344$54_ADDR[3:0]$67
     4/4: $0\out2[63:0]
Creating decoders for process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:333$55'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:335$53_EN[63:0]$61
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:335$53_DATA[63:0]$60
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:335$53_ADDR[3:0]$59
     4/4: $0\out1[63:0]
Creating decoders for process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:283$24'.
     1/1: $0\status_cnt[4:0]
Creating decoders for process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:228$6'.
     1/17: $0\q[1023:0] [1023:960]
     2/17: $0\q[1023:0] [959:896]
     3/17: $0\q[1023:0] [895:832]
     4/17: $0\q[1023:0] [831:768]
     5/17: $0\q[1023:0] [767:704]
     6/17: $0\q[1023:0] [703:640]
     7/17: $0\q[1023:0] [639:576]
     8/17: $0\q[1023:0] [575:512]
     9/17: $0\q[1023:0] [511:448]
    10/17: $0\q[1023:0] [447:384]
    11/17: $0\q[1023:0] [383:320]
    12/17: $0\q[1023:0] [319:256]
    13/17: $0\q[1023:0] [255:192]
    14/17: $0\q[1023:0] [191:128]
    15/17: $0\q[1023:0] [127:64]
    16/17: $0\q[1023:0] [63:0]
    17/17: $0\counter[3:0]
Creating decoders for process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:221$4'.
     1/1: $0\rd_pointer[3:0]
Creating decoders for process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:214$2'.
     1/1: $0\wr_pointer[3:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.\out2' using process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:342$63'.
  created $dff cell `$procdff$514' with positive edge clock.
Creating register for signal `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:344$54_ADDR' using process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:342$63'.
  created $dff cell `$procdff$515' with positive edge clock.
Creating register for signal `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:344$54_DATA' using process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:342$63'.
  created $dff cell `$procdff$516' with positive edge clock.
Creating register for signal `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:344$54_EN' using process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:342$63'.
  created $dff cell `$procdff$517' with positive edge clock.
Creating register for signal `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.\out1' using process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:333$55'.
  created $dff cell `$procdff$518' with positive edge clock.
Creating register for signal `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:335$53_ADDR' using process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:333$55'.
  created $dff cell `$procdff$519' with positive edge clock.
Creating register for signal `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:335$53_DATA' using process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:333$55'.
  created $dff cell `$procdff$520' with positive edge clock.
Creating register for signal `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:335$53_EN' using process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:333$55'.
  created $dff cell `$procdff$521' with positive edge clock.
Creating register for signal `\rfifo.\status_cnt' using process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:283$24'.
  created $dff cell `$procdff$522' with positive edge clock.
Creating register for signal `\rfifo.\q' using process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:228$6'.
  created $dff cell `$procdff$523' with positive edge clock.
Creating register for signal `\rfifo.\counter' using process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:228$6'.
  created $dff cell `$procdff$524' with positive edge clock.
Creating register for signal `\rfifo.\rd_pointer' using process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:221$4'.
  created $dff cell `$procdff$525' with positive edge clock.
Creating register for signal `\rfifo.\wr_pointer' using process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:214$2'.
  created $dff cell `$procdff$526' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:342$63'.
Removing empty process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:342$63'.
Found and cleaned up 1 empty switch in `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:333$55'.
Removing empty process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:333$55'.
Found and cleaned up 2 empty switches in `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:283$24'.
Removing empty process `rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:283$24'.
Found and cleaned up 17 empty switches in `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:228$6'.
Removing empty process `rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:228$6'.
Found and cleaned up 1 empty switch in `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:221$4'.
Removing empty process `rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:221$4'.
Found and cleaned up 1 empty switch in `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:214$2'.
Removing empty process `rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:214$2'.
Cleaned up 23 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
Optimizing module rfifo.
<suppressed ~5 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
Optimizing module rfifo.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram'.
Finding identical cells in module `\rfifo'.
Removed a total of 0 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
    Consolidated identical input bits for $mux cell $procmux$84:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=64'1111111111111111111111111111111111111111111111111111111111111111, Y=$procmux$84_Y
      New ports: A=1'0, B=1'1, Y=$procmux$84_Y [0]
      New connections: $procmux$84_Y [63:1] = { $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] $procmux$84_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$72:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=64'1111111111111111111111111111111111111111111111111111111111111111, Y=$procmux$72_Y
      New ports: A=1'0, B=1'1, Y=$procmux$72_Y [0]
      New connections: $procmux$72_Y [63:1] = { $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] $procmux$72_Y [0] }
  Optimizing cells in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
  Optimizing cells in module \rfifo.
Performed a total of 2 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram'.
Finding identical cells in module `\rfifo'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$514 ($dff) from module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:347$70_DATA, Q = \out2).
Adding EN signal on $procdff$518 ($dff) from module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:338$62_DATA, Q = \out1).
Adding EN signal on $procdff$526 ($dff) from module rfifo (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:218$3_Y, Q = \wr_pointer).
Adding EN signal on $procdff$525 ($dff) from module rfifo (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:225$5_Y, Q = \rd_pointer).
Adding EN signal on $procdff$522 ($dff) from module rfifo (D = $procmux$98_Y, Q = \status_cnt).
Adding EN signal on $procdff$523 ($dff) from module rfifo (D = \data_ram, Q = \q [1023:960]).
Adding EN signal on $procdff$523 ($dff) from module rfifo (D = \data_ram, Q = \q [959:896]).
Adding EN signal on $procdff$523 ($dff) from module rfifo (D = \data_ram, Q = \q [895:832]).
Adding EN signal on $procdff$523 ($dff) from module rfifo (D = \data_ram, Q = \q [831:768]).
Adding EN signal on $procdff$523 ($dff) from module rfifo (D = \data_ram, Q = \q [767:704]).
Adding EN signal on $procdff$523 ($dff) from module rfifo (D = \data_ram, Q = \q [703:640]).
Adding EN signal on $procdff$523 ($dff) from module rfifo (D = \data_ram, Q = \q [639:576]).
Adding EN signal on $procdff$523 ($dff) from module rfifo (D = \data_ram, Q = \q [575:512]).
Adding EN signal on $procdff$523 ($dff) from module rfifo (D = \data_ram, Q = \q [511:448]).
Adding EN signal on $procdff$523 ($dff) from module rfifo (D = \data_ram, Q = \q [447:384]).
Adding EN signal on $procdff$523 ($dff) from module rfifo (D = \data_ram, Q = \q [383:320]).
Adding EN signal on $procdff$523 ($dff) from module rfifo (D = \data_ram, Q = \q [319:256]).
Adding EN signal on $procdff$523 ($dff) from module rfifo (D = \data_ram, Q = \q [255:192]).
Adding EN signal on $procdff$523 ($dff) from module rfifo (D = \data_ram, Q = \q [191:128]).
Adding EN signal on $procdff$523 ($dff) from module rfifo (D = \data_ram, Q = \q [127:64]).
Adding EN signal on $procdff$523 ($dff) from module rfifo (D = \data_ram, Q = \q [63:0]).
Adding SRST signal on $procdff$524 ($dff) from module rfifo (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/rfifo.v:233$7_Y, Q = \counter, rval = 4'0000).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram..
Finding unused cells or wires in module \rfifo..
Removed 147 unused cells and 318 unused wires.
<suppressed ~149 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
Optimizing module rfifo.
<suppressed ~1 debug messages>

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
  Optimizing cells in module \rfifo.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram'.
Finding identical cells in module `\rfifo'.
<suppressed ~315 debug messages>
Removed a total of 105 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram..
Finding unused cells or wires in module \rfifo..
Removed 0 unused cells and 105 unused wires.
<suppressed ~1 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
Optimizing module rfifo.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
  Optimizing cells in module \rfifo.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram'.
Finding identical cells in module `\rfifo'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram..
Finding unused cells or wires in module \rfifo..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
Optimizing module rfifo.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram ===

   Number of wires:                 17
   Number of wire bits:            659
   Number of public wires:           9
   Number of public wire bits:     267
   Number of memories:               1
   Number of memory bits:          256
   Number of processes:              0
   Number of cells:                 12
     $dffe                         128
     $mux                          138

=== rfifo ===

   Number of wires:                 73
   Number of wire bits:           1386
   Number of public wires:          13
   Number of public wire bits:    1301
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 82
     $add                           17
     $dffe                        1037
     $eq                            60
     $logic_and                      3
     $logic_not                     11
     $mux                           10
     $not                           15
     $reduce_and                   135
     $reduce_bool                    7
     $sdff                           4
     $sub                            5

=== design hierarchy ===

   rfifo                             1
     $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram      0

   Number of wires:                 73
   Number of wire bits:           1386
   Number of public wires:          13
   Number of public wire bits:    1301
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 82
     $add                           17
     $dffe                        1037
     $eq                            60
     $logic_and                      3
     $logic_not                     11
     $mux                           10
     $not                           15
     $reduce_and                   135
     $reduce_bool                    7
     $sdff                           4
     $sub                            5

End of script. Logfile hash: d4105266ea, CPU: user 0.20s system 0.01s, MEM: 21.11 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 22% 5x opt_expr (0 sec), 16% 3x opt_dff (0 sec), ...
