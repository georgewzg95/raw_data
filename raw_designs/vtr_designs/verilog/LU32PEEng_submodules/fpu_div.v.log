
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v' to AST representation.
Generating RTLIL representation for module `\fpu_div'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:219.2-225.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:232.2-234.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:237.2-335.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\div_24b'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379.2-571.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: div_24b             
root of   1 design levels: fpu_div             
Automatically selected fpu_div as design top module.

2.2. Analyzing design hierarchy..
Top module:  \fpu_div
Used module:     \div_24b

2.3. Analyzing design hierarchy..
Top module:  \fpu_div
Used module:     \div_24b
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 24 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34 in module div_24b.
Marked 23 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:237$10 in module fpu_div.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:219$2 in module fpu_div.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 56 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
     1/47: $24\res[0:0]
     2/47: $1\numer0[46:0]
     3/47: $23\res[1:1]
     4/47: $1\numer1[46:0]
     5/47: $22\res[2:2]
     6/47: $1\numer2[46:0]
     7/47: $21\res[3:3]
     8/47: $1\numer3[46:0]
     9/47: $20\res[4:4]
    10/47: $1\numer4[46:0]
    11/47: $19\res[5:5]
    12/47: $1\numer5[46:0]
    13/47: $18\res[6:6]
    14/47: $1\numer6[46:0]
    15/47: $17\res[7:7]
    16/47: $1\numer7[46:0]
    17/47: $16\res[8:8]
    18/47: $1\numer8[46:0]
    19/47: $15\res[9:9]
    20/47: $1\numer9[46:0]
    21/47: $14\res[10:10]
    22/47: $1\numer10[46:0]
    23/47: $13\res[11:11]
    24/47: $1\numer11[46:0]
    25/47: $12\res[12:12]
    26/47: $1\numer12[46:0]
    27/47: $11\res[13:13]
    28/47: $1\numer13[46:0]
    29/47: $10\res[14:14]
    30/47: $1\numer14[46:0]
    31/47: $9\res[15:15]
    32/47: $1\numer15[46:0]
    33/47: $8\res[16:16]
    34/47: $1\numer16[46:0]
    35/47: $7\res[17:17]
    36/47: $1\numer17[46:0]
    37/47: $6\res[18:18]
    38/47: $1\numer18[46:0]
    39/47: $5\res[19:19]
    40/47: $1\numer19[46:0]
    41/47: $4\res[20:20]
    42/47: $1\numer20[46:0]
    43/47: $3\res[21:21]
    44/47: $1\numer21[46:0]
    45/47: $2\res[22:22]
    46/47: $1\numer22[46:0]
    47/47: $1\res[23:23]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:237$10'.
     1/46: $23\div[30:0] [30:23]
     2/46: $23\div[30:0] [22:0]
     3/46: $22\div[30:0] [30:23]
     4/46: $22\div[30:0] [22:0]
     5/46: $21\div[30:0] [30:23]
     6/46: $21\div[30:0] [22:0]
     7/46: $20\div[30:0] [30:23]
     8/46: $20\div[30:0] [22:0]
     9/46: $19\div[30:0] [30:23]
    10/46: $19\div[30:0] [22:0]
    11/46: $18\div[30:0] [30:23]
    12/46: $18\div[30:0] [22:0]
    13/46: $17\div[30:0] [30:23]
    14/46: $17\div[30:0] [22:0]
    15/46: $16\div[30:0] [30:23]
    16/46: $16\div[30:0] [22:0]
    17/46: $15\div[30:0] [30:23]
    18/46: $15\div[30:0] [22:0]
    19/46: $14\div[30:0] [30:23]
    20/46: $14\div[30:0] [22:0]
    21/46: $13\div[30:0] [30:23]
    22/46: $13\div[30:0] [22:0]
    23/46: $12\div[30:0] [30:23]
    24/46: $12\div[30:0] [22:0]
    25/46: $11\div[30:0] [30:23]
    26/46: $11\div[30:0] [22:0]
    27/46: $10\div[30:0] [30:23]
    28/46: $10\div[30:0] [22:0]
    29/46: $9\div[30:0] [30:23]
    30/46: $9\div[30:0] [22:0]
    31/46: $8\div[30:0] [30:23]
    32/46: $8\div[30:0] [22:0]
    33/46: $7\div[30:0] [30:23]
    34/46: $7\div[30:0] [22:0]
    35/46: $6\div[30:0] [30:23]
    36/46: $6\div[30:0] [22:0]
    37/46: $5\div[30:0] [30:23]
    38/46: $5\div[30:0] [22:0]
    39/46: $4\div[30:0] [30:23]
    40/46: $4\div[30:0] [22:0]
    41/46: $3\div[30:0] [30:23]
    42/46: $3\div[30:0] [22:0]
    43/46: $2\div[30:0] [30:23]
    44/46: $2\div[30:0] [22:0]
    45/46: $1\div[30:0] [30:23]
    46/46: $1\div[30:0] [22:0]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:232$8'.
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:219$2'.
     1/1: $1\div_exp[7:0]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:209$1'.

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\div_24b.\res' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer22' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer21' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer20' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer19' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer18' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer17' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer16' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer15' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer14' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer13' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer12' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer11' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer10' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer9' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer8' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer7' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer6' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer5' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer4' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer3' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer2' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer1' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\div_24b.\numer0' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
No latch inferred for signal `\fpu_div.\div [30:0]' from process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:237$10'.
No latch inferred for signal `\fpu_div.\div [31]' from process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:232$8'.
No latch inferred for signal `\fpu_div.\div_exp' from process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:219$2'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\fpu_div.\n_exp' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:209$1'.
  created $dff cell `$procdff$1882' with positive edge clock.
Creating register for signal `\fpu_div.\d_exp' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:209$1'.
  created $dff cell `$procdff$1883' with positive edge clock.
Creating register for signal `\fpu_div.\n_man' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:209$1'.
  created $dff cell `$procdff$1884' with positive edge clock.
Creating register for signal `\fpu_div.\d_man' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:209$1'.
  created $dff cell `$procdff$1885' with positive edge clock.
Creating register for signal `\fpu_div.\n_sign' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:209$1'.
  created $dff cell `$procdff$1886' with positive edge clock.
Creating register for signal `\fpu_div.\d_sign' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:209$1'.
  created $dff cell `$procdff$1887' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 24 empty switches in `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
Removing empty process `div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:379$34'.
Found and cleaned up 23 empty switches in `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:237$10'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:237$10'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:232$8'.
Found and cleaned up 1 empty switch in `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:219$2'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:219$2'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU32PEEng_submodules/fpu_div.v:209$1'.
Cleaned up 48 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module div_24b.
Optimizing module fpu_div.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module div_24b.
Optimizing module fpu_div.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\div_24b'.
Finding identical cells in module `\fpu_div'.
Removed a total of 0 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \div_24b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$1871.
    dead port 1/2 on $mux $procmux$1865.
    dead port 1/2 on $mux $procmux$1859.
    dead port 1/2 on $mux $procmux$1856.
    dead port 1/2 on $mux $procmux$1850.
    dead port 1/2 on $mux $procmux$1847.
    dead port 1/2 on $mux $procmux$1841.
    dead port 1/2 on $mux $procmux$1838.
    dead port 1/2 on $mux $procmux$1835.
    dead port 1/2 on $mux $procmux$1829.
    dead port 1/2 on $mux $procmux$1826.
    dead port 1/2 on $mux $procmux$1823.
    dead port 1/2 on $mux $procmux$1817.
    dead port 1/2 on $mux $procmux$1814.
    dead port 1/2 on $mux $procmux$1811.
    dead port 1/2 on $mux $procmux$1808.
    dead port 1/2 on $mux $procmux$1802.
    dead port 1/2 on $mux $procmux$1799.
    dead port 1/2 on $mux $procmux$1796.
    dead port 1/2 on $mux $procmux$1793.
    dead port 1/2 on $mux $procmux$1787.
    dead port 1/2 on $mux $procmux$1784.
    dead port 1/2 on $mux $procmux$1781.
    dead port 1/2 on $mux $procmux$1778.
    dead port 1/2 on $mux $procmux$1775.
    dead port 1/2 on $mux $procmux$1769.
    dead port 1/2 on $mux $procmux$1766.
    dead port 1/2 on $mux $procmux$1763.
    dead port 1/2 on $mux $procmux$1760.
    dead port 1/2 on $mux $procmux$1757.
    dead port 1/2 on $mux $procmux$1751.
    dead port 1/2 on $mux $procmux$1748.
    dead port 1/2 on $mux $procmux$1745.
    dead port 1/2 on $mux $procmux$1742.
    dead port 1/2 on $mux $procmux$1739.
    dead port 1/2 on $mux $procmux$1736.
    dead port 1/2 on $mux $procmux$1730.
    dead port 1/2 on $mux $procmux$1727.
    dead port 1/2 on $mux $procmux$1724.
    dead port 1/2 on $mux $procmux$1721.
    dead port 1/2 on $mux $procmux$1718.
    dead port 1/2 on $mux $procmux$1715.
    dead port 1/2 on $mux $procmux$1709.
    dead port 1/2 on $mux $procmux$1706.
    dead port 1/2 on $mux $procmux$1703.
    dead port 1/2 on $mux $procmux$1700.
    dead port 1/2 on $mux $procmux$1697.
    dead port 1/2 on $mux $procmux$1694.
    dead port 1/2 on $mux $procmux$1691.
    dead port 1/2 on $mux $procmux$1685.
    dead port 1/2 on $mux $procmux$1682.
    dead port 1/2 on $mux $procmux$1679.
    dead port 1/2 on $mux $procmux$1676.
    dead port 1/2 on $mux $procmux$1673.
    dead port 1/2 on $mux $procmux$1670.
    dead port 1/2 on $mux $procmux$1667.
    dead port 1/2 on $mux $procmux$1661.
    dead port 1/2 on $mux $procmux$1658.
    dead port 1/2 on $mux $procmux$1655.
    dead port 1/2 on $mux $procmux$1652.
    dead port 1/2 on $mux $procmux$1649.
    dead port 1/2 on $mux $procmux$1646.
    dead port 1/2 on $mux $procmux$1643.
    dead port 1/2 on $mux $procmux$1640.
    dead port 1/2 on $mux $procmux$1634.
    dead port 1/2 on $mux $procmux$1631.
    dead port 1/2 on $mux $procmux$1628.
    dead port 1/2 on $mux $procmux$1625.
    dead port 1/2 on $mux $procmux$1622.
    dead port 1/2 on $mux $procmux$1619.
    dead port 1/2 on $mux $procmux$1616.
    dead port 1/2 on $mux $procmux$1613.
    dead port 1/2 on $mux $procmux$1607.
    dead port 1/2 on $mux $procmux$1604.
    dead port 1/2 on $mux $procmux$1601.
    dead port 1/2 on $mux $procmux$1598.
    dead port 1/2 on $mux $procmux$1595.
    dead port 1/2 on $mux $procmux$1592.
    dead port 1/2 on $mux $procmux$1589.
    dead port 1/2 on $mux $procmux$1586.
    dead port 1/2 on $mux $procmux$1583.
    dead port 1/2 on $mux $procmux$1577.
    dead port 1/2 on $mux $procmux$1574.
    dead port 1/2 on $mux $procmux$1571.
    dead port 1/2 on $mux $procmux$1568.
    dead port 1/2 on $mux $procmux$1565.
    dead port 1/2 on $mux $procmux$1562.
    dead port 1/2 on $mux $procmux$1559.
    dead port 1/2 on $mux $procmux$1556.
    dead port 1/2 on $mux $procmux$1553.
    dead port 1/2 on $mux $procmux$1547.
    dead port 1/2 on $mux $procmux$1544.
    dead port 1/2 on $mux $procmux$1541.
    dead port 1/2 on $mux $procmux$1538.
    dead port 1/2 on $mux $procmux$1535.
    dead port 1/2 on $mux $procmux$1532.
    dead port 1/2 on $mux $procmux$1529.
    dead port 1/2 on $mux $procmux$1526.
    dead port 1/2 on $mux $procmux$1523.
    dead port 1/2 on $mux $procmux$1520.
    dead port 1/2 on $mux $procmux$1514.
    dead port 1/2 on $mux $procmux$1511.
    dead port 1/2 on $mux $procmux$1508.
    dead port 1/2 on $mux $procmux$1505.
    dead port 1/2 on $mux $procmux$1502.
    dead port 1/2 on $mux $procmux$1499.
    dead port 1/2 on $mux $procmux$1496.
    dead port 1/2 on $mux $procmux$1493.
    dead port 1/2 on $mux $procmux$1490.
    dead port 1/2 on $mux $procmux$1487.
    dead port 1/2 on $mux $procmux$1481.
    dead port 1/2 on $mux $procmux$1478.
    dead port 1/2 on $mux $procmux$1475.
    dead port 1/2 on $mux $procmux$1472.
    dead port 1/2 on $mux $procmux$1469.
    dead port 1/2 on $mux $procmux$1466.
    dead port 1/2 on $mux $procmux$1463.
    dead port 1/2 on $mux $procmux$1460.
    dead port 1/2 on $mux $procmux$1457.
    dead port 1/2 on $mux $procmux$1454.
    dead port 1/2 on $mux $procmux$1451.
    dead port 1/2 on $mux $procmux$1445.
    dead port 1/2 on $mux $procmux$1442.
    dead port 1/2 on $mux $procmux$1439.
    dead port 1/2 on $mux $procmux$1436.
    dead port 1/2 on $mux $procmux$1433.
    dead port 1/2 on $mux $procmux$1430.
    dead port 1/2 on $mux $procmux$1427.
    dead port 1/2 on $mux $procmux$1424.
    dead port 1/2 on $mux $procmux$1421.
    dead port 1/2 on $mux $procmux$1418.
    dead port 1/2 on $mux $procmux$1415.
    dead port 1/2 on $mux $procmux$1409.
    dead port 1/2 on $mux $procmux$1406.
    dead port 1/2 on $mux $procmux$1403.
    dead port 1/2 on $mux $procmux$1400.
    dead port 1/2 on $mux $procmux$1397.
    dead port 1/2 on $mux $procmux$1394.
    dead port 1/2 on $mux $procmux$1391.
    dead port 1/2 on $mux $procmux$1388.
    dead port 1/2 on $mux $procmux$1385.
    dead port 1/2 on $mux $procmux$1382.
    dead port 1/2 on $mux $procmux$1379.
    dead port 1/2 on $mux $procmux$1376.
    dead port 1/2 on $mux $procmux$1370.
    dead port 1/2 on $mux $procmux$1367.
    dead port 1/2 on $mux $procmux$1364.
    dead port 1/2 on $mux $procmux$1361.
    dead port 1/2 on $mux $procmux$1358.
    dead port 1/2 on $mux $procmux$1355.
    dead port 1/2 on $mux $procmux$1352.
    dead port 1/2 on $mux $procmux$1349.
    dead port 1/2 on $mux $procmux$1346.
    dead port 1/2 on $mux $procmux$1343.
    dead port 1/2 on $mux $procmux$1340.
    dead port 1/2 on $mux $procmux$1337.
    dead port 1/2 on $mux $procmux$1331.
    dead port 1/2 on $mux $procmux$1328.
    dead port 1/2 on $mux $procmux$1325.
    dead port 1/2 on $mux $procmux$1322.
    dead port 1/2 on $mux $procmux$1319.
    dead port 1/2 on $mux $procmux$1316.
    dead port 1/2 on $mux $procmux$1313.
    dead port 1/2 on $mux $procmux$1310.
    dead port 1/2 on $mux $procmux$1307.
    dead port 1/2 on $mux $procmux$1304.
    dead port 1/2 on $mux $procmux$1301.
    dead port 1/2 on $mux $procmux$1298.
    dead port 1/2 on $mux $procmux$1295.
    dead port 1/2 on $mux $procmux$1289.
    dead port 1/2 on $mux $procmux$1286.
    dead port 1/2 on $mux $procmux$1283.
    dead port 1/2 on $mux $procmux$1280.
    dead port 1/2 on $mux $procmux$1277.
    dead port 1/2 on $mux $procmux$1274.
    dead port 1/2 on $mux $procmux$1271.
    dead port 1/2 on $mux $procmux$1268.
    dead port 1/2 on $mux $procmux$1265.
    dead port 1/2 on $mux $procmux$1262.
    dead port 1/2 on $mux $procmux$1259.
    dead port 1/2 on $mux $procmux$1256.
    dead port 1/2 on $mux $procmux$1253.
    dead port 1/2 on $mux $procmux$1247.
    dead port 1/2 on $mux $procmux$1244.
    dead port 1/2 on $mux $procmux$1241.
    dead port 1/2 on $mux $procmux$1238.
    dead port 1/2 on $mux $procmux$1235.
    dead port 1/2 on $mux $procmux$1232.
    dead port 1/2 on $mux $procmux$1229.
    dead port 1/2 on $mux $procmux$1226.
    dead port 1/2 on $mux $procmux$1223.
    dead port 1/2 on $mux $procmux$1220.
    dead port 1/2 on $mux $procmux$1217.
    dead port 1/2 on $mux $procmux$1214.
    dead port 1/2 on $mux $procmux$1211.
    dead port 1/2 on $mux $procmux$1208.
    dead port 1/2 on $mux $procmux$1202.
    dead port 1/2 on $mux $procmux$1199.
    dead port 1/2 on $mux $procmux$1196.
    dead port 1/2 on $mux $procmux$1193.
    dead port 1/2 on $mux $procmux$1190.
    dead port 1/2 on $mux $procmux$1187.
    dead port 1/2 on $mux $procmux$1184.
    dead port 1/2 on $mux $procmux$1181.
    dead port 1/2 on $mux $procmux$1178.
    dead port 1/2 on $mux $procmux$1175.
    dead port 1/2 on $mux $procmux$1172.
    dead port 1/2 on $mux $procmux$1169.
    dead port 1/2 on $mux $procmux$1166.
    dead port 1/2 on $mux $procmux$1163.
    dead port 1/2 on $mux $procmux$1157.
    dead port 1/2 on $mux $procmux$1154.
    dead port 1/2 on $mux $procmux$1151.
    dead port 1/2 on $mux $procmux$1148.
    dead port 1/2 on $mux $procmux$1145.
    dead port 1/2 on $mux $procmux$1142.
    dead port 1/2 on $mux $procmux$1139.
    dead port 1/2 on $mux $procmux$1136.
    dead port 1/2 on $mux $procmux$1133.
    dead port 1/2 on $mux $procmux$1130.
    dead port 1/2 on $mux $procmux$1127.
    dead port 1/2 on $mux $procmux$1124.
    dead port 1/2 on $mux $procmux$1121.
    dead port 1/2 on $mux $procmux$1118.
    dead port 1/2 on $mux $procmux$1115.
    dead port 1/2 on $mux $procmux$1109.
    dead port 1/2 on $mux $procmux$1106.
    dead port 1/2 on $mux $procmux$1103.
    dead port 1/2 on $mux $procmux$1100.
    dead port 1/2 on $mux $procmux$1097.
    dead port 1/2 on $mux $procmux$1094.
    dead port 1/2 on $mux $procmux$1091.
    dead port 1/2 on $mux $procmux$1088.
    dead port 1/2 on $mux $procmux$1085.
    dead port 1/2 on $mux $procmux$1082.
    dead port 1/2 on $mux $procmux$1079.
    dead port 1/2 on $mux $procmux$1076.
    dead port 1/2 on $mux $procmux$1073.
    dead port 1/2 on $mux $procmux$1070.
    dead port 1/2 on $mux $procmux$1067.
    dead port 1/2 on $mux $procmux$1061.
    dead port 1/2 on $mux $procmux$1058.
    dead port 1/2 on $mux $procmux$1055.
    dead port 1/2 on $mux $procmux$1052.
    dead port 1/2 on $mux $procmux$1049.
    dead port 1/2 on $mux $procmux$1046.
    dead port 1/2 on $mux $procmux$1043.
    dead port 1/2 on $mux $procmux$1040.
    dead port 1/2 on $mux $procmux$1037.
    dead port 1/2 on $mux $procmux$1034.
    dead port 1/2 on $mux $procmux$1031.
    dead port 1/2 on $mux $procmux$1028.
    dead port 1/2 on $mux $procmux$1025.
    dead port 1/2 on $mux $procmux$1022.
    dead port 1/2 on $mux $procmux$1019.
    dead port 1/2 on $mux $procmux$1016.
    dead port 1/2 on $mux $procmux$1010.
    dead port 1/2 on $mux $procmux$1007.
    dead port 1/2 on $mux $procmux$1004.
    dead port 1/2 on $mux $procmux$1001.
    dead port 1/2 on $mux $procmux$998.
    dead port 1/2 on $mux $procmux$995.
    dead port 1/2 on $mux $procmux$992.
    dead port 1/2 on $mux $procmux$989.
    dead port 1/2 on $mux $procmux$986.
    dead port 1/2 on $mux $procmux$983.
    dead port 1/2 on $mux $procmux$980.
    dead port 1/2 on $mux $procmux$977.
    dead port 1/2 on $mux $procmux$974.
    dead port 1/2 on $mux $procmux$971.
    dead port 1/2 on $mux $procmux$968.
    dead port 1/2 on $mux $procmux$965.
    dead port 1/2 on $mux $procmux$959.
    dead port 1/2 on $mux $procmux$956.
    dead port 1/2 on $mux $procmux$953.
    dead port 1/2 on $mux $procmux$950.
    dead port 1/2 on $mux $procmux$947.
    dead port 1/2 on $mux $procmux$944.
    dead port 1/2 on $mux $procmux$941.
    dead port 1/2 on $mux $procmux$938.
    dead port 1/2 on $mux $procmux$935.
    dead port 1/2 on $mux $procmux$932.
    dead port 1/2 on $mux $procmux$929.
    dead port 1/2 on $mux $procmux$926.
    dead port 1/2 on $mux $procmux$923.
    dead port 1/2 on $mux $procmux$920.
    dead port 1/2 on $mux $procmux$917.
    dead port 1/2 on $mux $procmux$914.
    dead port 1/2 on $mux $procmux$911.
    dead port 1/2 on $mux $procmux$905.
    dead port 1/2 on $mux $procmux$902.
    dead port 1/2 on $mux $procmux$899.
    dead port 1/2 on $mux $procmux$896.
    dead port 1/2 on $mux $procmux$893.
    dead port 1/2 on $mux $procmux$890.
    dead port 1/2 on $mux $procmux$887.
    dead port 1/2 on $mux $procmux$884.
    dead port 1/2 on $mux $procmux$881.
    dead port 1/2 on $mux $procmux$878.
    dead port 1/2 on $mux $procmux$875.
    dead port 1/2 on $mux $procmux$872.
    dead port 1/2 on $mux $procmux$869.
    dead port 1/2 on $mux $procmux$866.
    dead port 1/2 on $mux $procmux$863.
    dead port 1/2 on $mux $procmux$860.
    dead port 1/2 on $mux $procmux$857.
    dead port 1/2 on $mux $procmux$851.
    dead port 1/2 on $mux $procmux$848.
    dead port 1/2 on $mux $procmux$845.
    dead port 1/2 on $mux $procmux$842.
    dead port 1/2 on $mux $procmux$839.
    dead port 1/2 on $mux $procmux$836.
    dead port 1/2 on $mux $procmux$833.
    dead port 1/2 on $mux $procmux$830.
    dead port 1/2 on $mux $procmux$827.
    dead port 1/2 on $mux $procmux$824.
    dead port 1/2 on $mux $procmux$821.
    dead port 1/2 on $mux $procmux$818.
    dead port 1/2 on $mux $procmux$815.
    dead port 1/2 on $mux $procmux$812.
    dead port 1/2 on $mux $procmux$809.
    dead port 1/2 on $mux $procmux$806.
    dead port 1/2 on $mux $procmux$803.
    dead port 1/2 on $mux $procmux$800.
    dead port 1/2 on $mux $procmux$794.
    dead port 1/2 on $mux $procmux$791.
    dead port 1/2 on $mux $procmux$788.
    dead port 1/2 on $mux $procmux$785.
    dead port 1/2 on $mux $procmux$782.
    dead port 1/2 on $mux $procmux$779.
    dead port 1/2 on $mux $procmux$776.
    dead port 1/2 on $mux $procmux$773.
    dead port 1/2 on $mux $procmux$770.
    dead port 1/2 on $mux $procmux$767.
    dead port 1/2 on $mux $procmux$764.
    dead port 1/2 on $mux $procmux$761.
    dead port 1/2 on $mux $procmux$758.
    dead port 1/2 on $mux $procmux$755.
    dead port 1/2 on $mux $procmux$752.
    dead port 1/2 on $mux $procmux$749.
    dead port 1/2 on $mux $procmux$746.
    dead port 1/2 on $mux $procmux$743.
    dead port 1/2 on $mux $procmux$737.
    dead port 1/2 on $mux $procmux$734.
    dead port 1/2 on $mux $procmux$731.
    dead port 1/2 on $mux $procmux$728.
    dead port 1/2 on $mux $procmux$725.
    dead port 1/2 on $mux $procmux$722.
    dead port 1/2 on $mux $procmux$719.
    dead port 1/2 on $mux $procmux$716.
    dead port 1/2 on $mux $procmux$713.
    dead port 1/2 on $mux $procmux$710.
    dead port 1/2 on $mux $procmux$707.
    dead port 1/2 on $mux $procmux$704.
    dead port 1/2 on $mux $procmux$701.
    dead port 1/2 on $mux $procmux$698.
    dead port 1/2 on $mux $procmux$695.
    dead port 1/2 on $mux $procmux$692.
    dead port 1/2 on $mux $procmux$689.
    dead port 1/2 on $mux $procmux$686.
    dead port 1/2 on $mux $procmux$683.
    dead port 1/2 on $mux $procmux$677.
    dead port 1/2 on $mux $procmux$674.
    dead port 1/2 on $mux $procmux$671.
    dead port 1/2 on $mux $procmux$668.
    dead port 1/2 on $mux $procmux$665.
    dead port 1/2 on $mux $procmux$662.
    dead port 1/2 on $mux $procmux$659.
    dead port 1/2 on $mux $procmux$656.
    dead port 1/2 on $mux $procmux$653.
    dead port 1/2 on $mux $procmux$650.
    dead port 1/2 on $mux $procmux$647.
    dead port 1/2 on $mux $procmux$644.
    dead port 1/2 on $mux $procmux$641.
    dead port 1/2 on $mux $procmux$638.
    dead port 1/2 on $mux $procmux$635.
    dead port 1/2 on $mux $procmux$632.
    dead port 1/2 on $mux $procmux$629.
    dead port 1/2 on $mux $procmux$626.
    dead port 1/2 on $mux $procmux$623.
    dead port 1/2 on $mux $procmux$617.
    dead port 1/2 on $mux $procmux$614.
    dead port 1/2 on $mux $procmux$611.
    dead port 1/2 on $mux $procmux$608.
    dead port 1/2 on $mux $procmux$605.
    dead port 1/2 on $mux $procmux$602.
    dead port 1/2 on $mux $procmux$599.
    dead port 1/2 on $mux $procmux$596.
    dead port 1/2 on $mux $procmux$593.
    dead port 1/2 on $mux $procmux$590.
    dead port 1/2 on $mux $procmux$587.
    dead port 1/2 on $mux $procmux$584.
    dead port 1/2 on $mux $procmux$581.
    dead port 1/2 on $mux $procmux$578.
    dead port 1/2 on $mux $procmux$575.
    dead port 1/2 on $mux $procmux$572.
    dead port 1/2 on $mux $procmux$569.
    dead port 1/2 on $mux $procmux$566.
    dead port 1/2 on $mux $procmux$563.
    dead port 1/2 on $mux $procmux$560.
    dead port 1/2 on $mux $procmux$554.
    dead port 1/2 on $mux $procmux$551.
    dead port 1/2 on $mux $procmux$548.
    dead port 1/2 on $mux $procmux$545.
    dead port 1/2 on $mux $procmux$542.
    dead port 1/2 on $mux $procmux$539.
    dead port 1/2 on $mux $procmux$536.
    dead port 1/2 on $mux $procmux$533.
    dead port 1/2 on $mux $procmux$530.
    dead port 1/2 on $mux $procmux$527.
    dead port 1/2 on $mux $procmux$524.
    dead port 1/2 on $mux $procmux$521.
    dead port 1/2 on $mux $procmux$518.
    dead port 1/2 on $mux $procmux$515.
    dead port 1/2 on $mux $procmux$512.
    dead port 1/2 on $mux $procmux$509.
    dead port 1/2 on $mux $procmux$506.
    dead port 1/2 on $mux $procmux$503.
    dead port 1/2 on $mux $procmux$500.
    dead port 1/2 on $mux $procmux$497.
    dead port 1/2 on $mux $procmux$491.
    dead port 1/2 on $mux $procmux$488.
    dead port 1/2 on $mux $procmux$485.
    dead port 1/2 on $mux $procmux$482.
    dead port 1/2 on $mux $procmux$479.
    dead port 1/2 on $mux $procmux$476.
    dead port 1/2 on $mux $procmux$473.
    dead port 1/2 on $mux $procmux$470.
    dead port 1/2 on $mux $procmux$467.
    dead port 1/2 on $mux $procmux$464.
    dead port 1/2 on $mux $procmux$461.
    dead port 1/2 on $mux $procmux$458.
    dead port 1/2 on $mux $procmux$455.
    dead port 1/2 on $mux $procmux$452.
    dead port 1/2 on $mux $procmux$449.
    dead port 1/2 on $mux $procmux$446.
    dead port 1/2 on $mux $procmux$443.
    dead port 1/2 on $mux $procmux$440.
    dead port 1/2 on $mux $procmux$437.
    dead port 1/2 on $mux $procmux$434.
    dead port 1/2 on $mux $procmux$431.
    dead port 1/2 on $mux $procmux$425.
    dead port 1/2 on $mux $procmux$422.
    dead port 1/2 on $mux $procmux$419.
    dead port 1/2 on $mux $procmux$416.
    dead port 1/2 on $mux $procmux$413.
    dead port 1/2 on $mux $procmux$410.
    dead port 1/2 on $mux $procmux$407.
    dead port 1/2 on $mux $procmux$404.
    dead port 1/2 on $mux $procmux$401.
    dead port 1/2 on $mux $procmux$398.
    dead port 1/2 on $mux $procmux$395.
    dead port 1/2 on $mux $procmux$392.
    dead port 1/2 on $mux $procmux$389.
    dead port 1/2 on $mux $procmux$386.
    dead port 1/2 on $mux $procmux$383.
    dead port 1/2 on $mux $procmux$380.
    dead port 1/2 on $mux $procmux$377.
    dead port 1/2 on $mux $procmux$374.
    dead port 1/2 on $mux $procmux$371.
    dead port 1/2 on $mux $procmux$368.
    dead port 1/2 on $mux $procmux$365.
    dead port 1/2 on $mux $procmux$359.
    dead port 1/2 on $mux $procmux$356.
    dead port 1/2 on $mux $procmux$353.
    dead port 1/2 on $mux $procmux$350.
    dead port 1/2 on $mux $procmux$347.
    dead port 1/2 on $mux $procmux$344.
    dead port 1/2 on $mux $procmux$341.
    dead port 1/2 on $mux $procmux$338.
    dead port 1/2 on $mux $procmux$335.
    dead port 1/2 on $mux $procmux$332.
    dead port 1/2 on $mux $procmux$329.
    dead port 1/2 on $mux $procmux$326.
    dead port 1/2 on $mux $procmux$323.
    dead port 1/2 on $mux $procmux$320.
    dead port 1/2 on $mux $procmux$317.
    dead port 1/2 on $mux $procmux$314.
    dead port 1/2 on $mux $procmux$311.
    dead port 1/2 on $mux $procmux$308.
    dead port 1/2 on $mux $procmux$305.
    dead port 1/2 on $mux $procmux$302.
    dead port 1/2 on $mux $procmux$299.
    dead port 1/2 on $mux $procmux$296.
    dead port 1/2 on $mux $procmux$290.
    dead port 1/2 on $mux $procmux$287.
    dead port 1/2 on $mux $procmux$284.
    dead port 1/2 on $mux $procmux$281.
    dead port 1/2 on $mux $procmux$278.
    dead port 1/2 on $mux $procmux$275.
    dead port 1/2 on $mux $procmux$272.
    dead port 1/2 on $mux $procmux$269.
    dead port 1/2 on $mux $procmux$266.
    dead port 1/2 on $mux $procmux$263.
    dead port 1/2 on $mux $procmux$260.
    dead port 1/2 on $mux $procmux$257.
    dead port 1/2 on $mux $procmux$254.
    dead port 1/2 on $mux $procmux$251.
    dead port 1/2 on $mux $procmux$248.
    dead port 1/2 on $mux $procmux$245.
    dead port 1/2 on $mux $procmux$242.
    dead port 1/2 on $mux $procmux$239.
    dead port 1/2 on $mux $procmux$236.
    dead port 1/2 on $mux $procmux$233.
    dead port 1/2 on $mux $procmux$230.
    dead port 1/2 on $mux $procmux$227.
Removed 506 multiplexer ports.
<suppressed ~50 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \div_24b.
  Optimizing cells in module \fpu_div.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\div_24b'.
Finding identical cells in module `\fpu_div'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 23 on $procdff$1884 ($dff) from module fpu_div.
Setting constant 1-bit at position 23 on $procdff$1885 ($dff) from module fpu_div.

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \div_24b..
Finding unused cells or wires in module \fpu_div..
Removed 0 unused cells and 1283 unused wires.
<suppressed ~2 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module div_24b.
Optimizing module fpu_div.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \div_24b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~50 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \div_24b.
  Optimizing cells in module \fpu_div.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\div_24b'.
Finding identical cells in module `\fpu_div'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \div_24b..
Finding unused cells or wires in module \fpu_div..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module div_24b.
Optimizing module fpu_div.

4.16. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== div_24b ===

   Number of wires:                 75
   Number of wire bits:           2076
   Number of public wires:          28
   Number of public wire bits:    1247
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 94
     $le                           852
     $mux                         1105
     $sub                          805

=== fpu_div ===

   Number of wires:                 62
   Number of wire bits:           1094
   Number of public wires:          12
   Number of public wire bits:     195
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 83
     $add                            8
     $dff                           64
     $ge                             8
     $mux                          721
     $sub                          208
     $xor                            1

=== design hierarchy ===

   fpu_div                           1
     div_24b                         0

   Number of wires:                 62
   Number of wire bits:           1094
   Number of public wires:          12
   Number of public wire bits:     195
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 83
     $add                            8
     $dff                           64
     $ge                             8
     $mux                          721
     $sub                          208
     $xor                            1

End of script. Logfile hash: dd2e637fbd, CPU: user 0.31s system 0.00s, MEM: 21.93 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 25% 4x opt_expr (0 sec), 19% 2x read_verilog (0 sec), ...
