
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v' to AST representation.
Generating RTLIL representation for module `\data_mem'.
Generating RTLIL representation for module `\onecyclestall'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:198.3-204.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\single_port_ram'.
Generating RTLIL representation for module `\load_data_translator'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:260.1-263.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\store_data_translator'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:379.1-424.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: store_data_translator
root of   0 design levels: load_data_translator
root of   0 design levels: single_port_ram     
root of   0 design levels: onecyclestall       
root of   1 design levels: data_mem            
Automatically selected data_mem as design top module.

2.2. Analyzing design hierarchy..
Top module:  \data_mem
Used module:     \onecyclestall
Used module:     \single_port_ram
Used module:     \load_data_translator
Used module:     \store_data_translator
Parameter \DATA_WIDTH = 32
Parameter \ADDR_WIDTH = 10

2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\single_port_ram'.
Parameter \DATA_WIDTH = 32
Parameter \ADDR_WIDTH = 10
Generating RTLIL representation for module `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram'.

2.4. Analyzing design hierarchy..
Top module:  \data_mem
Used module:     \onecyclestall
Used module:     $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram
Used module:     \load_data_translator
Used module:     \store_data_translator

2.5. Analyzing design hierarchy..
Top module:  \data_mem
Used module:     \onecyclestall
Used module:     $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram
Used module:     \load_data_translator
Used module:     \store_data_translator
Removing unused module `\single_port_ram'.
Removed 1 unused modules.
Mapping positional arguments of cell data_mem.staller (onecyclestall).

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:379$20 in module store_data_translator.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:230$22 in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:205$6 in module onecyclestall.
Removed 1 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:198$5 in module onecyclestall.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:198$5 in module onecyclestall.
Removed a total of 1 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 7 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\store_data_translator.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:379$20'.
     1/6: $3\d_writedataout[31:0]
     2/6: $3\d_byteena[3:0]
     3/6: $2\d_writedataout[31:0]
     4/6: $2\d_byteena[3:0]
     5/6: $1\d_writedataout[31:0]
     6/6: $1\d_byteena[3:0]
Creating decoders for process `\load_data_translator.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:260$19'.
Creating decoders for process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:230$22'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:232$21_EN[31:0]$28
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:232$21_DATA[31:0]$27
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:232$21_ADDR[9:0]$26
     4/4: $0\out[31:0]
Creating decoders for process `\onecyclestall.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:205$6'.
     1/1: $0\T[0:0]
Creating decoders for process `\onecyclestall.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:198$5'.
     1/1: $1\Tnext[0:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\store_data_translator.\d_byteena' from process `\store_data_translator.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:379$20'.
No latch inferred for signal `\store_data_translator.\d_writedataout' from process `\store_data_translator.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:379$20'.
No latch inferred for signal `\load_data_translator.\d_loadresult' from process `\load_data_translator.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:260$19'.
No latch inferred for signal `\onecyclestall.\Tnext' from process `\onecyclestall.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:198$5'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.\out' using process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:230$22'.
  created $dff cell `$procdff$86' with positive edge clock.
Creating register for signal `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:232$21_ADDR' using process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:230$22'.
  created $dff cell `$procdff$87' with positive edge clock.
Creating register for signal `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:232$21_DATA' using process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:230$22'.
  created $dff cell `$procdff$88' with positive edge clock.
Creating register for signal `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:232$21_EN' using process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:230$22'.
  created $dff cell `$procdff$89' with positive edge clock.
Creating register for signal `\onecyclestall.\T' using process `\onecyclestall.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:205$6'.
  created $dff cell `$procdff$90' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 3 empty switches in `\store_data_translator.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:379$20'.
Removing empty process `store_data_translator.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:379$20'.
Removing empty process `load_data_translator.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:260$19'.
Found and cleaned up 1 empty switch in `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:230$22'.
Removing empty process `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:230$22'.
Found and cleaned up 1 empty switch in `\onecyclestall.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:205$6'.
Removing empty process `onecyclestall.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:205$6'.
Found and cleaned up 1 empty switch in `\onecyclestall.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:198$5'.
Removing empty process `onecyclestall.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:198$5'.
Cleaned up 6 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module store_data_translator.
<suppressed ~6 debug messages>
Optimizing module load_data_translator.
Optimizing module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
Optimizing module onecyclestall.
<suppressed ~2 debug messages>
Optimizing module data_mem.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module store_data_translator.
Optimizing module load_data_translator.
Optimizing module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
Optimizing module onecyclestall.
Optimizing module data_mem.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\store_data_translator'.
<suppressed ~30 debug messages>
Finding identical cells in module `\load_data_translator'.
Finding identical cells in module `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram'.
Finding identical cells in module `\onecyclestall'.
<suppressed ~3 debug messages>
Finding identical cells in module `\data_mem'.
Removed a total of 11 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \store_data_translator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$49.
    dead port 2/2 on $mux $procmux$58.
    dead port 2/2 on $mux $procmux$40.
    dead port 2/2 on $mux $procmux$34.
Running muxtree optimizer on module \load_data_translator..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \onecyclestall..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 4 multiplexer ports.
<suppressed ~7 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \store_data_translator.
  Optimizing cells in module \load_data_translator.
  Optimizing cells in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
    Consolidated identical input bits for $mux cell $procmux$69:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$69_Y
      New ports: A=1'0, B=1'1, Y=$procmux$69_Y [0]
      New connections: $procmux$69_Y [31:1] = { $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] $procmux$69_Y [0] }
  Optimizing cells in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
  Optimizing cells in module \onecyclestall.
  Optimizing cells in module \data_mem.
Performed a total of 1 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\store_data_translator'.
Finding identical cells in module `\load_data_translator'.
Finding identical cells in module `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram'.
Finding identical cells in module `\onecyclestall'.
Finding identical cells in module `\data_mem'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$86 ($dff) from module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/spree_submodules/data_mem.v:235$29_DATA, Q = \out).
Adding SRST signal on $procdff$90 ($dff) from module onecyclestall (D = $procmux$83_Y, Q = \T, rval = 1'0).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \store_data_translator..
Finding unused cells or wires in module \load_data_translator..
Finding unused cells or wires in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram..
Finding unused cells or wires in module \onecyclestall..
Finding unused cells or wires in module \data_mem..
Removed 8 unused cells and 58 unused wires.
<suppressed ~16 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
Optimizing module data_mem.
Optimizing module load_data_translator.
Optimizing module onecyclestall.
Optimizing module store_data_translator.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \data_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \load_data_translator..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \onecyclestall..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \store_data_translator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
  Optimizing cells in module \data_mem.
  Optimizing cells in module \load_data_translator.
  Optimizing cells in module \onecyclestall.
  Optimizing cells in module \store_data_translator.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram'.
Finding identical cells in module `\data_mem'.
Finding identical cells in module `\load_data_translator'.
Finding identical cells in module `\onecyclestall'.
Finding identical cells in module `\store_data_translator'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram..
Finding unused cells or wires in module \data_mem..
Finding unused cells or wires in module \load_data_translator..
Finding unused cells or wires in module \onecyclestall..
Finding unused cells or wires in module \store_data_translator..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram.
Optimizing module data_mem.
Optimizing module load_data_translator.
Optimizing module onecyclestall.
Optimizing module store_data_translator.

4.16. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram ===

   Number of wires:                  9
   Number of wire bits:            182
   Number of public wires:           5
   Number of public wire bits:      76
   Number of memories:               1
   Number of memory bits:          320
   Number of processes:              0
   Number of cells:                  6
     $dffe                          32
     $mux                           43

=== data_mem ===

   Number of wires:                 20
   Number of wire bits:            193
   Number of public wires:          20
   Number of public wire bits:     193
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  7
     $and                            1
     $not                            2

=== load_data_translator ===

   Number of wires:                  4
   Number of wire bits:             67
   Number of public wires:           4
   Number of public wire bits:      67
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== onecyclestall ===

   Number of wires:                  7
   Number of wire bits:              7
   Number of public wires:           6
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $and                            1
     $not                            1
     $pmux                           1
     $sdff                           1

=== store_data_translator ===

   Number of wires:                 14
   Number of wire bits:            149
   Number of public wires:           5
   Number of public wire bits:      72
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $eq                             8
     $logic_not                      2
     $mux                           36
     $pmux                          72

=== design hierarchy ===

   data_mem                          1
     $paramod$f2486c22f8156b191d4f2958486e3c6079702f1e\single_port_ram      0
     load_data_translator            0
     onecyclestall                   0
     store_data_translator           0

   Number of wires:                 20
   Number of wire bits:            193
   Number of public wires:          20
   Number of public wire bits:     193
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  7
     $and                            1
     $not                            2

End of script. Logfile hash: 41cabf3acf, CPU: user 0.09s system 0.01s, MEM: 11.58 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 21% 4x opt_expr (0 sec), 21% 3x opt_merge (0 sec), ...
