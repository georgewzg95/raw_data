
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v' to AST representation.
Generating RTLIL representation for module `\memory_controller'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:48.1-66.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\single_port_ram'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: single_port_ram     
root of   1 design levels: memory_controller   
Automatically selected memory_controller as design top module.

2.2. Analyzing design hierarchy..
Top module:  \memory_controller
Used module:     \single_port_ram
Parameter \DATA_WIDTH = 8
Parameter \ADDR_WIDTH = 5

2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\single_port_ram'.
Parameter \DATA_WIDTH = 8
Parameter \ADDR_WIDTH = 5
Generating RTLIL representation for module `$paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram'.

2.4. Analyzing design hierarchy..
Top module:  \memory_controller
Used module:     $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram

2.5. Analyzing design hierarchy..
Top module:  \memory_controller
Used module:     $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram
Removing unused module `\single_port_ram'.
Removed 1 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:87$18 in module $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:48$7 in module memory_controller.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 8 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:87$18'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:89$17_EN[7:0]$24
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:89$17_DATA[7:0]$23
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:89$17_ADDR[4:0]$22
     4/4: $0\out[7:0]
Creating decoders for process `\memory_controller.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:48$7'.
     1/4: $1\memory_controller_out[31:0]
     2/4: $1\str_in[7:0]
     3/4: $1\str_write_enable[0:0]
     4/4: $1\str_address[4:0]
Creating decoders for process `\memory_controller.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:46$6'.

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
Latch inferred for signal `\memory_controller.\memory_controller_out' from process `\memory_controller.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:48$7': $auto$proc_dlatch.cc:427:proc_dlatch$60
Latch inferred for signal `\memory_controller.\str_address' from process `\memory_controller.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:48$7': $auto$proc_dlatch.cc:427:proc_dlatch$71
Latch inferred for signal `\memory_controller.\str_write_enable' from process `\memory_controller.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:48$7': $auto$proc_dlatch.cc:427:proc_dlatch$82
Latch inferred for signal `\memory_controller.\str_in' from process `\memory_controller.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:48$7': $auto$proc_dlatch.cc:427:proc_dlatch$93

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.\out' using process `$paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:87$18'.
  created $dff cell `$procdff$94' with positive edge clock.
Creating register for signal `$paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:89$17_ADDR' using process `$paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:87$18'.
  created $dff cell `$procdff$95' with positive edge clock.
Creating register for signal `$paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:89$17_DATA' using process `$paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:87$18'.
  created $dff cell `$procdff$96' with positive edge clock.
Creating register for signal `$paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:89$17_EN' using process `$paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:87$18'.
  created $dff cell `$procdff$97' with positive edge clock.
Creating register for signal `\memory_controller.\prevTag' using process `\memory_controller.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:46$6'.
  created $dff cell `$procdff$98' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:87$18'.
Removing empty process `$paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:87$18'.
Found and cleaned up 2 empty switches in `\memory_controller.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:48$7'.
Removing empty process `memory_controller.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:48$7'.
Removing empty process `memory_controller.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:46$6'.
Cleaned up 3 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.
Optimizing module memory_controller.
<suppressed ~32 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.
Optimizing module memory_controller.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram'.
Finding identical cells in module `\memory_controller'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \memory_controller..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.
    Consolidated identical input bits for $mux cell $procmux$27:
      Old ports: A=8'00000000, B=8'11111111, Y=$procmux$27_Y
      New ports: A=1'0, B=1'1, Y=$procmux$27_Y [0]
      New connections: $procmux$27_Y [7:1] = { $procmux$27_Y [0] $procmux$27_Y [0] $procmux$27_Y [0] $procmux$27_Y [0] $procmux$27_Y [0] $procmux$27_Y [0] $procmux$27_Y [0] }
  Optimizing cells in module $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.
  Optimizing cells in module \memory_controller.
Performed a total of 1 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram'.
Finding identical cells in module `\memory_controller'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$94 ($dff) from module $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/ch_intrinsics_submodules/memory_controller.v:92$25_DATA, Q = \out).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram..
Finding unused cells or wires in module \memory_controller..
Removed 6 unused cells and 54 unused wires.
<suppressed ~8 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.
Optimizing module memory_controller.
<suppressed ~1 debug messages>

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \memory_controller..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.
  Optimizing cells in module \memory_controller.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram'.
Finding identical cells in module `\memory_controller'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 8 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 9 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 10 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 11 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 12 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 13 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 14 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 15 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 16 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 17 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 18 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 19 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 20 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 21 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 22 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 23 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 24 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 25 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 26 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 27 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 28 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 29 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 30 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.
Setting constant 0-bit at position 31 on $auto$proc_dlatch.cc:427:proc_dlatch$60 ($dlatch) from module memory_controller.

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram..
Finding unused cells or wires in module \memory_controller..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.
Optimizing module memory_controller.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \memory_controller..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.
  Optimizing cells in module \memory_controller.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram'.
Finding identical cells in module `\memory_controller'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram..
Finding unused cells or wires in module \memory_controller..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram.
Optimizing module memory_controller.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram ===

   Number of wires:                  9
   Number of wire bits:             52
   Number of public wires:           5
   Number of public wire bits:      23
   Number of memories:               1
   Number of memory bits:           40
   Number of processes:              0
   Number of cells:                  6
     $dffe                           8
     $mux                           14

=== memory_controller ===

   Number of wires:                 13
   Number of wire bits:            124
   Number of public wires:          11
   Number of public wire bits:     122
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  9
     $and                            1
     $dff                            1
     $dlatch                        22
     $reduce_or                     64

=== design hierarchy ===

   memory_controller                 1
     $paramod$bd8b0969ac295d564193c3d912540151d67604d4\single_port_ram      0

   Number of wires:                 13
   Number of wire bits:            124
   Number of public wires:          11
   Number of public wire bits:     122
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  9
     $and                            1
     $dff                            1
     $dlatch                        22
     $reduce_or                     64

End of script. Logfile hash: 21b2412c7c, CPU: user 0.07s system 0.00s, MEM: 11.39 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 31% 5x opt_expr (0 sec), 18% 3x opt_clean (0 sec), ...
