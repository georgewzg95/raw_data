
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 4d87019, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v
Parsing SystemVerilog input from `/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v' to AST representation.
Generating RTLIL representation for module `\mkPktMerge'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:203.3-218.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:249.3-261.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\arSRLFIFO_a'.
Generating RTLIL representation for module `\generic_fifo_sc_a'.
Generating RTLIL representation for module `\arSRLFIFO_b'.
Generating RTLIL representation for module `\generic_fifo_sc_b'.
Generating RTLIL representation for module `\arSRLFIFO_c'.
Generating RTLIL representation for module `\generic_fifo_sc_c'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: generic_fifo_sc_c   
root of   1 design levels: arSRLFIFO_c         
root of   0 design levels: generic_fifo_sc_b   
root of   1 design levels: arSRLFIFO_b         
root of   0 design levels: generic_fifo_sc_a   
root of   1 design levels: arSRLFIFO_a         
root of   2 design levels: mkPktMerge          
Automatically selected mkPktMerge as design top module.

2.2. Analyzing design hierarchy..
Top module:  \mkPktMerge
Used module:     \arSRLFIFO_c
Used module:         \generic_fifo_sc_c
Used module:     \arSRLFIFO_b
Used module:         \generic_fifo_sc_b
Used module:     \arSRLFIFO_a
Used module:         \generic_fifo_sc_a

2.3. Analyzing design hierarchy..
Top module:  \mkPktMerge
Used module:     \arSRLFIFO_c
Used module:         \generic_fifo_sc_c
Used module:     \arSRLFIFO_b
Used module:         \generic_fifo_sc_b
Used module:     \arSRLFIFO_a
Used module:         \generic_fifo_sc_a
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1524$281 in module generic_fifo_sc_c.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1514$271 in module generic_fifo_sc_c.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1499$263 in module generic_fifo_sc_c.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1479$246 in module generic_fifo_sc_c.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1469$233 in module generic_fifo_sc_c.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1459$227 in module generic_fifo_sc_c.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1443$223 in module generic_fifo_sc_c.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1424$215 in module generic_fifo_sc_c.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1413$211 in module generic_fifo_sc_c.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1112$201 in module generic_fifo_sc_b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1102$191 in module generic_fifo_sc_b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1087$183 in module generic_fifo_sc_b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1067$166 in module generic_fifo_sc_b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1057$153 in module generic_fifo_sc_b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1047$147 in module generic_fifo_sc_b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1031$143 in module generic_fifo_sc_b.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1012$135 in module generic_fifo_sc_b.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1001$131 in module generic_fifo_sc_b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:701$121 in module generic_fifo_sc_a.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:691$111 in module generic_fifo_sc_a.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:676$103 in module generic_fifo_sc_a.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:656$86 in module generic_fifo_sc_a.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:646$73 in module generic_fifo_sc_a.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:636$67 in module generic_fifo_sc_a.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:620$63 in module generic_fifo_sc_a.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:601$55 in module generic_fifo_sc_a.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:590$51 in module generic_fifo_sc_a.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:274$49 in module mkPktMerge.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 2 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1524$281'.
     1/1: $0\full_n_r[0:0]
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1514$271'.
     1/1: $0\empty_n_r[0:0]
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1499$263'.
     1/1: $0\cnt[4:0]
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1479$246'.
     1/1: $0\empty_r[0:0]
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1469$233'.
     1/1: $0\full_r[0:0]
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1459$227'.
     1/1: $0\gb2[0:0]
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1443$223'.
     1/1: $0\gb[0:0]
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1424$215'.
     1/1: $0\rp[3:0]
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1413$211'.
     1/1: $0\wp[3:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1112$201'.
     1/1: $0\full_n_r[0:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1102$191'.
     1/1: $0\empty_n_r[0:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1087$183'.
     1/1: $0\cnt[4:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1067$166'.
     1/1: $0\empty_r[0:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1057$153'.
     1/1: $0\full_r[0:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1047$147'.
     1/1: $0\gb2[0:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1031$143'.
     1/1: $0\gb[0:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1012$135'.
     1/1: $0\rp[3:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1001$131'.
     1/1: $0\wp[3:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:701$121'.
     1/1: $0\full_n_r[0:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:691$111'.
     1/1: $0\empty_n_r[0:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:676$103'.
     1/1: $0\cnt[4:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:656$86'.
     1/1: $0\empty_r[0:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:646$73'.
     1/1: $0\full_r[0:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:636$67'.
     1/1: $0\gb2[0:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:620$63'.
     1/1: $0\gb[0:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:601$55'.
     1/1: $0\rp[3:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:590$51'.
     1/1: $0\wp[3:0]
Creating decoders for process `\mkPktMerge.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:274$49'.
     1/3: $0\fi1Active[0:0]
     2/3: $0\fi0HasPrio[0:0]
     3/3: $0\fi0Active[0:0]
Creating decoders for process `\mkPktMerge.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:249$44'.
Creating decoders for process `\mkPktMerge.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:203$30'.

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\mkPktMerge.\fo__D_IN' from process `\mkPktMerge.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:249$44'.
No latch inferred for signal `\mkPktMerge.\fi0HasPrio__D_IN' from process `\mkPktMerge.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:203$30'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\generic_fifo_sc_c.\full_n_r' using process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1524$281'.
  created $dff cell `$procdff$585' with positive edge clock.
Creating register for signal `\generic_fifo_sc_c.\empty_n_r' using process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1514$271'.
  created $dff cell `$procdff$586' with positive edge clock.
Creating register for signal `\generic_fifo_sc_c.\cnt' using process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1499$263'.
  created $dff cell `$procdff$587' with positive edge clock.
Creating register for signal `\generic_fifo_sc_c.\empty_r' using process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1479$246'.
  created $dff cell `$procdff$588' with positive edge clock.
Creating register for signal `\generic_fifo_sc_c.\full_r' using process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1469$233'.
  created $dff cell `$procdff$589' with positive edge clock.
Creating register for signal `\generic_fifo_sc_c.\gb2' using process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1459$227'.
  created $dff cell `$procdff$590' with positive edge clock.
Creating register for signal `\generic_fifo_sc_c.\gb' using process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1443$223'.
  created $dff cell `$procdff$591' with positive edge clock.
Creating register for signal `\generic_fifo_sc_c.\rp' using process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1424$215'.
  created $dff cell `$procdff$592' with positive edge clock.
Creating register for signal `\generic_fifo_sc_c.\wp' using process `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1413$211'.
  created $dff cell `$procdff$593' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\full_n_r' using process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1112$201'.
  created $dff cell `$procdff$594' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\empty_n_r' using process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1102$191'.
  created $dff cell `$procdff$595' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\cnt' using process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1087$183'.
  created $dff cell `$procdff$596' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\empty_r' using process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1067$166'.
  created $dff cell `$procdff$597' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\full_r' using process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1057$153'.
  created $dff cell `$procdff$598' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\gb2' using process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1047$147'.
  created $dff cell `$procdff$599' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\gb' using process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1031$143'.
  created $dff cell `$procdff$600' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\rp' using process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1012$135'.
  created $dff cell `$procdff$601' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\wp' using process `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1001$131'.
  created $dff cell `$procdff$602' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\full_n_r' using process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:701$121'.
  created $dff cell `$procdff$603' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\empty_n_r' using process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:691$111'.
  created $dff cell `$procdff$604' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\cnt' using process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:676$103'.
  created $dff cell `$procdff$605' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\empty_r' using process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:656$86'.
  created $dff cell `$procdff$606' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\full_r' using process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:646$73'.
  created $dff cell `$procdff$607' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\gb2' using process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:636$67'.
  created $dff cell `$procdff$608' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\gb' using process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:620$63'.
  created $dff cell `$procdff$609' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\rp' using process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:601$55'.
  created $dff cell `$procdff$610' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\wp' using process `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:590$51'.
  created $dff cell `$procdff$611' with positive edge clock.
Creating register for signal `\mkPktMerge.\fi0Active' using process `\mkPktMerge.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:274$49'.
  created $dff cell `$procdff$612' with positive edge clock.
Creating register for signal `\mkPktMerge.\fi0HasPrio' using process `\mkPktMerge.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:274$49'.
  created $dff cell `$procdff$613' with positive edge clock.
Creating register for signal `\mkPktMerge.\fi1Active' using process `\mkPktMerge.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:274$49'.
  created $dff cell `$procdff$614' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 4 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1524$281'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1524$281'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1514$271'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1514$271'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1499$263'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1499$263'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1479$246'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1479$246'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1469$233'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1469$233'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1459$227'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1459$227'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1443$223'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1443$223'.
Found and cleaned up 3 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1424$215'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1424$215'.
Found and cleaned up 3 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1413$211'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1413$211'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1112$201'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1112$201'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1102$191'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1102$191'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1087$183'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1087$183'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1067$166'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1067$166'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1057$153'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1057$153'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1047$147'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1047$147'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1031$143'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1031$143'.
Found and cleaned up 3 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1012$135'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1012$135'.
Found and cleaned up 3 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1001$131'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1001$131'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:701$121'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:701$121'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:691$111'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:691$111'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:676$103'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:676$103'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:656$86'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:656$86'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:646$73'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:646$73'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:636$67'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:636$67'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:620$63'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:620$63'.
Found and cleaned up 3 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:601$55'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:601$55'.
Found and cleaned up 3 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:590$51'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:590$51'.
Found and cleaned up 4 empty switches in `\mkPktMerge.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:274$49'.
Removing empty process `mkPktMerge.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:274$49'.
Removing empty process `mkPktMerge.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:249$44'.
Removing empty process `mkPktMerge.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:203$30'.
Cleaned up 106 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module generic_fifo_sc_c.
<suppressed ~9 debug messages>
Optimizing module arSRLFIFO_c.
Optimizing module generic_fifo_sc_b.
<suppressed ~9 debug messages>
Optimizing module arSRLFIFO_b.
Optimizing module generic_fifo_sc_a.
<suppressed ~9 debug messages>
Optimizing module arSRLFIFO_a.
Optimizing module mkPktMerge.
<suppressed ~3 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module generic_fifo_sc_c.
Optimizing module arSRLFIFO_c.
Optimizing module generic_fifo_sc_b.
Optimizing module arSRLFIFO_b.
Optimizing module generic_fifo_sc_a.
Optimizing module arSRLFIFO_a.
Optimizing module mkPktMerge.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\generic_fifo_sc_c'.
<suppressed ~57 debug messages>
Finding identical cells in module `\arSRLFIFO_c'.
Finding identical cells in module `\generic_fifo_sc_b'.
<suppressed ~57 debug messages>
Finding identical cells in module `\arSRLFIFO_b'.
Finding identical cells in module `\generic_fifo_sc_a'.
<suppressed ~57 debug messages>
Finding identical cells in module `\arSRLFIFO_a'.
Finding identical cells in module `\mkPktMerge'.
<suppressed ~48 debug messages>
Removed a total of 73 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \generic_fifo_sc_c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \arSRLFIFO_c..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \generic_fifo_sc_b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \arSRLFIFO_b..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \generic_fifo_sc_a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \arSRLFIFO_a..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mkPktMerge..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \generic_fifo_sc_c.
  Optimizing cells in module \arSRLFIFO_c.
  Optimizing cells in module \generic_fifo_sc_b.
  Optimizing cells in module \arSRLFIFO_b.
  Optimizing cells in module \generic_fifo_sc_a.
  Optimizing cells in module \arSRLFIFO_a.
  Optimizing cells in module \mkPktMerge.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\generic_fifo_sc_c'.
Finding identical cells in module `\arSRLFIFO_c'.
Finding identical cells in module `\generic_fifo_sc_b'.
Finding identical cells in module `\arSRLFIFO_b'.
Finding identical cells in module `\generic_fifo_sc_a'.
Finding identical cells in module `\arSRLFIFO_a'.
Finding identical cells in module `\mkPktMerge'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$585 ($dff) from module generic_fifo_sc_c (D = $procmux$294_Y, Q = \full_n_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$615 ($sdff) from module generic_fifo_sc_c (D = $procmux$294_Y, Q = \full_n_r).
Adding SRST signal on $procdff$586 ($dff) from module generic_fifo_sc_c (D = $procmux$305_Y, Q = \empty_n_r, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$623 ($sdff) from module generic_fifo_sc_c (D = $procmux$305_Y, Q = \empty_n_r).
Adding SRST signal on $procdff$587 ($dff) from module generic_fifo_sc_c (D = $procmux$316_Y, Q = \cnt, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$631 ($sdff) from module generic_fifo_sc_c (D = $procmux$316_Y, Q = \cnt).
Adding SRST signal on $procdff$588 ($dff) from module generic_fifo_sc_c (D = $procmux$327_Y, Q = \empty_r, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$639 ($sdff) from module generic_fifo_sc_c (D = $procmux$327_Y, Q = \empty_r).
Adding SRST signal on $procdff$589 ($dff) from module generic_fifo_sc_c (D = $procmux$338_Y, Q = \full_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$647 ($sdff) from module generic_fifo_sc_c (D = $procmux$338_Y, Q = \full_r).
Adding SRST signal on $procdff$590 ($dff) from module generic_fifo_sc_c (D = $procmux$349_Y, Q = \gb2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$655 ($sdff) from module generic_fifo_sc_c (D = $procmux$349_Y, Q = \gb2).
Adding SRST signal on $procdff$591 ($dff) from module generic_fifo_sc_c (D = $procmux$360_Y, Q = \gb, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$663 ($sdff) from module generic_fifo_sc_c (D = $procmux$360_Y, Q = \gb).
Adding SRST signal on $procdff$592 ($dff) from module generic_fifo_sc_c (D = $procmux$368_Y, Q = \rp, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$671 ($sdff) from module generic_fifo_sc_c (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1432$217_Y, Q = \rp).
Adding SRST signal on $procdff$593 ($dff) from module generic_fifo_sc_c (D = $procmux$376_Y, Q = \wp, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$677 ($sdff) from module generic_fifo_sc_c (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1421$213_Y, Q = \wp).
Adding SRST signal on $procdff$594 ($dff) from module generic_fifo_sc_b (D = $procmux$387_Y, Q = \full_n_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$683 ($sdff) from module generic_fifo_sc_b (D = $procmux$387_Y, Q = \full_n_r).
Adding SRST signal on $procdff$595 ($dff) from module generic_fifo_sc_b (D = $procmux$398_Y, Q = \empty_n_r, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$691 ($sdff) from module generic_fifo_sc_b (D = $procmux$398_Y, Q = \empty_n_r).
Adding SRST signal on $procdff$596 ($dff) from module generic_fifo_sc_b (D = $procmux$409_Y, Q = \cnt, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$699 ($sdff) from module generic_fifo_sc_b (D = $procmux$409_Y, Q = \cnt).
Adding SRST signal on $procdff$597 ($dff) from module generic_fifo_sc_b (D = $procmux$420_Y, Q = \empty_r, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$707 ($sdff) from module generic_fifo_sc_b (D = $procmux$420_Y, Q = \empty_r).
Adding SRST signal on $procdff$598 ($dff) from module generic_fifo_sc_b (D = $procmux$431_Y, Q = \full_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$715 ($sdff) from module generic_fifo_sc_b (D = $procmux$431_Y, Q = \full_r).
Adding SRST signal on $procdff$599 ($dff) from module generic_fifo_sc_b (D = $procmux$442_Y, Q = \gb2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$723 ($sdff) from module generic_fifo_sc_b (D = $procmux$442_Y, Q = \gb2).
Adding SRST signal on $procdff$600 ($dff) from module generic_fifo_sc_b (D = $procmux$453_Y, Q = \gb, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$731 ($sdff) from module generic_fifo_sc_b (D = $procmux$453_Y, Q = \gb).
Adding SRST signal on $procdff$601 ($dff) from module generic_fifo_sc_b (D = $procmux$461_Y, Q = \rp, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$739 ($sdff) from module generic_fifo_sc_b (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1020$137_Y, Q = \rp).
Adding SRST signal on $procdff$602 ($dff) from module generic_fifo_sc_b (D = $procmux$469_Y, Q = \wp, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$745 ($sdff) from module generic_fifo_sc_b (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:1009$133_Y, Q = \wp).
Adding SRST signal on $procdff$603 ($dff) from module generic_fifo_sc_a (D = $procmux$480_Y, Q = \full_n_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$751 ($sdff) from module generic_fifo_sc_a (D = $procmux$480_Y, Q = \full_n_r).
Adding SRST signal on $procdff$604 ($dff) from module generic_fifo_sc_a (D = $procmux$491_Y, Q = \empty_n_r, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$759 ($sdff) from module generic_fifo_sc_a (D = $procmux$491_Y, Q = \empty_n_r).
Adding SRST signal on $procdff$605 ($dff) from module generic_fifo_sc_a (D = $procmux$502_Y, Q = \cnt, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$767 ($sdff) from module generic_fifo_sc_a (D = $procmux$502_Y, Q = \cnt).
Adding SRST signal on $procdff$606 ($dff) from module generic_fifo_sc_a (D = $procmux$513_Y, Q = \empty_r, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$775 ($sdff) from module generic_fifo_sc_a (D = $procmux$513_Y, Q = \empty_r).
Adding SRST signal on $procdff$607 ($dff) from module generic_fifo_sc_a (D = $procmux$524_Y, Q = \full_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$783 ($sdff) from module generic_fifo_sc_a (D = $procmux$524_Y, Q = \full_r).
Adding SRST signal on $procdff$608 ($dff) from module generic_fifo_sc_a (D = $procmux$535_Y, Q = \gb2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$791 ($sdff) from module generic_fifo_sc_a (D = $procmux$535_Y, Q = \gb2).
Adding SRST signal on $procdff$609 ($dff) from module generic_fifo_sc_a (D = $procmux$546_Y, Q = \gb, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$799 ($sdff) from module generic_fifo_sc_a (D = $procmux$546_Y, Q = \gb).
Adding SRST signal on $procdff$610 ($dff) from module generic_fifo_sc_a (D = $procmux$554_Y, Q = \rp, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$807 ($sdff) from module generic_fifo_sc_a (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:609$57_Y, Q = \rp).
Adding SRST signal on $procdff$611 ($dff) from module generic_fifo_sc_a (D = $procmux$562_Y, Q = \wp, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$813 ($sdff) from module generic_fifo_sc_a (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:598$53_Y, Q = \wp).
Adding SRST signal on $procdff$612 ($dff) from module mkPktMerge (D = $procmux$580_Y, Q = \fi0Active, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$819 ($sdff) from module mkPktMerge (D = $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:195$27_Y, Q = \fi0Active).
Adding SRST signal on $procdff$613 ($dff) from module mkPktMerge (D = $procmux$575_Y, Q = \fi0HasPrio, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$821 ($sdff) from module mkPktMerge (D = $logic_not$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:243$41_Y, Q = \fi0HasPrio).
Adding SRST signal on $procdff$614 ($dff) from module mkPktMerge (D = $procmux$570_Y, Q = \fi1Active, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$823 ($sdff) from module mkPktMerge (D = $ternary$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/mkPktMerge.v:225$35_Y, Q = \fi1Active).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \generic_fifo_sc_c..
Finding unused cells or wires in module \arSRLFIFO_c..
Finding unused cells or wires in module \generic_fifo_sc_b..
Finding unused cells or wires in module \arSRLFIFO_b..
Finding unused cells or wires in module \generic_fifo_sc_a..
Finding unused cells or wires in module \arSRLFIFO_a..
Finding unused cells or wires in module \mkPktMerge..
Removed 70 unused cells and 324 unused wires.
<suppressed ~75 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module arSRLFIFO_a.
Optimizing module arSRLFIFO_b.
Optimizing module arSRLFIFO_c.
Optimizing module generic_fifo_sc_a.
<suppressed ~7 debug messages>
Optimizing module generic_fifo_sc_b.
<suppressed ~7 debug messages>
Optimizing module generic_fifo_sc_c.
<suppressed ~7 debug messages>
Optimizing module mkPktMerge.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \arSRLFIFO_a..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \arSRLFIFO_b..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \arSRLFIFO_c..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \generic_fifo_sc_a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \generic_fifo_sc_b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \generic_fifo_sc_c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mkPktMerge..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \arSRLFIFO_a.
  Optimizing cells in module \arSRLFIFO_b.
  Optimizing cells in module \arSRLFIFO_c.
  Optimizing cells in module \generic_fifo_sc_a.
  Optimizing cells in module \generic_fifo_sc_b.
  Optimizing cells in module \generic_fifo_sc_c.
  Optimizing cells in module \mkPktMerge.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\arSRLFIFO_a'.
Finding identical cells in module `\arSRLFIFO_b'.
Finding identical cells in module `\arSRLFIFO_c'.
Finding identical cells in module `\generic_fifo_sc_a'.
<suppressed ~48 debug messages>
Finding identical cells in module `\generic_fifo_sc_b'.
<suppressed ~48 debug messages>
Finding identical cells in module `\generic_fifo_sc_c'.
<suppressed ~48 debug messages>
Finding identical cells in module `\mkPktMerge'.
Removed a total of 48 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \arSRLFIFO_a..
Finding unused cells or wires in module \arSRLFIFO_b..
Finding unused cells or wires in module \arSRLFIFO_c..
Finding unused cells or wires in module \generic_fifo_sc_a..
Finding unused cells or wires in module \generic_fifo_sc_b..
Finding unused cells or wires in module \generic_fifo_sc_c..
Finding unused cells or wires in module \mkPktMerge..
Removed 0 unused cells and 48 unused wires.
<suppressed ~3 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module arSRLFIFO_a.
Optimizing module arSRLFIFO_b.
Optimizing module arSRLFIFO_c.
Optimizing module generic_fifo_sc_a.
Optimizing module generic_fifo_sc_b.
Optimizing module generic_fifo_sc_c.
Optimizing module mkPktMerge.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \arSRLFIFO_a..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \arSRLFIFO_b..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \arSRLFIFO_c..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \generic_fifo_sc_a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \generic_fifo_sc_b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \generic_fifo_sc_c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mkPktMerge..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \arSRLFIFO_a.
  Optimizing cells in module \arSRLFIFO_b.
  Optimizing cells in module \arSRLFIFO_c.
  Optimizing cells in module \generic_fifo_sc_a.
  Optimizing cells in module \generic_fifo_sc_b.
  Optimizing cells in module \generic_fifo_sc_c.
  Optimizing cells in module \mkPktMerge.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\arSRLFIFO_a'.
Finding identical cells in module `\arSRLFIFO_b'.
Finding identical cells in module `\arSRLFIFO_c'.
Finding identical cells in module `\generic_fifo_sc_a'.
Finding identical cells in module `\generic_fifo_sc_b'.
Finding identical cells in module `\generic_fifo_sc_c'.
Finding identical cells in module `\mkPktMerge'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \arSRLFIFO_a..
Finding unused cells or wires in module \arSRLFIFO_b..
Finding unused cells or wires in module \arSRLFIFO_c..
Finding unused cells or wires in module \generic_fifo_sc_a..
Finding unused cells or wires in module \generic_fifo_sc_b..
Finding unused cells or wires in module \generic_fifo_sc_c..
Finding unused cells or wires in module \mkPktMerge..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module arSRLFIFO_a.
Optimizing module arSRLFIFO_b.
Optimizing module arSRLFIFO_c.
Optimizing module generic_fifo_sc_a.
Optimizing module generic_fifo_sc_b.
Optimizing module generic_fifo_sc_c.
Optimizing module mkPktMerge.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== arSRLFIFO_a ===

   Number of wires:                 18
   Number of wire bits:            323
   Number of public wires:          18
   Number of public wire bits:     323
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     generic_fifo_sc_a               1

=== arSRLFIFO_b ===

   Number of wires:                 18
   Number of wire bits:            323
   Number of public wires:          18
   Number of public wire bits:     323
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     generic_fifo_sc_b               1

=== arSRLFIFO_c ===

   Number of wires:                 18
   Number of wire bits:            323
   Number of public wires:          18
   Number of public wire bits:     323
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     generic_fifo_sc_c               1

=== generic_fifo_sc_a ===

   Number of wires:                 94
   Number of wire bits:            890
   Number of public wires:          28
   Number of public wire bits:     808
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 84
     $add                            5
     $eq                             4
     $ge                             2
     $le                             2
     $logic_and                     25
     $logic_not                      5
     $lt                             2
     $mux                           14
     $ne                             3
     $not                            1
     $or                             3
     $reduce_bool                    7
     $reduce_or                      1
     $sdffe                          9
     dual_port_ram                   1

=== generic_fifo_sc_b ===

   Number of wires:                 94
   Number of wire bits:            890
   Number of public wires:          28
   Number of public wire bits:     808
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 84
     $add                            5
     $eq                             4
     $ge                             2
     $le                             2
     $logic_and                     25
     $logic_not                      5
     $lt                             2
     $mux                           14
     $ne                             3
     $not                            1
     $or                             3
     $reduce_bool                    7
     $reduce_or                      1
     $sdffe                          9
     dual_port_ram                   1

=== generic_fifo_sc_c ===

   Number of wires:                 94
   Number of wire bits:            890
   Number of public wires:          28
   Number of public wire bits:     808
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 84
     $add                            5
     $eq                             4
     $ge                             2
     $le                             2
     $logic_and                     25
     $logic_not                      5
     $lt                             2
     $mux                           14
     $ne                             3
     $not                            1
     $or                             3
     $reduce_bool                    7
     $reduce_or                      1
     $sdffe                          9
     dual_port_ram                   1

=== mkPktMerge ===

   Number of wires:                 72
   Number of wire bits:           1592
   Number of public wires:          58
   Number of public wire bits:    1578
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 36
     $logic_and                     14
     $logic_not                      7
     $logic_or                       4
     $mux                            5
     $sdffe                          3
     arSRLFIFO_a                     1
     arSRLFIFO_b                     1
     arSRLFIFO_c                     1

=== design hierarchy ===

   mkPktMerge                        1
     arSRLFIFO_a                     1
       generic_fifo_sc_a             1
     arSRLFIFO_b                     1
       generic_fifo_sc_b             1
     arSRLFIFO_c                     1
       generic_fifo_sc_c             1

   Number of wires:                408
   Number of wire bits:           5231
   Number of public wires:         196
   Number of public wire bits:    4971
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                285
     $add                           15
     $eq                            12
     $ge                             6
     $le                             6
     $logic_and                     89
     $logic_not                     22
     $logic_or                       4
     $lt                             6
     $mux                           47
     $ne                             9
     $not                            3
     $or                             9
     $reduce_bool                   21
     $reduce_or                      3
     $sdffe                         30
     dual_port_ram                   3

End of script. Logfile hash: 4e34f254e7, CPU: user 0.23s system 0.00s, MEM: 15.12 MB peak
Yosys 0.10+12 (git sha1 4d87019, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 28% 5x opt_expr (0 sec), 21% 3x opt_clean (0 sec), ...
