
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v' to AST representation.
Generating RTLIL representation for module `\dual_port_ram'.
Generating RTLIL representation for module `\mkPktMerge'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:254.3-269.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:300.3-312.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\arSRLFIFO_a'.
Generating RTLIL representation for module `\generic_fifo_sc_a'.
Generating RTLIL representation for module `\arSRLFIFO_b'.
Generating RTLIL representation for module `\generic_fifo_sc_b'.
Generating RTLIL representation for module `\arSRLFIFO_c'.
Generating RTLIL representation for module `\generic_fifo_sc_c'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   1 design levels: generic_fifo_sc_c   
root of   2 design levels: arSRLFIFO_c         
root of   1 design levels: generic_fifo_sc_b   
root of   2 design levels: arSRLFIFO_b         
root of   1 design levels: generic_fifo_sc_a   
root of   2 design levels: arSRLFIFO_a         
root of   3 design levels: mkPktMerge          
root of   0 design levels: dual_port_ram       
Automatically selected mkPktMerge as design top module.

2.2. Analyzing design hierarchy..
Top module:  \mkPktMerge
Used module:     \arSRLFIFO_c
Used module:         \generic_fifo_sc_c
Used module:             \dual_port_ram
Used module:     \arSRLFIFO_b
Used module:         \generic_fifo_sc_b
Used module:     \arSRLFIFO_a
Used module:         \generic_fifo_sc_a
Parameter \DATA_WIDTH = 153
Parameter \ADDR_WIDTH = 4

2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\dual_port_ram'.
Parameter \DATA_WIDTH = 153
Parameter \ADDR_WIDTH = 4
Generating RTLIL representation for module `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram'.
Parameter \DATA_WIDTH = 153
Parameter \ADDR_WIDTH = 4
Found cached RTLIL representation for module `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram'.
Parameter \DATA_WIDTH = 153
Parameter \ADDR_WIDTH = 4
Found cached RTLIL representation for module `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram'.

2.4. Analyzing design hierarchy..
Top module:  \mkPktMerge
Used module:     \arSRLFIFO_c
Used module:         \generic_fifo_sc_c
Used module:             $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram
Used module:     \arSRLFIFO_b
Used module:         \generic_fifo_sc_b
Used module:     \arSRLFIFO_a
Used module:         \generic_fifo_sc_a

2.5. Analyzing design hierarchy..
Top module:  \mkPktMerge
Used module:     \arSRLFIFO_c
Used module:         \generic_fifo_sc_c
Used module:             $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram
Used module:     \arSRLFIFO_b
Used module:         \generic_fifo_sc_b
Used module:     \arSRLFIFO_a
Used module:         \generic_fifo_sc_a
Removing unused module `\dual_port_ram'.
Removed 1 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1575$299 in module generic_fifo_sc_c.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1565$289 in module generic_fifo_sc_c.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1550$281 in module generic_fifo_sc_c.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1530$264 in module generic_fifo_sc_c.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1520$251 in module generic_fifo_sc_c.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1510$245 in module generic_fifo_sc_c.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1494$241 in module generic_fifo_sc_c.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1475$233 in module generic_fifo_sc_c.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1464$229 in module generic_fifo_sc_c.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1163$219 in module generic_fifo_sc_b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1153$209 in module generic_fifo_sc_b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1138$201 in module generic_fifo_sc_b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1118$184 in module generic_fifo_sc_b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1108$171 in module generic_fifo_sc_b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1098$165 in module generic_fifo_sc_b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1082$161 in module generic_fifo_sc_b.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1063$153 in module generic_fifo_sc_b.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1052$149 in module generic_fifo_sc_b.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:752$139 in module generic_fifo_sc_a.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:742$129 in module generic_fifo_sc_a.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:727$121 in module generic_fifo_sc_a.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:707$104 in module generic_fifo_sc_a.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:697$91 in module generic_fifo_sc_a.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:687$85 in module generic_fifo_sc_a.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:671$81 in module generic_fifo_sc_a.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:652$73 in module generic_fifo_sc_a.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:641$69 in module generic_fifo_sc_a.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:325$67 in module mkPktMerge.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:63$319 in module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:54$311 in module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 8 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1575$299'.
     1/1: $0\full_n_r[0:0]
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1565$289'.
     1/1: $0\empty_n_r[0:0]
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1550$281'.
     1/1: $0\cnt[4:0]
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1530$264'.
     1/1: $0\empty_r[0:0]
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1520$251'.
     1/1: $0\full_r[0:0]
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1510$245'.
     1/1: $0\gb2[0:0]
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1494$241'.
     1/1: $0\gb[0:0]
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1475$233'.
     1/1: $0\rp[3:0]
Creating decoders for process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1464$229'.
     1/1: $0\wp[3:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1163$219'.
     1/1: $0\full_n_r[0:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1153$209'.
     1/1: $0\empty_n_r[0:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1138$201'.
     1/1: $0\cnt[4:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1118$184'.
     1/1: $0\empty_r[0:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1108$171'.
     1/1: $0\full_r[0:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1098$165'.
     1/1: $0\gb2[0:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1082$161'.
     1/1: $0\gb[0:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1063$153'.
     1/1: $0\rp[3:0]
Creating decoders for process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1052$149'.
     1/1: $0\wp[3:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:752$139'.
     1/1: $0\full_n_r[0:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:742$129'.
     1/1: $0\empty_n_r[0:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:727$121'.
     1/1: $0\cnt[4:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:707$104'.
     1/1: $0\empty_r[0:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:697$91'.
     1/1: $0\full_r[0:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:687$85'.
     1/1: $0\gb2[0:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:671$81'.
     1/1: $0\gb[0:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:652$73'.
     1/1: $0\rp[3:0]
Creating decoders for process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:641$69'.
     1/1: $0\wp[3:0]
Creating decoders for process `\mkPktMerge.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:325$67'.
     1/3: $0\fi1Active[0:0]
     2/3: $0\fi0HasPrio[0:0]
     3/3: $0\fi0Active[0:0]
Creating decoders for process `\mkPktMerge.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:300$62'.
Creating decoders for process `\mkPktMerge.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:254$48'.
Creating decoders for process `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:63$319'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:65$310_EN[152:0]$325
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:65$310_DATA[152:0]$324
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:65$310_ADDR[3:0]$323
     4/4: $0\out2[152:0]
Creating decoders for process `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:54$311'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:56$309_EN[152:0]$317
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:56$309_DATA[152:0]$316
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:56$309_ADDR[3:0]$315
     4/4: $0\out1[152:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\mkPktMerge.\fo__D_IN' from process `\mkPktMerge.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:300$62'.
No latch inferred for signal `\mkPktMerge.\fi0HasPrio__D_IN' from process `\mkPktMerge.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:254$48'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\generic_fifo_sc_c.\full_n_r' using process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1575$299'.
  created $dff cell `$procdff$645' with positive edge clock.
Creating register for signal `\generic_fifo_sc_c.\empty_n_r' using process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1565$289'.
  created $dff cell `$procdff$646' with positive edge clock.
Creating register for signal `\generic_fifo_sc_c.\cnt' using process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1550$281'.
  created $dff cell `$procdff$647' with positive edge clock.
Creating register for signal `\generic_fifo_sc_c.\empty_r' using process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1530$264'.
  created $dff cell `$procdff$648' with positive edge clock.
Creating register for signal `\generic_fifo_sc_c.\full_r' using process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1520$251'.
  created $dff cell `$procdff$649' with positive edge clock.
Creating register for signal `\generic_fifo_sc_c.\gb2' using process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1510$245'.
  created $dff cell `$procdff$650' with positive edge clock.
Creating register for signal `\generic_fifo_sc_c.\gb' using process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1494$241'.
  created $dff cell `$procdff$651' with positive edge clock.
Creating register for signal `\generic_fifo_sc_c.\rp' using process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1475$233'.
  created $dff cell `$procdff$652' with positive edge clock.
Creating register for signal `\generic_fifo_sc_c.\wp' using process `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1464$229'.
  created $dff cell `$procdff$653' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\full_n_r' using process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1163$219'.
  created $dff cell `$procdff$654' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\empty_n_r' using process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1153$209'.
  created $dff cell `$procdff$655' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\cnt' using process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1138$201'.
  created $dff cell `$procdff$656' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\empty_r' using process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1118$184'.
  created $dff cell `$procdff$657' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\full_r' using process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1108$171'.
  created $dff cell `$procdff$658' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\gb2' using process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1098$165'.
  created $dff cell `$procdff$659' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\gb' using process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1082$161'.
  created $dff cell `$procdff$660' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\rp' using process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1063$153'.
  created $dff cell `$procdff$661' with positive edge clock.
Creating register for signal `\generic_fifo_sc_b.\wp' using process `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1052$149'.
  created $dff cell `$procdff$662' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\full_n_r' using process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:752$139'.
  created $dff cell `$procdff$663' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\empty_n_r' using process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:742$129'.
  created $dff cell `$procdff$664' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\cnt' using process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:727$121'.
  created $dff cell `$procdff$665' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\empty_r' using process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:707$104'.
  created $dff cell `$procdff$666' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\full_r' using process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:697$91'.
  created $dff cell `$procdff$667' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\gb2' using process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:687$85'.
  created $dff cell `$procdff$668' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\gb' using process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:671$81'.
  created $dff cell `$procdff$669' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\rp' using process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:652$73'.
  created $dff cell `$procdff$670' with positive edge clock.
Creating register for signal `\generic_fifo_sc_a.\wp' using process `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:641$69'.
  created $dff cell `$procdff$671' with positive edge clock.
Creating register for signal `\mkPktMerge.\fi0Active' using process `\mkPktMerge.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:325$67'.
  created $dff cell `$procdff$672' with positive edge clock.
Creating register for signal `\mkPktMerge.\fi0HasPrio' using process `\mkPktMerge.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:325$67'.
  created $dff cell `$procdff$673' with positive edge clock.
Creating register for signal `\mkPktMerge.\fi1Active' using process `\mkPktMerge.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:325$67'.
  created $dff cell `$procdff$674' with positive edge clock.
Creating register for signal `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.\out2' using process `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:63$319'.
  created $dff cell `$procdff$675' with positive edge clock.
Creating register for signal `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:65$310_ADDR' using process `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:63$319'.
  created $dff cell `$procdff$676' with positive edge clock.
Creating register for signal `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:65$310_DATA' using process `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:63$319'.
  created $dff cell `$procdff$677' with positive edge clock.
Creating register for signal `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:65$310_EN' using process `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:63$319'.
  created $dff cell `$procdff$678' with positive edge clock.
Creating register for signal `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.\out1' using process `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:54$311'.
  created $dff cell `$procdff$679' with positive edge clock.
Creating register for signal `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:56$309_ADDR' using process `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:54$311'.
  created $dff cell `$procdff$680' with positive edge clock.
Creating register for signal `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:56$309_DATA' using process `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:54$311'.
  created $dff cell `$procdff$681' with positive edge clock.
Creating register for signal `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:56$309_EN' using process `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:54$311'.
  created $dff cell `$procdff$682' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 4 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1575$299'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1575$299'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1565$289'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1565$289'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1550$281'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1550$281'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1530$264'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1530$264'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1520$251'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1520$251'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1510$245'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1510$245'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1494$241'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1494$241'.
Found and cleaned up 3 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1475$233'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1475$233'.
Found and cleaned up 3 empty switches in `\generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1464$229'.
Removing empty process `generic_fifo_sc_c.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1464$229'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1163$219'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1163$219'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1153$209'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1153$209'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1138$201'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1138$201'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1118$184'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1118$184'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1108$171'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1108$171'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1098$165'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1098$165'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1082$161'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1082$161'.
Found and cleaned up 3 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1063$153'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1063$153'.
Found and cleaned up 3 empty switches in `\generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1052$149'.
Removing empty process `generic_fifo_sc_b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1052$149'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:752$139'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:752$139'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:742$129'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:742$129'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:727$121'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:727$121'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:707$104'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:707$104'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:697$91'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:697$91'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:687$85'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:687$85'.
Found and cleaned up 4 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:671$81'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:671$81'.
Found and cleaned up 3 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:652$73'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:652$73'.
Found and cleaned up 3 empty switches in `\generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:641$69'.
Removing empty process `generic_fifo_sc_a.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:641$69'.
Found and cleaned up 4 empty switches in `\mkPktMerge.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:325$67'.
Removing empty process `mkPktMerge.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:325$67'.
Removing empty process `mkPktMerge.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:300$62'.
Removing empty process `mkPktMerge.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:254$48'.
Found and cleaned up 1 empty switch in `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:63$319'.
Removing empty process `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:63$319'.
Found and cleaned up 1 empty switch in `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:54$311'.
Removing empty process `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:54$311'.
Cleaned up 108 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module generic_fifo_sc_c.
<suppressed ~9 debug messages>
Optimizing module arSRLFIFO_c.
Optimizing module generic_fifo_sc_b.
<suppressed ~9 debug messages>
Optimizing module arSRLFIFO_b.
Optimizing module generic_fifo_sc_a.
<suppressed ~9 debug messages>
Optimizing module arSRLFIFO_a.
Optimizing module mkPktMerge.
<suppressed ~3 debug messages>
Optimizing module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module generic_fifo_sc_c.
Optimizing module arSRLFIFO_c.
Optimizing module generic_fifo_sc_b.
Optimizing module arSRLFIFO_b.
Optimizing module generic_fifo_sc_a.
Optimizing module arSRLFIFO_a.
Optimizing module mkPktMerge.
Optimizing module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\generic_fifo_sc_c'.
<suppressed ~57 debug messages>
Finding identical cells in module `\arSRLFIFO_c'.
Finding identical cells in module `\generic_fifo_sc_b'.
<suppressed ~57 debug messages>
Finding identical cells in module `\arSRLFIFO_b'.
Finding identical cells in module `\generic_fifo_sc_a'.
<suppressed ~57 debug messages>
Finding identical cells in module `\arSRLFIFO_a'.
Finding identical cells in module `\mkPktMerge'.
<suppressed ~48 debug messages>
Finding identical cells in module `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram'.
Removed a total of 73 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \generic_fifo_sc_c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \arSRLFIFO_c..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \generic_fifo_sc_b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \arSRLFIFO_b..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \generic_fifo_sc_a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \arSRLFIFO_a..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mkPktMerge..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~41 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \generic_fifo_sc_c.
  Optimizing cells in module \arSRLFIFO_c.
  Optimizing cells in module \generic_fifo_sc_b.
  Optimizing cells in module \arSRLFIFO_b.
  Optimizing cells in module \generic_fifo_sc_a.
  Optimizing cells in module \arSRLFIFO_a.
  Optimizing cells in module \mkPktMerge.
  Optimizing cells in module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.
    Consolidated identical input bits for $mux cell $procmux$634:
      Old ports: A=153'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, B=153'111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111, Y=$procmux$634_Y
      New ports: A=1'0, B=1'1, Y=$procmux$634_Y [0]
      New connections: $procmux$634_Y [152:1] = { $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] $procmux$634_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$622:
      Old ports: A=153'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, B=153'111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111, Y=$procmux$622_Y
      New ports: A=1'0, B=1'1, Y=$procmux$622_Y [0]
      New connections: $procmux$622_Y [152:1] = { $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] $procmux$622_Y [0] }
  Optimizing cells in module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.
Performed a total of 2 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\generic_fifo_sc_c'.
Finding identical cells in module `\arSRLFIFO_c'.
Finding identical cells in module `\generic_fifo_sc_b'.
Finding identical cells in module `\arSRLFIFO_b'.
Finding identical cells in module `\generic_fifo_sc_a'.
Finding identical cells in module `\arSRLFIFO_a'.
Finding identical cells in module `\mkPktMerge'.
Finding identical cells in module `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$645 ($dff) from module generic_fifo_sc_c (D = $procmux$330_Y, Q = \full_n_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$685 ($sdff) from module generic_fifo_sc_c (D = $procmux$330_Y, Q = \full_n_r).
Adding SRST signal on $procdff$646 ($dff) from module generic_fifo_sc_c (D = $procmux$341_Y, Q = \empty_n_r, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$693 ($sdff) from module generic_fifo_sc_c (D = $procmux$341_Y, Q = \empty_n_r).
Adding SRST signal on $procdff$647 ($dff) from module generic_fifo_sc_c (D = $procmux$352_Y, Q = \cnt, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$701 ($sdff) from module generic_fifo_sc_c (D = $procmux$352_Y, Q = \cnt).
Adding SRST signal on $procdff$648 ($dff) from module generic_fifo_sc_c (D = $procmux$363_Y, Q = \empty_r, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$709 ($sdff) from module generic_fifo_sc_c (D = $procmux$363_Y, Q = \empty_r).
Adding SRST signal on $procdff$649 ($dff) from module generic_fifo_sc_c (D = $procmux$374_Y, Q = \full_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$717 ($sdff) from module generic_fifo_sc_c (D = $procmux$374_Y, Q = \full_r).
Adding SRST signal on $procdff$650 ($dff) from module generic_fifo_sc_c (D = $procmux$385_Y, Q = \gb2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$725 ($sdff) from module generic_fifo_sc_c (D = $procmux$385_Y, Q = \gb2).
Adding SRST signal on $procdff$651 ($dff) from module generic_fifo_sc_c (D = $procmux$396_Y, Q = \gb, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$733 ($sdff) from module generic_fifo_sc_c (D = $procmux$396_Y, Q = \gb).
Adding SRST signal on $procdff$652 ($dff) from module generic_fifo_sc_c (D = $procmux$404_Y, Q = \rp, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$741 ($sdff) from module generic_fifo_sc_c (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1483$235_Y, Q = \rp).
Adding SRST signal on $procdff$653 ($dff) from module generic_fifo_sc_c (D = $procmux$412_Y, Q = \wp, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$747 ($sdff) from module generic_fifo_sc_c (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1472$231_Y, Q = \wp).
Adding SRST signal on $procdff$654 ($dff) from module generic_fifo_sc_b (D = $procmux$423_Y, Q = \full_n_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$753 ($sdff) from module generic_fifo_sc_b (D = $procmux$423_Y, Q = \full_n_r).
Adding SRST signal on $procdff$655 ($dff) from module generic_fifo_sc_b (D = $procmux$434_Y, Q = \empty_n_r, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$761 ($sdff) from module generic_fifo_sc_b (D = $procmux$434_Y, Q = \empty_n_r).
Adding SRST signal on $procdff$656 ($dff) from module generic_fifo_sc_b (D = $procmux$445_Y, Q = \cnt, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$769 ($sdff) from module generic_fifo_sc_b (D = $procmux$445_Y, Q = \cnt).
Adding SRST signal on $procdff$657 ($dff) from module generic_fifo_sc_b (D = $procmux$456_Y, Q = \empty_r, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$777 ($sdff) from module generic_fifo_sc_b (D = $procmux$456_Y, Q = \empty_r).
Adding SRST signal on $procdff$658 ($dff) from module generic_fifo_sc_b (D = $procmux$467_Y, Q = \full_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$785 ($sdff) from module generic_fifo_sc_b (D = $procmux$467_Y, Q = \full_r).
Adding SRST signal on $procdff$659 ($dff) from module generic_fifo_sc_b (D = $procmux$478_Y, Q = \gb2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$793 ($sdff) from module generic_fifo_sc_b (D = $procmux$478_Y, Q = \gb2).
Adding SRST signal on $procdff$660 ($dff) from module generic_fifo_sc_b (D = $procmux$489_Y, Q = \gb, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$801 ($sdff) from module generic_fifo_sc_b (D = $procmux$489_Y, Q = \gb).
Adding SRST signal on $procdff$661 ($dff) from module generic_fifo_sc_b (D = $procmux$497_Y, Q = \rp, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$809 ($sdff) from module generic_fifo_sc_b (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1071$155_Y, Q = \rp).
Adding SRST signal on $procdff$662 ($dff) from module generic_fifo_sc_b (D = $procmux$505_Y, Q = \wp, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$815 ($sdff) from module generic_fifo_sc_b (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:1060$151_Y, Q = \wp).
Adding SRST signal on $procdff$663 ($dff) from module generic_fifo_sc_a (D = $procmux$516_Y, Q = \full_n_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$821 ($sdff) from module generic_fifo_sc_a (D = $procmux$516_Y, Q = \full_n_r).
Adding SRST signal on $procdff$664 ($dff) from module generic_fifo_sc_a (D = $procmux$527_Y, Q = \empty_n_r, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$829 ($sdff) from module generic_fifo_sc_a (D = $procmux$527_Y, Q = \empty_n_r).
Adding SRST signal on $procdff$665 ($dff) from module generic_fifo_sc_a (D = $procmux$538_Y, Q = \cnt, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$837 ($sdff) from module generic_fifo_sc_a (D = $procmux$538_Y, Q = \cnt).
Adding SRST signal on $procdff$666 ($dff) from module generic_fifo_sc_a (D = $procmux$549_Y, Q = \empty_r, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$845 ($sdff) from module generic_fifo_sc_a (D = $procmux$549_Y, Q = \empty_r).
Adding SRST signal on $procdff$667 ($dff) from module generic_fifo_sc_a (D = $procmux$560_Y, Q = \full_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$853 ($sdff) from module generic_fifo_sc_a (D = $procmux$560_Y, Q = \full_r).
Adding SRST signal on $procdff$668 ($dff) from module generic_fifo_sc_a (D = $procmux$571_Y, Q = \gb2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$861 ($sdff) from module generic_fifo_sc_a (D = $procmux$571_Y, Q = \gb2).
Adding SRST signal on $procdff$669 ($dff) from module generic_fifo_sc_a (D = $procmux$582_Y, Q = \gb, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$869 ($sdff) from module generic_fifo_sc_a (D = $procmux$582_Y, Q = \gb).
Adding SRST signal on $procdff$670 ($dff) from module generic_fifo_sc_a (D = $procmux$590_Y, Q = \rp, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$877 ($sdff) from module generic_fifo_sc_a (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:660$75_Y, Q = \rp).
Adding SRST signal on $procdff$671 ($dff) from module generic_fifo_sc_a (D = $procmux$598_Y, Q = \wp, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$883 ($sdff) from module generic_fifo_sc_a (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:649$71_Y, Q = \wp).
Adding SRST signal on $procdff$672 ($dff) from module mkPktMerge (D = $procmux$616_Y, Q = \fi0Active, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$889 ($sdff) from module mkPktMerge (D = $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:246$45_Y, Q = \fi0Active).
Adding SRST signal on $procdff$673 ($dff) from module mkPktMerge (D = $procmux$611_Y, Q = \fi0HasPrio, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$891 ($sdff) from module mkPktMerge (D = $logic_not$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:294$59_Y, Q = \fi0HasPrio).
Adding SRST signal on $procdff$674 ($dff) from module mkPktMerge (D = $procmux$606_Y, Q = \fi1Active, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$893 ($sdff) from module mkPktMerge (D = $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:276$53_Y, Q = \fi1Active).
Adding EN signal on $procdff$675 ($dff) from module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:68$326_DATA, Q = \out2).
Adding EN signal on $procdff$679 ($dff) from module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/mkPktMerge.v:59$318_DATA, Q = \out1).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \generic_fifo_sc_c..
Finding unused cells or wires in module \arSRLFIFO_c..
Finding unused cells or wires in module \generic_fifo_sc_b..
Finding unused cells or wires in module \arSRLFIFO_b..
Finding unused cells or wires in module \generic_fifo_sc_a..
Finding unused cells or wires in module \arSRLFIFO_a..
Finding unused cells or wires in module \mkPktMerge..
Finding unused cells or wires in module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram..
Removed 78 unused cells and 354 unused wires.
<suppressed ~84 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.
Optimizing module arSRLFIFO_a.
Optimizing module arSRLFIFO_b.
Optimizing module arSRLFIFO_c.
Optimizing module generic_fifo_sc_a.
<suppressed ~7 debug messages>
Optimizing module generic_fifo_sc_b.
<suppressed ~7 debug messages>
Optimizing module generic_fifo_sc_c.
<suppressed ~7 debug messages>
Optimizing module mkPktMerge.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \arSRLFIFO_a..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \arSRLFIFO_b..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \arSRLFIFO_c..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \generic_fifo_sc_a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \generic_fifo_sc_b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \generic_fifo_sc_c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mkPktMerge..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.
  Optimizing cells in module \arSRLFIFO_a.
  Optimizing cells in module \arSRLFIFO_b.
  Optimizing cells in module \arSRLFIFO_c.
  Optimizing cells in module \generic_fifo_sc_a.
  Optimizing cells in module \generic_fifo_sc_b.
  Optimizing cells in module \generic_fifo_sc_c.
  Optimizing cells in module \mkPktMerge.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram'.
Finding identical cells in module `\arSRLFIFO_a'.
Finding identical cells in module `\arSRLFIFO_b'.
Finding identical cells in module `\arSRLFIFO_c'.
Finding identical cells in module `\generic_fifo_sc_a'.
<suppressed ~48 debug messages>
Finding identical cells in module `\generic_fifo_sc_b'.
<suppressed ~48 debug messages>
Finding identical cells in module `\generic_fifo_sc_c'.
<suppressed ~48 debug messages>
Finding identical cells in module `\mkPktMerge'.
Removed a total of 48 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram..
Finding unused cells or wires in module \arSRLFIFO_a..
Finding unused cells or wires in module \arSRLFIFO_b..
Finding unused cells or wires in module \arSRLFIFO_c..
Finding unused cells or wires in module \generic_fifo_sc_a..
Finding unused cells or wires in module \generic_fifo_sc_b..
Finding unused cells or wires in module \generic_fifo_sc_c..
Finding unused cells or wires in module \mkPktMerge..
Removed 0 unused cells and 48 unused wires.
<suppressed ~3 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.
Optimizing module arSRLFIFO_a.
Optimizing module arSRLFIFO_b.
Optimizing module arSRLFIFO_c.
Optimizing module generic_fifo_sc_a.
Optimizing module generic_fifo_sc_b.
Optimizing module generic_fifo_sc_c.
Optimizing module mkPktMerge.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \arSRLFIFO_a..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \arSRLFIFO_b..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \arSRLFIFO_c..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \generic_fifo_sc_a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \generic_fifo_sc_b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \generic_fifo_sc_c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mkPktMerge..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.
  Optimizing cells in module \arSRLFIFO_a.
  Optimizing cells in module \arSRLFIFO_b.
  Optimizing cells in module \arSRLFIFO_c.
  Optimizing cells in module \generic_fifo_sc_a.
  Optimizing cells in module \generic_fifo_sc_b.
  Optimizing cells in module \generic_fifo_sc_c.
  Optimizing cells in module \mkPktMerge.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram'.
Finding identical cells in module `\arSRLFIFO_a'.
Finding identical cells in module `\arSRLFIFO_b'.
Finding identical cells in module `\arSRLFIFO_c'.
Finding identical cells in module `\generic_fifo_sc_a'.
Finding identical cells in module `\generic_fifo_sc_b'.
Finding identical cells in module `\generic_fifo_sc_c'.
Finding identical cells in module `\mkPktMerge'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram..
Finding unused cells or wires in module \arSRLFIFO_a..
Finding unused cells or wires in module \arSRLFIFO_b..
Finding unused cells or wires in module \arSRLFIFO_c..
Finding unused cells or wires in module \generic_fifo_sc_a..
Finding unused cells or wires in module \generic_fifo_sc_b..
Finding unused cells or wires in module \generic_fifo_sc_c..
Finding unused cells or wires in module \mkPktMerge..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram.
Optimizing module arSRLFIFO_a.
Optimizing module arSRLFIFO_b.
Optimizing module arSRLFIFO_c.
Optimizing module generic_fifo_sc_a.
Optimizing module generic_fifo_sc_b.
Optimizing module generic_fifo_sc_c.
Optimizing module mkPktMerge.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram ===

   Number of wires:                 17
   Number of wire bits:           1549
   Number of public wires:           9
   Number of public wire bits:     623
   Number of memories:               1
   Number of memory bits:          612
   Number of processes:              0
   Number of cells:                 12
     $dffe                         306
     $mux                          316

=== arSRLFIFO_a ===

   Number of wires:                 18
   Number of wire bits:            323
   Number of public wires:          18
   Number of public wire bits:     323
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1

=== arSRLFIFO_b ===

   Number of wires:                 18
   Number of wire bits:            323
   Number of public wires:          18
   Number of public wire bits:     323
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1

=== arSRLFIFO_c ===

   Number of wires:                 18
   Number of wire bits:            323
   Number of public wires:          18
   Number of public wire bits:     323
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1

=== generic_fifo_sc_a ===

   Number of wires:                 94
   Number of wire bits:            890
   Number of public wires:          28
   Number of public wire bits:     808
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 84
     $add                           22
     $eq                            16
     $ge                            64
     $le                            64
     $logic_and                     25
     $logic_not                      5
     $lt                            64
     $mux                           22
     $ne                            12
     $not                            1
     $or                             4
     $reduce_bool                   14
     $reduce_or                      2
     $sdffe                         19

=== generic_fifo_sc_b ===

   Number of wires:                 94
   Number of wire bits:            890
   Number of public wires:          28
   Number of public wire bits:     808
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 84
     $add                           22
     $eq                            16
     $ge                            64
     $le                            64
     $logic_and                     25
     $logic_not                      5
     $lt                            64
     $mux                           22
     $ne                            12
     $not                            1
     $or                             4
     $reduce_bool                   14
     $reduce_or                      2
     $sdffe                         19

=== generic_fifo_sc_c ===

   Number of wires:                 94
   Number of wire bits:            890
   Number of public wires:          28
   Number of public wire bits:     808
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 84
     $add                           22
     $eq                            16
     $ge                            64
     $le                            64
     $logic_and                     25
     $logic_not                      5
     $lt                            64
     $mux                           22
     $ne                            12
     $not                            1
     $or                             4
     $reduce_bool                   14
     $reduce_or                      2
     $sdffe                         19

=== mkPktMerge ===

   Number of wires:                 72
   Number of wire bits:           1592
   Number of public wires:          58
   Number of public wire bits:    1578
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 36
     $logic_and                     14
     $logic_not                      7
     $logic_or                       4
     $mux                          157
     $sdffe                          3

=== design hierarchy ===

   mkPktMerge                        1
     arSRLFIFO_a                     0
       generic_fifo_sc_a             0
         $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram      0
     arSRLFIFO_b                     0
       generic_fifo_sc_b             0
         $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram      0
     arSRLFIFO_c                     0
       generic_fifo_sc_c             0
         $paramod$787b2b116888960e7723a738800dc0d62f27a28e\dual_port_ram      0

   Number of wires:                 72
   Number of wire bits:           1592
   Number of public wires:          58
   Number of public wire bits:    1578
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 36
     $logic_and                     14
     $logic_not                      7
     $logic_or                       4
     $mux                          157
     $sdffe                          3

End of script. Logfile hash: 1071d073ea, CPU: user 0.29s system 0.00s, MEM: 15.88 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 23% 5x opt_expr (0 sec), 23% 3x opt_clean (0 sec), ...
