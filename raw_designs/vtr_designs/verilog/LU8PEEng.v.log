
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v' to AST representation.
Warning: Encountered `translate_off' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using a portable and standards-compliant construct such as `ifdef is recommended!
Generating RTLIL representation for module `\single_port_ram'.
Generating RTLIL representation for module `\dual_port_ram'.
Generating RTLIL representation for module `\LU8PEEng'.
Generating RTLIL representation for module `\MarshallerController'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:590.1-602.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\LU'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1026.1-1070.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\LUControl'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1559.1-1749.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1751.1-1766.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1769.1-1792.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\ram'.
Generating RTLIL representation for module `\ram1'.
Generating RTLIL representation for module `\ram2'.
Generating RTLIL representation for module `\ram3'.
Generating RTLIL representation for module `\top_ram'.
Generating RTLIL representation for module `\mult_add'.
Generating RTLIL representation for module `\DataTransferUnit'.
Generating RTLIL representation for module `\rfifo'.
Generating RTLIL representation for module `\wfifo'.
Generating RTLIL representation for module `\addr_fifo'.
Generating RTLIL representation for module `\memcmd_fifo'.
Generating RTLIL representation for module `\fpu_add'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3290.2-3472.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3475.2-3515.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3520.2-3622.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\fpu_div'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3658.2-3664.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3671.2-3673.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3676.2-3774.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\div_24b'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823.2-4015.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\fpmul'.
/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4198: Warning: Identifier `\sign' is implicitly declared.
/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4241: Warning: Identifier `\stilltiny_or_tiny_and_denormround' is implicitly declared.
Generating RTLIL representation for module `\preprocess'.
Generating RTLIL representation for module `\special'.
Generating RTLIL representation for module `\prenorm'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4468.2-4566.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4571.2-4669.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\multiply_a'.
Generating RTLIL representation for module `\exponent'.
Generating RTLIL representation for module `\normalize'.
Generating RTLIL representation for module `\shift'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4784.3-4914.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\round'.
Generating RTLIL representation for module `\flag'.
Generating RTLIL representation for module `\assemble'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: assemble            
root of   0 design levels: flag                
root of   0 design levels: round               
root of   0 design levels: shift               
root of   0 design levels: normalize           
root of   0 design levels: exponent            
root of   0 design levels: multiply_a          
root of   0 design levels: prenorm             
root of   0 design levels: special             
root of   0 design levels: preprocess          
root of   1 design levels: fpmul               
root of   0 design levels: div_24b             
root of   1 design levels: fpu_div             
root of   0 design levels: fpu_add             
root of   1 design levels: memcmd_fifo         
root of   1 design levels: addr_fifo           
root of   1 design levels: wfifo               
root of   1 design levels: rfifo               
root of   2 design levels: DataTransferUnit    
root of   2 design levels: mult_add            
root of   1 design levels: top_ram             
root of   1 design levels: ram3                
root of   1 design levels: ram2                
root of   1 design levels: ram1                
root of   1 design levels: ram                 
root of   0 design levels: LUControl           
root of   3 design levels: LU                  
root of   0 design levels: MarshallerController
root of   4 design levels: LU8PEEng            
root of   0 design levels: dual_port_ram       
root of   0 design levels: single_port_ram     
Automatically selected LU8PEEng as design top module.

2.2. Analyzing design hierarchy..
Top module:  \LU8PEEng
Used module:     \DataTransferUnit
Used module:         \rfifo
Used module:             \dual_port_ram
Used module:         \addr_fifo
Used module:         \wfifo
Used module:         \memcmd_fifo
Used module:     \LU
Used module:         \mult_add
Used module:             \fpu_add
Used module:             \fpmul
Used module:                 \assemble
Used module:                 \flag
Used module:                 \round
Used module:                 \shift
Used module:                 \normalize
Used module:                 \exponent
Used module:                 \multiply_a
Used module:                 \prenorm
Used module:                 \special
Used module:                 \preprocess
Used module:         \top_ram
Used module:         \ram3
Used module:         \ram2
Used module:         \ram1
Used module:         \ram
Used module:         \fpu_div
Used module:             \div_24b
Used module:         \LUControl
Used module:     \MarshallerController
Parameter \DATA_WIDTH = 10'0100000000
Parameter \ADDR_WIDTH = 5

2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\dual_port_ram'.
Parameter \DATA_WIDTH = 10'0100000000
Parameter \ADDR_WIDTH = 5
Generating RTLIL representation for module `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram'.
Parameter \DATA_WIDTH = 10'0100000000
Parameter \ADDR_WIDTH = 5
Found cached RTLIL representation for module `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram'.
Parameter \DATA_WIDTH = 10'0100000000
Parameter \ADDR_WIDTH = 5
Found cached RTLIL representation for module `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram'.
Parameter \DATA_WIDTH = 10'0100000000
Parameter \ADDR_WIDTH = 5
Found cached RTLIL representation for module `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram'.
Parameter \DATA_WIDTH = 32
Parameter \ADDR_WIDTH = 8

2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\dual_port_ram'.
Parameter \DATA_WIDTH = 32
Parameter \ADDR_WIDTH = 8
Generating RTLIL representation for module `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram'.
Parameter \DATA_WIDTH = 6'011100
Parameter \ADDR_WIDTH = 4

2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\dual_port_ram'.
Parameter \DATA_WIDTH = 6'011100
Parameter \ADDR_WIDTH = 4
Generating RTLIL representation for module `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram'.
Parameter \DATA_WIDTH = 10'0100000000
Parameter \ADDR_WIDTH = 4'0100

2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\dual_port_ram'.
Parameter \DATA_WIDTH = 10'0100000000
Parameter \ADDR_WIDTH = 4'0100
Generating RTLIL representation for module `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100'.
Parameter \DATA_WIDTH = 4'0101
Parameter \ADDR_WIDTH = 4'0100

2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\dual_port_ram'.
Parameter \DATA_WIDTH = 4'0101
Parameter \ADDR_WIDTH = 4'0100
Generating RTLIL representation for module `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100'.
Parameter \DATA_WIDTH = 8'01000000
Parameter \ADDR_WIDTH = 4

2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\dual_port_ram'.
Parameter \DATA_WIDTH = 8'01000000
Parameter \ADDR_WIDTH = 4
Generating RTLIL representation for module `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram'.

2.9. Analyzing design hierarchy..
Top module:  \LU8PEEng
Used module:     \DataTransferUnit
Used module:         \rfifo
Used module:             $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram
Used module:         \addr_fifo
Used module:             $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100
Used module:         \wfifo
Used module:             $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100
Used module:         \memcmd_fifo
Used module:             $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram
Used module:     \LU
Used module:         \mult_add
Used module:             \fpu_add
Used module:             \fpmul
Used module:                 \assemble
Used module:                 \flag
Used module:                 \round
Used module:                 \shift
Used module:                 \normalize
Used module:                 \exponent
Used module:                 \multiply_a
Used module:                 \prenorm
Used module:                 \special
Used module:                 \preprocess
Used module:         \top_ram
Used module:             $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram
Used module:         \ram3
Used module:             $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram
Used module:         \ram2
Used module:         \ram1
Used module:         \ram
Used module:         \fpu_div
Used module:             \div_24b
Used module:         \LUControl
Used module:     \MarshallerController

2.10. Analyzing design hierarchy..
Top module:  \LU8PEEng
Used module:     \DataTransferUnit
Used module:         \rfifo
Used module:             $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram
Used module:         \addr_fifo
Used module:             $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100
Used module:         \wfifo
Used module:             $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100
Used module:         \memcmd_fifo
Used module:             $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram
Used module:     \LU
Used module:         \mult_add
Used module:             \fpu_add
Used module:             \fpmul
Used module:                 \assemble
Used module:                 \flag
Used module:                 \round
Used module:                 \shift
Used module:                 \normalize
Used module:                 \exponent
Used module:                 \multiply_a
Used module:                 \prenorm
Used module:                 \special
Used module:                 \preprocess
Used module:         \top_ram
Used module:             $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram
Used module:         \ram3
Used module:             $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram
Used module:         \ram2
Used module:         \ram1
Used module:         \ram
Used module:         \fpu_div
Used module:             \div_24b
Used module:         \LUControl
Used module:     \MarshallerController
Removing unused module `\dual_port_ram'.
Removing unused module `\single_port_ram'.
Removed 2 unused modules.
Mapping positional arguments of cell fpmul.assembler (assemble).
Mapping positional arguments of cell fpmul.flager (flag).
Mapping positional arguments of cell fpmul.rounder (round).
Mapping positional arguments of cell fpmul.shifter (shift).
Mapping positional arguments of cell fpmul.normalizer (normalize).
Mapping positional arguments of cell fpmul.exponenter (exponent).
Mapping positional arguments of cell fpmul.multiplier (multiply_a).
Mapping positional arguments of cell fpmul.prenormer (prenorm).
Mapping positional arguments of cell fpmul.specialer (special).
Mapping positional arguments of cell fpmul.preprocesser (preprocess).
Mapping positional arguments of cell LU.PE7 (mult_add).
Mapping positional arguments of cell LU.PE6 (mult_add).
Mapping positional arguments of cell LU.PE5 (mult_add).
Mapping positional arguments of cell LU.PE4 (mult_add).
Mapping positional arguments of cell LU.PE3 (mult_add).
Mapping positional arguments of cell LU.PE2 (mult_add).
Mapping positional arguments of cell LU.PE1 (mult_add).
Mapping positional arguments of cell LU.PE0 (mult_add).
Mapping positional arguments of cell LU.topBlock (top_ram).
Mapping positional arguments of cell LU.leftBlock1 (ram3).
Mapping positional arguments of cell LU.leftBlock0 (ram2).
Mapping positional arguments of cell LU.currentBlock1 (ram1).
Mapping positional arguments of cell LU.currentBlock0 (ram).
Mapping positional arguments of cell LU.conBlock (LUControl).
Mapping positional arguments of cell LU8PEEng.compBlock (LU).
Mapping positional arguments of cell LU8PEEng.MC (MarshallerController).

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1197 in module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1189 in module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1179 in module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1171 in module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1161 in module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1153 in module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1143 in module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1135 in module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4784$1045 in module shift.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4571$1003 in module prenorm.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4468$978 in module prenorm.
Marked 24 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833 in module div_24b.
Marked 23 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3676$809 in module fpu_div.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3658$801 in module fpu_div.
Marked 24 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3520$775 in module fpu_add.
Marked 6 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3475$761 in module fpu_add.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3290$706 in module fpu_add.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3210$694 in module memcmd_fifo.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3136$676 in module addr_fifo.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3058$658 in module wfifo.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3043$652 in module wfifo.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2971$636 in module rfifo.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2956$630 in module rfifo.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622 in module DataTransferUnit.
Marked 6 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2775$593 in module DataTransferUnit.
Marked 6 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2735$583 in module DataTransferUnit.
Marked 7 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533 in module LUControl.
Marked 17 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499 in module LUControl.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1893$496 in module LUControl.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1884$488 in module LUControl.
Removed 1 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1795$441 in module LUControl.
Marked 14 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1795$441 in module LUControl.
Marked 5 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1769$427 in module LUControl.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1751$409 in module LUControl.
Marked 26 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1559$368 in module LUControl.
Marked 28 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1444$284 in module LUControl.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1409$275 in module LUControl.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268 in module LU.
Removed 2 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1026$248 in module LU.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1026$248 in module LU.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1012$244 in module LU.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237 in module LU.
Marked 15 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142 in module MarshallerController.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:590$141 in module MarshallerController.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:576$140 in module MarshallerController.
Marked 24 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:420$103 in module MarshallerController.
Marked 5 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:380$78 in module MarshallerController.
Marked 10 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:309$58 in module MarshallerController.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1233 in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1225 in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1215 in module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1207 in module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.
Removed a total of 3 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 56 redundant assignments.
Promoted 453 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1197'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1188_EN[255:0]$1203
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1188_DATA[255:0]$1202
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1188_ADDR[3:0]$1201
     4/4: $0\out2[255:0]
Creating decoders for process `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1189'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1187_EN[255:0]$1195
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1187_DATA[255:0]$1194
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1187_ADDR[3:0]$1193
     4/4: $0\out1[255:0]
Creating decoders for process `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1179'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1170_EN[27:0]$1185
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1170_DATA[27:0]$1184
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1170_ADDR[3:0]$1183
     4/4: $0\out2[27:0]
Creating decoders for process `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1171'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1169_EN[27:0]$1177
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1169_DATA[27:0]$1176
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1169_ADDR[3:0]$1175
     4/4: $0\out1[27:0]
Creating decoders for process `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1161'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1152_EN[31:0]$1167
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1152_DATA[31:0]$1166
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1152_ADDR[7:0]$1165
     4/4: $0\out2[31:0]
Creating decoders for process `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1153'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1151_EN[31:0]$1159
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1151_DATA[31:0]$1158
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1151_ADDR[7:0]$1157
     4/4: $0\out1[31:0]
Creating decoders for process `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1143'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1134_EN[255:0]$1149
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1134_DATA[255:0]$1148
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1134_ADDR[4:0]$1147
     4/4: $0\out2[255:0]
Creating decoders for process `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1135'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1133_EN[255:0]$1141
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1133_DATA[255:0]$1140
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1133_ADDR[4:0]$1139
     4/4: $0\out1[255:0]
Creating decoders for process `\shift.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4784$1045'.
     1/1: $1\postshift[95:0]
Creating decoders for process `\prenorm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4571$1003'.
     1/1: $1\shiftedb[23:0]
Creating decoders for process `\prenorm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4468$978'.
     1/1: $1\shifteda[23:0]
Creating decoders for process `\fpmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4250$885'.
Creating decoders for process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
     1/47: $24\res[0:0]
     2/47: $1\numer0[46:0]
     3/47: $23\res[1:1]
     4/47: $1\numer1[46:0]
     5/47: $22\res[2:2]
     6/47: $1\numer2[46:0]
     7/47: $21\res[3:3]
     8/47: $1\numer3[46:0]
     9/47: $20\res[4:4]
    10/47: $1\numer4[46:0]
    11/47: $19\res[5:5]
    12/47: $1\numer5[46:0]
    13/47: $18\res[6:6]
    14/47: $1\numer6[46:0]
    15/47: $17\res[7:7]
    16/47: $1\numer7[46:0]
    17/47: $16\res[8:8]
    18/47: $1\numer8[46:0]
    19/47: $15\res[9:9]
    20/47: $1\numer9[46:0]
    21/47: $14\res[10:10]
    22/47: $1\numer10[46:0]
    23/47: $13\res[11:11]
    24/47: $1\numer11[46:0]
    25/47: $12\res[12:12]
    26/47: $1\numer12[46:0]
    27/47: $11\res[13:13]
    28/47: $1\numer13[46:0]
    29/47: $10\res[14:14]
    30/47: $1\numer14[46:0]
    31/47: $9\res[15:15]
    32/47: $1\numer15[46:0]
    33/47: $8\res[16:16]
    34/47: $1\numer16[46:0]
    35/47: $7\res[17:17]
    36/47: $1\numer17[46:0]
    37/47: $6\res[18:18]
    38/47: $1\numer18[46:0]
    39/47: $5\res[19:19]
    40/47: $1\numer19[46:0]
    41/47: $4\res[20:20]
    42/47: $1\numer20[46:0]
    43/47: $3\res[21:21]
    44/47: $1\numer21[46:0]
    45/47: $2\res[22:22]
    46/47: $1\numer22[46:0]
    47/47: $1\res[23:23]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3676$809'.
     1/46: $23\div[30:0] [30:23]
     2/46: $23\div[30:0] [22:0]
     3/46: $22\div[30:0] [30:23]
     4/46: $22\div[30:0] [22:0]
     5/46: $21\div[30:0] [30:23]
     6/46: $21\div[30:0] [22:0]
     7/46: $20\div[30:0] [30:23]
     8/46: $20\div[30:0] [22:0]
     9/46: $19\div[30:0] [30:23]
    10/46: $19\div[30:0] [22:0]
    11/46: $18\div[30:0] [30:23]
    12/46: $18\div[30:0] [22:0]
    13/46: $17\div[30:0] [30:23]
    14/46: $17\div[30:0] [22:0]
    15/46: $16\div[30:0] [30:23]
    16/46: $16\div[30:0] [22:0]
    17/46: $15\div[30:0] [30:23]
    18/46: $15\div[30:0] [22:0]
    19/46: $14\div[30:0] [30:23]
    20/46: $14\div[30:0] [22:0]
    21/46: $13\div[30:0] [30:23]
    22/46: $13\div[30:0] [22:0]
    23/46: $12\div[30:0] [30:23]
    24/46: $12\div[30:0] [22:0]
    25/46: $11\div[30:0] [30:23]
    26/46: $11\div[30:0] [22:0]
    27/46: $10\div[30:0] [30:23]
    28/46: $10\div[30:0] [22:0]
    29/46: $9\div[30:0] [30:23]
    30/46: $9\div[30:0] [22:0]
    31/46: $8\div[30:0] [30:23]
    32/46: $8\div[30:0] [22:0]
    33/46: $7\div[30:0] [30:23]
    34/46: $7\div[30:0] [22:0]
    35/46: $6\div[30:0] [30:23]
    36/46: $6\div[30:0] [22:0]
    37/46: $5\div[30:0] [30:23]
    38/46: $5\div[30:0] [22:0]
    39/46: $4\div[30:0] [30:23]
    40/46: $4\div[30:0] [22:0]
    41/46: $3\div[30:0] [30:23]
    42/46: $3\div[30:0] [22:0]
    43/46: $2\div[30:0] [30:23]
    44/46: $2\div[30:0] [22:0]
    45/46: $1\div[30:0] [30:23]
    46/46: $1\div[30:0] [22:0]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3671$807'.
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3658$801'.
     1/1: $1\div_exp[7:0]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3648$800'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3520$775'.
     1/48: $24\sum[30:0] [30:23]
     2/48: $24\sum[30:0] [22:0]
     3/48: $23\sum[30:0] [30:23]
     4/48: $23\sum[30:0] [22:0]
     5/48: $22\sum[30:0] [30:23]
     6/48: $22\sum[30:0] [22:0]
     7/48: $21\sum[30:0] [30:23]
     8/48: $21\sum[30:0] [22:0]
     9/48: $20\sum[30:0] [30:23]
    10/48: $20\sum[30:0] [22:0]
    11/48: $19\sum[30:0] [30:23]
    12/48: $19\sum[30:0] [22:0]
    13/48: $18\sum[30:0] [30:23]
    14/48: $18\sum[30:0] [22:0]
    15/48: $17\sum[30:0] [30:23]
    16/48: $17\sum[30:0] [22:0]
    17/48: $16\sum[30:0] [30:23]
    18/48: $16\sum[30:0] [22:0]
    19/48: $15\sum[30:0] [30:23]
    20/48: $15\sum[30:0] [22:0]
    21/48: $14\sum[30:0] [30:23]
    22/48: $14\sum[30:0] [22:0]
    23/48: $13\sum[30:0] [30:23]
    24/48: $13\sum[30:0] [22:0]
    25/48: $12\sum[30:0] [30:23]
    26/48: $12\sum[30:0] [22:0]
    27/48: $11\sum[30:0] [30:23]
    28/48: $11\sum[30:0] [22:0]
    29/48: $10\sum[30:0] [30:23]
    30/48: $10\sum[30:0] [22:0]
    31/48: $9\sum[30:0] [30:23]
    32/48: $9\sum[30:0] [22:0]
    33/48: $8\sum[30:0] [30:23]
    34/48: $8\sum[30:0] [22:0]
    35/48: $7\sum[30:0] [30:23]
    36/48: $7\sum[30:0] [22:0]
    37/48: $6\sum[30:0] [30:23]
    38/48: $6\sum[30:0] [22:0]
    39/48: $5\sum[30:0] [30:23]
    40/48: $5\sum[30:0] [22:0]
    41/48: $4\sum[30:0] [30:23]
    42/48: $4\sum[30:0] [22:0]
    43/48: $3\sum[30:0] [30:23]
    44/48: $3\sum[30:0] [22:0]
    45/48: $2\sum[30:0] [30:23]
    46/48: $2\sum[30:0] [22:0]
    47/48: $1\sum[30:0] [30:23]
    48/48: $1\sum[30:0] [22:0]
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3475$761'.
     1/11: $5\sum[31:31]
     2/11: $5\sum_man[24:0]
     3/11: $4\sum[31:31]
     4/11: $4\sum_man[24:0]
     5/11: $3\sum_man[24:0]
     6/11: $3\sum[31:31]
     7/11: $2\sum[31:31]
     8/11: $2\sum_man[24:0]
     9/11: $1\sum[31:31]
    10/11: $1\sum_man[24:0]
    11/11: $1\smaller[0:0]
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3290$706'.
     1/10: $3\b_man[23:0]
     2/10: $2\a_exp[7:0]
     3/10: $2\b_man[23:0]
     4/10: $3\a_man[23:0]
     5/10: $2\temp[7:0]
     6/10: $2\a_man[23:0]
     7/10: $1\a_exp[7:0]
     8/10: $1\b_man[23:0]
     9/10: $1\a_man[23:0]
    10/10: $1\temp[7:0]
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3282$705'.
Creating decoders for process `\memcmd_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3210$694'.
     1/1: $0\status_cnt[4:0]
Creating decoders for process `\memcmd_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3204$693'.
     1/1: $0\q[27:0]
Creating decoders for process `\memcmd_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3197$691'.
     1/1: $0\rd_pointer[3:0]
Creating decoders for process `\memcmd_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3190$689'.
     1/1: $0\wr_pointer[3:0]
Creating decoders for process `\addr_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3136$676'.
     1/1: $0\status_cnt[4:0]
Creating decoders for process `\addr_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3130$675'.
     1/1: $0\q[4:0]
Creating decoders for process `\addr_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3123$673'.
     1/1: $0\rd_pointer[3:0]
Creating decoders for process `\addr_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3116$671'.
     1/1: $0\wr_pointer[3:0]
Creating decoders for process `\wfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3058$658'.
     1/1: $0\status_cnt[4:0]
Creating decoders for process `\wfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3043$652'.
     1/2: $0\counter[1:0]
     2/2: $0\q[63:0]
Creating decoders for process `\wfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3036$650'.
     1/1: $0\rd_pointer[3:0]
Creating decoders for process `\wfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3029$648'.
     1/1: $0\wr_pointer[3:0]
Creating decoders for process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2971$636'.
     1/1: $0\status_cnt[4:0]
Creating decoders for process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2956$630'.
     1/5: $0\q[255:0] [255:192]
     2/5: $0\q[255:0] [191:128]
     3/5: $0\q[255:0] [127:64]
     4/5: $0\q[255:0] [63:0]
     5/5: $0\counter[1:0]
Creating decoders for process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2949$628'.
     1/1: $0\rd_pointer[3:0]
Creating decoders for process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2942$626'.
     1/1: $0\wr_pointer[3:0]
Creating decoders for process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
     1/25: $0\read_req_reg[3:0] [3]
     2/25: $0\read_req_reg[3:0] [2]
     3/25: $0\write_req_reg[3:0] [2]
     4/25: $0\read_req_reg[3:0] [1]
     5/25: $0\write_req_reg[3:0] [1]
     6/25: $0\read_req_reg[3:0] [0]
     7/25: $0\write_req_reg[3:0] [0]
     8/25: $0\fifo_write_reg[3:0] [2]
     9/25: $0\fifo_write_reg[3:0] [1]
    10/25: $0\fifo_write_reg[3:0] [0]
    11/25: $0\ram_addr3[4:0]
    12/25: $0\ram_addr2[4:0]
    13/25: $0\ram_addr1[4:0]
    14/25: $0\ram_addr0[4:0]
    15/25: $0\size_count3[1:0]
    16/25: $0\size_count2[1:0]
    17/25: $0\size_count1[1:0]
    18/25: $0\size_count0[1:0]
    19/25: $0\write_req_reg[3:0] [3]
    20/25: $0\fifo_write_reg[3:0] [3]
    21/25: $0\mem_addr4[23:0]
    22/25: $0\mem_addr3[23:0]
    23/25: $0\mem_addr2[23:0]
    24/25: $0\mem_addr1[23:0]
    25/25: $0\mem_addr0[23:0]
Creating decoders for process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2775$593'.
     1/9: $0\fifo_write_reg[4:4]
     2/9: $0\data_count[2:0]
     3/9: $0\ram_addr4[4:0]
     4/9: $0\size[4:0]
     5/9: $0\size_count4[1:0]
     6/9: $0\fifo_read_reg[0:0]
     7/9: $0\read_req_reg[4:4]
     8/9: $0\write_req_reg[4:4]
     9/9: $0\mem_addr5[23:0]
Creating decoders for process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2735$583'.
     1/1: $0\state[1:0]
Creating decoders for process `\mult_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2529$558'.
Creating decoders for process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
     1/5: $0\done[0:0]
     2/5: $0\MOEn[0:0]
     3/5: $0\topReadAddr[7:0]
     4/5: $0\leftReadAddr[4:0]
     5/5: $0\curReadAddr[4:0]
Creating decoders for process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
     1/16: $0\MOEnDelay[5:0] [5]
     2/16: $0\topWriteSelDelay4[2:0]
     3/16: $0\topWriteEnDelay[31:0] [4]
     4/16: $0\topWriteAddrDelay4[7:0]
     5/16: $0\leftWriteEnDelay[31:0] [31]
     6/16: $0\leftWriteEnDelay[31:0] [15]
     7/16: $0\leftWriteEnDelay[31:0] [4]
     8/16: $0\leftWriteSelDelay[4:0] [4]
     9/16: $0\curWriteEnDelay[31:0] [31]
    10/16: $0\curWriteEnDelay[31:0] [15]
    11/16: $0\curWriteSelDelay[15:0] [15]
    12/16: $0\writeByteEnDelay15[31:0]
    13/16: $0\writeByteEnDelay4[31:0]
    14/16: $0\curWriteAddrDelay15[4:0]
    15/16: $0\curWriteAddrDelay4[4:0]
    16/16: $0\topSourceSelDelay[4:0] [4]
Creating decoders for process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1893$496'.
     1/2: $0\currentRowState[1:0]
     2/2: $0\currentState[3:0]
Creating decoders for process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1884$488'.
     1/1: $0\byteEn[31:0]
Creating decoders for process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1795$441'.
     1/10: $0\i1modkByteEn[31:0]
     2/10: $0\counter[4:0]
     3/10: $0\leftIdxCounter[4:0]
     4/10: $0\msIdxCounter[4:0]
     5/10: $0\diagIdxCounter[4:0]
     6/10: $0\topIdxCounter[1:0]
     7/10: $0\divCounter[5:0]
     8/10: $0\topWriteCounter[4:0]
     9/10: $0\readRowCounter[4:0]
    10/10: $0\nextTopIdxCounter[7:0]
Creating decoders for process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1769$427'.
     1/5: $5\nextRowState[1:0]
     2/5: $4\nextRowState[1:0]
     3/5: $3\nextRowState[1:0]
     4/5: $2\nextRowState[1:0]
     5/5: $1\nextRowState[1:0]
Creating decoders for process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1751$409'.
     1/3: $1\loadRow[0:0]
     2/3: $1\startFetchRow[0:0]
     3/3: $1\doneFetchRow[0:0]
Creating decoders for process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1559$368'.
     1/36: $26\nextState[3:0]
     2/36: $25\nextState[3:0]
     3/36: $24\nextState[3:0]
     4/36: $10\updateCounter[0:0]
     5/36: $23\nextState[3:0]
     6/36: $22\nextState[3:0]
     7/36: $9\updateCounter[0:0]
     8/36: $21\nextState[3:0]
     9/36: $20\nextState[3:0]
    10/36: $8\updateCounter[0:0]
    11/36: $19\nextState[3:0]
    12/36: $7\updateCounter[0:0]
    13/36: $18\nextState[3:0]
    14/36: $6\updateCounter[0:0]
    15/36: $17\nextState[3:0]
    16/36: $16\nextState[3:0]
    17/36: $5\updateCounter[0:0]
    18/36: $15\nextState[3:0]
    19/36: $14\nextState[3:0]
    20/36: $13\nextState[3:0]
    21/36: $4\updateCounter[0:0]
    22/36: $12\nextState[3:0]
    23/36: $11\nextState[3:0]
    24/36: $3\updateCounter[0:0]
    25/36: $10\nextState[3:0]
    26/36: $2\updateCounter[0:0]
    27/36: $9\nextState[3:0]
    28/36: $8\nextState[3:0]
    29/36: $7\nextState[3:0]
    30/36: $6\nextState[3:0]
    31/36: $5\nextState[3:0]
    32/36: $4\nextState[3:0]
    33/36: $3\nextState[3:0]
    34/36: $2\nextState[3:0]
    35/36: $1\updateCounter[0:0]
    36/36: $1\nextState[3:0]
Creating decoders for process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1444$284'.
     1/11: $0\waitCycles[4:0]
     2/11: $0\i1modk[2:0]
     3/11: $0\imodk[2:0]
     4/11: $0\msIdx[4:0]
     5/11: $0\leftIdx[4:0]
     6/11: $0\diagIdx[4:0]
     7/11: $0\topIdx[1:0]
     8/11: $0\curTopIdx[7:0]
     9/11: $0\nextTopIdx[7:0]
    10/11: $0\j[4:0]
    11/11: $0\i1[4:0]
Creating decoders for process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1409$275'.
     1/5: $0\stop[4:0]
     2/5: $0\mode[1:0]
     3/5: $0\loop[4:0]
     4/5: $0\n[4:0]
     5/5: $0\m[4:0]
Creating decoders for process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1177$270'.
Creating decoders for process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
     1/10: $0\curWriteEn1Reg0[0:0]
     2/10: $0\curWriteByteEn1Reg0[31:0]
     3/10: $0\curReadAddr1Reg0[4:0]
     4/10: $0\curWriteAddr1Reg0[4:0]
     5/10: $0\curWriteData1Reg0[255:0]
     6/10: $0\curWriteEn0Reg0[0:0]
     7/10: $0\curWriteByteEn0Reg0[31:0]
     8/10: $0\curReadAddr0Reg0[4:0]
     9/10: $0\curWriteAddr0Reg0[4:0]
    10/10: $0\curWriteData0Reg0[255:0]
Creating decoders for process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1091$251'.
Creating decoders for process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1072$250'.
Creating decoders for process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1026$248'.
     1/3: $3\topWriteDataLU[31:0]
     2/3: $2\topWriteDataLU[31:0]
     3/3: $1\topWriteDataLU[31:0]
Creating decoders for process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1012$244'.
     1/1: $0\multOperand[31:0]
Creating decoders for process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1004$242'.
     1/1: $0\diag[31:0]
Creating decoders for process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:997$239'.
Creating decoders for process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
     1/8: $0\leftWriteEn1Reg0[0:0]
     2/8: $0\leftWriteByteEn1Reg0[31:0]
     3/8: $0\leftWriteAddr1Reg0[4:0]
     4/8: $0\leftWriteData1Reg0[255:0]
     5/8: $0\leftWriteEn0Reg0[0:0]
     6/8: $0\leftWriteByteEn0Reg0[31:0]
     7/8: $0\leftWriteAddr0Reg0[4:0]
     8/8: $0\leftWriteData0Reg0[255:0]
Creating decoders for process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
     1/20: $0\block_n[4:0]
     2/20: $0\block_m[4:0]
     3/20: $0\mem_write_size_buf[4:0]
     4/20: $0\mem_write_size[4:0]
     5/20: $0\mem_write_buf[23:0]
     6/20: $0\mem_cur[23:0]
     7/20: $0\mem_left[23:0]
     8/20: $0\mem_write[23:0]
     9/20: $0\mem_top[23:0]
    10/20: $0\mem_base[23:0]
    11/20: $0\no_left_switch[0:0]
    12/20: $0\write_n_buf[4:0]
    13/20: $0\write_n[4:0]
    14/20: $0\ncount[19:0]
    15/20: $0\mcount[19:0]
    16/20: $0\comp_N[19:0]
    17/20: $0\left_mem_sel[0:0]
    18/20: $0\cur_mem_sel[0:0]
    19/20: $0\loop[4:0]
    20/20: $0\N[19:0]
Creating decoders for process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:590$141'.
     1/1: $1\mode[1:0]
Creating decoders for process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:576$140'.
     1/2: $0\cur_mem_state[3:0]
     2/2: $0\cur_state[4:0]
Creating decoders for process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:420$103'.
     1/1: $0\next_state[4:0]
Creating decoders for process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:380$78'.
     1/5: $0\mem_read[1:0]
     2/5: $0\mem_count[4:0]
     3/5: $0\mem_addr[23:0]
     4/5: $0\ram_addr[4:0]
     5/5: $0\read_n[4:0]
Creating decoders for process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:309$58'.
     1/1: $0\next_mem_state[3:0]
Creating decoders for process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1233'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1224_EN[63:0]$1239
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1224_DATA[63:0]$1238
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1224_ADDR[3:0]$1237
     4/4: $0\out2[63:0]
Creating decoders for process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1225'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1223_EN[63:0]$1231
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1223_DATA[63:0]$1230
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1223_ADDR[3:0]$1229
     4/4: $0\out1[63:0]
Creating decoders for process `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1215'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1206_EN[4:0]$1221
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1206_DATA[4:0]$1220
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1206_ADDR[3:0]$1219
     4/4: $0\out2[4:0]
Creating decoders for process `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1207'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1205_EN[4:0]$1213
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1205_DATA[4:0]$1212
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1205_ADDR[3:0]$1211
     4/4: $0\out1[4:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\shift.\postshift' from process `\shift.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4784$1045'.
No latch inferred for signal `\prenorm.\shiftedb' from process `\prenorm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4571$1003'.
No latch inferred for signal `\prenorm.\shifteda' from process `\prenorm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4468$978'.
No latch inferred for signal `\div_24b.\res' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer22' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer21' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer20' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer19' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer18' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer17' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer16' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer15' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer14' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer13' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer12' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer11' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer10' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer9' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer8' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer7' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer6' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer5' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer4' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer3' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer2' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer1' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\div_24b.\numer0' from process `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
No latch inferred for signal `\fpu_div.\div [30:0]' from process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3676$809'.
No latch inferred for signal `\fpu_div.\div [31]' from process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3671$807'.
No latch inferred for signal `\fpu_div.\div_exp' from process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3658$801'.
No latch inferred for signal `\fpu_add.\sum [30:0]' from process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3520$775'.
No latch inferred for signal `\fpu_add.\sum [31]' from process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3475$761'.
No latch inferred for signal `\fpu_add.\sum_man' from process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3475$761'.
No latch inferred for signal `\fpu_add.\smaller' from process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3475$761'.
No latch inferred for signal `\fpu_add.\a_exp' from process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3290$706'.
No latch inferred for signal `\fpu_add.\a_man' from process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3290$706'.
No latch inferred for signal `\fpu_add.\b_man' from process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3290$706'.
No latch inferred for signal `\fpu_add.\temp' from process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3290$706'.
No latch inferred for signal `\LUControl.\nextRowState' from process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1769$427'.
No latch inferred for signal `\LUControl.\startFetchRow' from process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1751$409'.
No latch inferred for signal `\LUControl.\doneFetchRow' from process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1751$409'.
No latch inferred for signal `\LUControl.\loadRow' from process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1751$409'.
No latch inferred for signal `\LUControl.\writeRow' from process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1751$409'.
No latch inferred for signal `\LUControl.\nextState' from process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1559$368'.
No latch inferred for signal `\LUControl.\updateCounter' from process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1559$368'.
No latch inferred for signal `\LU.\topWriteDataLU' from process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1026$248'.
No latch inferred for signal `\MarshallerController.\mode' from process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:590$141'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.\out2' using process `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1197'.
  created $dff cell `$procdff$6888' with positive edge clock.
Creating register for signal `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1188_ADDR' using process `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1197'.
  created $dff cell `$procdff$6889' with positive edge clock.
Creating register for signal `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1188_DATA' using process `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1197'.
  created $dff cell `$procdff$6890' with positive edge clock.
Creating register for signal `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1188_EN' using process `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1197'.
  created $dff cell `$procdff$6891' with positive edge clock.
Creating register for signal `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.\out1' using process `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1189'.
  created $dff cell `$procdff$6892' with positive edge clock.
Creating register for signal `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1187_ADDR' using process `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1189'.
  created $dff cell `$procdff$6893' with positive edge clock.
Creating register for signal `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1187_DATA' using process `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1189'.
  created $dff cell `$procdff$6894' with positive edge clock.
Creating register for signal `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1187_EN' using process `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1189'.
  created $dff cell `$procdff$6895' with positive edge clock.
Creating register for signal `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.\out2' using process `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1179'.
  created $dff cell `$procdff$6896' with positive edge clock.
Creating register for signal `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1170_ADDR' using process `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1179'.
  created $dff cell `$procdff$6897' with positive edge clock.
Creating register for signal `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1170_DATA' using process `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1179'.
  created $dff cell `$procdff$6898' with positive edge clock.
Creating register for signal `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1170_EN' using process `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1179'.
  created $dff cell `$procdff$6899' with positive edge clock.
Creating register for signal `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.\out1' using process `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1171'.
  created $dff cell `$procdff$6900' with positive edge clock.
Creating register for signal `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1169_ADDR' using process `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1171'.
  created $dff cell `$procdff$6901' with positive edge clock.
Creating register for signal `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1169_DATA' using process `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1171'.
  created $dff cell `$procdff$6902' with positive edge clock.
Creating register for signal `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1169_EN' using process `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1171'.
  created $dff cell `$procdff$6903' with positive edge clock.
Creating register for signal `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.\out2' using process `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1161'.
  created $dff cell `$procdff$6904' with positive edge clock.
Creating register for signal `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1152_ADDR' using process `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1161'.
  created $dff cell `$procdff$6905' with positive edge clock.
Creating register for signal `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1152_DATA' using process `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1161'.
  created $dff cell `$procdff$6906' with positive edge clock.
Creating register for signal `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1152_EN' using process `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1161'.
  created $dff cell `$procdff$6907' with positive edge clock.
Creating register for signal `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.\out1' using process `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1153'.
  created $dff cell `$procdff$6908' with positive edge clock.
Creating register for signal `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1151_ADDR' using process `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1153'.
  created $dff cell `$procdff$6909' with positive edge clock.
Creating register for signal `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1151_DATA' using process `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1153'.
  created $dff cell `$procdff$6910' with positive edge clock.
Creating register for signal `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1151_EN' using process `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1153'.
  created $dff cell `$procdff$6911' with positive edge clock.
Creating register for signal `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.\out2' using process `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1143'.
  created $dff cell `$procdff$6912' with positive edge clock.
Creating register for signal `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1134_ADDR' using process `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1143'.
  created $dff cell `$procdff$6913' with positive edge clock.
Creating register for signal `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1134_DATA' using process `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1143'.
  created $dff cell `$procdff$6914' with positive edge clock.
Creating register for signal `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1134_EN' using process `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1143'.
  created $dff cell `$procdff$6915' with positive edge clock.
Creating register for signal `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.\out1' using process `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1135'.
  created $dff cell `$procdff$6916' with positive edge clock.
Creating register for signal `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1133_ADDR' using process `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1135'.
  created $dff cell `$procdff$6917' with positive edge clock.
Creating register for signal `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1133_DATA' using process `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1135'.
  created $dff cell `$procdff$6918' with positive edge clock.
Creating register for signal `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1133_EN' using process `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1135'.
  created $dff cell `$procdff$6919' with positive edge clock.
Creating register for signal `\fpmul.\y_out' using process `\fpmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4250$885'.
  created $dff cell `$procdff$6920' with positive edge clock.
Creating register for signal `\fpu_div.\n_exp' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3648$800'.
  created $dff cell `$procdff$6921' with positive edge clock.
Creating register for signal `\fpu_div.\d_exp' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3648$800'.
  created $dff cell `$procdff$6922' with positive edge clock.
Creating register for signal `\fpu_div.\n_man' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3648$800'.
  created $dff cell `$procdff$6923' with positive edge clock.
Creating register for signal `\fpu_div.\d_man' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3648$800'.
  created $dff cell `$procdff$6924' with positive edge clock.
Creating register for signal `\fpu_div.\n_sign' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3648$800'.
  created $dff cell `$procdff$6925' with positive edge clock.
Creating register for signal `\fpu_div.\d_sign' using process `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3648$800'.
  created $dff cell `$procdff$6926' with positive edge clock.
Creating register for signal `\fpu_add.\a' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3282$705'.
  created $dff cell `$procdff$6927' with positive edge clock.
Creating register for signal `\fpu_add.\b' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3282$705'.
  created $dff cell `$procdff$6928' with positive edge clock.
Creating register for signal `\memcmd_fifo.\status_cnt' using process `\memcmd_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3210$694'.
  created $dff cell `$procdff$6929' with positive edge clock.
Creating register for signal `\memcmd_fifo.\q' using process `\memcmd_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3204$693'.
  created $dff cell `$procdff$6930' with positive edge clock.
Creating register for signal `\memcmd_fifo.\rd_pointer' using process `\memcmd_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3197$691'.
  created $dff cell `$procdff$6931' with positive edge clock.
Creating register for signal `\memcmd_fifo.\wr_pointer' using process `\memcmd_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3190$689'.
  created $dff cell `$procdff$6932' with positive edge clock.
Creating register for signal `\addr_fifo.\status_cnt' using process `\addr_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3136$676'.
  created $dff cell `$procdff$6933' with positive edge clock.
Creating register for signal `\addr_fifo.\q' using process `\addr_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3130$675'.
  created $dff cell `$procdff$6934' with positive edge clock.
Creating register for signal `\addr_fifo.\rd_pointer' using process `\addr_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3123$673'.
  created $dff cell `$procdff$6935' with positive edge clock.
Creating register for signal `\addr_fifo.\wr_pointer' using process `\addr_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3116$671'.
  created $dff cell `$procdff$6936' with positive edge clock.
Creating register for signal `\wfifo.\status_cnt' using process `\wfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3058$658'.
  created $dff cell `$procdff$6937' with positive edge clock.
Creating register for signal `\wfifo.\counter' using process `\wfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3043$652'.
  created $dff cell `$procdff$6938' with positive edge clock.
Creating register for signal `\wfifo.\q' using process `\wfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3043$652'.
  created $dff cell `$procdff$6939' with positive edge clock.
Creating register for signal `\wfifo.\rd_pointer' using process `\wfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3036$650'.
  created $dff cell `$procdff$6940' with positive edge clock.
Creating register for signal `\wfifo.\wr_pointer' using process `\wfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3029$648'.
  created $dff cell `$procdff$6941' with positive edge clock.
Creating register for signal `\rfifo.\status_cnt' using process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2971$636'.
  created $dff cell `$procdff$6942' with positive edge clock.
Creating register for signal `\rfifo.\counter' using process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2956$630'.
  created $dff cell `$procdff$6943' with positive edge clock.
Creating register for signal `\rfifo.\q' using process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2956$630'.
  created $dff cell `$procdff$6944' with positive edge clock.
Creating register for signal `\rfifo.\rd_pointer' using process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2949$628'.
  created $dff cell `$procdff$6945' with positive edge clock.
Creating register for signal `\rfifo.\wr_pointer' using process `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2942$626'.
  created $dff cell `$procdff$6946' with positive edge clock.
Creating register for signal `\DataTransferUnit.\mem_addr0' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
  created $dff cell `$procdff$6947' with positive edge clock.
Creating register for signal `\DataTransferUnit.\mem_addr1' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
  created $dff cell `$procdff$6948' with positive edge clock.
Creating register for signal `\DataTransferUnit.\mem_addr2' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
  created $dff cell `$procdff$6949' with positive edge clock.
Creating register for signal `\DataTransferUnit.\mem_addr3' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
  created $dff cell `$procdff$6950' with positive edge clock.
Creating register for signal `\DataTransferUnit.\mem_addr4' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
  created $dff cell `$procdff$6951' with positive edge clock.
Creating register for signal `\DataTransferUnit.\fifo_write_reg [3:0]' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
  created $dff cell `$procdff$6952' with positive edge clock.
Creating register for signal `\DataTransferUnit.\write_req_reg [3:0]' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
  created $dff cell `$procdff$6953' with positive edge clock.
Creating register for signal `\DataTransferUnit.\read_req_reg [3:0]' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
  created $dff cell `$procdff$6954' with positive edge clock.
Creating register for signal `\DataTransferUnit.\size_count0' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
  created $dff cell `$procdff$6955' with positive edge clock.
Creating register for signal `\DataTransferUnit.\size_count1' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
  created $dff cell `$procdff$6956' with positive edge clock.
Creating register for signal `\DataTransferUnit.\size_count2' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
  created $dff cell `$procdff$6957' with positive edge clock.
Creating register for signal `\DataTransferUnit.\size_count3' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
  created $dff cell `$procdff$6958' with positive edge clock.
Creating register for signal `\DataTransferUnit.\ram_addr0' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
  created $dff cell `$procdff$6959' with positive edge clock.
Creating register for signal `\DataTransferUnit.\ram_addr1' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
  created $dff cell `$procdff$6960' with positive edge clock.
Creating register for signal `\DataTransferUnit.\ram_addr2' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
  created $dff cell `$procdff$6961' with positive edge clock.
Creating register for signal `\DataTransferUnit.\ram_addr3' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
  created $dff cell `$procdff$6962' with positive edge clock.
Creating register for signal `\DataTransferUnit.\ram_write_en_reg' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
  created $dff cell `$procdff$6963' with positive edge clock.
Creating register for signal `\DataTransferUnit.\mem_addr5' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2775$593'.
  created $dff cell `$procdff$6964' with positive edge clock.
Creating register for signal `\DataTransferUnit.\fifo_write_reg [4]' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2775$593'.
  created $dff cell `$procdff$6965' with positive edge clock.
Creating register for signal `\DataTransferUnit.\write_req_reg [4]' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2775$593'.
  created $dff cell `$procdff$6966' with positive edge clock.
Creating register for signal `\DataTransferUnit.\read_req_reg [4]' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2775$593'.
  created $dff cell `$procdff$6967' with positive edge clock.
Creating register for signal `\DataTransferUnit.\fifo_read_reg' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2775$593'.
  created $dff cell `$procdff$6968' with positive edge clock.
Creating register for signal `\DataTransferUnit.\size_count4' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2775$593'.
  created $dff cell `$procdff$6969' with positive edge clock.
Creating register for signal `\DataTransferUnit.\size' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2775$593'.
  created $dff cell `$procdff$6970' with positive edge clock.
Creating register for signal `\DataTransferUnit.\ram_addr4' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2775$593'.
  created $dff cell `$procdff$6971' with positive edge clock.
Creating register for signal `\DataTransferUnit.\data_count' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2775$593'.
  created $dff cell `$procdff$6972' with positive edge clock.
Creating register for signal `\DataTransferUnit.\state' using process `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2735$583'.
  created $dff cell `$procdff$6973' with positive edge clock.
Creating register for signal `\mult_add.\mult_result' using process `\mult_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2529$558'.
  created $dff cell `$procdff$6974' with positive edge clock.
Creating register for signal `\mult_add.\add_result' using process `\mult_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2529$558'.
  created $dff cell `$procdff$6975' with positive edge clock.
Creating register for signal `\LUControl.\done' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6976' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddr' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6977' with positive edge clock.
Creating register for signal `\LUControl.\topReadAddr' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6978' with positive edge clock.
Creating register for signal `\LUControl.\topWriteEn' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6979' with positive edge clock.
Creating register for signal `\LUControl.\leftWriteSel' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6980' with positive edge clock.
Creating register for signal `\LUControl.\curWriteSel' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6981' with positive edge clock.
Creating register for signal `\LUControl.\topSourceSel' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6982' with positive edge clock.
Creating register for signal `\LUControl.\diagEn' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6983' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSel' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6984' with positive edge clock.
Creating register for signal `\LUControl.\MOSel' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6985' with positive edge clock.
Creating register for signal `\LUControl.\MOEn' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6986' with positive edge clock.
Creating register for signal `\LUControl.\curWriteByteEn' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6987' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddr' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6988' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddr' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6989' with positive edge clock.
Creating register for signal `\LUControl.\curWriteEn' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6990' with positive edge clock.
Creating register for signal `\LUControl.\leftWriteByteEn' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6991' with positive edge clock.
Creating register for signal `\LUControl.\leftWriteAddr' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6992' with positive edge clock.
Creating register for signal `\LUControl.\leftReadAddr' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6993' with positive edge clock.
Creating register for signal `\LUControl.\leftWriteEn' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
  created $dff cell `$procdff$6994' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay0' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$6995' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay1' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$6996' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay2' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$6997' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay3' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$6998' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay4' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$6999' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay5' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7000' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay6' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7001' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay7' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7002' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay8' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7003' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay9' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7004' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay10' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7005' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay11' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7006' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay12' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7007' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay13' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7008' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay14' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7009' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay15' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7010' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay16' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7011' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay17' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7012' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay18' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7013' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay19' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7014' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay20' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7015' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay21' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7016' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay22' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7017' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay23' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7018' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay24' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7019' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay25' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7020' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay26' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7021' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay27' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7022' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay28' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7023' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay29' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7024' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay30' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7025' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay31' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7026' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay0' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7027' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay1' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7028' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay2' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7029' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay3' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7030' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay4' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7031' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay5' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7032' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay6' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7033' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay7' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7034' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay8' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7035' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay9' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7036' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay10' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7037' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay11' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7038' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay12' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7039' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay13' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7040' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay14' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7041' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay15' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7042' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay16' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7043' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay17' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7044' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay18' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7045' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay19' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7046' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay20' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7047' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay21' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7048' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay22' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7049' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay23' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7050' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay24' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7051' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay25' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7052' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay26' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7053' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay27' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7054' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay28' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7055' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay29' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7056' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay30' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7057' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay31' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7058' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay0' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7059' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay1' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7060' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay2' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7061' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay3' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7062' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay4' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7063' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay5' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7064' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay6' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7065' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay7' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7066' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay8' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7067' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay9' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7068' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay10' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7069' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay11' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7070' with positive edge clock.
Creating register for signal `\LUControl.\leftWriteEnDelay' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7071' with positive edge clock.
Creating register for signal `\LUControl.\curWriteEnDelay' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7072' with positive edge clock.
Creating register for signal `\LUControl.\leftWriteSelDelay' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7073' with positive edge clock.
Creating register for signal `\LUControl.\curWriteSelDelay' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7074' with positive edge clock.
Creating register for signal `\LUControl.\leftReadAddrDelay0' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7075' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay0' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7076' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay1' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7077' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay2' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7078' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay3' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7079' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay4' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7080' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay5' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7081' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay6' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7082' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay7' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7083' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay8' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7084' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay9' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7085' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay10' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7086' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay11' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7087' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay12' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7088' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay13' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7089' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay14' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7090' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay15' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7091' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay16' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7092' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay17' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7093' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay18' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7094' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay19' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7095' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay20' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7096' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay21' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7097' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay22' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7098' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay23' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7099' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay24' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7100' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay25' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7101' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay26' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7102' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay27' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7103' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay28' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7104' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay29' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7105' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay30' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7106' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay31' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7107' with positive edge clock.
Creating register for signal `\LUControl.\topWriteEnDelay' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7108' with positive edge clock.
Creating register for signal `\LUControl.\topSourceSelDelay' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7109' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay0' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7110' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay1' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7111' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay2' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7112' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay3' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7113' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay4' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7114' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay5' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7115' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay6' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7116' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay7' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7117' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay8' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7118' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay9' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7119' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay10' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7120' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay11' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7121' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay12' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7122' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay13' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7123' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay14' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7124' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay15' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7125' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay16' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7126' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay17' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7127' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay18' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7128' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay19' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7129' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay20' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7130' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay21' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7131' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay22' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7132' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay23' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7133' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay24' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7134' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay25' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7135' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay26' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7136' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay27' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7137' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay28' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7138' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay29' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7139' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay30' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7140' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay31' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7141' with positive edge clock.
Creating register for signal `\LUControl.\diagEnDelay' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7142' with positive edge clock.
Creating register for signal `\LUControl.\MOEnDelay' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
  created $dff cell `$procdff$7143' with positive edge clock.
Creating register for signal `\LUControl.\currentState' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1893$496'.
  created $dff cell `$procdff$7144' with positive edge clock.
Creating register for signal `\LUControl.\currentRowState' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1893$496'.
  created $dff cell `$procdff$7145' with positive edge clock.
Creating register for signal `\LUControl.\byteEn' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1884$488'.
  created $dff cell `$procdff$7146' with positive edge clock.
Creating register for signal `\LUControl.\nextTopIdxCounter' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1795$441'.
  created $dff cell `$procdff$7147' with positive edge clock.
Creating register for signal `\LUControl.\topIdxCounter' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1795$441'.
  created $dff cell `$procdff$7148' with positive edge clock.
Creating register for signal `\LUControl.\diagIdxCounter' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1795$441'.
  created $dff cell `$procdff$7149' with positive edge clock.
Creating register for signal `\LUControl.\leftIdxCounter' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1795$441'.
  created $dff cell `$procdff$7150' with positive edge clock.
Creating register for signal `\LUControl.\msIdxCounter' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1795$441'.
  created $dff cell `$procdff$7151' with positive edge clock.
Creating register for signal `\LUControl.\readRowCounter' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1795$441'.
  created $dff cell `$procdff$7152' with positive edge clock.
Creating register for signal `\LUControl.\topWriteCounter' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1795$441'.
  created $dff cell `$procdff$7153' with positive edge clock.
Creating register for signal `\LUControl.\i1modkByteEn' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1795$441'.
  created $dff cell `$procdff$7154' with positive edge clock.
Creating register for signal `\LUControl.\counter' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1795$441'.
  created $dff cell `$procdff$7155' with positive edge clock.
Creating register for signal `\LUControl.\divCounter' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1795$441'.
  created $dff cell `$procdff$7156' with positive edge clock.
Creating register for signal `\LUControl.\i1' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1444$284'.
  created $dff cell `$procdff$7157' with positive edge clock.
Creating register for signal `\LUControl.\j' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1444$284'.
  created $dff cell `$procdff$7158' with positive edge clock.
Creating register for signal `\LUControl.\nextTopIdx' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1444$284'.
  created $dff cell `$procdff$7159' with positive edge clock.
Creating register for signal `\LUControl.\nextTopIdx2' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1444$284'.
  created $dff cell `$procdff$7160' with positive edge clock.
Creating register for signal `\LUControl.\curTopIdx' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1444$284'.
  created $dff cell `$procdff$7161' with positive edge clock.
Creating register for signal `\LUControl.\topIdx' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1444$284'.
  created $dff cell `$procdff$7162' with positive edge clock.
Creating register for signal `\LUControl.\diagIdx' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1444$284'.
  created $dff cell `$procdff$7163' with positive edge clock.
Creating register for signal `\LUControl.\leftIdx' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1444$284'.
  created $dff cell `$procdff$7164' with positive edge clock.
Creating register for signal `\LUControl.\msIdx' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1444$284'.
  created $dff cell `$procdff$7165' with positive edge clock.
Creating register for signal `\LUControl.\imodk' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1444$284'.
  created $dff cell `$procdff$7166' with positive edge clock.
Creating register for signal `\LUControl.\i1modk' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1444$284'.
  created $dff cell `$procdff$7167' with positive edge clock.
Creating register for signal `\LUControl.\waitCycles' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1444$284'.
  created $dff cell `$procdff$7168' with positive edge clock.
Creating register for signal `\LUControl.\start' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1409$275'.
  created $dff cell `$procdff$7169' with positive edge clock.
Creating register for signal `\LUControl.\m' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1409$275'.
  created $dff cell `$procdff$7170' with positive edge clock.
Creating register for signal `\LUControl.\n' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1409$275'.
  created $dff cell `$procdff$7171' with positive edge clock.
Creating register for signal `\LUControl.\loop' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1409$275'.
  created $dff cell `$procdff$7172' with positive edge clock.
Creating register for signal `\LUControl.\mode' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1409$275'.
  created $dff cell `$procdff$7173' with positive edge clock.
Creating register for signal `\LUControl.\startDelay' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1409$275'.
  created $dff cell `$procdff$7174' with positive edge clock.
Creating register for signal `\LUControl.\stop' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1409$275'.
  created $dff cell `$procdff$7175' with positive edge clock.
Creating register for signal `\LUControl.\stop2' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1409$275'.
  created $dff cell `$procdff$7176' with positive edge clock.
Creating register for signal `\LUControl.\mdivk' using process `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1409$275'.
  created $dff cell `$procdff$7177' with positive edge clock.
Creating register for signal `\LU.\curReadData0Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1177$270'.
  created $dff cell `$procdff$7178' with positive edge clock.
Creating register for signal `\LU.\curReadData1Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1177$270'.
  created $dff cell `$procdff$7179' with positive edge clock.
Creating register for signal `\LU.\curWriteData0Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7180' with positive edge clock.
Creating register for signal `\LU.\curWriteData0Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7181' with positive edge clock.
Creating register for signal `\LU.\curWriteData1Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7182' with positive edge clock.
Creating register for signal `\LU.\curWriteData1Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7183' with positive edge clock.
Creating register for signal `\LU.\curWriteAddr0Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7184' with positive edge clock.
Creating register for signal `\LU.\curWriteAddr0Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7185' with positive edge clock.
Creating register for signal `\LU.\curReadAddr0Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7186' with positive edge clock.
Creating register for signal `\LU.\curReadAddr0Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7187' with positive edge clock.
Creating register for signal `\LU.\curWriteAddr1Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7188' with positive edge clock.
Creating register for signal `\LU.\curWriteAddr1Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7189' with positive edge clock.
Creating register for signal `\LU.\curReadAddr1Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7190' with positive edge clock.
Creating register for signal `\LU.\curReadAddr1Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7191' with positive edge clock.
Creating register for signal `\LU.\curWriteByteEn0Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7192' with positive edge clock.
Creating register for signal `\LU.\curWriteByteEn0Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7193' with positive edge clock.
Creating register for signal `\LU.\curWriteByteEn1Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7194' with positive edge clock.
Creating register for signal `\LU.\curWriteByteEn1Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7195' with positive edge clock.
Creating register for signal `\LU.\curWriteEn0Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7196' with positive edge clock.
Creating register for signal `\LU.\curWriteEn0Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7197' with positive edge clock.
Creating register for signal `\LU.\curWriteEn1Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7198' with positive edge clock.
Creating register for signal `\LU.\curWriteEn1Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
  created $dff cell `$procdff$7199' with positive edge clock.
Creating register for signal `\LU.\topReadDataReg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1091$251'.
  created $dff cell `$procdff$7200' with positive edge clock.
Creating register for signal `\LU.\topWriteDataReg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1072$250'.
  created $dff cell `$procdff$7201' with positive edge clock.
Creating register for signal `\LU.\topWriteDataReg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1072$250'.
  created $dff cell `$procdff$7202' with positive edge clock.
Creating register for signal `\LU.\topWriteDataReg2' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1072$250'.
  created $dff cell `$procdff$7203' with positive edge clock.
Creating register for signal `\LU.\topWriteAddrReg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1072$250'.
  created $dff cell `$procdff$7204' with positive edge clock.
Creating register for signal `\LU.\topWriteAddrReg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1072$250'.
  created $dff cell `$procdff$7205' with positive edge clock.
Creating register for signal `\LU.\topWriteAddrReg2' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1072$250'.
  created $dff cell `$procdff$7206' with positive edge clock.
Creating register for signal `\LU.\topReadAddrReg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1072$250'.
  created $dff cell `$procdff$7207' with positive edge clock.
Creating register for signal `\LU.\topReadAddrReg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1072$250'.
  created $dff cell `$procdff$7208' with positive edge clock.
Creating register for signal `\LU.\topReadAddrReg2' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1072$250'.
  created $dff cell `$procdff$7209' with positive edge clock.
Creating register for signal `\LU.\topWriteEnReg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1072$250'.
  created $dff cell `$procdff$7210' with positive edge clock.
Creating register for signal `\LU.\topWriteEnReg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1072$250'.
  created $dff cell `$procdff$7211' with positive edge clock.
Creating register for signal `\LU.\topWriteEnReg2' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1072$250'.
  created $dff cell `$procdff$7212' with positive edge clock.
Creating register for signal `\LU.\multOperand' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1012$244'.
  created $dff cell `$procdff$7213' with positive edge clock.
Creating register for signal `\LU.\diag' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1004$242'.
  created $dff cell `$procdff$7214' with positive edge clock.
Creating register for signal `\LU.\leftReadData0Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:997$239'.
  created $dff cell `$procdff$7215' with positive edge clock.
Creating register for signal `\LU.\leftReadData1Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:997$239'.
  created $dff cell `$procdff$7216' with positive edge clock.
Creating register for signal `\LU.\leftWriteData0Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7217' with positive edge clock.
Creating register for signal `\LU.\leftWriteData0Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7218' with positive edge clock.
Creating register for signal `\LU.\leftWriteData1Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7219' with positive edge clock.
Creating register for signal `\LU.\leftWriteData1Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7220' with positive edge clock.
Creating register for signal `\LU.\leftWriteAddr0Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7221' with positive edge clock.
Creating register for signal `\LU.\leftWriteAddr0Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7222' with positive edge clock.
Creating register for signal `\LU.\leftReadAddr0Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7223' with positive edge clock.
Creating register for signal `\LU.\leftReadAddr0Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7224' with positive edge clock.
Creating register for signal `\LU.\leftWriteAddr1Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7225' with positive edge clock.
Creating register for signal `\LU.\leftWriteAddr1Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7226' with positive edge clock.
Creating register for signal `\LU.\leftReadAddr1Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7227' with positive edge clock.
Creating register for signal `\LU.\leftReadAddr1Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7228' with positive edge clock.
Creating register for signal `\LU.\leftWriteByteEn0Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7229' with positive edge clock.
Creating register for signal `\LU.\leftWriteByteEn0Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7230' with positive edge clock.
Creating register for signal `\LU.\leftWriteByteEn1Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7231' with positive edge clock.
Creating register for signal `\LU.\leftWriteByteEn1Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7232' with positive edge clock.
Creating register for signal `\LU.\leftWriteEn0Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7233' with positive edge clock.
Creating register for signal `\LU.\leftWriteEn0Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7234' with positive edge clock.
Creating register for signal `\LU.\leftWriteEn1Reg0' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7235' with positive edge clock.
Creating register for signal `\LU.\leftWriteEn1Reg1' using process `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
  created $dff cell `$procdff$7236' with positive edge clock.
Creating register for signal `\MarshallerController.\N' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7237' with positive edge clock.
Creating register for signal `\MarshallerController.\loop' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7238' with positive edge clock.
Creating register for signal `\MarshallerController.\block_m' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7239' with positive edge clock.
Creating register for signal `\MarshallerController.\block_n' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7240' with positive edge clock.
Creating register for signal `\MarshallerController.\cur_mem_sel' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7241' with positive edge clock.
Creating register for signal `\MarshallerController.\left_mem_sel' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7242' with positive edge clock.
Creating register for signal `\MarshallerController.\comp_N' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7243' with positive edge clock.
Creating register for signal `\MarshallerController.\mcount' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7244' with positive edge clock.
Creating register for signal `\MarshallerController.\ncount' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7245' with positive edge clock.
Creating register for signal `\MarshallerController.\Ndivk' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7246' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_N' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7247' with positive edge clock.
Creating register for signal `\MarshallerController.\write_n' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7248' with positive edge clock.
Creating register for signal `\MarshallerController.\write_n_buf' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7249' with positive edge clock.
Creating register for signal `\MarshallerController.\no_left_switch' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7250' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_base' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7251' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_top' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7252' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_write' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7253' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_left' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7254' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_cur' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7255' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_write_buf' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7256' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_write_size' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7257' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_write_size_buf' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7258' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_read_size' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
  created $dff cell `$procdff$7259' with positive edge clock.
Creating register for signal `\MarshallerController.\cur_state' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:576$140'.
  created $dff cell `$procdff$7260' with positive edge clock.
Creating register for signal `\MarshallerController.\cur_mem_state' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:576$140'.
  created $dff cell `$procdff$7261' with positive edge clock.
Creating register for signal `\MarshallerController.\next_state' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:420$103'.
  created $dff cell `$procdff$7262' with positive edge clock.
Creating register for signal `\MarshallerController.\read_n' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:380$78'.
  created $dff cell `$procdff$7263' with positive edge clock.
Creating register for signal `\MarshallerController.\ram_addr' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:380$78'.
  created $dff cell `$procdff$7264' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_addr' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:380$78'.
  created $dff cell `$procdff$7265' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_count' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:380$78'.
  created $dff cell `$procdff$7266' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_read' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:380$78'.
  created $dff cell `$procdff$7267' with positive edge clock.
Creating register for signal `\MarshallerController.\next_mem_state' using process `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:309$58'.
  created $dff cell `$procdff$7268' with positive edge clock.
Creating register for signal `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.\out2' using process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1233'.
  created $dff cell `$procdff$7269' with positive edge clock.
Creating register for signal `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1224_ADDR' using process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1233'.
  created $dff cell `$procdff$7270' with positive edge clock.
Creating register for signal `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1224_DATA' using process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1233'.
  created $dff cell `$procdff$7271' with positive edge clock.
Creating register for signal `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1224_EN' using process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1233'.
  created $dff cell `$procdff$7272' with positive edge clock.
Creating register for signal `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.\out1' using process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1225'.
  created $dff cell `$procdff$7273' with positive edge clock.
Creating register for signal `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1223_ADDR' using process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1225'.
  created $dff cell `$procdff$7274' with positive edge clock.
Creating register for signal `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1223_DATA' using process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1225'.
  created $dff cell `$procdff$7275' with positive edge clock.
Creating register for signal `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1223_EN' using process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1225'.
  created $dff cell `$procdff$7276' with positive edge clock.
Creating register for signal `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.\out2' using process `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1215'.
  created $dff cell `$procdff$7277' with positive edge clock.
Creating register for signal `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1206_ADDR' using process `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1215'.
  created $dff cell `$procdff$7278' with positive edge clock.
Creating register for signal `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1206_DATA' using process `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1215'.
  created $dff cell `$procdff$7279' with positive edge clock.
Creating register for signal `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:90$1206_EN' using process `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1215'.
  created $dff cell `$procdff$7280' with positive edge clock.
Creating register for signal `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.\out1' using process `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1207'.
  created $dff cell `$procdff$7281' with positive edge clock.
Creating register for signal `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1205_ADDR' using process `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1207'.
  created $dff cell `$procdff$7282' with positive edge clock.
Creating register for signal `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1205_DATA' using process `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1207'.
  created $dff cell `$procdff$7283' with positive edge clock.
Creating register for signal `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:81$1205_EN' using process `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1207'.
  created $dff cell `$procdff$7284' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1197'.
Removing empty process `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1197'.
Found and cleaned up 1 empty switch in `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1189'.
Removing empty process `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1189'.
Found and cleaned up 1 empty switch in `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1179'.
Removing empty process `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1179'.
Found and cleaned up 1 empty switch in `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1171'.
Removing empty process `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1171'.
Found and cleaned up 1 empty switch in `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1161'.
Removing empty process `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1161'.
Found and cleaned up 1 empty switch in `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1153'.
Removing empty process `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1153'.
Found and cleaned up 1 empty switch in `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1143'.
Removing empty process `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1143'.
Found and cleaned up 1 empty switch in `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1135'.
Removing empty process `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1135'.
Found and cleaned up 1 empty switch in `\shift.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4784$1045'.
Removing empty process `shift.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4784$1045'.
Found and cleaned up 1 empty switch in `\prenorm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4571$1003'.
Removing empty process `prenorm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4571$1003'.
Found and cleaned up 1 empty switch in `\prenorm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4468$978'.
Removing empty process `prenorm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4468$978'.
Removing empty process `fpmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:4250$885'.
Found and cleaned up 24 empty switches in `\div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
Removing empty process `div_24b.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3823$833'.
Found and cleaned up 23 empty switches in `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3676$809'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3676$809'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3671$807'.
Found and cleaned up 1 empty switch in `\fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3658$801'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3658$801'.
Removing empty process `fpu_div.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3648$800'.
Found and cleaned up 24 empty switches in `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3520$775'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3520$775'.
Found and cleaned up 6 empty switches in `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3475$761'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3475$761'.
Found and cleaned up 4 empty switches in `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3290$706'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3290$706'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3282$705'.
Found and cleaned up 2 empty switches in `\memcmd_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3210$694'.
Removing empty process `memcmd_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3210$694'.
Found and cleaned up 1 empty switch in `\memcmd_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3204$693'.
Removing empty process `memcmd_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3204$693'.
Found and cleaned up 1 empty switch in `\memcmd_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3197$691'.
Removing empty process `memcmd_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3197$691'.
Found and cleaned up 1 empty switch in `\memcmd_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3190$689'.
Removing empty process `memcmd_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3190$689'.
Found and cleaned up 2 empty switches in `\addr_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3136$676'.
Removing empty process `addr_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3136$676'.
Found and cleaned up 1 empty switch in `\addr_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3130$675'.
Removing empty process `addr_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3130$675'.
Found and cleaned up 1 empty switch in `\addr_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3123$673'.
Removing empty process `addr_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3123$673'.
Found and cleaned up 1 empty switch in `\addr_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3116$671'.
Removing empty process `addr_fifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3116$671'.
Found and cleaned up 2 empty switches in `\wfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3058$658'.
Removing empty process `wfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3058$658'.
Found and cleaned up 5 empty switches in `\wfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3043$652'.
Removing empty process `wfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3043$652'.
Found and cleaned up 1 empty switch in `\wfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3036$650'.
Removing empty process `wfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3036$650'.
Found and cleaned up 1 empty switch in `\wfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3029$648'.
Removing empty process `wfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3029$648'.
Found and cleaned up 2 empty switches in `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2971$636'.
Removing empty process `rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2971$636'.
Found and cleaned up 5 empty switches in `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2956$630'.
Removing empty process `rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2956$630'.
Found and cleaned up 1 empty switch in `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2949$628'.
Removing empty process `rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2949$628'.
Found and cleaned up 1 empty switch in `\rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2942$626'.
Removing empty process `rfifo.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2942$626'.
Found and cleaned up 3 empty switches in `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
Removing empty process `DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2844$622'.
Found and cleaned up 6 empty switches in `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2775$593'.
Removing empty process `DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2775$593'.
Found and cleaned up 6 empty switches in `\DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2735$583'.
Removing empty process `DataTransferUnit.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2735$583'.
Removing empty process `mult_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2529$558'.
Found and cleaned up 7 empty switches in `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
Removing empty process `LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2251$533'.
Found and cleaned up 18 empty switches in `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
Removing empty process `LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1907$499'.
Found and cleaned up 2 empty switches in `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1893$496'.
Removing empty process `LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1893$496'.
Found and cleaned up 1 empty switch in `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1884$488'.
Removing empty process `LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1884$488'.
Found and cleaned up 18 empty switches in `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1795$441'.
Removing empty process `LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1795$441'.
Found and cleaned up 5 empty switches in `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1769$427'.
Removing empty process `LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1769$427'.
Found and cleaned up 3 empty switches in `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1751$409'.
Removing empty process `LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1751$409'.
Found and cleaned up 26 empty switches in `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1559$368'.
Removing empty process `LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1559$368'.
Found and cleaned up 40 empty switches in `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1444$284'.
Removing empty process `LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1444$284'.
Found and cleaned up 2 empty switches in `\LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1409$275'.
Removing empty process `LUControl.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1409$275'.
Removing empty process `LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1177$270'.
Found and cleaned up 1 empty switch in `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
Removing empty process `LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1127$268'.
Removing empty process `LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1091$251'.
Removing empty process `LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1072$250'.
Found and cleaned up 3 empty switches in `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1026$248'.
Removing empty process `LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1026$248'.
Found and cleaned up 3 empty switches in `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1012$244'.
Removing empty process `LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1012$244'.
Found and cleaned up 1 empty switch in `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1004$242'.
Removing empty process `LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1004$242'.
Removing empty process `LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:997$239'.
Found and cleaned up 1 empty switch in `\LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
Removing empty process `LU.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:949$237'.
Found and cleaned up 24 empty switches in `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
Removing empty process `MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:604$142'.
Found and cleaned up 1 empty switch in `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:590$141'.
Removing empty process `MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:590$141'.
Found and cleaned up 1 empty switch in `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:576$140'.
Removing empty process `MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:576$140'.
Found and cleaned up 24 empty switches in `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:420$103'.
Removing empty process `MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:420$103'.
Found and cleaned up 6 empty switches in `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:380$78'.
Removing empty process `MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:380$78'.
Found and cleaned up 10 empty switches in `\MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:309$58'.
Removing empty process `MarshallerController.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:309$58'.
Found and cleaned up 1 empty switch in `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1233'.
Removing empty process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1233'.
Found and cleaned up 1 empty switch in `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1225'.
Removing empty process `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1225'.
Found and cleaned up 1 empty switch in `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1215'.
Removing empty process `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:88$1215'.
Found and cleaned up 1 empty switch in `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1207'.
Removing empty process `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:79$1207'.
Cleaned up 337 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.
Optimizing module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.
Optimizing module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.
Optimizing module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.
Optimizing module assemble.
Optimizing module flag.
Optimizing module round.
Optimizing module shift.
<suppressed ~33 debug messages>
Optimizing module normalize.
Optimizing module exponent.
Optimizing module multiply_a.
Optimizing module prenorm.
<suppressed ~46 debug messages>
Optimizing module special.
Optimizing module preprocess.
<suppressed ~4 debug messages>
Optimizing module fpmul.
Optimizing module div_24b.
Optimizing module fpu_div.
Optimizing module fpu_add.
<suppressed ~50 debug messages>
Optimizing module memcmd_fifo.
<suppressed ~2 debug messages>
Optimizing module addr_fifo.
<suppressed ~2 debug messages>
Optimizing module wfifo.
<suppressed ~3 debug messages>
Optimizing module rfifo.
<suppressed ~5 debug messages>
Optimizing module DataTransferUnit.
<suppressed ~58 debug messages>
Optimizing module mult_add.
<suppressed ~1 debug messages>
Optimizing module top_ram.
Optimizing module ram3.
Optimizing module ram2.
Optimizing module ram1.
Optimizing module ram.
Optimizing module LUControl.
<suppressed ~61 debug messages>
Optimizing module LU.
<suppressed ~55 debug messages>
Optimizing module MarshallerController.
<suppressed ~29 debug messages>
Optimizing module LU8PEEng.
<suppressed ~2 debug messages>
Optimizing module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
Optimizing module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.
Optimizing module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.
Optimizing module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.
Optimizing module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.
Optimizing module assemble.
Optimizing module flag.
Optimizing module round.
Optimizing module shift.
Optimizing module normalize.
Optimizing module exponent.
Optimizing module multiply_a.
Optimizing module prenorm.
Optimizing module special.
Optimizing module preprocess.
Optimizing module fpmul.
Optimizing module div_24b.
Optimizing module fpu_div.
Optimizing module fpu_add.
Optimizing module memcmd_fifo.
Optimizing module addr_fifo.
Optimizing module wfifo.
Optimizing module rfifo.
Optimizing module DataTransferUnit.
Optimizing module mult_add.
Optimizing module top_ram.
Optimizing module ram3.
Optimizing module ram2.
Optimizing module ram1.
Optimizing module ram.
Optimizing module LUControl.
Optimizing module LU.
Optimizing module MarshallerController.
Optimizing module LU8PEEng.
Optimizing module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
Optimizing module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100'.
Finding identical cells in module `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram'.
Finding identical cells in module `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram'.
Finding identical cells in module `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram'.
Finding identical cells in module `\assemble'.
Finding identical cells in module `\flag'.
<suppressed ~3 debug messages>
Finding identical cells in module `\round'.
<suppressed ~3 debug messages>
Finding identical cells in module `\shift'.
Finding identical cells in module `\normalize'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\multiply_a'.
Finding identical cells in module `\prenorm'.
Finding identical cells in module `\special'.
Finding identical cells in module `\preprocess'.
Finding identical cells in module `\fpmul'.
<suppressed ~3 debug messages>
Finding identical cells in module `\div_24b'.
Finding identical cells in module `\fpu_div'.
Finding identical cells in module `\fpu_add'.
<suppressed ~12 debug messages>
Finding identical cells in module `\memcmd_fifo'.
Finding identical cells in module `\addr_fifo'.
Finding identical cells in module `\wfifo'.
Finding identical cells in module `\rfifo'.
Finding identical cells in module `\DataTransferUnit'.
<suppressed ~69 debug messages>
Finding identical cells in module `\mult_add'.
Finding identical cells in module `\top_ram'.
Finding identical cells in module `\ram3'.
Finding identical cells in module `\ram2'.
Finding identical cells in module `\ram1'.
Finding identical cells in module `\ram'.
Finding identical cells in module `\LUControl'.
<suppressed ~534 debug messages>
Finding identical cells in module `\LU'.
<suppressed ~60 debug messages>
Finding identical cells in module `\MarshallerController'.
<suppressed ~294 debug messages>
Finding identical cells in module `\LU8PEEng'.
Finding identical cells in module `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram'.
Finding identical cells in module `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100'.
Removed a total of 326 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \assemble..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \flag..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \round..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \normalize..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exponent..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \multiply_a..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \prenorm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \special..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \preprocess..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpmul..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \div_24b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$3209.
    dead port 1/2 on $mux $procmux$3203.
    dead port 1/2 on $mux $procmux$3197.
    dead port 1/2 on $mux $procmux$3194.
    dead port 1/2 on $mux $procmux$3188.
    dead port 1/2 on $mux $procmux$3185.
    dead port 1/2 on $mux $procmux$3179.
    dead port 1/2 on $mux $procmux$3176.
    dead port 1/2 on $mux $procmux$3173.
    dead port 1/2 on $mux $procmux$3167.
    dead port 1/2 on $mux $procmux$3164.
    dead port 1/2 on $mux $procmux$3161.
    dead port 1/2 on $mux $procmux$3155.
    dead port 1/2 on $mux $procmux$3152.
    dead port 1/2 on $mux $procmux$3149.
    dead port 1/2 on $mux $procmux$3146.
    dead port 1/2 on $mux $procmux$3140.
    dead port 1/2 on $mux $procmux$3137.
    dead port 1/2 on $mux $procmux$3134.
    dead port 1/2 on $mux $procmux$3131.
    dead port 1/2 on $mux $procmux$3125.
    dead port 1/2 on $mux $procmux$3122.
    dead port 1/2 on $mux $procmux$3119.
    dead port 1/2 on $mux $procmux$3116.
    dead port 1/2 on $mux $procmux$3113.
    dead port 1/2 on $mux $procmux$3107.
    dead port 1/2 on $mux $procmux$3104.
    dead port 1/2 on $mux $procmux$3101.
    dead port 1/2 on $mux $procmux$3098.
    dead port 1/2 on $mux $procmux$3095.
    dead port 1/2 on $mux $procmux$3089.
    dead port 1/2 on $mux $procmux$3086.
    dead port 1/2 on $mux $procmux$3083.
    dead port 1/2 on $mux $procmux$3080.
    dead port 1/2 on $mux $procmux$3077.
    dead port 1/2 on $mux $procmux$3074.
    dead port 1/2 on $mux $procmux$3068.
    dead port 1/2 on $mux $procmux$3065.
    dead port 1/2 on $mux $procmux$3062.
    dead port 1/2 on $mux $procmux$3059.
    dead port 1/2 on $mux $procmux$3056.
    dead port 1/2 on $mux $procmux$3053.
    dead port 1/2 on $mux $procmux$3047.
    dead port 1/2 on $mux $procmux$3044.
    dead port 1/2 on $mux $procmux$3041.
    dead port 1/2 on $mux $procmux$3038.
    dead port 1/2 on $mux $procmux$3035.
    dead port 1/2 on $mux $procmux$3032.
    dead port 1/2 on $mux $procmux$3029.
    dead port 1/2 on $mux $procmux$3023.
    dead port 1/2 on $mux $procmux$3020.
    dead port 1/2 on $mux $procmux$3017.
    dead port 1/2 on $mux $procmux$3014.
    dead port 1/2 on $mux $procmux$3011.
    dead port 1/2 on $mux $procmux$3008.
    dead port 1/2 on $mux $procmux$3005.
    dead port 1/2 on $mux $procmux$2999.
    dead port 1/2 on $mux $procmux$2996.
    dead port 1/2 on $mux $procmux$2993.
    dead port 1/2 on $mux $procmux$2990.
    dead port 1/2 on $mux $procmux$2987.
    dead port 1/2 on $mux $procmux$2984.
    dead port 1/2 on $mux $procmux$2981.
    dead port 1/2 on $mux $procmux$2978.
    dead port 1/2 on $mux $procmux$2972.
    dead port 1/2 on $mux $procmux$2969.
    dead port 1/2 on $mux $procmux$2966.
    dead port 1/2 on $mux $procmux$2963.
    dead port 1/2 on $mux $procmux$2960.
    dead port 1/2 on $mux $procmux$2957.
    dead port 1/2 on $mux $procmux$2954.
    dead port 1/2 on $mux $procmux$2951.
    dead port 1/2 on $mux $procmux$2945.
    dead port 1/2 on $mux $procmux$2942.
    dead port 1/2 on $mux $procmux$2939.
    dead port 1/2 on $mux $procmux$2936.
    dead port 1/2 on $mux $procmux$2933.
    dead port 1/2 on $mux $procmux$2930.
    dead port 1/2 on $mux $procmux$2927.
    dead port 1/2 on $mux $procmux$2924.
    dead port 1/2 on $mux $procmux$2921.
    dead port 1/2 on $mux $procmux$2915.
    dead port 1/2 on $mux $procmux$2912.
    dead port 1/2 on $mux $procmux$2909.
    dead port 1/2 on $mux $procmux$2906.
    dead port 1/2 on $mux $procmux$2903.
    dead port 1/2 on $mux $procmux$2900.
    dead port 1/2 on $mux $procmux$2897.
    dead port 1/2 on $mux $procmux$2894.
    dead port 1/2 on $mux $procmux$2891.
    dead port 1/2 on $mux $procmux$2885.
    dead port 1/2 on $mux $procmux$2882.
    dead port 1/2 on $mux $procmux$2879.
    dead port 1/2 on $mux $procmux$2876.
    dead port 1/2 on $mux $procmux$2873.
    dead port 1/2 on $mux $procmux$2870.
    dead port 1/2 on $mux $procmux$2867.
    dead port 1/2 on $mux $procmux$2864.
    dead port 1/2 on $mux $procmux$2861.
    dead port 1/2 on $mux $procmux$2858.
    dead port 1/2 on $mux $procmux$2852.
    dead port 1/2 on $mux $procmux$2849.
    dead port 1/2 on $mux $procmux$2846.
    dead port 1/2 on $mux $procmux$2843.
    dead port 1/2 on $mux $procmux$2840.
    dead port 1/2 on $mux $procmux$2837.
    dead port 1/2 on $mux $procmux$2834.
    dead port 1/2 on $mux $procmux$2831.
    dead port 1/2 on $mux $procmux$2828.
    dead port 1/2 on $mux $procmux$2825.
    dead port 1/2 on $mux $procmux$2819.
    dead port 1/2 on $mux $procmux$2816.
    dead port 1/2 on $mux $procmux$2813.
    dead port 1/2 on $mux $procmux$2810.
    dead port 1/2 on $mux $procmux$2807.
    dead port 1/2 on $mux $procmux$2804.
    dead port 1/2 on $mux $procmux$2801.
    dead port 1/2 on $mux $procmux$2798.
    dead port 1/2 on $mux $procmux$2795.
    dead port 1/2 on $mux $procmux$2792.
    dead port 1/2 on $mux $procmux$2789.
    dead port 1/2 on $mux $procmux$2783.
    dead port 1/2 on $mux $procmux$2780.
    dead port 1/2 on $mux $procmux$2777.
    dead port 1/2 on $mux $procmux$2774.
    dead port 1/2 on $mux $procmux$2771.
    dead port 1/2 on $mux $procmux$2768.
    dead port 1/2 on $mux $procmux$2765.
    dead port 1/2 on $mux $procmux$2762.
    dead port 1/2 on $mux $procmux$2759.
    dead port 1/2 on $mux $procmux$2756.
    dead port 1/2 on $mux $procmux$2753.
    dead port 1/2 on $mux $procmux$2747.
    dead port 1/2 on $mux $procmux$2744.
    dead port 1/2 on $mux $procmux$2741.
    dead port 1/2 on $mux $procmux$2738.
    dead port 1/2 on $mux $procmux$2735.
    dead port 1/2 on $mux $procmux$2732.
    dead port 1/2 on $mux $procmux$2729.
    dead port 1/2 on $mux $procmux$2726.
    dead port 1/2 on $mux $procmux$2723.
    dead port 1/2 on $mux $procmux$2720.
    dead port 1/2 on $mux $procmux$2717.
    dead port 1/2 on $mux $procmux$2714.
    dead port 1/2 on $mux $procmux$2708.
    dead port 1/2 on $mux $procmux$2705.
    dead port 1/2 on $mux $procmux$2702.
    dead port 1/2 on $mux $procmux$2699.
    dead port 1/2 on $mux $procmux$2696.
    dead port 1/2 on $mux $procmux$2693.
    dead port 1/2 on $mux $procmux$2690.
    dead port 1/2 on $mux $procmux$2687.
    dead port 1/2 on $mux $procmux$2684.
    dead port 1/2 on $mux $procmux$2681.
    dead port 1/2 on $mux $procmux$2678.
    dead port 1/2 on $mux $procmux$2675.
    dead port 1/2 on $mux $procmux$2669.
    dead port 1/2 on $mux $procmux$2666.
    dead port 1/2 on $mux $procmux$2663.
    dead port 1/2 on $mux $procmux$2660.
    dead port 1/2 on $mux $procmux$2657.
    dead port 1/2 on $mux $procmux$2654.
    dead port 1/2 on $mux $procmux$2651.
    dead port 1/2 on $mux $procmux$2648.
    dead port 1/2 on $mux $procmux$2645.
    dead port 1/2 on $mux $procmux$2642.
    dead port 1/2 on $mux $procmux$2639.
    dead port 1/2 on $mux $procmux$2636.
    dead port 1/2 on $mux $procmux$2633.
    dead port 1/2 on $mux $procmux$2627.
    dead port 1/2 on $mux $procmux$2624.
    dead port 1/2 on $mux $procmux$2621.
    dead port 1/2 on $mux $procmux$2618.
    dead port 1/2 on $mux $procmux$2615.
    dead port 1/2 on $mux $procmux$2612.
    dead port 1/2 on $mux $procmux$2609.
    dead port 1/2 on $mux $procmux$2606.
    dead port 1/2 on $mux $procmux$2603.
    dead port 1/2 on $mux $procmux$2600.
    dead port 1/2 on $mux $procmux$2597.
    dead port 1/2 on $mux $procmux$2594.
    dead port 1/2 on $mux $procmux$2591.
    dead port 1/2 on $mux $procmux$2585.
    dead port 1/2 on $mux $procmux$2582.
    dead port 1/2 on $mux $procmux$2579.
    dead port 1/2 on $mux $procmux$2576.
    dead port 1/2 on $mux $procmux$2573.
    dead port 1/2 on $mux $procmux$2570.
    dead port 1/2 on $mux $procmux$2567.
    dead port 1/2 on $mux $procmux$2564.
    dead port 1/2 on $mux $procmux$2561.
    dead port 1/2 on $mux $procmux$2558.
    dead port 1/2 on $mux $procmux$2555.
    dead port 1/2 on $mux $procmux$2552.
    dead port 1/2 on $mux $procmux$2549.
    dead port 1/2 on $mux $procmux$2546.
    dead port 1/2 on $mux $procmux$2540.
    dead port 1/2 on $mux $procmux$2537.
    dead port 1/2 on $mux $procmux$2534.
    dead port 1/2 on $mux $procmux$2531.
    dead port 1/2 on $mux $procmux$2528.
    dead port 1/2 on $mux $procmux$2525.
    dead port 1/2 on $mux $procmux$2522.
    dead port 1/2 on $mux $procmux$2519.
    dead port 1/2 on $mux $procmux$2516.
    dead port 1/2 on $mux $procmux$2513.
    dead port 1/2 on $mux $procmux$2510.
    dead port 1/2 on $mux $procmux$2507.
    dead port 1/2 on $mux $procmux$2504.
    dead port 1/2 on $mux $procmux$2501.
    dead port 1/2 on $mux $procmux$2495.
    dead port 1/2 on $mux $procmux$2492.
    dead port 1/2 on $mux $procmux$2489.
    dead port 1/2 on $mux $procmux$2486.
    dead port 1/2 on $mux $procmux$2483.
    dead port 1/2 on $mux $procmux$2480.
    dead port 1/2 on $mux $procmux$2477.
    dead port 1/2 on $mux $procmux$2474.
    dead port 1/2 on $mux $procmux$2471.
    dead port 1/2 on $mux $procmux$2468.
    dead port 1/2 on $mux $procmux$2465.
    dead port 1/2 on $mux $procmux$2462.
    dead port 1/2 on $mux $procmux$2459.
    dead port 1/2 on $mux $procmux$2456.
    dead port 1/2 on $mux $procmux$2453.
    dead port 1/2 on $mux $procmux$2447.
    dead port 1/2 on $mux $procmux$2444.
    dead port 1/2 on $mux $procmux$2441.
    dead port 1/2 on $mux $procmux$2438.
    dead port 1/2 on $mux $procmux$2435.
    dead port 1/2 on $mux $procmux$2432.
    dead port 1/2 on $mux $procmux$2429.
    dead port 1/2 on $mux $procmux$2426.
    dead port 1/2 on $mux $procmux$2423.
    dead port 1/2 on $mux $procmux$2420.
    dead port 1/2 on $mux $procmux$2417.
    dead port 1/2 on $mux $procmux$2414.
    dead port 1/2 on $mux $procmux$2411.
    dead port 1/2 on $mux $procmux$2408.
    dead port 1/2 on $mux $procmux$2405.
    dead port 1/2 on $mux $procmux$2399.
    dead port 1/2 on $mux $procmux$2396.
    dead port 1/2 on $mux $procmux$2393.
    dead port 1/2 on $mux $procmux$2390.
    dead port 1/2 on $mux $procmux$2387.
    dead port 1/2 on $mux $procmux$2384.
    dead port 1/2 on $mux $procmux$2381.
    dead port 1/2 on $mux $procmux$2378.
    dead port 1/2 on $mux $procmux$2375.
    dead port 1/2 on $mux $procmux$2372.
    dead port 1/2 on $mux $procmux$2369.
    dead port 1/2 on $mux $procmux$2366.
    dead port 1/2 on $mux $procmux$2363.
    dead port 1/2 on $mux $procmux$2360.
    dead port 1/2 on $mux $procmux$2357.
    dead port 1/2 on $mux $procmux$2354.
    dead port 1/2 on $mux $procmux$2348.
    dead port 1/2 on $mux $procmux$2345.
    dead port 1/2 on $mux $procmux$2342.
    dead port 1/2 on $mux $procmux$2339.
    dead port 1/2 on $mux $procmux$2336.
    dead port 1/2 on $mux $procmux$2333.
    dead port 1/2 on $mux $procmux$2330.
    dead port 1/2 on $mux $procmux$2327.
    dead port 1/2 on $mux $procmux$2324.
    dead port 1/2 on $mux $procmux$2321.
    dead port 1/2 on $mux $procmux$2318.
    dead port 1/2 on $mux $procmux$2315.
    dead port 1/2 on $mux $procmux$2312.
    dead port 1/2 on $mux $procmux$2309.
    dead port 1/2 on $mux $procmux$2306.
    dead port 1/2 on $mux $procmux$2303.
    dead port 1/2 on $mux $procmux$2297.
    dead port 1/2 on $mux $procmux$2294.
    dead port 1/2 on $mux $procmux$2291.
    dead port 1/2 on $mux $procmux$2288.
    dead port 1/2 on $mux $procmux$2285.
    dead port 1/2 on $mux $procmux$2282.
    dead port 1/2 on $mux $procmux$2279.
    dead port 1/2 on $mux $procmux$2276.
    dead port 1/2 on $mux $procmux$2273.
    dead port 1/2 on $mux $procmux$2270.
    dead port 1/2 on $mux $procmux$2267.
    dead port 1/2 on $mux $procmux$2264.
    dead port 1/2 on $mux $procmux$2261.
    dead port 1/2 on $mux $procmux$2258.
    dead port 1/2 on $mux $procmux$2255.
    dead port 1/2 on $mux $procmux$2252.
    dead port 1/2 on $mux $procmux$2249.
    dead port 1/2 on $mux $procmux$2243.
    dead port 1/2 on $mux $procmux$2240.
    dead port 1/2 on $mux $procmux$2237.
    dead port 1/2 on $mux $procmux$2234.
    dead port 1/2 on $mux $procmux$2231.
    dead port 1/2 on $mux $procmux$2228.
    dead port 1/2 on $mux $procmux$2225.
    dead port 1/2 on $mux $procmux$2222.
    dead port 1/2 on $mux $procmux$2219.
    dead port 1/2 on $mux $procmux$2216.
    dead port 1/2 on $mux $procmux$2213.
    dead port 1/2 on $mux $procmux$2210.
    dead port 1/2 on $mux $procmux$2207.
    dead port 1/2 on $mux $procmux$2204.
    dead port 1/2 on $mux $procmux$2201.
    dead port 1/2 on $mux $procmux$2198.
    dead port 1/2 on $mux $procmux$2195.
    dead port 1/2 on $mux $procmux$2189.
    dead port 1/2 on $mux $procmux$2186.
    dead port 1/2 on $mux $procmux$2183.
    dead port 1/2 on $mux $procmux$2180.
    dead port 1/2 on $mux $procmux$2177.
    dead port 1/2 on $mux $procmux$2174.
    dead port 1/2 on $mux $procmux$2171.
    dead port 1/2 on $mux $procmux$2168.
    dead port 1/2 on $mux $procmux$2165.
    dead port 1/2 on $mux $procmux$2162.
    dead port 1/2 on $mux $procmux$2159.
    dead port 1/2 on $mux $procmux$2156.
    dead port 1/2 on $mux $procmux$2153.
    dead port 1/2 on $mux $procmux$2150.
    dead port 1/2 on $mux $procmux$2147.
    dead port 1/2 on $mux $procmux$2144.
    dead port 1/2 on $mux $procmux$2141.
    dead port 1/2 on $mux $procmux$2138.
    dead port 1/2 on $mux $procmux$2132.
    dead port 1/2 on $mux $procmux$2129.
    dead port 1/2 on $mux $procmux$2126.
    dead port 1/2 on $mux $procmux$2123.
    dead port 1/2 on $mux $procmux$2120.
    dead port 1/2 on $mux $procmux$2117.
    dead port 1/2 on $mux $procmux$2114.
    dead port 1/2 on $mux $procmux$2111.
    dead port 1/2 on $mux $procmux$2108.
    dead port 1/2 on $mux $procmux$2105.
    dead port 1/2 on $mux $procmux$2102.
    dead port 1/2 on $mux $procmux$2099.
    dead port 1/2 on $mux $procmux$2096.
    dead port 1/2 on $mux $procmux$2093.
    dead port 1/2 on $mux $procmux$2090.
    dead port 1/2 on $mux $procmux$2087.
    dead port 1/2 on $mux $procmux$2084.
    dead port 1/2 on $mux $procmux$2081.
    dead port 1/2 on $mux $procmux$2075.
    dead port 1/2 on $mux $procmux$2072.
    dead port 1/2 on $mux $procmux$2069.
    dead port 1/2 on $mux $procmux$2066.
    dead port 1/2 on $mux $procmux$2063.
    dead port 1/2 on $mux $procmux$2060.
    dead port 1/2 on $mux $procmux$2057.
    dead port 1/2 on $mux $procmux$2054.
    dead port 1/2 on $mux $procmux$2051.
    dead port 1/2 on $mux $procmux$2048.
    dead port 1/2 on $mux $procmux$2045.
    dead port 1/2 on $mux $procmux$2042.
    dead port 1/2 on $mux $procmux$2039.
    dead port 1/2 on $mux $procmux$2036.
    dead port 1/2 on $mux $procmux$2033.
    dead port 1/2 on $mux $procmux$2030.
    dead port 1/2 on $mux $procmux$2027.
    dead port 1/2 on $mux $procmux$2024.
    dead port 1/2 on $mux $procmux$2021.
    dead port 1/2 on $mux $procmux$2015.
    dead port 1/2 on $mux $procmux$2012.
    dead port 1/2 on $mux $procmux$2009.
    dead port 1/2 on $mux $procmux$2006.
    dead port 1/2 on $mux $procmux$2003.
    dead port 1/2 on $mux $procmux$2000.
    dead port 1/2 on $mux $procmux$1997.
    dead port 1/2 on $mux $procmux$1994.
    dead port 1/2 on $mux $procmux$1991.
    dead port 1/2 on $mux $procmux$1988.
    dead port 1/2 on $mux $procmux$1985.
    dead port 1/2 on $mux $procmux$1982.
    dead port 1/2 on $mux $procmux$1979.
    dead port 1/2 on $mux $procmux$1976.
    dead port 1/2 on $mux $procmux$1973.
    dead port 1/2 on $mux $procmux$1970.
    dead port 1/2 on $mux $procmux$1967.
    dead port 1/2 on $mux $procmux$1964.
    dead port 1/2 on $mux $procmux$1961.
    dead port 1/2 on $mux $procmux$1955.
    dead port 1/2 on $mux $procmux$1952.
    dead port 1/2 on $mux $procmux$1949.
    dead port 1/2 on $mux $procmux$1946.
    dead port 1/2 on $mux $procmux$1943.
    dead port 1/2 on $mux $procmux$1940.
    dead port 1/2 on $mux $procmux$1937.
    dead port 1/2 on $mux $procmux$1934.
    dead port 1/2 on $mux $procmux$1931.
    dead port 1/2 on $mux $procmux$1928.
    dead port 1/2 on $mux $procmux$1925.
    dead port 1/2 on $mux $procmux$1922.
    dead port 1/2 on $mux $procmux$1919.
    dead port 1/2 on $mux $procmux$1916.
    dead port 1/2 on $mux $procmux$1913.
    dead port 1/2 on $mux $procmux$1910.
    dead port 1/2 on $mux $procmux$1907.
    dead port 1/2 on $mux $procmux$1904.
    dead port 1/2 on $mux $procmux$1901.
    dead port 1/2 on $mux $procmux$1898.
    dead port 1/2 on $mux $procmux$1892.
    dead port 1/2 on $mux $procmux$1889.
    dead port 1/2 on $mux $procmux$1886.
    dead port 1/2 on $mux $procmux$1883.
    dead port 1/2 on $mux $procmux$1880.
    dead port 1/2 on $mux $procmux$1877.
    dead port 1/2 on $mux $procmux$1874.
    dead port 1/2 on $mux $procmux$1871.
    dead port 1/2 on $mux $procmux$1868.
    dead port 1/2 on $mux $procmux$1865.
    dead port 1/2 on $mux $procmux$1862.
    dead port 1/2 on $mux $procmux$1859.
    dead port 1/2 on $mux $procmux$1856.
    dead port 1/2 on $mux $procmux$1853.
    dead port 1/2 on $mux $procmux$1850.
    dead port 1/2 on $mux $procmux$1847.
    dead port 1/2 on $mux $procmux$1844.
    dead port 1/2 on $mux $procmux$1841.
    dead port 1/2 on $mux $procmux$1838.
    dead port 1/2 on $mux $procmux$1835.
    dead port 1/2 on $mux $procmux$1829.
    dead port 1/2 on $mux $procmux$1826.
    dead port 1/2 on $mux $procmux$1823.
    dead port 1/2 on $mux $procmux$1820.
    dead port 1/2 on $mux $procmux$1817.
    dead port 1/2 on $mux $procmux$1814.
    dead port 1/2 on $mux $procmux$1811.
    dead port 1/2 on $mux $procmux$1808.
    dead port 1/2 on $mux $procmux$1805.
    dead port 1/2 on $mux $procmux$1802.
    dead port 1/2 on $mux $procmux$1799.
    dead port 1/2 on $mux $procmux$1796.
    dead port 1/2 on $mux $procmux$1793.
    dead port 1/2 on $mux $procmux$1790.
    dead port 1/2 on $mux $procmux$1787.
    dead port 1/2 on $mux $procmux$1784.
    dead port 1/2 on $mux $procmux$1781.
    dead port 1/2 on $mux $procmux$1778.
    dead port 1/2 on $mux $procmux$1775.
    dead port 1/2 on $mux $procmux$1772.
    dead port 1/2 on $mux $procmux$1769.
    dead port 1/2 on $mux $procmux$1763.
    dead port 1/2 on $mux $procmux$1760.
    dead port 1/2 on $mux $procmux$1757.
    dead port 1/2 on $mux $procmux$1754.
    dead port 1/2 on $mux $procmux$1751.
    dead port 1/2 on $mux $procmux$1748.
    dead port 1/2 on $mux $procmux$1745.
    dead port 1/2 on $mux $procmux$1742.
    dead port 1/2 on $mux $procmux$1739.
    dead port 1/2 on $mux $procmux$1736.
    dead port 1/2 on $mux $procmux$1733.
    dead port 1/2 on $mux $procmux$1730.
    dead port 1/2 on $mux $procmux$1727.
    dead port 1/2 on $mux $procmux$1724.
    dead port 1/2 on $mux $procmux$1721.
    dead port 1/2 on $mux $procmux$1718.
    dead port 1/2 on $mux $procmux$1715.
    dead port 1/2 on $mux $procmux$1712.
    dead port 1/2 on $mux $procmux$1709.
    dead port 1/2 on $mux $procmux$1706.
    dead port 1/2 on $mux $procmux$1703.
    dead port 1/2 on $mux $procmux$1697.
    dead port 1/2 on $mux $procmux$1694.
    dead port 1/2 on $mux $procmux$1691.
    dead port 1/2 on $mux $procmux$1688.
    dead port 1/2 on $mux $procmux$1685.
    dead port 1/2 on $mux $procmux$1682.
    dead port 1/2 on $mux $procmux$1679.
    dead port 1/2 on $mux $procmux$1676.
    dead port 1/2 on $mux $procmux$1673.
    dead port 1/2 on $mux $procmux$1670.
    dead port 1/2 on $mux $procmux$1667.
    dead port 1/2 on $mux $procmux$1664.
    dead port 1/2 on $mux $procmux$1661.
    dead port 1/2 on $mux $procmux$1658.
    dead port 1/2 on $mux $procmux$1655.
    dead port 1/2 on $mux $procmux$1652.
    dead port 1/2 on $mux $procmux$1649.
    dead port 1/2 on $mux $procmux$1646.
    dead port 1/2 on $mux $procmux$1643.
    dead port 1/2 on $mux $procmux$1640.
    dead port 1/2 on $mux $procmux$1637.
    dead port 1/2 on $mux $procmux$1634.
    dead port 1/2 on $mux $procmux$1628.
    dead port 1/2 on $mux $procmux$1625.
    dead port 1/2 on $mux $procmux$1622.
    dead port 1/2 on $mux $procmux$1619.
    dead port 1/2 on $mux $procmux$1616.
    dead port 1/2 on $mux $procmux$1613.
    dead port 1/2 on $mux $procmux$1610.
    dead port 1/2 on $mux $procmux$1607.
    dead port 1/2 on $mux $procmux$1604.
    dead port 1/2 on $mux $procmux$1601.
    dead port 1/2 on $mux $procmux$1598.
    dead port 1/2 on $mux $procmux$1595.
    dead port 1/2 on $mux $procmux$1592.
    dead port 1/2 on $mux $procmux$1589.
    dead port 1/2 on $mux $procmux$1586.
    dead port 1/2 on $mux $procmux$1583.
    dead port 1/2 on $mux $procmux$1580.
    dead port 1/2 on $mux $procmux$1577.
    dead port 1/2 on $mux $procmux$1574.
    dead port 1/2 on $mux $procmux$1571.
    dead port 1/2 on $mux $procmux$1568.
    dead port 1/2 on $mux $procmux$1565.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$5096.
    dead port 1/2 on $mux $procmux$5090.
    dead port 1/2 on $mux $procmux$5084.
    dead port 1/2 on $mux $procmux$5081.
    dead port 1/2 on $mux $procmux$5075.
    dead port 1/2 on $mux $procmux$5072.
    dead port 1/2 on $mux $procmux$5066.
    dead port 1/2 on $mux $procmux$5063.
    dead port 2/2 on $mux $procmux$5060.
    dead port 1/2 on $mux $procmux$5054.
    dead port 1/2 on $mux $procmux$5051.
    dead port 2/2 on $mux $procmux$5048.
    dead port 1/2 on $mux $procmux$5042.
    dead port 1/2 on $mux $procmux$5039.
    dead port 1/2 on $mux $procmux$5036.
    dead port 1/2 on $mux $procmux$5030.
    dead port 1/2 on $mux $procmux$5027.
    dead port 1/2 on $mux $procmux$5024.
    dead port 1/2 on $mux $procmux$5012.
    dead port 1/2 on $mux $procmux$5006.
    dead port 1/2 on $mux $procmux$5000.
    dead port 1/2 on $mux $procmux$4997.
    dead port 1/2 on $mux $procmux$4991.
    dead port 1/2 on $mux $procmux$4988.
    dead port 1/2 on $mux $procmux$4982.
    dead port 1/2 on $mux $procmux$4979.
    dead port 1/2 on $mux $procmux$4976.
    dead port 1/2 on $mux $procmux$4970.
    dead port 1/2 on $mux $procmux$4967.
    dead port 1/2 on $mux $procmux$4964.
    dead port 1/2 on $mux $procmux$4958.
    dead port 1/2 on $mux $procmux$4955.
    dead port 1/2 on $mux $procmux$4952.
    dead port 1/2 on $mux $procmux$4949.
    dead port 1/2 on $mux $procmux$4943.
    dead port 1/2 on $mux $procmux$4940.
    dead port 1/2 on $mux $procmux$4937.
    dead port 1/2 on $mux $procmux$4934.
    dead port 1/2 on $mux $procmux$4928.
    dead port 1/2 on $mux $procmux$4925.
    dead port 1/2 on $mux $procmux$4922.
    dead port 1/2 on $mux $procmux$4919.
    dead port 1/2 on $mux $procmux$4916.
    dead port 1/2 on $mux $procmux$4910.
    dead port 1/2 on $mux $procmux$4907.
    dead port 1/2 on $mux $procmux$4904.
    dead port 1/2 on $mux $procmux$4901.
    dead port 1/2 on $mux $procmux$4898.
    dead port 1/2 on $mux $procmux$4892.
    dead port 1/2 on $mux $procmux$4889.
    dead port 1/2 on $mux $procmux$4886.
    dead port 1/2 on $mux $procmux$4883.
    dead port 1/2 on $mux $procmux$4880.
    dead port 1/2 on $mux $procmux$4877.
    dead port 1/2 on $mux $procmux$4871.
    dead port 1/2 on $mux $procmux$4868.
    dead port 1/2 on $mux $procmux$4865.
    dead port 1/2 on $mux $procmux$4862.
    dead port 1/2 on $mux $procmux$4859.
    dead port 1/2 on $mux $procmux$4856.
    dead port 1/2 on $mux $procmux$4850.
    dead port 1/2 on $mux $procmux$4847.
    dead port 1/2 on $mux $procmux$4844.
    dead port 1/2 on $mux $procmux$4841.
    dead port 1/2 on $mux $procmux$4838.
    dead port 1/2 on $mux $procmux$4835.
    dead port 1/2 on $mux $procmux$4832.
    dead port 1/2 on $mux $procmux$4826.
    dead port 1/2 on $mux $procmux$4823.
    dead port 1/2 on $mux $procmux$4820.
    dead port 1/2 on $mux $procmux$4817.
    dead port 1/2 on $mux $procmux$4814.
    dead port 1/2 on $mux $procmux$4811.
    dead port 1/2 on $mux $procmux$4808.
    dead port 1/2 on $mux $procmux$4802.
    dead port 1/2 on $mux $procmux$4799.
    dead port 1/2 on $mux $procmux$4796.
    dead port 1/2 on $mux $procmux$4793.
    dead port 1/2 on $mux $procmux$4790.
    dead port 1/2 on $mux $procmux$4787.
    dead port 1/2 on $mux $procmux$4784.
    dead port 1/2 on $mux $procmux$4781.
    dead port 1/2 on $mux $procmux$4775.
    dead port 1/2 on $mux $procmux$4772.
    dead port 1/2 on $mux $procmux$4769.
    dead port 1/2 on $mux $procmux$4766.
    dead port 1/2 on $mux $procmux$4763.
    dead port 1/2 on $mux $procmux$4760.
    dead port 1/2 on $mux $procmux$4757.
    dead port 1/2 on $mux $procmux$4754.
    dead port 1/2 on $mux $procmux$4748.
    dead port 1/2 on $mux $procmux$4745.
    dead port 1/2 on $mux $procmux$4742.
    dead port 1/2 on $mux $procmux$4739.
    dead port 1/2 on $mux $procmux$4736.
    dead port 1/2 on $mux $procmux$4733.
    dead port 1/2 on $mux $procmux$4730.
    dead port 1/2 on $mux $procmux$4727.
    dead port 1/2 on $mux $procmux$4724.
    dead port 1/2 on $mux $procmux$4718.
    dead port 1/2 on $mux $procmux$4715.
    dead port 1/2 on $mux $procmux$4712.
    dead port 1/2 on $mux $procmux$4709.
    dead port 1/2 on $mux $procmux$4706.
    dead port 1/2 on $mux $procmux$4703.
    dead port 1/2 on $mux $procmux$4700.
    dead port 1/2 on $mux $procmux$4697.
    dead port 1/2 on $mux $procmux$4694.
    dead port 1/2 on $mux $procmux$4688.
    dead port 1/2 on $mux $procmux$4685.
    dead port 1/2 on $mux $procmux$4682.
    dead port 1/2 on $mux $procmux$4679.
    dead port 1/2 on $mux $procmux$4676.
    dead port 1/2 on $mux $procmux$4673.
    dead port 1/2 on $mux $procmux$4670.
    dead port 1/2 on $mux $procmux$4667.
    dead port 1/2 on $mux $procmux$4664.
    dead port 1/2 on $mux $procmux$4661.
    dead port 1/2 on $mux $procmux$4655.
    dead port 1/2 on $mux $procmux$4652.
    dead port 1/2 on $mux $procmux$4649.
    dead port 1/2 on $mux $procmux$4646.
    dead port 1/2 on $mux $procmux$4643.
    dead port 1/2 on $mux $procmux$4640.
    dead port 1/2 on $mux $procmux$4637.
    dead port 1/2 on $mux $procmux$4634.
    dead port 1/2 on $mux $procmux$4631.
    dead port 1/2 on $mux $procmux$4628.
    dead port 1/2 on $mux $procmux$4622.
    dead port 1/2 on $mux $procmux$4619.
    dead port 1/2 on $mux $procmux$4616.
    dead port 1/2 on $mux $procmux$4613.
    dead port 1/2 on $mux $procmux$4610.
    dead port 1/2 on $mux $procmux$4607.
    dead port 1/2 on $mux $procmux$4604.
    dead port 1/2 on $mux $procmux$4601.
    dead port 1/2 on $mux $procmux$4598.
    dead port 1/2 on $mux $procmux$4595.
    dead port 1/2 on $mux $procmux$4592.
    dead port 1/2 on $mux $procmux$4586.
    dead port 1/2 on $mux $procmux$4583.
    dead port 1/2 on $mux $procmux$4580.
    dead port 1/2 on $mux $procmux$4577.
    dead port 1/2 on $mux $procmux$4574.
    dead port 1/2 on $mux $procmux$4571.
    dead port 1/2 on $mux $procmux$4568.
    dead port 1/2 on $mux $procmux$4565.
    dead port 1/2 on $mux $procmux$4562.
    dead port 1/2 on $mux $procmux$4559.
    dead port 1/2 on $mux $procmux$4556.
    dead port 1/2 on $mux $procmux$4550.
    dead port 1/2 on $mux $procmux$4547.
    dead port 1/2 on $mux $procmux$4544.
    dead port 1/2 on $mux $procmux$4541.
    dead port 1/2 on $mux $procmux$4538.
    dead port 1/2 on $mux $procmux$4535.
    dead port 1/2 on $mux $procmux$4532.
    dead port 1/2 on $mux $procmux$4529.
    dead port 1/2 on $mux $procmux$4526.
    dead port 1/2 on $mux $procmux$4523.
    dead port 1/2 on $mux $procmux$4520.
    dead port 1/2 on $mux $procmux$4517.
    dead port 1/2 on $mux $procmux$4511.
    dead port 1/2 on $mux $procmux$4508.
    dead port 1/2 on $mux $procmux$4505.
    dead port 1/2 on $mux $procmux$4502.
    dead port 1/2 on $mux $procmux$4499.
    dead port 1/2 on $mux $procmux$4496.
    dead port 1/2 on $mux $procmux$4493.
    dead port 1/2 on $mux $procmux$4490.
    dead port 1/2 on $mux $procmux$4487.
    dead port 1/2 on $mux $procmux$4484.
    dead port 1/2 on $mux $procmux$4481.
    dead port 1/2 on $mux $procmux$4478.
    dead port 1/2 on $mux $procmux$4472.
    dead port 1/2 on $mux $procmux$4469.
    dead port 1/2 on $mux $procmux$4466.
    dead port 1/2 on $mux $procmux$4463.
    dead port 1/2 on $mux $procmux$4460.
    dead port 1/2 on $mux $procmux$4457.
    dead port 1/2 on $mux $procmux$4454.
    dead port 1/2 on $mux $procmux$4451.
    dead port 1/2 on $mux $procmux$4448.
    dead port 1/2 on $mux $procmux$4445.
    dead port 1/2 on $mux $procmux$4442.
    dead port 1/2 on $mux $procmux$4439.
    dead port 1/2 on $mux $procmux$4436.
    dead port 1/2 on $mux $procmux$4430.
    dead port 1/2 on $mux $procmux$4427.
    dead port 1/2 on $mux $procmux$4424.
    dead port 1/2 on $mux $procmux$4421.
    dead port 1/2 on $mux $procmux$4418.
    dead port 1/2 on $mux $procmux$4415.
    dead port 1/2 on $mux $procmux$4412.
    dead port 1/2 on $mux $procmux$4409.
    dead port 1/2 on $mux $procmux$4406.
    dead port 1/2 on $mux $procmux$4403.
    dead port 1/2 on $mux $procmux$4400.
    dead port 1/2 on $mux $procmux$4397.
    dead port 1/2 on $mux $procmux$4394.
    dead port 1/2 on $mux $procmux$4388.
    dead port 1/2 on $mux $procmux$4385.
    dead port 1/2 on $mux $procmux$4382.
    dead port 1/2 on $mux $procmux$4379.
    dead port 1/2 on $mux $procmux$4376.
    dead port 1/2 on $mux $procmux$4373.
    dead port 1/2 on $mux $procmux$4370.
    dead port 1/2 on $mux $procmux$4367.
    dead port 1/2 on $mux $procmux$4364.
    dead port 1/2 on $mux $procmux$4361.
    dead port 1/2 on $mux $procmux$4358.
    dead port 1/2 on $mux $procmux$4355.
    dead port 1/2 on $mux $procmux$4352.
    dead port 1/2 on $mux $procmux$4349.
    dead port 1/2 on $mux $procmux$4343.
    dead port 1/2 on $mux $procmux$4340.
    dead port 1/2 on $mux $procmux$4337.
    dead port 1/2 on $mux $procmux$4334.
    dead port 1/2 on $mux $procmux$4331.
    dead port 1/2 on $mux $procmux$4328.
    dead port 1/2 on $mux $procmux$4325.
    dead port 1/2 on $mux $procmux$4322.
    dead port 1/2 on $mux $procmux$4319.
    dead port 1/2 on $mux $procmux$4316.
    dead port 1/2 on $mux $procmux$4313.
    dead port 1/2 on $mux $procmux$4310.
    dead port 1/2 on $mux $procmux$4307.
    dead port 1/2 on $mux $procmux$4304.
    dead port 1/2 on $mux $procmux$4298.
    dead port 1/2 on $mux $procmux$4295.
    dead port 1/2 on $mux $procmux$4292.
    dead port 1/2 on $mux $procmux$4289.
    dead port 1/2 on $mux $procmux$4286.
    dead port 1/2 on $mux $procmux$4283.
    dead port 1/2 on $mux $procmux$4280.
    dead port 1/2 on $mux $procmux$4277.
    dead port 1/2 on $mux $procmux$4274.
    dead port 1/2 on $mux $procmux$4271.
    dead port 1/2 on $mux $procmux$4268.
    dead port 1/2 on $mux $procmux$4265.
    dead port 1/2 on $mux $procmux$4262.
    dead port 1/2 on $mux $procmux$4259.
    dead port 1/2 on $mux $procmux$4256.
    dead port 1/2 on $mux $procmux$4250.
    dead port 1/2 on $mux $procmux$4247.
    dead port 1/2 on $mux $procmux$4244.
    dead port 1/2 on $mux $procmux$4241.
    dead port 1/2 on $mux $procmux$4238.
    dead port 1/2 on $mux $procmux$4235.
    dead port 1/2 on $mux $procmux$4232.
    dead port 1/2 on $mux $procmux$4229.
    dead port 1/2 on $mux $procmux$4226.
    dead port 1/2 on $mux $procmux$4223.
    dead port 1/2 on $mux $procmux$4220.
    dead port 1/2 on $mux $procmux$4217.
    dead port 1/2 on $mux $procmux$4214.
    dead port 1/2 on $mux $procmux$4211.
    dead port 1/2 on $mux $procmux$4208.
    dead port 1/2 on $mux $procmux$4202.
    dead port 1/2 on $mux $procmux$4199.
    dead port 1/2 on $mux $procmux$4196.
    dead port 1/2 on $mux $procmux$4193.
    dead port 1/2 on $mux $procmux$4190.
    dead port 1/2 on $mux $procmux$4187.
    dead port 1/2 on $mux $procmux$4184.
    dead port 1/2 on $mux $procmux$4181.
    dead port 1/2 on $mux $procmux$4178.
    dead port 1/2 on $mux $procmux$4175.
    dead port 1/2 on $mux $procmux$4172.
    dead port 1/2 on $mux $procmux$4169.
    dead port 1/2 on $mux $procmux$4166.
    dead port 1/2 on $mux $procmux$4163.
    dead port 1/2 on $mux $procmux$4160.
    dead port 1/2 on $mux $procmux$4157.
    dead port 1/2 on $mux $procmux$4151.
    dead port 1/2 on $mux $procmux$4148.
    dead port 1/2 on $mux $procmux$4145.
    dead port 1/2 on $mux $procmux$4142.
    dead port 1/2 on $mux $procmux$4139.
    dead port 1/2 on $mux $procmux$4136.
    dead port 1/2 on $mux $procmux$4133.
    dead port 1/2 on $mux $procmux$4130.
    dead port 1/2 on $mux $procmux$4127.
    dead port 1/2 on $mux $procmux$4124.
    dead port 1/2 on $mux $procmux$4121.
    dead port 1/2 on $mux $procmux$4118.
    dead port 1/2 on $mux $procmux$4115.
    dead port 1/2 on $mux $procmux$4112.
    dead port 1/2 on $mux $procmux$4109.
    dead port 1/2 on $mux $procmux$4106.
    dead port 1/2 on $mux $procmux$4100.
    dead port 1/2 on $mux $procmux$4097.
    dead port 1/2 on $mux $procmux$4094.
    dead port 1/2 on $mux $procmux$4091.
    dead port 1/2 on $mux $procmux$4088.
    dead port 1/2 on $mux $procmux$4085.
    dead port 1/2 on $mux $procmux$4082.
    dead port 1/2 on $mux $procmux$4079.
    dead port 1/2 on $mux $procmux$4076.
    dead port 1/2 on $mux $procmux$4073.
    dead port 1/2 on $mux $procmux$4070.
    dead port 1/2 on $mux $procmux$4067.
    dead port 1/2 on $mux $procmux$4064.
    dead port 1/2 on $mux $procmux$4061.
    dead port 1/2 on $mux $procmux$4058.
    dead port 1/2 on $mux $procmux$4055.
    dead port 1/2 on $mux $procmux$4052.
    dead port 1/2 on $mux $procmux$4046.
    dead port 1/2 on $mux $procmux$4043.
    dead port 1/2 on $mux $procmux$4040.
    dead port 1/2 on $mux $procmux$4037.
    dead port 1/2 on $mux $procmux$4034.
    dead port 1/2 on $mux $procmux$4031.
    dead port 1/2 on $mux $procmux$4028.
    dead port 1/2 on $mux $procmux$4025.
    dead port 1/2 on $mux $procmux$4022.
    dead port 1/2 on $mux $procmux$4019.
    dead port 1/2 on $mux $procmux$4016.
    dead port 1/2 on $mux $procmux$4013.
    dead port 1/2 on $mux $procmux$4010.
    dead port 1/2 on $mux $procmux$4007.
    dead port 1/2 on $mux $procmux$4004.
    dead port 1/2 on $mux $procmux$4001.
    dead port 1/2 on $mux $procmux$3998.
    dead port 1/2 on $mux $procmux$3992.
    dead port 1/2 on $mux $procmux$3989.
    dead port 1/2 on $mux $procmux$3986.
    dead port 1/2 on $mux $procmux$3983.
    dead port 1/2 on $mux $procmux$3980.
    dead port 1/2 on $mux $procmux$3977.
    dead port 1/2 on $mux $procmux$3974.
    dead port 1/2 on $mux $procmux$3971.
    dead port 1/2 on $mux $procmux$3968.
    dead port 1/2 on $mux $procmux$3965.
    dead port 1/2 on $mux $procmux$3962.
    dead port 1/2 on $mux $procmux$3959.
    dead port 1/2 on $mux $procmux$3956.
    dead port 1/2 on $mux $procmux$3953.
    dead port 1/2 on $mux $procmux$3950.
    dead port 1/2 on $mux $procmux$3947.
    dead port 1/2 on $mux $procmux$3944.
    dead port 1/2 on $mux $procmux$3941.
    dead port 1/2 on $mux $procmux$3935.
    dead port 1/2 on $mux $procmux$3932.
    dead port 1/2 on $mux $procmux$3929.
    dead port 1/2 on $mux $procmux$3926.
    dead port 1/2 on $mux $procmux$3923.
    dead port 1/2 on $mux $procmux$3920.
    dead port 1/2 on $mux $procmux$3917.
    dead port 1/2 on $mux $procmux$3914.
    dead port 1/2 on $mux $procmux$3911.
    dead port 1/2 on $mux $procmux$3908.
    dead port 1/2 on $mux $procmux$3905.
    dead port 1/2 on $mux $procmux$3902.
    dead port 1/2 on $mux $procmux$3899.
    dead port 1/2 on $mux $procmux$3896.
    dead port 1/2 on $mux $procmux$3893.
    dead port 1/2 on $mux $procmux$3890.
    dead port 1/2 on $mux $procmux$3887.
    dead port 1/2 on $mux $procmux$3884.
    dead port 1/2 on $mux $procmux$3878.
    dead port 1/2 on $mux $procmux$3875.
    dead port 1/2 on $mux $procmux$3872.
    dead port 1/2 on $mux $procmux$3869.
    dead port 1/2 on $mux $procmux$3866.
    dead port 1/2 on $mux $procmux$3863.
    dead port 1/2 on $mux $procmux$3860.
    dead port 1/2 on $mux $procmux$3857.
    dead port 1/2 on $mux $procmux$3854.
    dead port 1/2 on $mux $procmux$3851.
    dead port 1/2 on $mux $procmux$3848.
    dead port 1/2 on $mux $procmux$3845.
    dead port 1/2 on $mux $procmux$3842.
    dead port 1/2 on $mux $procmux$3839.
    dead port 1/2 on $mux $procmux$3836.
    dead port 1/2 on $mux $procmux$3833.
    dead port 1/2 on $mux $procmux$3830.
    dead port 1/2 on $mux $procmux$3827.
    dead port 1/2 on $mux $procmux$3824.
    dead port 1/2 on $mux $procmux$3818.
    dead port 1/2 on $mux $procmux$3815.
    dead port 1/2 on $mux $procmux$3812.
    dead port 1/2 on $mux $procmux$3809.
    dead port 1/2 on $mux $procmux$3806.
    dead port 1/2 on $mux $procmux$3803.
    dead port 1/2 on $mux $procmux$3800.
    dead port 1/2 on $mux $procmux$3797.
    dead port 1/2 on $mux $procmux$3794.
    dead port 1/2 on $mux $procmux$3791.
    dead port 1/2 on $mux $procmux$3788.
    dead port 1/2 on $mux $procmux$3785.
    dead port 1/2 on $mux $procmux$3782.
    dead port 1/2 on $mux $procmux$3779.
    dead port 1/2 on $mux $procmux$3776.
    dead port 1/2 on $mux $procmux$3773.
    dead port 1/2 on $mux $procmux$3770.
    dead port 1/2 on $mux $procmux$3767.
    dead port 1/2 on $mux $procmux$3764.
    dead port 1/2 on $mux $procmux$3758.
    dead port 1/2 on $mux $procmux$3755.
    dead port 1/2 on $mux $procmux$3752.
    dead port 1/2 on $mux $procmux$3749.
    dead port 1/2 on $mux $procmux$3746.
    dead port 1/2 on $mux $procmux$3743.
    dead port 1/2 on $mux $procmux$3740.
    dead port 1/2 on $mux $procmux$3737.
    dead port 1/2 on $mux $procmux$3734.
    dead port 1/2 on $mux $procmux$3731.
    dead port 1/2 on $mux $procmux$3728.
    dead port 1/2 on $mux $procmux$3725.
    dead port 1/2 on $mux $procmux$3722.
    dead port 1/2 on $mux $procmux$3719.
    dead port 1/2 on $mux $procmux$3716.
    dead port 1/2 on $mux $procmux$3713.
    dead port 1/2 on $mux $procmux$3710.
    dead port 1/2 on $mux $procmux$3707.
    dead port 1/2 on $mux $procmux$3704.
    dead port 1/2 on $mux $procmux$3701.
    dead port 1/2 on $mux $procmux$3695.
    dead port 1/2 on $mux $procmux$3692.
    dead port 1/2 on $mux $procmux$3689.
    dead port 1/2 on $mux $procmux$3686.
    dead port 1/2 on $mux $procmux$3683.
    dead port 1/2 on $mux $procmux$3680.
    dead port 1/2 on $mux $procmux$3677.
    dead port 1/2 on $mux $procmux$3674.
    dead port 1/2 on $mux $procmux$3671.
    dead port 1/2 on $mux $procmux$3668.
    dead port 1/2 on $mux $procmux$3665.
    dead port 1/2 on $mux $procmux$3662.
    dead port 1/2 on $mux $procmux$3659.
    dead port 1/2 on $mux $procmux$3656.
    dead port 1/2 on $mux $procmux$3653.
    dead port 1/2 on $mux $procmux$3650.
    dead port 1/2 on $mux $procmux$3647.
    dead port 1/2 on $mux $procmux$3644.
    dead port 1/2 on $mux $procmux$3641.
    dead port 1/2 on $mux $procmux$3638.
    dead port 1/2 on $mux $procmux$3632.
    dead port 1/2 on $mux $procmux$3629.
    dead port 1/2 on $mux $procmux$3626.
    dead port 1/2 on $mux $procmux$3623.
    dead port 1/2 on $mux $procmux$3620.
    dead port 1/2 on $mux $procmux$3617.
    dead port 1/2 on $mux $procmux$3614.
    dead port 1/2 on $mux $procmux$3611.
    dead port 1/2 on $mux $procmux$3608.
    dead port 1/2 on $mux $procmux$3605.
    dead port 1/2 on $mux $procmux$3602.
    dead port 1/2 on $mux $procmux$3599.
    dead port 1/2 on $mux $procmux$3596.
    dead port 1/2 on $mux $procmux$3593.
    dead port 1/2 on $mux $procmux$3590.
    dead port 1/2 on $mux $procmux$3587.
    dead port 1/2 on $mux $procmux$3584.
    dead port 1/2 on $mux $procmux$3581.
    dead port 1/2 on $mux $procmux$3578.
    dead port 1/2 on $mux $procmux$3575.
    dead port 1/2 on $mux $procmux$3572.
    dead port 1/2 on $mux $procmux$3566.
    dead port 1/2 on $mux $procmux$3563.
    dead port 1/2 on $mux $procmux$3560.
    dead port 1/2 on $mux $procmux$3557.
    dead port 1/2 on $mux $procmux$3554.
    dead port 1/2 on $mux $procmux$3551.
    dead port 1/2 on $mux $procmux$3548.
    dead port 1/2 on $mux $procmux$3545.
    dead port 1/2 on $mux $procmux$3542.
    dead port 1/2 on $mux $procmux$3539.
    dead port 1/2 on $mux $procmux$3536.
    dead port 1/2 on $mux $procmux$3533.
    dead port 1/2 on $mux $procmux$3530.
    dead port 1/2 on $mux $procmux$3527.
    dead port 1/2 on $mux $procmux$3524.
    dead port 1/2 on $mux $procmux$3521.
    dead port 1/2 on $mux $procmux$3518.
    dead port 1/2 on $mux $procmux$3515.
    dead port 1/2 on $mux $procmux$3512.
    dead port 1/2 on $mux $procmux$3509.
    dead port 1/2 on $mux $procmux$3506.
    dead port 1/2 on $mux $procmux$3500.
    dead port 1/2 on $mux $procmux$3497.
    dead port 1/2 on $mux $procmux$3494.
    dead port 1/2 on $mux $procmux$3491.
    dead port 1/2 on $mux $procmux$3488.
    dead port 1/2 on $mux $procmux$3485.
    dead port 1/2 on $mux $procmux$3482.
    dead port 1/2 on $mux $procmux$3479.
    dead port 1/2 on $mux $procmux$3476.
    dead port 1/2 on $mux $procmux$3473.
    dead port 1/2 on $mux $procmux$3470.
    dead port 1/2 on $mux $procmux$3467.
    dead port 1/2 on $mux $procmux$3464.
    dead port 1/2 on $mux $procmux$3461.
    dead port 1/2 on $mux $procmux$3458.
    dead port 1/2 on $mux $procmux$3455.
    dead port 1/2 on $mux $procmux$3452.
    dead port 1/2 on $mux $procmux$3449.
    dead port 1/2 on $mux $procmux$3446.
    dead port 1/2 on $mux $procmux$3443.
    dead port 1/2 on $mux $procmux$3440.
    dead port 1/2 on $mux $procmux$3437.
    dead port 1/2 on $mux $procmux$3431.
    dead port 1/2 on $mux $procmux$3428.
    dead port 1/2 on $mux $procmux$3425.
    dead port 1/2 on $mux $procmux$3422.
    dead port 1/2 on $mux $procmux$3419.
    dead port 1/2 on $mux $procmux$3416.
    dead port 1/2 on $mux $procmux$3413.
    dead port 1/2 on $mux $procmux$3410.
    dead port 1/2 on $mux $procmux$3407.
    dead port 1/2 on $mux $procmux$3404.
    dead port 1/2 on $mux $procmux$3401.
    dead port 1/2 on $mux $procmux$3398.
    dead port 1/2 on $mux $procmux$3395.
    dead port 1/2 on $mux $procmux$3392.
    dead port 1/2 on $mux $procmux$3389.
    dead port 1/2 on $mux $procmux$3386.
    dead port 1/2 on $mux $procmux$3383.
    dead port 1/2 on $mux $procmux$3380.
    dead port 1/2 on $mux $procmux$3377.
    dead port 1/2 on $mux $procmux$3374.
    dead port 1/2 on $mux $procmux$3371.
    dead port 1/2 on $mux $procmux$3368.
    dead port 1/2 on $mux $procmux$3362.
    dead port 1/2 on $mux $procmux$3359.
    dead port 1/2 on $mux $procmux$3356.
    dead port 1/2 on $mux $procmux$3353.
    dead port 1/2 on $mux $procmux$3350.
    dead port 1/2 on $mux $procmux$3347.
    dead port 1/2 on $mux $procmux$3344.
    dead port 1/2 on $mux $procmux$3341.
    dead port 1/2 on $mux $procmux$3338.
    dead port 1/2 on $mux $procmux$3335.
    dead port 1/2 on $mux $procmux$3332.
    dead port 1/2 on $mux $procmux$3329.
    dead port 1/2 on $mux $procmux$3326.
    dead port 1/2 on $mux $procmux$3323.
    dead port 1/2 on $mux $procmux$3320.
    dead port 1/2 on $mux $procmux$3317.
    dead port 1/2 on $mux $procmux$3314.
    dead port 1/2 on $mux $procmux$3311.
    dead port 1/2 on $mux $procmux$3308.
    dead port 1/2 on $mux $procmux$3305.
    dead port 1/2 on $mux $procmux$3302.
    dead port 1/2 on $mux $procmux$3299.
    dead port 1/2 on $mux $procmux$3296.
    dead port 1/2 on $mux $procmux$3290.
    dead port 1/2 on $mux $procmux$3287.
    dead port 1/2 on $mux $procmux$3284.
    dead port 1/2 on $mux $procmux$3281.
    dead port 1/2 on $mux $procmux$3278.
    dead port 1/2 on $mux $procmux$3275.
    dead port 1/2 on $mux $procmux$3272.
    dead port 1/2 on $mux $procmux$3269.
    dead port 1/2 on $mux $procmux$3266.
    dead port 1/2 on $mux $procmux$3263.
    dead port 1/2 on $mux $procmux$3260.
    dead port 1/2 on $mux $procmux$3257.
    dead port 1/2 on $mux $procmux$3254.
    dead port 1/2 on $mux $procmux$3251.
    dead port 1/2 on $mux $procmux$3248.
    dead port 1/2 on $mux $procmux$3245.
    dead port 1/2 on $mux $procmux$3242.
    dead port 1/2 on $mux $procmux$3239.
    dead port 1/2 on $mux $procmux$3236.
    dead port 1/2 on $mux $procmux$3233.
    dead port 1/2 on $mux $procmux$3230.
    dead port 1/2 on $mux $procmux$3227.
    dead port 1/2 on $mux $procmux$3224.
    dead port 2/2 on $mux $procmux$5134.
    dead port 1/2 on $mux $procmux$5137.
    dead port 1/2 on $mux $procmux$5142.
    dead port 1/2 on $mux $procmux$5148.
    dead port 1/2 on $mux $procmux$5153.
    dead port 1/2 on $mux $procmux$5156.
    dead port 2/2 on $mux $procmux$5156.
    dead port 1/2 on $mux $procmux$5159.
    dead port 2/2 on $mux $procmux$5159.
    dead port 2/2 on $mux $procmux$5188.
    dead port 1/2 on $mux $procmux$5200.
    dead port 2/2 on $mux $procmux$5200.
Running muxtree optimizer on module \memcmd_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \addr_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \wfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \DataTransferUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mult_add..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \top_ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$6282.
    dead port 2/2 on $mux $procmux$6262.
    dead port 2/2 on $mux $procmux$6243.
    dead port 2/2 on $mux $procmux$6241.
    dead port 2/2 on $mux $procmux$6221.
    dead port 1/2 on $mux $procmux$6219.
    dead port 2/2 on $mux $procmux$6199.
    dead port 1/2 on $mux $procmux$6197.
    dead port 1/2 on $mux $procmux$6194.
    dead port 2/2 on $mux $procmux$6174.
    dead port 2/2 on $mux $procmux$6156.
    dead port 2/2 on $mux $procmux$6154.
    dead port 2/2 on $mux $procmux$6135.
    dead port 2/2 on $mux $procmux$6118.
    dead port 2/2 on $mux $procmux$6101.
    dead port 2/2 on $mux $procmux$6099.
    dead port 2/2 on $mux $procmux$6081.
    dead port 2/2 on $mux $procmux$6079.
    dead port 2/2 on $mux $procmux$6061.
    dead port 2/2 on $mux $procmux$6059.
    dead port 1/2 on $mux $procmux$6057.
    dead port 2/2 on $mux $procmux$6038.
    dead port 2/2 on $mux $procmux$6022.
    dead port 2/2 on $mux $procmux$6006.
    dead port 2/2 on $mux $procmux$6004.
    dead port 2/2 on $mux $procmux$5987.
    dead port 2/2 on $mux $procmux$5972.
    dead port 2/2 on $mux $procmux$5958.
    dead port 2/2 on $mux $procmux$5944.
    dead port 2/2 on $mux $procmux$5942.
    dead port 2/2 on $mux $procmux$5927.
    dead port 2/2 on $mux $procmux$5915.
    dead port 2/2 on $mux $procmux$5904.
    dead port 2/2 on $mux $procmux$5893.
    dead port 2/2 on $mux $procmux$5882.
    dead port 2/2 on $mux $procmux$5872.
    dead port 2/2 on $mux $procmux$5862.
    dead port 2/2 on $mux $procmux$5860.
    dead port 2/2 on $mux $procmux$5849.
    dead port 2/2 on $mux $procmux$5840.
    dead port 2/2 on $mux $procmux$5831.
    dead port 2/2 on $mux $procmux$5829.
    dead port 2/2 on $mux $procmux$5819.
    dead port 2/2 on $mux $procmux$5812.
    dead port 2/2 on $mux $procmux$5805.
    dead port 2/2 on $mux $procmux$5803.
    dead port 2/2 on $mux $procmux$5795.
    dead port 2/2 on $mux $procmux$5793.
    dead port 1/2 on $mux $procmux$5791.
    dead port 2/2 on $mux $procmux$5782.
    dead port 2/2 on $mux $procmux$5780.
    dead port 1/2 on $mux $procmux$5778.
    dead port 1/2 on $mux $procmux$5775.
    dead port 2/2 on $mux $procmux$5752.
    dead port 2/2 on $mux $procmux$5744.
    dead port 2/2 on $mux $procmux$5737.
    dead port 1/2 on $mux $procmux$5735.
    dead port 2/2 on $mux $procmux$5727.
Running muxtree optimizer on module \LU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$6484.
    dead port 2/2 on $mux $procmux$6472.
Running muxtree optimizer on module \MarshallerController..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LU8PEEng..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 1148 multiplexer ports.
<suppressed ~301 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.
    Consolidated identical input bits for $mux cell $procmux$1254:
      Old portsprocmux$1254_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1254_Y [0]
      New connections: $procmux$1254_Y [255:1] = { $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] $procmux$1254_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$1242:
      Old portsprocmux$1242_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1242_Y [0]
      New connections: $procmux$1242_Y [255:1] = { $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] $procmux$1242_Y [0] }
  Optimizing cells in module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.
  Optimizing cells in module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.
    Consolidated identical input bits for $mux cell $procmux$1278:
      Old ports: A=28'0000000000000000000000000000, B=28'1111111111111111111111111111, Y=$procmux$1278_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1278_Y [0]
      New connections: $procmux$1278_Y [27:1] = { $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] $procmux$1278_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$1266:
      Old ports: A=28'0000000000000000000000000000, B=28'1111111111111111111111111111, Y=$procmux$1266_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1266_Y [0]
      New connections: $procmux$1266_Y [27:1] = { $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] $procmux$1266_Y [0] }
  Optimizing cells in module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.
  Optimizing cells in module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.
    Consolidated identical input bits for $mux cell $procmux$1302:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$1302_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1302_Y [0]
      New connections: $procmux$1302_Y [31:1] = { $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] $procmux$1302_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$1290:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$1290_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1290_Y [0]
      New connections: $procmux$1290_Y [31:1] = { $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] $procmux$1290_Y [0] }
  Optimizing cells in module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.
  Optimizing cells in module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.
    Consolidated identical input bits for $mux cell $procmux$1326:
      Old portsprocmux$1326_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1326_Y [0]
      New connections: $procmux$1326_Y [255:1] = { $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] $procmux$1326_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$1314:
      Old portsprocmux$1314_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1314_Y [0]
      New connections: $procmux$1314_Y [255:1] = { $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] $procmux$1314_Y [0] }
  Optimizing cells in module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.
  Optimizing cells in module \assemble.
  Optimizing cells in module \flag.
  Optimizing cells in module \round.
  Optimizing cells in module \shift.
  Optimizing cells in module \normalize.
  Optimizing cells in module \exponent.
  Optimizing cells in module \multiply_a.
  Optimizing cells in module \prenorm.
  Optimizing cells in module \special.
  Optimizing cells in module \preprocess.
  Optimizing cells in module \fpmul.
  Optimizing cells in module \div_24b.
  Optimizing cells in module \fpu_div.
  Optimizing cells in module \fpu_add.
    New ctrl vector for $pmux cell $procmux$5109: { $procmux$5133_CMP $procmux$5132_CMP $procmux$5131_CMP $procmux$5130_CMP $procmux$5129_CMP $procmux$5128_CMP $procmux$5127_CMP $procmux$5126_CMP $procmux$5125_CMP $procmux$5124_CMP $procmux$5123_CMP $procmux$5122_CMP $procmux$5121_CMP $procmux$5120_CMP $procmux$5119_CMP $procmux$5118_CMP $procmux$5117_CMP $procmux$5116_CMP $procmux$5115_CMP $procmux$5114_CMP $procmux$5113_CMP $procmux$5112_CMP $procmux$5111_CMP }
    New ctrl vector for $pmux cell $procmux$5163: { $procmux$5187_CMP $procmux$5186_CMP $procmux$5185_CMP $procmux$5184_CMP $procmux$5183_CMP $procmux$5182_CMP $procmux$5181_CMP $procmux$5180_CMP $procmux$5179_CMP $procmux$5178_CMP $procmux$5177_CMP $procmux$5176_CMP $procmux$5175_CMP $procmux$5174_CMP $procmux$5173_CMP $procmux$5172_CMP $procmux$5171_CMP $procmux$5170_CMP $procmux$5169_CMP $procmux$5168_CMP $procmux$5167_CMP $procmux$5166_CMP $procmux$5165_CMP }
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \memcmd_fifo.
  Optimizing cells in module \addr_fifo.
  Optimizing cells in module \wfifo.
  Optimizing cells in module \rfifo.
  Optimizing cells in module \DataTransferUnit.
  Optimizing cells in module \mult_add.
  Optimizing cells in module \top_ram.
  Optimizing cells in module \ram3.
  Optimizing cells in module \ram2.
  Optimizing cells in module \ram1.
  Optimizing cells in module \ram.
  Optimizing cells in module \LUControl.
    New ctrl vector for $pmux cell $procmux$6285: { $procmux$6309_CMP $procmux$6308_CMP $procmux$6306_CMP $procmux$6303_CMP $procmux$6302_CMP $procmux$6301_CMP $procmux$6299_CMP $auto$opt_reduce.cc:134:opt_mux$7298 }
    New ctrl vector for $pmux cell $procmux$5667: { $auto$opt_reduce.cc:134:opt_mux$7302 $auto$opt_reduce.cc:134:opt_mux$7300 }
  Optimizing cells in module \LUControl.
  Optimizing cells in module \LU.
  Optimizing cells in module \MarshallerController.
  Optimizing cells in module \LU8PEEng.
  Optimizing cells in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
    Consolidated identical input bits for $mux cell $procmux$6853:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=64'1111111111111111111111111111111111111111111111111111111111111111, Y=$procmux$6853_Y
      New ports: A=1'0, B=1'1, Y=$procmux$6853_Y [0]
      New connections: $procmux$6853_Y [63:1] = { $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] $procmux$6853_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$6841:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=64'1111111111111111111111111111111111111111111111111111111111111111, Y=$procmux$6841_Y
      New ports: A=1'0, B=1'1, Y=$procmux$6841_Y [0]
      New connections: $procmux$6841_Y [63:1] = { $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] $procmux$6841_Y [0] }
  Optimizing cells in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
  Optimizing cells in module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.
    Consolidated identical input bits for $mux cell $procmux$6877:
      Old ports: A=5'00000, B=5'11111, Y=$procmux$6877_Y
      New ports: A=1'0, B=1'1, Y=$procmux$6877_Y [0]
      New connections: $procmux$6877_Y [4:1] = { $procmux$6877_Y [0] $procmux$6877_Y [0] $procmux$6877_Y [0] $procmux$6877_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$6865:
      Old ports: A=5'00000, B=5'11111, Y=$procmux$6865_Y
      New ports: A=1'0, B=1'1, Y=$procmux$6865_Y [0]
      New connections: $procmux$6865_Y [4:1] = { $procmux$6865_Y [0] $procmux$6865_Y [0] $procmux$6865_Y [0] $procmux$6865_Y [0] }
  Optimizing cells in module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.
Performed a total of 16 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100'.
Finding identical cells in module `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram'.
Finding identical cells in module `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram'.
Finding identical cells in module `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram'.
Finding identical cells in module `\assemble'.
Finding identical cells in module `\flag'.
Finding identical cells in module `\round'.
Finding identical cells in module `\shift'.
Finding identical cells in module `\normalize'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\multiply_a'.
Finding identical cells in module `\prenorm'.
Finding identical cells in module `\special'.
Finding identical cells in module `\preprocess'.
Finding identical cells in module `\fpmul'.
Finding identical cells in module `\div_24b'.
Finding identical cells in module `\fpu_div'.
Finding identical cells in module `\fpu_add'.
<suppressed ~3 debug messages>
Finding identical cells in module `\memcmd_fifo'.
Finding identical cells in module `\addr_fifo'.
Finding identical cells in module `\wfifo'.
Finding identical cells in module `\rfifo'.
Finding identical cells in module `\DataTransferUnit'.
Finding identical cells in module `\mult_add'.
Finding identical cells in module `\top_ram'.
Finding identical cells in module `\ram3'.
Finding identical cells in module `\ram2'.
Finding identical cells in module `\ram1'.
Finding identical cells in module `\ram'.
Finding identical cells in module `\LUControl'.
<suppressed ~9 debug messages>
Finding identical cells in module `\LU'.
Finding identical cells in module `\MarshallerController'.
<suppressed ~21 debug messages>
Finding identical cells in module `\LU8PEEng'.
Finding identical cells in module `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram'.
Finding identical cells in module `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100'.
Removed a total of 11 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$6888 ($dff) from module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100 (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:93$1204_DATA, Q = \out2).
Adding EN signal on $procdff$6892 ($dff) from module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100 (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:84$1196_DATA, Q = \out1).
Adding EN signal on $procdff$6896 ($dff) from module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:93$1186_DATA, Q = \out2).
Adding EN signal on $procdff$6900 ($dff) from module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:84$1178_DATA, Q = \out1).
Adding EN signal on $procdff$6904 ($dff) from module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:93$1168_DATA, Q = \out2).
Adding EN signal on $procdff$6908 ($dff) from module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:84$1160_DATA, Q = \out1).
Adding EN signal on $procdff$6912 ($dff) from module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:93$1150_DATA, Q = \out2).
Adding EN signal on $procdff$6916 ($dff) from module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:84$1142_DATA, Q = \out1).
Setting constant 1-bit at position 23 on $procdff$6923 ($dff) from module fpu_div.
Setting constant 1-bit at position 23 on $procdff$6924 ($dff) from module fpu_div.
Adding EN signal on $procdff$6929 ($dff) from module memcmd_fifo (D = $procmux$5205_Y, Q = \status_cnt).
Adding EN signal on $procdff$6930 ($dff) from module memcmd_fifo (D = \data_ram, Q = \q).
Adding EN signal on $procdff$6931 ($dff) from module memcmd_fifo (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3201$692_Y, Q = \rd_pointer).
Adding EN signal on $procdff$6932 ($dff) from module memcmd_fifo (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3194$690_Y, Q = \wr_pointer).
Adding EN signal on $procdff$6933 ($dff) from module addr_fifo (D = $procmux$5216_Y, Q = \status_cnt).
Adding EN signal on $procdff$6934 ($dff) from module addr_fifo (D = \data_ram, Q = \q).
Adding EN signal on $procdff$6935 ($dff) from module addr_fifo (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3127$674_Y, Q = \rd_pointer).
Adding EN signal on $procdff$6936 ($dff) from module addr_fifo (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3120$672_Y, Q = \wr_pointer).
Adding EN signal on $procdff$6937 ($dff) from module wfifo (D = $procmux$5227_Y, Q = \status_cnt).
Adding SRST signal on $procdff$6938 ($dff) from module wfifo (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3048$653_Y, Q = \counter, rval = 2'00).
Adding EN signal on $procdff$6939 ($dff) from module wfifo (D = $procmux$5241_Y, Q = \q).
Adding EN signal on $procdff$6940 ($dff) from module wfifo (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3040$651_Y, Q = \rd_pointer).
Adding EN signal on $procdff$6941 ($dff) from module wfifo (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:3033$649_Y, Q = \wr_pointer).
Adding EN signal on $procdff$6946 ($dff) from module rfifo (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2946$627_Y, Q = \wr_pointer).
Adding EN signal on $procdff$6945 ($dff) from module rfifo (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2953$629_Y, Q = \rd_pointer).
Adding EN signal on $procdff$6942 ($dff) from module rfifo (D = $procmux$5250_Y, Q = \status_cnt).
Adding SRST signal on $procdff$6943 ($dff) from module rfifo (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:2961$631_Y, Q = \counter, rval = 2'00).
Adding EN signal on $procdff$6944 ($dff) from module rfifo (D = \data_ram, Q = \q [255:192]).
Adding EN signal on $procdff$6944 ($dff) from module rfifo (D = \data_ram, Q = \q [191:128]).
Adding EN signal on $procdff$6944 ($dff) from module rfifo (D = \data_ram, Q = \q [127:64]).
Adding EN signal on $procdff$6944 ($dff) from module rfifo (D = \data_ram, Q = \q [63:0]).
Adding SRST signal on $procdff$6973 ($dff) from module DataTransferUnit (D = $procmux$5568_Y, Q = \state, rval = 2'00).
Adding SRST signal on $procdff$6947 ($dff) from module DataTransferUnit (D = $procmux$5400_Y, Q = \mem_addr0, rval = 24'000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7363 ($sdff) from module DataTransferUnit (D = \mem_addr1, Q = \mem_addr0).
Adding SRST signal on $procdff$6972 ($dff) from module DataTransferUnit (D = $procmux$5433_Y, Q = \data_count, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$7365 ($sdff) from module DataTransferUnit (D = $procmux$5433_Y, Q = \data_count).
Adding SRST signal on $procdff$6971 ($dff) from module DataTransferUnit (D = $procmux$5454_Y, Q = \ram_addr4, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$7379 ($sdff) from module DataTransferUnit (D = $procmux$5454_Y, Q = \ram_addr4).
Adding SRST signal on $procdff$6970 ($dff) from module DataTransferUnit (D = $procmux$5472_Y, Q = \size, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$7391 ($sdff) from module DataTransferUnit (D = $procmux$5472_Y, Q = \size).
Adding SRST signal on $procdff$6948 ($dff) from module DataTransferUnit (D = $procmux$5395_Y, Q = \mem_addr1, rval = 24'000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7403 ($sdff) from module DataTransferUnit (D = \mem_addr2, Q = \mem_addr1).
Adding SRST signal on $procdff$6949 ($dff) from module DataTransferUnit (D = $procmux$5390_Y, Q = \mem_addr2, rval = 24'000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7405 ($sdff) from module DataTransferUnit (D = \mem_addr3, Q = \mem_addr2).
Adding SRST signal on $procdff$6950 ($dff) from module DataTransferUnit (D = $procmux$5385_Y, Q = \mem_addr3, rval = 24'000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7407 ($sdff) from module DataTransferUnit (D = \mem_addr4, Q = \mem_addr3).
Adding SRST signal on $procdff$6951 ($dff) from module DataTransferUnit (D = $procmux$5380_Y, Q = \mem_addr4, rval = 24'000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7409 ($sdff) from module DataTransferUnit (D = \mem_addr5, Q = \mem_addr4).
Adding SRST signal on $procdff$6952 ($dff) from module DataTransferUnit (D = \fifo_write_reg [4:1], Q = \fifo_write_reg [3:0], rval = 4'0000).
Adding SRST signal on $procdff$6953 ($dff) from module DataTransferUnit (D = { $procmux$5372_Y $procmux$5298_Y $procmux$5308_Y $procmux$5318_Y }, Q = \write_req_reg [3:0], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$7412 ($sdff) from module DataTransferUnit (D = \write_req_reg [4:1], Q = \write_req_reg [3:0]).
Adding SRST signal on $procdff$6954 ($dff) from module DataTransferUnit (D = { $procmux$5288_Y $procmux$5293_Y $procmux$5303_Y $procmux$5313_Y }, Q = \read_req_reg [3:0], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$7414 ($sdff) from module DataTransferUnit (D = \read_req_reg [4:1], Q = \read_req_reg [3:0]).
Adding SRST signal on $procdff$6955 ($dff) from module DataTransferUnit (D = $procmux$5367_Y, Q = \size_count0, rval = 2'01).
Adding EN signal on $auto$ff.cc:262:slice$7416 ($sdff) from module DataTransferUnit (D = \size_count1, Q = \size_count0).
Adding SRST signal on $procdff$6956 ($dff) from module DataTransferUnit (D = $procmux$5362_Y, Q = \size_count1, rval = 2'01).
Adding EN signal on $auto$ff.cc:262:slice$7418 ($sdff) from module DataTransferUnit (D = \size_count2, Q = \size_count1).
Adding SRST signal on $procdff$6957 ($dff) from module DataTransferUnit (D = $procmux$5357_Y, Q = \size_count2, rval = 2'01).
Adding EN signal on $auto$ff.cc:262:slice$7420 ($sdff) from module DataTransferUnit (D = \size_count3, Q = \size_count2).
Adding SRST signal on $procdff$6958 ($dff) from module DataTransferUnit (D = $procmux$5352_Y, Q = \size_count3, rval = 2'01).
Adding EN signal on $auto$ff.cc:262:slice$7422 ($sdff) from module DataTransferUnit (D = \size_count4, Q = \size_count3).
Adding SRST signal on $procdff$6959 ($dff) from module DataTransferUnit (D = $procmux$5347_Y, Q = \ram_addr0, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$7424 ($sdff) from module DataTransferUnit (D = \ram_addr1, Q = \ram_addr0).
Adding SRST signal on $procdff$6969 ($dff) from module DataTransferUnit (D = $procmux$5487_Y, Q = \size_count4, rval = 2'01).
Adding EN signal on $auto$ff.cc:262:slice$7426 ($sdff) from module DataTransferUnit (D = $procmux$5487_Y, Q = \size_count4).
Adding SRST signal on $procdff$6968 ($dff) from module DataTransferUnit (D = $procmux$5493_Y, Q = \fifo_read_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$7436 ($sdff) from module DataTransferUnit (D = $procmux$5569_CMP, Q = \fifo_read_reg).
Adding SRST signal on $procdff$6960 ($dff) from module DataTransferUnit (D = $procmux$5342_Y, Q = \ram_addr1, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$7442 ($sdff) from module DataTransferUnit (D = \ram_addr2, Q = \ram_addr1).
Adding SRST signal on $procdff$6961 ($dff) from module DataTransferUnit (D = $procmux$5337_Y, Q = \ram_addr2, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$7444 ($sdff) from module DataTransferUnit (D = \ram_addr3, Q = \ram_addr2).
Adding SRST signal on $procdff$6967 ($dff) from module DataTransferUnit (D = $procmux$5520_Y, Q = \read_req_reg [4], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$7446 ($sdff) from module DataTransferUnit (D = $procmux$5520_Y, Q = \read_req_reg [4]).
Adding SRST signal on $procdff$6962 ($dff) from module DataTransferUnit (D = $procmux$5332_Y, Q = \ram_addr3, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$7454 ($sdff) from module DataTransferUnit (D = \ram_addr4, Q = \ram_addr3).
Adding SRST signal on $procdff$6964 ($dff) from module DataTransferUnit (D = $procmux$5559_Y, Q = \mem_addr5, rval = 24'000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7456 ($sdff) from module DataTransferUnit (D = $procmux$5559_Y, Q = \mem_addr5).
Adding SRST signal on $procdff$6965 ($dff) from module DataTransferUnit (D = $procmux$5573_CMP, Q = \fifo_write_reg [4], rval = 1'0).
Adding SRST signal on $procdff$6966 ($dff) from module DataTransferUnit (D = $procmux$5538_Y, Q = \write_req_reg [4], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$7473 ($sdff) from module DataTransferUnit (D = $procmux$5538_Y, Q = \write_req_reg [4]).
Adding SRST signal on $procdff$6986 ($dff) from module LUControl (D = \MOEnDelay [0], Q = \MOEn, rval = 1'1).
Adding EN signal on $procdff$7173 ($dff) from module LUControl (D = \mode_in, Q = \mode).
Adding EN signal on $procdff$7172 ($dff) from module LUControl (D = \loop_in, Q = \loop).
Adding SRST signal on $procdff$6999 ($dff) from module LUControl (D = $procmux$5642_Y, Q = \writeByteEnDelay4, rval = 32'11111111111111111111111111111111).
Adding SRST signal on $procdff$7166 ($dff) from module LUControl (D = $procmux$6346_Y, Q = \imodk, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$7485 ($sdff) from module LUControl (D = $procmux$6344_Y, Q = \imodk).
Adding SRST signal on $procdff$7165 ($dff) from module LUControl (D = $procmux$6357_Y, Q = \msIdx, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$7487 ($sdff) from module LUControl (D = $procmux$6357_Y, Q = \msIdx).
Adding SRST signal on $procdff$7164 ($dff) from module LUControl (D = $procmux$6365_Y, Q = \leftIdx, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$7491 ($sdff) from module LUControl (D = $procmux$6363_Y, Q = \leftIdx).
Adding SRST signal on $procdff$7163 ($dff) from module LUControl (D = $procmux$6376_Y [1], Q = \diagIdx [1], rval = 1'0).
Adding SRST signal on $procdff$7163 ($dff) from module LUControl (D = { $procmux$6373_Y [4:2] $procmux$6373_Y [0] }, Q = { \diagIdx [4:2] \diagIdx [0] }, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$7494 ($sdff) from module LUControl (D = { $procmux$6371_Y [4:2] $procmux$6371_Y [0] }, Q = { \diagIdx [4:2] \diagIdx [0] }).
Adding EN signal on $auto$ff.cc:262:slice$7493 ($sdff) from module LUControl (D = $procmux$6376_Y [1], Q = \diagIdx [1]).
Adding SRST signal on $procdff$7162 ($dff) from module LUControl (D = $procmux$6381_Y, Q = \topIdx, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$7501 ($sdff) from module LUControl (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1449$291_Y, Q = \topIdx).
Adding SRST signal on $procdff$7161 ($dff) from module LUControl (D = $procmux$6392_Y, Q = \curTopIdx, rval = 8'00000001).
Adding EN signal on $auto$ff.cc:262:slice$7503 ($sdff) from module LUControl (D = $procmux$6392_Y, Q = \curTopIdx).
Adding EN signal on $procdff$7171 ($dff) from module LUControl (D = \n_in, Q = \n).
Adding EN signal on $procdff$7170 ($dff) from module LUControl (D = \m_in, Q = \m).
Adding SRST signal on $procdff$7168 ($dff) from module LUControl (D = $procmux$6330_Y, Q = \waitCycles, rval = 5'11111).
Adding EN signal on $auto$ff.cc:262:slice$7509 ($sdff) from module LUControl (D = $procmux$6330_Y, Q = \waitCycles).
Adding SRST signal on $procdff$7167 ($dff) from module LUControl (D = $procmux$6338_Y, Q = \i1modk, rval = 3'001).
Adding EN signal on $auto$ff.cc:262:slice$7517 ($sdff) from module LUControl (D = $procmux$6336_Y, Q = \i1modk).
Adding SRST signal on $procdff$7159 ($dff) from module LUControl (D = $procmux$6400_Y, Q = \nextTopIdx, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$7519 ($sdff) from module LUControl (D = $procmux$6398_Y, Q = \nextTopIdx).
Adding SRST signal on $procdff$7158 ($dff) from module LUControl (D = $procmux$6411_Y, Q = \j, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$7521 ($sdff) from module LUControl (D = $procmux$6411_Y, Q = \j).
Adding SRST signal on $procdff$7157 ($dff) from module LUControl (D = $procmux$6416_Y, Q = \i1, rval = 5'00001).
Adding EN signal on $auto$ff.cc:262:slice$7525 ($sdff) from module LUControl (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1524$345_Y [4:0], Q = \i1).
Adding SRST signal on $procdff$7156 ($dff) from module LUControl (D = $procmux$5691_Y, Q = \divCounter, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$7527 ($sdff) from module LUControl (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1850$487_Y [5:0], Q = \divCounter).
Adding SRST signal on $procdff$7155 ($dff) from module LUControl (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:1845$482_Y [4:0], Q = \counter, rval = 5'00000).
Adding EN signal on $procdff$7153 ($dff) from module LUControl (D = $procmux$5699_Y, Q = \topWriteCounter).
Adding SRST signal on $procdff$7152 ($dff) from module LUControl (D = $procmux$5707_Y, Q = \readRowCounter, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$7533 ($sdff) from module LUControl (D = $procmux$5707_Y, Q = \readRowCounter).
Adding SRST signal on $procdff$7144 ($dff) from module LUControl (D = \nextState, Q = \currentState, rval = 4'0000).
Adding SRST signal on $procdff$7145 ($dff) from module LUControl (D = \nextRowState, Q = \currentRowState, rval = 2'10).
Adding SRST signal on $procdff$7146 ($dff) from module LUControl (D = \i1modkByteEn, Q = \byteEn, rval = 32'11111111111111111111111111111111).
Adding EN signal on $procdff$7147 ($dff) from module LUControl (D = $procmux$5721_Y, Q = \nextTopIdxCounter).
Adding SRST signal on $procdff$7071 ($dff) from module LUControl (D = \leftWriteEnDelay [16], Q = \leftWriteEnDelay [15], rval = 1'1).
Adding SRST signal on $procdff$7071 ($dff) from module LUControl (D = \leftWriteEnDelay [5], Q = \leftWriteEnDelay [4], rval = 1'1).
Adding SRST signal on $procdff$7072 ($dff) from module LUControl (D = \curWriteEnDelay [16], Q = \curWriteEnDelay [15], rval = 1'1).
Adding SRST signal on $procdff$7108 ($dff) from module LUControl (D = \topWriteEnDelay [5], Q = \topWriteEnDelay [4], rval = 1'1).
Adding SRST signal on $procdff$7109 ($dff) from module LUControl (D = $procmux$5653_Y, Q = \topSourceSelDelay [4], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$7550 ($sdff) from module LUControl (D = 1'1, Q = \topSourceSelDelay [4]).
Adding EN signal on $procdff$7214 ($dff) from module LU (D = \topReadDataReg0, Q = \diag).
Adding SRST signal on $procdff$7213 ($dff) from module LU (D = $procmux$6492_Y, Q = \multOperand, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$7554 ($sdff) from module LU (D = $procmux$6490_Y, Q = \multOperand).
Adding SRST signal on $procdff$7245 ($dff) from module MarshallerController (D = $procmux$6615_Y, Q = \ncount, rval = 20'00000000000000010000).
Adding EN signal on $auto$ff.cc:262:slice$7556 ($sdff) from module MarshallerController (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:685$184_Y, Q = \ncount).
Adding EN signal on $procdff$7267 ($dff) from module MarshallerController (D = $procmux$6765_Y, Q = \mem_read).
Adding SRST signal on $procdff$7266 ($dff) from module MarshallerController (D = $procmux$6767_Y, Q = \mem_count, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$7561 ($sdff) from module MarshallerController (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:414$102_Y, Q = \mem_count).
Adding EN signal on $procdff$7265 ($dff) from module MarshallerController (D = $procmux$6784_Y, Q = \mem_addr).
Adding EN signal on $procdff$7243 ($dff) from module MarshallerController (D = $procmux$6628_Y, Q = \comp_N).
Adding SRST signal on $procdff$7264 ($dff) from module MarshallerController (D = $procmux$6786_Y, Q = \ram_addr, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$7571 ($sdff) from module MarshallerController (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:412$100_Y, Q = \ram_addr).
Adding EN signal on $procdff$7263 ($dff) from module MarshallerController (D = $procmux$6796_Y, Q = \read_n).
Adding SRST signal on $procdff$7261 ($dff) from module MarshallerController (D = \next_mem_state, Q = \cur_mem_state, rval = 4'0000).
Adding SRST signal on $procdff$7260 ($dff) from module MarshallerController (D = \next_state, Q = \cur_state, rval = 5'00000).
Setting constant 0-bit at position 0 on $procdff$7259 ($dff) from module MarshallerController.
Setting constant 1-bit at position 1 on $procdff$7259 ($dff) from module MarshallerController.
Setting constant 0-bit at position 2 on $procdff$7259 ($dff) from module MarshallerController.
Setting constant 0-bit at position 3 on $procdff$7259 ($dff) from module MarshallerController.
Setting constant 0-bit at position 4 on $procdff$7259 ($dff) from module MarshallerController.
Adding SRST signal on $procdff$7258 ($dff) from module MarshallerController (D = $procmux$6529_Y, Q = \mem_write_size_buf, rval = 5'00010).
Adding EN signal on $auto$ff.cc:262:slice$7582 ($sdff) from module MarshallerController (D = \mem_read_size, Q = \mem_write_size_buf).
Adding SRST signal on $procdff$7257 ($dff) from module MarshallerController (D = $procmux$6534_Y, Q = \mem_write_size, rval = 5'00010).
Adding EN signal on $auto$ff.cc:262:slice$7584 ($sdff) from module MarshallerController (D = \mem_write_size_buf, Q = \mem_write_size).
Adding SRST signal on $procdff$7256 ($dff) from module MarshallerController (D = $procmux$6539_Y, Q = \mem_write_buf, rval = 24'000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7586 ($sdff) from module MarshallerController (D = \mem_cur, Q = \mem_write_buf).
Adding EN signal on $procdff$7255 ($dff) from module MarshallerController (D = $procmux$6556_Y, Q = \mem_cur).
Adding EN signal on $procdff$7254 ($dff) from module MarshallerController (D = $procmux$6570_Y, Q = \mem_left).
Adding SRST signal on $procdff$7253 ($dff) from module MarshallerController (D = $procmux$6572_Y, Q = \mem_write, rval = 24'000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7598 ($sdff) from module MarshallerController (D = \mem_write_buf, Q = \mem_write).
Adding EN signal on $procdff$7252 ($dff) from module MarshallerController (D = $procmux$6589_Y, Q = \mem_top).
Adding EN signal on $procdff$7251 ($dff) from module MarshallerController (D = $procmux$6595_Y, Q = \mem_base).
Adding SRST signal on $procdff$7250 ($dff) from module MarshallerController (D = $procmux$6600_Y, Q = \no_left_switch, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$7612 ($sdff) from module MarshallerController (D = $procmux$6600_Y, Q = \no_left_switch).
Adding EN signal on $procdff$7249 ($dff) from module MarshallerController (D = $procmux$6608_Y, Q = \write_n_buf).
Adding EN signal on $procdff$7248 ($dff) from module MarshallerController (D = $procmux$6613_Y, Q = \write_n).
Adding SRST signal on $procdff$7244 ($dff) from module MarshallerController (D = $procmux$6620_Y, Q = \mcount, rval = 20'00000000000000010000).
Adding EN signal on $auto$ff.cc:262:slice$7622 ($sdff) from module MarshallerController (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:679$180_Y, Q = \mcount).
Adding EN signal on $procdff$7237 ($dff) from module MarshallerController (D = \input_N, Q = \N).
Adding SRST signal on $procdff$7238 ($dff) from module MarshallerController (D = $procmux$6640_Y, Q = \loop, rval = 5'10000).
Adding EN signal on $auto$ff.cc:262:slice$7625 ($sdff) from module MarshallerController (D = $sub$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:673$172_Y [4:0], Q = \loop).
Adding SRST signal on $procdff$7239 ($dff) from module MarshallerController (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:691$187_Y [4:0], Q = \block_m, rval = 5'10000).
Adding SRST signal on $procdff$7240 ($dff) from module MarshallerController (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:697$190_Y [4:0], Q = \block_n, rval = 5'10000).
Adding SRST signal on $procdff$7241 ($dff) from module MarshallerController (D = $procmux$6635_Y, Q = \cur_mem_sel, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$7629 ($sdff) from module MarshallerController (D = $logic_not$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:704$206_Y, Q = \cur_mem_sel).
Adding SRST signal on $procdff$7242 ($dff) from module MarshallerController (D = $procmux$6630_Y, Q = \left_mem_sel, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$7631 ($sdff) from module MarshallerController (D = $logic_not$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:720$234_Y, Q = \left_mem_sel).
Adding EN signal on $procdff$7269 ($dff) from module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:93$1240_DATA, Q = \out2).
Adding EN signal on $procdff$7273 ($dff) from module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:84$1232_DATA, Q = \out1).
Adding EN signal on $procdff$7277 ($dff) from module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100 (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:93$1222_DATA, Q = \out2).
Adding EN signal on $procdff$7281 ($dff) from module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100 (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:84$1214_DATA, Q = \out1).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100..
Finding unused cells or wires in module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram..
Finding unused cells or wires in module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram..
Finding unused cells or wires in module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram..
Finding unused cells or wires in module \assemble..
Finding unused cells or wires in module \flag..
Finding unused cells or wires in module \round..
Finding unused cells or wires in module \shift..
Finding unused cells or wires in module \normalize..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \multiply_a..
Finding unused cells or wires in module \prenorm..
Finding unused cells or wires in module \special..
Finding unused cells or wires in module \preprocess..
Finding unused cells or wires in module \fpmul..
Finding unused cells or wires in module \div_24b..
Finding unused cells or wires in module \fpu_div..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \memcmd_fifo..
Finding unused cells or wires in module \addr_fifo..
Finding unused cells or wires in module \wfifo..
Finding unused cells or wires in module \rfifo..
Finding unused cells or wires in module \DataTransferUnit..
Finding unused cells or wires in module \mult_add..
Finding unused cells or wires in module \top_ram..
Finding unused cells or wires in module \ram3..
Finding unused cells or wires in module \ram2..
Finding unused cells or wires in module \ram1..
Finding unused cells or wires in module \ram..
Finding unused cells or wires in module \LUControl..
Finding unused cells or wires in module \LU..
Finding unused cells or wires in module \MarshallerController..
Finding unused cells or wires in module \LU8PEEng..
Finding unused cells or wires in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram..
Finding unused cells or wires in module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100..
Removed 235 unused cells and 4471 unused wires.
<suppressed ~298 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.
Optimizing module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.
Optimizing module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.
Optimizing module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
Optimizing module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.
Optimizing module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.
Optimizing module DataTransferUnit.
<suppressed ~7 debug messages>
Optimizing module LU.
Optimizing module LU8PEEng.
Optimizing module LUControl.
<suppressed ~7 debug messages>
Optimizing module MarshallerController.
<suppressed ~10 debug messages>
Optimizing module addr_fifo.
<suppressed ~1 debug messages>
Optimizing module assemble.
Optimizing module div_24b.
Optimizing module exponent.
Optimizing module flag.
Optimizing module fpmul.
Optimizing module fpu_add.
<suppressed ~1 debug messages>
Optimizing module fpu_div.
Optimizing module memcmd_fifo.
<suppressed ~1 debug messages>
Optimizing module mult_add.
Optimizing module multiply_a.
Optimizing module normalize.
Optimizing module prenorm.
Optimizing module preprocess.
Optimizing module ram.
Optimizing module ram1.
Optimizing module ram2.
Optimizing module ram3.
Optimizing module rfifo.
<suppressed ~1 debug messages>
Optimizing module round.
Optimizing module shift.
Optimizing module special.
Optimizing module top_ram.
Optimizing module wfifo.
<suppressed ~2 debug messages>

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \DataTransferUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LU8PEEng..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MarshallerController..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \addr_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \assemble..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \div_24b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exponent..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \flag..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpmul..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \memcmd_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mult_add..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \multiply_a..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \normalize..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \prenorm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \preprocess..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \round..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \special..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top_ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~215 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.
  Optimizing cells in module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.
  Optimizing cells in module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.
  Optimizing cells in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
  Optimizing cells in module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.
  Optimizing cells in module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.
  Optimizing cells in module \DataTransferUnit.
  Optimizing cells in module \LU.
  Optimizing cells in module \LU8PEEng.
  Optimizing cells in module \LUControl.
  Optimizing cells in module \MarshallerController.
    New ctrl vector for $pmux cell $procmux$6663: { $eq$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:314$59_Y $procmux$6753_CMP $procmux$6752_CMP $procmux$6741_CMP $procmux$6740_CMP $auto$opt_reduce.cc:134:opt_mux$7640 $procmux$6729_CMP $procmux$6728_CMP $eq$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:302$36_Y $eq$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:642$164_Y $procmux$6713_CMP $eq$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:637$161_Y $procmux$6698_CMP $auto$opt_reduce.cc:134:opt_mux$7638 $procmux$6684_CMP $procmux$6683_CMP $eq$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:322$69_Y $procmux$6678_CMP $eq$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:302$44_Y $procmux$6673_CMP $eq$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/LU8PEEng.v:322$67_Y $procmux$6668_CMP \done }
  Optimizing cells in module \MarshallerController.
  Optimizing cells in module \addr_fifo.
  Optimizing cells in module \assemble.
  Optimizing cells in module \div_24b.
  Optimizing cells in module \exponent.
  Optimizing cells in module \flag.
  Optimizing cells in module \fpmul.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_div.
  Optimizing cells in module \memcmd_fifo.
  Optimizing cells in module \mult_add.
  Optimizing cells in module \multiply_a.
  Optimizing cells in module \normalize.
  Optimizing cells in module \prenorm.
  Optimizing cells in module \preprocess.
  Optimizing cells in module \ram.
  Optimizing cells in module \ram1.
  Optimizing cells in module \ram2.
  Optimizing cells in module \ram3.
  Optimizing cells in module \rfifo.
  Optimizing cells in module \round.
  Optimizing cells in module \shift.
  Optimizing cells in module \special.
  Optimizing cells in module \top_ram.
  Optimizing cells in module \wfifo.
Performed a total of 1 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram'.
Finding identical cells in module `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram'.
Finding identical cells in module `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram'.
Finding identical cells in module `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram'.
Finding identical cells in module `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100'.
Finding identical cells in module `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100'.
Finding identical cells in module `\DataTransferUnit'.
<suppressed ~54 debug messages>
Finding identical cells in module `\LU'.
Finding identical cells in module `\LU8PEEng'.
Finding identical cells in module `\LUControl'.
<suppressed ~3 debug messages>
Finding identical cells in module `\MarshallerController'.
<suppressed ~18 debug messages>
Finding identical cells in module `\addr_fifo'.
Finding identical cells in module `\assemble'.
Finding identical cells in module `\div_24b'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\flag'.
Finding identical cells in module `\fpmul'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\fpu_div'.
Finding identical cells in module `\memcmd_fifo'.
Finding identical cells in module `\mult_add'.
Finding identical cells in module `\multiply_a'.
Finding identical cells in module `\normalize'.
Finding identical cells in module `\prenorm'.
Finding identical cells in module `\preprocess'.
Finding identical cells in module `\ram'.
Finding identical cells in module `\ram1'.
Finding identical cells in module `\ram2'.
Finding identical cells in module `\ram3'.
Finding identical cells in module `\rfifo'.
<suppressed ~9 debug messages>
Finding identical cells in module `\round'.
Finding identical cells in module `\shift'.
Finding identical cells in module `\special'.
Finding identical cells in module `\top_ram'.
Finding identical cells in module `\wfifo'.
Removed a total of 28 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$7247 ($dff) from module MarshallerController.
Setting constant 0-bit at position 1 on $procdff$7247 ($dff) from module MarshallerController.
Setting constant 0-bit at position 2 on $procdff$7247 ($dff) from module MarshallerController.
Setting constant 0-bit at position 3 on $procdff$7247 ($dff) from module MarshallerController.
Setting constant 0-bit at position 0 on $procdff$7246 ($dff) from module MarshallerController.
Setting constant 0-bit at position 1 on $procdff$7246 ($dff) from module MarshallerController.
Setting constant 0-bit at position 2 on $procdff$7246 ($dff) from module MarshallerController.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$7583 ($sdffe) from module MarshallerController.
Setting constant 1-bit at position 1 on $auto$ff.cc:262:slice$7583 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$7583 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$7583 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$7583 ($sdffe) from module MarshallerController.

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram..
Finding unused cells or wires in module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram..
Finding unused cells or wires in module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram..
Finding unused cells or wires in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram..
Finding unused cells or wires in module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100..
Finding unused cells or wires in module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100..
Finding unused cells or wires in module \DataTransferUnit..
Finding unused cells or wires in module \LU..
Finding unused cells or wires in module \LU8PEEng..
Finding unused cells or wires in module \LUControl..
Finding unused cells or wires in module \MarshallerController..
Finding unused cells or wires in module \addr_fifo..
Finding unused cells or wires in module \assemble..
Finding unused cells or wires in module \div_24b..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \flag..
Finding unused cells or wires in module \fpmul..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_div..
Finding unused cells or wires in module \memcmd_fifo..
Finding unused cells or wires in module \mult_add..
Finding unused cells or wires in module \multiply_a..
Finding unused cells or wires in module \normalize..
Finding unused cells or wires in module \prenorm..
Finding unused cells or wires in module \preprocess..
Finding unused cells or wires in module \ram..
Finding unused cells or wires in module \ram1..
Finding unused cells or wires in module \ram2..
Finding unused cells or wires in module \ram3..
Finding unused cells or wires in module \rfifo..
Finding unused cells or wires in module \round..
Finding unused cells or wires in module \shift..
Finding unused cells or wires in module \special..
Finding unused cells or wires in module \top_ram..
Finding unused cells or wires in module \wfifo..
Removed 0 unused cells and 29 unused wires.
<suppressed ~5 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.
Optimizing module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.
Optimizing module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.
Optimizing module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
Optimizing module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.
Optimizing module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.
Optimizing module DataTransferUnit.
Optimizing module LU.
Optimizing module LU8PEEng.
Optimizing module LUControl.
Optimizing module MarshallerController.
Optimizing module addr_fifo.
Optimizing module assemble.
Optimizing module div_24b.
Optimizing module exponent.
Optimizing module flag.
Optimizing module fpmul.
Optimizing module fpu_add.
Optimizing module fpu_div.
Optimizing module memcmd_fifo.
Optimizing module mult_add.
Optimizing module multiply_a.
Optimizing module normalize.
Optimizing module prenorm.
Optimizing module preprocess.
Optimizing module ram.
Optimizing module ram1.
Optimizing module ram2.
Optimizing module ram3.
Optimizing module rfifo.
Optimizing module round.
Optimizing module shift.
Optimizing module special.
Optimizing module top_ram.
Optimizing module wfifo.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \DataTransferUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LU8PEEng..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MarshallerController..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \addr_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \assemble..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \div_24b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exponent..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \flag..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpmul..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \memcmd_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mult_add..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \multiply_a..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \normalize..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \prenorm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \preprocess..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \round..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \special..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top_ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~216 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.
  Optimizing cells in module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.
  Optimizing cells in module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.
  Optimizing cells in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
  Optimizing cells in module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.
  Optimizing cells in module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.
  Optimizing cells in module \DataTransferUnit.
  Optimizing cells in module \LU.
  Optimizing cells in module \LU8PEEng.
  Optimizing cells in module \LUControl.
  Optimizing cells in module \MarshallerController.
  Optimizing cells in module \addr_fifo.
  Optimizing cells in module \assemble.
  Optimizing cells in module \div_24b.
  Optimizing cells in module \exponent.
  Optimizing cells in module \flag.
  Optimizing cells in module \fpmul.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_div.
  Optimizing cells in module \memcmd_fifo.
  Optimizing cells in module \mult_add.
  Optimizing cells in module \multiply_a.
  Optimizing cells in module \normalize.
  Optimizing cells in module \prenorm.
  Optimizing cells in module \preprocess.
  Optimizing cells in module \ram.
  Optimizing cells in module \ram1.
  Optimizing cells in module \ram2.
  Optimizing cells in module \ram3.
  Optimizing cells in module \rfifo.
  Optimizing cells in module \round.
  Optimizing cells in module \shift.
  Optimizing cells in module \special.
  Optimizing cells in module \top_ram.
  Optimizing cells in module \wfifo.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram'.
Finding identical cells in module `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram'.
Finding identical cells in module `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram'.
Finding identical cells in module `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram'.
Finding identical cells in module `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100'.
Finding identical cells in module `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100'.
Finding identical cells in module `\DataTransferUnit'.
Finding identical cells in module `\LU'.
Finding identical cells in module `\LU8PEEng'.
Finding identical cells in module `\LUControl'.
Finding identical cells in module `\MarshallerController'.
Finding identical cells in module `\addr_fifo'.
Finding identical cells in module `\assemble'.
Finding identical cells in module `\div_24b'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\flag'.
Finding identical cells in module `\fpmul'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\fpu_div'.
Finding identical cells in module `\memcmd_fifo'.
Finding identical cells in module `\mult_add'.
Finding identical cells in module `\multiply_a'.
Finding identical cells in module `\normalize'.
Finding identical cells in module `\prenorm'.
Finding identical cells in module `\preprocess'.
Finding identical cells in module `\ram'.
Finding identical cells in module `\ram1'.
Finding identical cells in module `\ram2'.
Finding identical cells in module `\ram3'.
Finding identical cells in module `\rfifo'.
Finding identical cells in module `\round'.
Finding identical cells in module `\shift'.
Finding identical cells in module `\special'.
Finding identical cells in module `\top_ram'.
Finding identical cells in module `\wfifo'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$7641 ($dff) from module MarshallerController.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$7641 ($dff) from module MarshallerController.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$7641 ($dff) from module MarshallerController.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$7585 ($sdffe) from module MarshallerController.
Setting constant 1-bit at position 1 on $auto$ff.cc:262:slice$7585 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$7585 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$7585 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$7585 ($sdffe) from module MarshallerController.

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram..
Finding unused cells or wires in module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram..
Finding unused cells or wires in module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram..
Finding unused cells or wires in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram..
Finding unused cells or wires in module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100..
Finding unused cells or wires in module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100..
Finding unused cells or wires in module \DataTransferUnit..
Finding unused cells or wires in module \LU..
Finding unused cells or wires in module \LU8PEEng..
Finding unused cells or wires in module \LUControl..
Finding unused cells or wires in module \MarshallerController..
Finding unused cells or wires in module \addr_fifo..
Finding unused cells or wires in module \assemble..
Finding unused cells or wires in module \div_24b..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \flag..
Finding unused cells or wires in module \fpmul..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_div..
Finding unused cells or wires in module \memcmd_fifo..
Finding unused cells or wires in module \mult_add..
Finding unused cells or wires in module \multiply_a..
Finding unused cells or wires in module \normalize..
Finding unused cells or wires in module \prenorm..
Finding unused cells or wires in module \preprocess..
Finding unused cells or wires in module \ram..
Finding unused cells or wires in module \ram1..
Finding unused cells or wires in module \ram2..
Finding unused cells or wires in module \ram3..
Finding unused cells or wires in module \rfifo..
Finding unused cells or wires in module \round..
Finding unused cells or wires in module \shift..
Finding unused cells or wires in module \special..
Finding unused cells or wires in module \top_ram..
Finding unused cells or wires in module \wfifo..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.
Optimizing module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.
Optimizing module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.
Optimizing module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
Optimizing module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.
Optimizing module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.
Optimizing module DataTransferUnit.
Optimizing module LU.
Optimizing module LU8PEEng.
Optimizing module LUControl.
Optimizing module MarshallerController.
<suppressed ~1 debug messages>
Optimizing module addr_fifo.
Optimizing module assemble.
Optimizing module div_24b.
Optimizing module exponent.
Optimizing module flag.
Optimizing module fpmul.
Optimizing module fpu_add.
Optimizing module fpu_div.
Optimizing module memcmd_fifo.
Optimizing module mult_add.
Optimizing module multiply_a.
Optimizing module normalize.
Optimizing module prenorm.
Optimizing module preprocess.
Optimizing module ram.
Optimizing module ram1.
Optimizing module ram2.
Optimizing module ram3.
Optimizing module rfifo.
Optimizing module round.
Optimizing module shift.
Optimizing module special.
Optimizing module top_ram.
Optimizing module wfifo.

4.23. Rerunning OPT passes. (Maybe there is more to do..)

4.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \DataTransferUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LU8PEEng..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MarshallerController..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \addr_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \assemble..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \div_24b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exponent..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \flag..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpmul..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \memcmd_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mult_add..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \multiply_a..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \normalize..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \prenorm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \preprocess..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \round..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \special..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top_ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~215 debug messages>

4.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.
  Optimizing cells in module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.
  Optimizing cells in module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.
  Optimizing cells in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
  Optimizing cells in module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.
  Optimizing cells in module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.
  Optimizing cells in module \DataTransferUnit.
  Optimizing cells in module \LU.
  Optimizing cells in module \LU8PEEng.
  Optimizing cells in module \LUControl.
  Optimizing cells in module \MarshallerController.
  Optimizing cells in module \addr_fifo.
  Optimizing cells in module \assemble.
  Optimizing cells in module \div_24b.
  Optimizing cells in module \exponent.
  Optimizing cells in module \flag.
  Optimizing cells in module \fpmul.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_div.
  Optimizing cells in module \memcmd_fifo.
  Optimizing cells in module \mult_add.
  Optimizing cells in module \multiply_a.
  Optimizing cells in module \normalize.
  Optimizing cells in module \prenorm.
  Optimizing cells in module \preprocess.
  Optimizing cells in module \ram.
  Optimizing cells in module \ram1.
  Optimizing cells in module \ram2.
  Optimizing cells in module \ram3.
  Optimizing cells in module \rfifo.
  Optimizing cells in module \round.
  Optimizing cells in module \shift.
  Optimizing cells in module \special.
  Optimizing cells in module \top_ram.
  Optimizing cells in module \wfifo.
Performed a total of 0 changes.

4.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram'.
Finding identical cells in module `$paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram'.
Finding identical cells in module `$paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram'.
Finding identical cells in module `$paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram'.
Finding identical cells in module `$paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100'.
Finding identical cells in module `$paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100'.
Finding identical cells in module `\DataTransferUnit'.
Finding identical cells in module `\LU'.
Finding identical cells in module `\LU8PEEng'.
Finding identical cells in module `\LUControl'.
Finding identical cells in module `\MarshallerController'.
Finding identical cells in module `\addr_fifo'.
Finding identical cells in module `\assemble'.
Finding identical cells in module `\div_24b'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\flag'.
Finding identical cells in module `\fpmul'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\fpu_div'.
Finding identical cells in module `\memcmd_fifo'.
Finding identical cells in module `\mult_add'.
Finding identical cells in module `\multiply_a'.
Finding identical cells in module `\normalize'.
Finding identical cells in module `\prenorm'.
Finding identical cells in module `\preprocess'.
Finding identical cells in module `\ram'.
Finding identical cells in module `\ram1'.
Finding identical cells in module `\ram2'.
Finding identical cells in module `\ram3'.
Finding identical cells in module `\rfifo'.
Finding identical cells in module `\round'.
Finding identical cells in module `\shift'.
Finding identical cells in module `\special'.
Finding identical cells in module `\top_ram'.
Finding identical cells in module `\wfifo'.
Removed a total of 0 cells.

4.27. Executing OPT_DFF pass (perform DFF optimizations).

4.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram..
Finding unused cells or wires in module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram..
Finding unused cells or wires in module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram..
Finding unused cells or wires in module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram..
Finding unused cells or wires in module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100..
Finding unused cells or wires in module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100..
Finding unused cells or wires in module \DataTransferUnit..
Finding unused cells or wires in module \LU..
Finding unused cells or wires in module \LU8PEEng..
Finding unused cells or wires in module \LUControl..
Finding unused cells or wires in module \MarshallerController..
Finding unused cells or wires in module \addr_fifo..
Finding unused cells or wires in module \assemble..
Finding unused cells or wires in module \div_24b..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \flag..
Finding unused cells or wires in module \fpmul..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_div..
Finding unused cells or wires in module \memcmd_fifo..
Finding unused cells or wires in module \mult_add..
Finding unused cells or wires in module \multiply_a..
Finding unused cells or wires in module \normalize..
Finding unused cells or wires in module \prenorm..
Finding unused cells or wires in module \preprocess..
Finding unused cells or wires in module \ram..
Finding unused cells or wires in module \ram1..
Finding unused cells or wires in module \ram2..
Finding unused cells or wires in module \ram3..
Finding unused cells or wires in module \rfifo..
Finding unused cells or wires in module \round..
Finding unused cells or wires in module \shift..
Finding unused cells or wires in module \special..
Finding unused cells or wires in module \top_ram..
Finding unused cells or wires in module \wfifo..

4.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram.
Optimizing module $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram.
Optimizing module $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram.
Optimizing module $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram.
Optimizing module $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100.
Optimizing module $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100.
Optimizing module DataTransferUnit.
Optimizing module LU.
Optimizing module LU8PEEng.
Optimizing module LUControl.
Optimizing module MarshallerController.
Optimizing module addr_fifo.
Optimizing module assemble.
Optimizing module div_24b.
Optimizing module exponent.
Optimizing module flag.
Optimizing module fpmul.
Optimizing module fpu_add.
Optimizing module fpu_div.
Optimizing module memcmd_fifo.
Optimizing module mult_add.
Optimizing module multiply_a.
Optimizing module normalize.
Optimizing module prenorm.
Optimizing module preprocess.
Optimizing module ram.
Optimizing module ram1.
Optimizing module ram2.
Optimizing module ram3.
Optimizing module rfifo.
Optimizing module round.
Optimizing module shift.
Optimizing module special.
Optimizing module top_ram.
Optimizing module wfifo.

4.30. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram ===

   Number of wires:                 17
   Number of wire bits:           2583
   Number of public wires:           9
   Number of public wire bits:    1037
   Number of memories:               1
   Number of memory bits:         1280
   Number of processes:              0
   Number of cells:                 12
     $dffe                         512
     $mux                          524

=== $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram ===

   Number of wires:                 17
   Number of wire bits:            299
   Number of public wires:           9
   Number of public wire bits:     123
   Number of memories:               1
   Number of memory bits:          112
   Number of processes:              0
   Number of cells:                 12
     $dffe                          56
     $mux                           66

=== $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram ===

   Number of wires:                 17
   Number of wire bits:            355
   Number of public wires:           9
   Number of public wire bits:     147
   Number of memories:               1
   Number of memory bits:          256
   Number of processes:              0
   Number of cells:                 12
     $dffe                          64
     $mux                           82

=== $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram ===

   Number of wires:                 17
   Number of wire bits:            659
   Number of public wires:           9
   Number of public wire bits:     267
   Number of memories:               1
   Number of memory bits:          256
   Number of processes:              0
   Number of cells:                 12
     $dffe                         128
     $mux                          138

=== $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100 ===

   Number of wires:                 17
   Number of wire bits:           2579
   Number of public wires:           9
   Number of public wire bits:    1035
   Number of memories:               1
   Number of memory bits:         1024
   Number of processes:              0
   Number of cells:                 12
     $dffe                         512
     $mux                          522

=== $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100 ===

   Number of wires:                 17
   Number of wire bits:             69
   Number of public wires:           9
   Number of public wire bits:      31
   Number of memories:               1
   Number of memory bits:           20
   Number of processes:              0
   Number of cells:                 12
     $dffe                          10
     $mux                           20

=== DataTransferUnit ===

   Number of wires:                149
   Number of wire bits:           2495
   Number of public wires:          69
   Number of public wire bits:    2057
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                113
     $add                           60
     $dff                            1
     $eq                             4
     $ge                             3
     $logic_and                     10
     $logic_not                     11
     $logic_or                       2
     $lt                            35
     $mux                          302
     $ne                            14
     $not                            4
     $pmux                           2
     $reduce_and                    13
     $reduce_bool                   13
     $reduce_or                     13
     $sdff                           7
     $sdffe                        183
     $sub                           39

=== LU ===

   Number of wires:                194
   Number of wire bits:          10633
   Number of public wires:         165
   Number of public wire bits:    9343
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                114
     $dff                         3585
     $dffe                          32
     $eq                            21
     $logic_not                      3
     $mux                         2530
     $pmux                          64
     $sdffe                         32

=== LU8PEEng ===

   Number of wires:                 50
   Number of wire bits:           1681
   Number of public wires:          49
   Number of public wire bits:    1680
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $logic_and                      2
     $not                            1

=== LUControl ===

   Number of wires:                450
   Number of wire bits:           3829
   Number of public wires:         214
   Number of public wire bits:    2097
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                433
     $add                          821
     $dff                         1799
     $dffe                          25
     $eq                           379
     $ge                            96
     $gt                             5
     $logic_and                     23
     $logic_not                     14
     $logic_or                      11
     $lt                            96
     $mux                          416
     $ne                            18
     $not                            2
     $pmux                          39
     $reduce_and                     2
     $reduce_bool                   13
     $reduce_or                     13
     $sdff                          80
     $sdffe                         66
     $sub                          224

=== MarshallerController ===

   Number of wires:                232
   Number of wire bits:           1660
   Number of public wires:          49
   Number of public wire bits:     457
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                217
     $add                          266
     $dff                           39
     $dffe                         177
     $eq                           235
     $le                            20
     $logic_and                      5
     $logic_not                     13
     $logic_or                      28
     $lt                            40
     $mux                          671
     $ne                             7
     $not                            2
     $pmux                          11
     $reduce_and                     7
     $reduce_bool                   18
     $reduce_or                      6
     $sdff                          19
     $sdffe                        106
     $sub                          103

=== addr_fifo ===

   Number of wires:                 28
   Number of wire bits:            107
   Number of public wires:          13
   Number of public wire bits:      43
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 22
     $add                           40
     $dffe                          18
     $eq                             5
     $logic_and                      4
     $logic_not                      7
     $mux                           10
     $ne                             5
     $reduce_bool                    7
     $sub                            5

=== assemble ===

   Number of wires:                 16
   Number of wire bits:            257
   Number of public wires:          12
   Number of public wire bits:     163
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  7
     $mux                          156
     $xor                            1

=== div_24b ===

   Number of wires:                 75
   Number of wire bits:           2076
   Number of public wires:          28
   Number of public wire bits:    1247
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 94
     $le                           852
     $mux                         1105
     $sub                          805

=== exponent ===

   Number of wires:                 10
   Number of wire bits:            130
   Number of public wires:           5
   Number of public wire bits:      32
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $add                           64
     $logic_not                      1
     $or                             1
     $reduce_or                      9
     $sub                           32

=== flag ===

   Number of wires:                 10
   Number of wire bits:             14
   Number of public wires:           7
   Number of public wire bits:      11
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $and                            2
     $not                            1
     $or                             2

=== fpmul ===

   Number of wires:                 41
   Number of wire bits:            501
   Number of public wires:          41
   Number of public wire bits:     501
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $dff                           32
     $or                             1

=== fpu_add ===

   Number of wires:                126
   Number of wire bits:           1419
   Number of public wires:          11
   Number of public wire bits:     243
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                148
     $add                           33
     $dff                           64
     $eq                           368
     $gt                             8
     $logic_and                      3
     $lt                            32
     $mux                          905
     $not                            2
     $pmux                          48
     $sub                          250

=== fpu_div ===

   Number of wires:                 62
   Number of wire bits:           1094
   Number of public wires:          12
   Number of public wire bits:     195
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 83
     $add                            8
     $dff                           64
     $ge                             8
     $mux                          721
     $sub                          208
     $xor                            1

=== memcmd_fifo ===

   Number of wires:                 28
   Number of wire bits:            195
   Number of public wires:          13
   Number of public wire bits:     158
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 22
     $add                           13
     $dffe                          41
     $eq                             5
     $logic_and                      4
     $logic_not                      7
     $mux                           10
     $ne                             5
     $reduce_bool                    7
     $sub                            5

=== mult_add ===

   Number of wires:                 10
   Number of wire bits:            262
   Number of public wires:          10
   Number of public wire bits:     262
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $dff                           64

=== multiply_a ===

   Number of wires:                  4
   Number of wire bits:             97
   Number of public wires:           4
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $mul                           48

=== normalize ===

   Number of wires:                  7
   Number of wire bits:            148
   Number of public wires:           4
   Number of public wire bits:      98
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $and                            1
     $mux                           96
     $xor                            1

=== prenorm ===

   Number of wires:                108
   Number of wire bits:           1792
   Number of public wires:          14
   Number of public wire bits:     210
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 98
     $eq                           230
     $mux                         1520
     $pmux                          48
     $sub                           64

=== preprocess ===

   Number of wires:                 31
   Number of wire bits:            153
   Number of public wires:          23
   Number of public wire bits:     145
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 21
     $and                            8
     $logic_not                      4
     $or                             2
     $reduce_and                    16
     $reduce_or                     62
     $xor                            1

=== ram ===

   Number of wires:                 11
   Number of wire bits:           1580
   Number of public wires:          11
   Number of public wire bits:    1580
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $and                          256
     $or                           256

=== ram1 ===

   Number of wires:                 11
   Number of wire bits:           1580
   Number of public wires:          11
   Number of public wire bits:    1580
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $and                          256
     $or                           256

=== ram2 ===

   Number of wires:                 11
   Number of wire bits:           1580
   Number of public wires:          11
   Number of public wire bits:    1580
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $and                          256
     $or                           256

=== ram3 ===

   Number of wires:                 11
   Number of wire bits:           1580
   Number of public wires:          11
   Number of public wire bits:    1580
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $and                          256
     $or                           256

=== rfifo ===

   Number of wires:                 37
   Number of wire bits:            578
   Number of public wires:          13
   Number of public wire bits:     531
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 34
     $add                           15
     $dffe                         269
     $eq                             6
     $logic_and                      3
     $logic_not                      9
     $mux                           10
     $not                            3
     $reduce_and                     9
     $reduce_bool                    7
     $sdff                           2
     $sub                            5

=== round ===

   Number of wires:                 45
   Number of wire bits:            327
   Number of public wires:          22
   Number of public wire bits:     211
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 34
     $add                           42
     $and                           10
     $logic_not                      1
     $mux                           64
     $not                            4
     $or                             9
     $reduce_and                     8
     $reduce_or                    153
     $xor                            1

=== shift ===

   Number of wires:                 47
   Number of wire bits:            472
   Number of public wires:          11
   Number of public wire bits:     374
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 42
     $and                            2
     $eq                           155
     $gt                            32
     $mux                          160
     $neg                           10
     $not                            1
     $or                             1
     $pmux                          96
     $reduce_or                     48

=== special ===

   Number of wires:                 24
   Number of wire bits:            206
   Number of public wires:          14
   Number of public wire bits:     136
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 17
     $and                            2
     $ge                            23
     $mux                          126
     $not                            1
     $or                             7

=== top_ram ===

   Number of wires:                  9
   Number of wire bits:            178
   Number of public wires:           9
   Number of public wire bits:     178
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $and                           32
     $or                            32

=== wfifo ===

   Number of wires:                 39
   Number of wire bits:           1411
   Number of public wires:          14
   Number of public wire bits:    1111
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 32
     $add                           15
     $dffe                          77
     $eq                             6
     $logic_and                      4
     $logic_not                      9
     $mux                          266
     $ne                             5
     $reduce_bool                   11
     $sdff                           2
     $sub                            5

=== design hierarchy ===

   LU8PEEng                          1
     DataTransferUnit                0
       addr_fifo                     0
         $paramod\dual_port_ram\DATA_WIDTH=4'0101\ADDR_WIDTH=4'0100      0
       memcmd_fifo                   0
         $paramod$4fd442b091a108698966967405a6589cbf6b5b5d\dual_port_ram      0
       rfifo                         0
         $paramod$ef0515f863cb1da1c6fa3654d4ff4adbb9145d5b\dual_port_ram      0
       wfifo                         0
         $paramod\dual_port_ram\DATA_WIDTH=10'0100000000\ADDR_WIDTH=4'0100      0
     LU                              0
       LUControl                     0
       fpu_div                       0
         div_24b                     0
       mult_add                      0
         fpmul                       0
           assemble                  0
           exponent                  0
           flag                      0
           multiply_a                0
           normalize                 0
           prenorm                   0
           preprocess                0
           round                     0
           shift                     0
           special                   0
         fpu_add                     0
       ram                           0
         $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram      0
       ram1                          0
         $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram      0
       ram2                          0
         $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram      0
       ram3                          0
         $paramod$1562f140864cc7fdf547927d88f1d7d4344d72f7\dual_port_ram      0
       top_ram                       0
         $paramod$ce0c38940747abe9a6fc0e1739aaf602f7b0afe8\dual_port_ram      0
     MarshallerController            0

   Number of wires:                 50
   Number of wire bits:           1681
   Number of public wires:          49
   Number of public wire bits:    1680
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $logic_and                      2
     $not                            1

Warnings: 3 unique messages, 3 total
End of script. Logfile hash: 70f87a884a, CPU: user 2.81s system 0.03s, MEM: 42.21 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 23% 6x opt_expr (0 sec), 20% 4x opt_clean (0 sec), ...
