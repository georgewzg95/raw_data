
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/lstm_submodules/sigmoid.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/lstm_submodules/sigmoid.v' to AST representation.
Generating RTLIL representation for module `\sigmoid'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/lstm_submodules/sigmoid.v:20.1-76.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/lstm_submodules/sigmoid.v:79.1-256.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: sigmoid             
Automatically selected sigmoid as design top module.

2.2. Analyzing design hierarchy..
Top module:  \sigmoid

2.3. Analyzing design hierarchy..
Top module:  \sigmoid
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/lstm_submodules/sigmoid.v:79$2 in module sigmoid.
Marked 36 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/lstm_submodules/sigmoid.v:79$2 in module sigmoid.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/lstm_submodules/sigmoid.v:20$1 in module sigmoid.
Removed a total of 1 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 2 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\sigmoid.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/lstm_submodules/sigmoid.v:79$2'.
     1/36: $36\address[5:0]
     2/36: $35\address[5:0]
     3/36: $34\address[5:0]
     4/36: $33\address[5:0]
     5/36: $32\address[5:0]
     6/36: $31\address[5:0]
     7/36: $30\address[5:0]
     8/36: $29\address[5:0]
     9/36: $28\address[5:0]
    10/36: $27\address[5:0]
    11/36: $26\address[5:0]
    12/36: $25\address[5:0]
    13/36: $24\address[5:0]
    14/36: $23\address[5:0]
    15/36: $22\address[5:0]
    16/36: $21\address[5:0]
    17/36: $20\address[5:0]
    18/36: $19\address[5:0]
    19/36: $18\address[5:0]
    20/36: $17\address[5:0]
    21/36: $16\address[5:0]
    22/36: $15\address[5:0]
    23/36: $14\address[5:0]
    24/36: $13\address[5:0]
    25/36: $12\address[5:0]
    26/36: $11\address[5:0]
    27/36: $10\address[5:0]
    28/36: $9\address[5:0]
    29/36: $8\address[5:0]
    30/36: $7\address[5:0]
    31/36: $6\address[5:0]
    32/36: $5\address[5:0]
    33/36: $4\address[5:0]
    34/36: $3\address[5:0]
    35/36: $2\address[5:0]
    36/36: $1\address[5:0]
Creating decoders for process `\sigmoid.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/lstm_submodules/sigmoid.v:20$1'.
     1/1: $1\lut[15:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
Latch inferred for signal `\sigmoid.\address' from process `\sigmoid.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/lstm_submodules/sigmoid.v:79$2': $auto$proc_dlatch.cc:427:proc_dlatch$1874
No latch inferred for signal `\sigmoid.\lut' from process `\sigmoid.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/lstm_submodules/sigmoid.v:20$1'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 36 empty switches in `\sigmoid.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/lstm_submodules/sigmoid.v:79$2'.
Removing empty process `sigmoid.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/lstm_submodules/sigmoid.v:79$2'.
Found and cleaned up 1 empty switch in `\sigmoid.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/lstm_submodules/sigmoid.v:20$1'.
Removing empty process `sigmoid.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/lstm_submodules/sigmoid.v:20$1'.
Cleaned up 37 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module sigmoid.
<suppressed ~414 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sigmoid.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sigmoid'.
<suppressed ~711 debug messages>
Removed a total of 237 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sigmoid..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sigmoid.
    New ctrl vector for $pmux cell $procmux$724: { $procmux$735_CMP $procmux$734_CMP $procmux$733_CMP $procmux$732_CMP $procmux$731_CMP $procmux$730_CMP $procmux$729_CMP $auto$opt_reduce.cc:134:opt_mux$1876 }
  Optimizing cells in module \sigmoid.
Performed a total of 1 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sigmoid'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sigmoid..
Removed 6 unused cells and 794 unused wires.
<suppressed ~7 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sigmoid.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sigmoid..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sigmoid.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sigmoid'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sigmoid..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sigmoid.

4.16. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== sigmoid ===

   Number of wires:                229
   Number of wire bits:            424
   Number of public wires:           4
   Number of public wire bits:      54
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                227
     $and                          116
     $dlatch                         6
     $eq                           328
     $ge                            12
     $gt                            48
     $le                            48
     $logic_and                      4
     $logic_not                     10
     $mux                          168
     $not                            5
     $pmux                          22
     $reduce_or                     11

End of script. Logfile hash: d1cd2b3553, CPU: user 0.20s system 0.00s, MEM: 15.29 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 31% 4x opt_expr (0 sec), 18% 3x opt_merge (0 sec), ...
