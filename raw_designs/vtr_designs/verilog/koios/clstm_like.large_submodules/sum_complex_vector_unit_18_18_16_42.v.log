
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v' to AST representation.
Generating RTLIL representation for module `\sum_complex_vector_unit_18_18_16_42'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: sum_complex_vector_unit_18_18_16_42
Automatically selected sum_complex_vector_unit_18_18_16_42 as design top module.

2.2. Analyzing design hierarchy..
Top module:  \sum_complex_vector_unit_18_18_16_42

2.3. Analyzing design hierarchy..
Top module:  \sum_complex_vector_unit_18_18_16_42
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1 in module sum_complex_vector_unit_18_18_16_42.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
     1/34: $0\counter[13:0]
     2/34: $0\reg_i_valid[0:0]
     3/34: $0\sum_imag_15[17:0]
     4/34: $0\sum_real_15[17:0]
     5/34: $0\sum_imag_14[17:0]
     6/34: $0\sum_real_14[17:0]
     7/34: $0\sum_imag_13[17:0]
     8/34: $0\sum_real_13[17:0]
     9/34: $0\sum_imag_12[17:0]
    10/34: $0\sum_real_12[17:0]
    11/34: $0\sum_imag_11[17:0]
    12/34: $0\sum_real_11[17:0]
    13/34: $0\sum_imag_10[17:0]
    14/34: $0\sum_real_10[17:0]
    15/34: $0\sum_imag_9[17:0]
    16/34: $0\sum_real_9[17:0]
    17/34: $0\sum_imag_8[17:0]
    18/34: $0\sum_real_8[17:0]
    19/34: $0\sum_imag_7[17:0]
    20/34: $0\sum_real_7[17:0]
    21/34: $0\sum_imag_6[17:0]
    22/34: $0\sum_real_6[17:0]
    23/34: $0\sum_imag_5[17:0]
    24/34: $0\sum_real_5[17:0]
    25/34: $0\sum_imag_4[17:0]
    26/34: $0\sum_real_4[17:0]
    27/34: $0\sum_imag_3[17:0]
    28/34: $0\sum_real_3[17:0]
    29/34: $0\sum_imag_2[17:0]
    30/34: $0\sum_real_2[17:0]
    31/34: $0\sum_imag_1[17:0]
    32/34: $0\sum_real_1[17:0]
    33/34: $0\sum_imag_0[17:0]
    34/34: $0\sum_real_0[17:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_real_0' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$374' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_imag_0' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$375' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_real_1' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$376' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_imag_1' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$377' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_real_2' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$378' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_imag_2' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$379' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_real_3' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$380' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_imag_3' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$381' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_real_4' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$382' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_imag_4' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$383' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_real_5' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$384' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_imag_5' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$385' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_real_6' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$386' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_imag_6' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$387' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_real_7' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$388' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_imag_7' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$389' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_real_8' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$390' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_imag_8' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$391' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_real_9' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$392' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_imag_9' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$393' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_real_10' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$394' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_imag_10' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$395' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_real_11' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$396' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_imag_11' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$397' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_real_12' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$398' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_imag_12' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$399' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_real_13' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$400' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_imag_13' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$401' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_real_14' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$402' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_imag_14' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$403' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_real_15' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$404' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\sum_imag_15' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$405' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\reg_i_valid' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$406' with positive edge clock.
Creating register for signal `\sum_complex_vector_unit_18_18_16_42.\counter' using process `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
  created $dff cell `$procdff$407' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 5 empty switches in `\sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
Removing empty process `sum_complex_vector_unit_18_18_16_42.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.large_submodules/sum_complex_vector_unit_18_18_16_42.v:112$1'.
Cleaned up 5 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module sum_complex_vector_unit_18_18_16_42.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sum_complex_vector_unit_18_18_16_42.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sum_complex_vector_unit_18_18_16_42'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sum_complex_vector_unit_18_18_16_42..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sum_complex_vector_unit_18_18_16_42.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sum_complex_vector_unit_18_18_16_42'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$406 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$49_Y, Q = \reg_i_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$408 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = \i_valid, Q = \reg_i_valid).
Adding SRST signal on $procdff$407 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$44_Y, Q = \counter, rval = 14'00000000000000).
Adding EN signal on $auto$ff.cc:262:slice$410 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$40_Y, Q = \counter).
Adding SRST signal on $procdff$374 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$369_Y, Q = \sum_real_0, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$414 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$365_Y, Q = \sum_real_0).
Adding SRST signal on $procdff$375 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$359_Y, Q = \sum_imag_0, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$418 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$355_Y, Q = \sum_imag_0).
Adding SRST signal on $procdff$376 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$349_Y, Q = \sum_real_1, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$422 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$345_Y, Q = \sum_real_1).
Adding SRST signal on $procdff$377 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$339_Y, Q = \sum_imag_1, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$426 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$335_Y, Q = \sum_imag_1).
Adding SRST signal on $procdff$378 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$329_Y, Q = \sum_real_2, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$430 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$325_Y, Q = \sum_real_2).
Adding SRST signal on $procdff$379 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$319_Y, Q = \sum_imag_2, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$434 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$315_Y, Q = \sum_imag_2).
Adding SRST signal on $procdff$380 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$309_Y, Q = \sum_real_3, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$438 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$305_Y, Q = \sum_real_3).
Adding SRST signal on $procdff$381 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$299_Y, Q = \sum_imag_3, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$442 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$295_Y, Q = \sum_imag_3).
Adding SRST signal on $procdff$382 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$289_Y, Q = \sum_real_4, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$446 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$285_Y, Q = \sum_real_4).
Adding SRST signal on $procdff$383 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$279_Y, Q = \sum_imag_4, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$450 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$275_Y, Q = \sum_imag_4).
Adding SRST signal on $procdff$384 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$269_Y, Q = \sum_real_5, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$454 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$265_Y, Q = \sum_real_5).
Adding SRST signal on $procdff$385 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$259_Y, Q = \sum_imag_5, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$458 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$255_Y, Q = \sum_imag_5).
Adding SRST signal on $procdff$386 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$249_Y, Q = \sum_real_6, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$462 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$245_Y, Q = \sum_real_6).
Adding SRST signal on $procdff$387 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$239_Y, Q = \sum_imag_6, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$466 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$235_Y, Q = \sum_imag_6).
Adding SRST signal on $procdff$388 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$229_Y, Q = \sum_real_7, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$470 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$225_Y, Q = \sum_real_7).
Adding SRST signal on $procdff$389 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$219_Y, Q = \sum_imag_7, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$474 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$215_Y, Q = \sum_imag_7).
Adding SRST signal on $procdff$390 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$209_Y, Q = \sum_real_8, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$478 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$205_Y, Q = \sum_real_8).
Adding SRST signal on $procdff$391 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$199_Y, Q = \sum_imag_8, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$482 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$195_Y, Q = \sum_imag_8).
Adding SRST signal on $procdff$392 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$189_Y, Q = \sum_real_9, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$486 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$185_Y, Q = \sum_real_9).
Adding SRST signal on $procdff$393 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$179_Y, Q = \sum_imag_9, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$490 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$175_Y, Q = \sum_imag_9).
Adding SRST signal on $procdff$394 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$169_Y, Q = \sum_real_10, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$494 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$165_Y, Q = \sum_real_10).
Adding SRST signal on $procdff$395 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$159_Y, Q = \sum_imag_10, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$498 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$155_Y, Q = \sum_imag_10).
Adding SRST signal on $procdff$396 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$149_Y, Q = \sum_real_11, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$502 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$145_Y, Q = \sum_real_11).
Adding SRST signal on $procdff$397 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$139_Y, Q = \sum_imag_11, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$506 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$135_Y, Q = \sum_imag_11).
Adding SRST signal on $procdff$398 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$129_Y, Q = \sum_real_12, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$510 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$125_Y, Q = \sum_real_12).
Adding SRST signal on $procdff$399 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$119_Y, Q = \sum_imag_12, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$514 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$115_Y, Q = \sum_imag_12).
Adding SRST signal on $procdff$400 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$109_Y, Q = \sum_real_13, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$518 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$105_Y, Q = \sum_real_13).
Adding SRST signal on $procdff$401 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$99_Y, Q = \sum_imag_13, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$522 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$95_Y, Q = \sum_imag_13).
Adding SRST signal on $procdff$402 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$89_Y, Q = \sum_real_14, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$526 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$85_Y, Q = \sum_real_14).
Adding SRST signal on $procdff$403 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$79_Y, Q = \sum_imag_14, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$530 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$75_Y, Q = \sum_imag_14).
Adding SRST signal on $procdff$404 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$69_Y, Q = \sum_real_15, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$534 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$65_Y, Q = \sum_real_15).
Adding SRST signal on $procdff$405 ($dff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$59_Y, Q = \sum_imag_15, rval = 18'000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$538 ($sdff) from module sum_complex_vector_unit_18_18_16_42 (D = $procmux$55_Y, Q = \sum_imag_15).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sum_complex_vector_unit_18_18_16_42..
Removed 101 unused cells and 273 unused wires.
<suppressed ~102 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sum_complex_vector_unit_18_18_16_42.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sum_complex_vector_unit_18_18_16_42..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sum_complex_vector_unit_18_18_16_42.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sum_complex_vector_unit_18_18_16_42'.
<suppressed ~96 debug messages>
Removed a total of 32 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sum_complex_vector_unit_18_18_16_42..
Removed 0 unused cells and 32 unused wires.
<suppressed ~1 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sum_complex_vector_unit_18_18_16_42.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sum_complex_vector_unit_18_18_16_42..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sum_complex_vector_unit_18_18_16_42.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sum_complex_vector_unit_18_18_16_42'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sum_complex_vector_unit_18_18_16_42..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module sum_complex_vector_unit_18_18_16_42.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== sum_complex_vector_unit_18_18_16_42 ===

   Number of wires:                171
   Number of wire bits:           2948
   Number of public wires:         104
   Number of public wire bits:    1749
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                103
     $add                          608
     $and                            1
     $eq                            14
     $mux                          590
     $reduce_and                     2
     $sdffe                        591

End of script. Logfile hash: 8ce7db031b, CPU: user 0.21s system 0.00s, MEM: 16.12 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 17% 5x opt_expr (0 sec), 17% 3x opt_clean (0 sec), ...
