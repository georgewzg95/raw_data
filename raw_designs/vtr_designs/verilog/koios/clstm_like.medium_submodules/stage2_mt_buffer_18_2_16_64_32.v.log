
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v' to AST representation.
Generating RTLIL representation for module `\stage2_mt_buffer_18_2_16_64_32'.
Generating RTLIL representation for module `\shift_register_unit_12'.
Generating RTLIL representation for module `\ram_288_0_64'.
Generating RTLIL representation for module `\counter_14_1'.
Generating RTLIL representation for module `\counter_63_1'.
Generating RTLIL representation for module `\dual_port_ram'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: dual_port_ram       
root of   0 design levels: counter_63_1        
root of   0 design levels: counter_14_1        
root of   1 design levels: ram_288_0_64        
root of   0 design levels: shift_register_unit_12
root of   2 design levels: stage2_mt_buffer_18_2_16_64_32
Automatically selected stage2_mt_buffer_18_2_16_64_32 as design top module.

2.2. Analyzing design hierarchy..
Top module:  \stage2_mt_buffer_18_2_16_64_32
Used module:     \shift_register_unit_12
Used module:     \ram_288_0_64
Used module:         \dual_port_ram
Used module:     \counter_14_1
Used module:     \counter_63_1

2.3. Analyzing design hierarchy..
Top module:  \stage2_mt_buffer_18_2_16_64_32
Used module:     \shift_register_unit_12
Used module:     \ram_288_0_64
Used module:         \dual_port_ram
Used module:     \counter_14_1
Used module:     \counter_63_1
Removed 0 unused modules.
Warning: Resizing cell port stage2_mt_buffer_18_2_16_64_32.ram_288_0_64_inst.waddr from 14 bits to 6 bits.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:305$41 in module dual_port_ram.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:296$33 in module dual_port_ram.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:256$27 in module counter_63_1.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:235$23 in module counter_14_1.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:190$22 in module shift_register_unit_12.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:171$21 in module stage2_mt_buffer_18_2_16_64_32.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:125$4 in module stage2_mt_buffer_18_2_16_64_32.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:64$1 in module stage2_mt_buffer_18_2_16_64_32.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 3 redundant assignments.
Promoted 6 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:305$41'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:307$32_EN[287:0]$47
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:307$32_DATA[287:0]$46
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:307$32_ADDR[5:0]$45
     4/4: $0\out2[287:0]
Creating decoders for process `\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:296$33'.
     1/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:298$31_EN[287:0]$39
     2/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:298$31_DATA[287:0]$38
     3/4: $1$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:298$31_ADDR[5:0]$37
     4/4: $0\out1[287:0]
Creating decoders for process `\counter_63_1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:256$27'.
     1/1: $0\count[13:0]
Creating decoders for process `\counter_14_1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:235$23'.
     1/1: $0\count[13:0]
Creating decoders for process `\shift_register_unit_12.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:190$22'.
     1/2: $0\shift_registers_1[0:0]
     2/2: $0\shift_registers_0[0:0]
Creating decoders for process `\stage2_mt_buffer_18_2_16_64_32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:171$21'.
     1/1: $0\output_valid[0:0]
Creating decoders for process `\stage2_mt_buffer_18_2_16_64_32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:125$4'.
     1/3: $0\en_output_counter[0:0]
     2/3: $0\is_output_enough[0:0]
     3/3: $0\is_buffer_full[0:0]
Creating decoders for process `\stage2_mt_buffer_18_2_16_64_32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:64$1'.
     1/1: $0\raddr[5:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\stage2_mt_buffer_18_2_16_64_32.\output_valid' from process `\stage2_mt_buffer_18_2_16_64_32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:171$21'.
No latch inferred for signal `\stage2_mt_buffer_18_2_16_64_32.\raddr' from process `\stage2_mt_buffer_18_2_16_64_32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:64$1'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\dual_port_ram.\out2' using process `\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:305$41'.
  created $dff cell `$procdff$124' with positive edge clock.
Creating register for signal `\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:307$32_ADDR' using process `\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:305$41'.
  created $dff cell `$procdff$125' with positive edge clock.
Creating register for signal `\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:307$32_DATA' using process `\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:305$41'.
  created $dff cell `$procdff$126' with positive edge clock.
Creating register for signal `\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:307$32_EN' using process `\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:305$41'.
  created $dff cell `$procdff$127' with positive edge clock.
Creating register for signal `\dual_port_ram.\out1' using process `\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:296$33'.
  created $dff cell `$procdff$128' with positive edge clock.
Creating register for signal `\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:298$31_ADDR' using process `\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:296$33'.
  created $dff cell `$procdff$129' with positive edge clock.
Creating register for signal `\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:298$31_DATA' using process `\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:296$33'.
  created $dff cell `$procdff$130' with positive edge clock.
Creating register for signal `\dual_port_ram.$memwr$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:298$31_EN' using process `\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:296$33'.
  created $dff cell `$procdff$131' with positive edge clock.
Creating register for signal `\counter_63_1.\count' using process `\counter_63_1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:256$27'.
  created $dff cell `$procdff$132' with positive edge clock.
Creating register for signal `\counter_14_1.\count' using process `\counter_14_1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:235$23'.
  created $dff cell `$procdff$133' with positive edge clock.
Creating register for signal `\shift_register_unit_12.\shift_registers_0' using process `\shift_register_unit_12.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:190$22'.
  created $dff cell `$procdff$134' with positive edge clock.
Creating register for signal `\shift_register_unit_12.\shift_registers_1' using process `\shift_register_unit_12.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:190$22'.
  created $dff cell `$procdff$135' with positive edge clock.
Creating register for signal `\stage2_mt_buffer_18_2_16_64_32.\is_buffer_full' using process `\stage2_mt_buffer_18_2_16_64_32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:125$4'.
  created $dff cell `$procdff$136' with positive edge clock.
Creating register for signal `\stage2_mt_buffer_18_2_16_64_32.\en_output_counter' using process `\stage2_mt_buffer_18_2_16_64_32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:125$4'.
  created $dff cell `$procdff$137' with positive edge clock.
Creating register for signal `\stage2_mt_buffer_18_2_16_64_32.\is_output_enough' using process `\stage2_mt_buffer_18_2_16_64_32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:125$4'.
  created $dff cell `$procdff$138' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:305$41'.
Removing empty process `dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:305$41'.
Found and cleaned up 1 empty switch in `\dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:296$33'.
Removing empty process `dual_port_ram.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:296$33'.
Found and cleaned up 3 empty switches in `\counter_63_1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:256$27'.
Removing empty process `counter_63_1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:256$27'.
Found and cleaned up 3 empty switches in `\counter_14_1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:235$23'.
Removing empty process `counter_14_1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:235$23'.
Found and cleaned up 2 empty switches in `\shift_register_unit_12.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:190$22'.
Removing empty process `shift_register_unit_12.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:190$22'.
Found and cleaned up 1 empty switch in `\stage2_mt_buffer_18_2_16_64_32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:171$21'.
Removing empty process `stage2_mt_buffer_18_2_16_64_32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:171$21'.
Found and cleaned up 5 empty switches in `\stage2_mt_buffer_18_2_16_64_32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:125$4'.
Removing empty process `stage2_mt_buffer_18_2_16_64_32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:125$4'.
Found and cleaned up 1 empty switch in `\stage2_mt_buffer_18_2_16_64_32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:64$1'.
Removing empty process `stage2_mt_buffer_18_2_16_64_32.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:64$1'.
Cleaned up 17 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module dual_port_ram.
Optimizing module counter_63_1.
Optimizing module counter_14_1.
Optimizing module ram_288_0_64.
Optimizing module shift_register_unit_12.
Optimizing module stage2_mt_buffer_18_2_16_64_32.
<suppressed ~3 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dual_port_ram.
Optimizing module counter_63_1.
Optimizing module counter_14_1.
Optimizing module ram_288_0_64.
Optimizing module shift_register_unit_12.
Optimizing module stage2_mt_buffer_18_2_16_64_32.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dual_port_ram'.
Finding identical cells in module `\counter_63_1'.
<suppressed ~3 debug messages>
Finding identical cells in module `\counter_14_1'.
<suppressed ~3 debug messages>
Finding identical cells in module `\ram_288_0_64'.
Finding identical cells in module `\shift_register_unit_12'.
Finding identical cells in module `\stage2_mt_buffer_18_2_16_64_32'.
<suppressed ~3 debug messages>
Removed a total of 3 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \counter_63_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \counter_14_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ram_288_0_64..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \shift_register_unit_12..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \stage2_mt_buffer_18_2_16_64_32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dual_port_ram.
    Consolidated identical input bits for $mux cell $procmux$62:
      Old ports: A=288'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, B=288'111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111, Y=$procmux$62_Y
      New ports: A=1'0, B=1'1, Y=$procmux$62_Y [0]
      New connections: $procmux$62_Y [287:1] = { $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] $procmux$62_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$50:
      Old portsprocmux$50_Y
      New ports: A=1'0, B=1'1, Y=$procmux$50_Y [0]
      New connections: $procmux$50_Y [287:1] = { $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] $procmux$50_Y [0] }
  Optimizing cells in module \dual_port_ram.
  Optimizing cells in module \counter_63_1.
  Optimizing cells in module \counter_14_1.
  Optimizing cells in module \ram_288_0_64.
  Optimizing cells in module \shift_register_unit_12.
  Optimizing cells in module \stage2_mt_buffer_18_2_16_64_32.
Performed a total of 2 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dual_port_ram'.
Finding identical cells in module `\counter_63_1'.
Finding identical cells in module `\counter_14_1'.
Finding identical cells in module `\ram_288_0_64'.
Finding identical cells in module `\shift_register_unit_12'.
Finding identical cells in module `\stage2_mt_buffer_18_2_16_64_32'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$124 ($dff) from module dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:310$48_DATA, Q = \out2).
Adding EN signal on $procdff$128 ($dff) from module dual_port_ram (D = $memrd$\ram$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:301$40_DATA, Q = \out1).
Adding SRST signal on $procdff$132 ($dff) from module counter_63_1 (D = $procmux$76_Y, Q = \count, rval = 14'00000000000000).
Adding EN signal on $auto$ff.cc:262:slice$143 ($sdff) from module counter_63_1 (D = $procmux$74_Y, Q = \count).
Adding SRST signal on $procdff$133 ($dff) from module counter_14_1 (D = $procmux$84_Y, Q = \count, rval = 14'00000000000000).
Adding EN signal on $auto$ff.cc:262:slice$145 ($sdff) from module counter_14_1 (D = $procmux$82_Y, Q = \count).
Adding SRST signal on $procdff$134 ($dff) from module shift_register_unit_12 (D = $procmux$94_Y, Q = \shift_registers_0, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$147 ($sdff) from module shift_register_unit_12 (D = \in, Q = \shift_registers_0).
Adding SRST signal on $procdff$135 ($dff) from module shift_register_unit_12 (D = $procmux$89_Y, Q = \shift_registers_1, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$149 ($sdff) from module shift_register_unit_12 (D = \shift_registers_0, Q = \shift_registers_1).
Adding SRST signal on $procdff$138 ($dff) from module stage2_mt_buffer_18_2_16_64_32 (D = $procmux$108_Y, Q = \is_output_enough, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$151 ($sdff) from module stage2_mt_buffer_18_2_16_64_32 (D = $procmux$108_Y, Q = \is_output_enough).
Adding SRST signal on $procdff$136 ($dff) from module stage2_mt_buffer_18_2_16_64_32 (D = $procmux$116_Y, Q = \is_buffer_full, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$155 ($sdff) from module stage2_mt_buffer_18_2_16_64_32 (D = $procmux$116_Y, Q = \is_buffer_full).
Adding SRST signal on $procdff$137 ($dff) from module stage2_mt_buffer_18_2_16_64_32 (D = $logic_and$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/stage2_mt_buffer_18_2_16_64_32.v:131$8_Y, Q = \en_output_counter, rval = 1'0).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dual_port_ram..
Finding unused cells or wires in module \counter_63_1..
Finding unused cells or wires in module \counter_14_1..
Finding unused cells or wires in module \ram_288_0_64..
Finding unused cells or wires in module \shift_register_unit_12..
Finding unused cells or wires in module \stage2_mt_buffer_18_2_16_64_32..
Removed 19 unused cells and 75 unused wires.
<suppressed ~24 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_14_1.
Optimizing module counter_63_1.
Optimizing module dual_port_ram.
Optimizing module ram_288_0_64.
Optimizing module shift_register_unit_12.
Optimizing module stage2_mt_buffer_18_2_16_64_32.
<suppressed ~2 debug messages>

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \counter_14_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \counter_63_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \dual_port_ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ram_288_0_64..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \shift_register_unit_12..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \stage2_mt_buffer_18_2_16_64_32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \counter_14_1.
  Optimizing cells in module \counter_63_1.
  Optimizing cells in module \dual_port_ram.
  Optimizing cells in module \ram_288_0_64.
  Optimizing cells in module \shift_register_unit_12.
  Optimizing cells in module \stage2_mt_buffer_18_2_16_64_32.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\counter_14_1'.
Finding identical cells in module `\counter_63_1'.
Finding identical cells in module `\dual_port_ram'.
Finding identical cells in module `\ram_288_0_64'.
Finding identical cells in module `\shift_register_unit_12'.
Finding identical cells in module `\stage2_mt_buffer_18_2_16_64_32'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_14_1..
Finding unused cells or wires in module \counter_63_1..
Finding unused cells or wires in module \dual_port_ram..
Finding unused cells or wires in module \ram_288_0_64..
Finding unused cells or wires in module \shift_register_unit_12..
Finding unused cells or wires in module \stage2_mt_buffer_18_2_16_64_32..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_14_1.
Optimizing module counter_63_1.
Optimizing module dual_port_ram.
Optimizing module ram_288_0_64.
Optimizing module shift_register_unit_12.
Optimizing module stage2_mt_buffer_18_2_16_64_32.

4.16. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== counter_14_1 ===

   Number of wires:                  7
   Number of wire bits:             64
   Number of public wires:           4
   Number of public wire bits:      17
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $add                           32
     $le                            32
     $mux                           14
     $sdffe                         14

=== counter_63_1 ===

   Number of wires:                  7
   Number of wire bits:             64
   Number of public wires:           4
   Number of public wire bits:      17
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $add                           32
     $le                            32
     $mux                           14
     $sdffe                         14

=== dual_port_ram ===

   Number of wires:                 17
   Number of wire bits:           2907
   Number of public wires:           9
   Number of public wire bits:    1167
   Number of memories:               1
   Number of memory bits:         1728
   Number of processes:              0
   Number of cells:                 12
     $dffe                         576
     $mux                          590

=== ram_288_0_64 ===

   Number of wires:                  8
   Number of wire bits:           1166
   Number of public wires:           8
   Number of public wire bits:    1166
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1

=== shift_register_unit_12 ===

   Number of wires:                  7
   Number of wire bits:              7
   Number of public wires:           7
   Number of public wire bits:       7
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $sdffe                          2

=== stage2_mt_buffer_18_2_16_64_32 ===

   Number of wires:                 72
   Number of wire bits:           1234
   Number of public wires:          50
   Number of public wire bits:    1212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 35
     $eq                            42
     $logic_and                      9
     $logic_not                     42
     $mux                           11
     $not                            2
     $reduce_bool                    4
     $sdff                           1
     $sdffe                          2

=== design hierarchy ===

   stage2_mt_buffer_18_2_16_64_32      1
     counter_14_1                    0
     counter_63_1                    0
     ram_288_0_64                    0
       dual_port_ram                 0
     shift_register_unit_12          0

   Number of wires:                 72
   Number of wire bits:           1234
   Number of public wires:          50
   Number of public wire bits:    1212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 35
     $eq                            42
     $logic_and                      9
     $logic_not                     42
     $mux                           11
     $not                            2
     $reduce_bool                    4
     $sdff                           1
     $sdffe                          2

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 8993326da2, CPU: user 0.13s system 0.01s, MEM: 14.79 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 24% 2x opt_clean (0 sec), 21% 4x opt_expr (0 sec), ...
