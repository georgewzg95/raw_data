
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v' to AST representation.
Generating RTLIL representation for module `\fp_rounding_unit_1_37_10'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: fp_rounding_unit_1_37_10
Automatically selected fp_rounding_unit_1_37_10 as design top module.

2.2. Analyzing design hierarchy..
Top module:  \fp_rounding_unit_1_37_10

2.3. Analyzing design hierarchy..
Top module:  \fp_rounding_unit_1_37_10
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v:29$2 in module fp_rounding_unit_1_37_10.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v:19$1 in module fp_rounding_unit_1_37_10.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 1 assignment to connection.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\fp_rounding_unit_1_37_10.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v:29$2'.
     1/6: $0\out_reg[36:0]
     2/6: $0\valid_reg[0:0]
     3/6: $0\floor_ceil_valid[0:0]
     4/6: $0\is_ceil[0:0]
     5/6: $0\ceil[36:0]
     6/6: $0\floor[36:0]
Creating decoders for process `\fp_rounding_unit_1_37_10.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v:19$1'.
     1/1: $1\rounded_result[36:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\fp_rounding_unit_1_37_10.\rounded_result' from process `\fp_rounding_unit_1_37_10.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v:19$1'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\fp_rounding_unit_1_37_10.\floor' using process `\fp_rounding_unit_1_37_10.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v:29$2'.
  created $dff cell `$procdff$39' with positive edge clock.
Creating register for signal `\fp_rounding_unit_1_37_10.\ceil' using process `\fp_rounding_unit_1_37_10.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v:29$2'.
  created $dff cell `$procdff$40' with positive edge clock.
Creating register for signal `\fp_rounding_unit_1_37_10.\is_ceil' using process `\fp_rounding_unit_1_37_10.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v:29$2'.
  created $dff cell `$procdff$41' with positive edge clock.
Creating register for signal `\fp_rounding_unit_1_37_10.\floor_ceil_valid' using process `\fp_rounding_unit_1_37_10.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v:29$2'.
  created $dff cell `$procdff$42' with positive edge clock.
Creating register for signal `\fp_rounding_unit_1_37_10.\valid_reg' using process `\fp_rounding_unit_1_37_10.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v:29$2'.
  created $dff cell `$procdff$43' with positive edge clock.
Creating register for signal `\fp_rounding_unit_1_37_10.\out_reg' using process `\fp_rounding_unit_1_37_10.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v:29$2'.
  created $dff cell `$procdff$44' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 2 empty switches in `\fp_rounding_unit_1_37_10.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v:29$2'.
Removing empty process `fp_rounding_unit_1_37_10.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v:29$2'.
Found and cleaned up 1 empty switch in `\fp_rounding_unit_1_37_10.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v:19$1'.
Removing empty process `fp_rounding_unit_1_37_10.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v:19$1'.
Cleaned up 3 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module fp_rounding_unit_1_37_10.
<suppressed ~2 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module fp_rounding_unit_1_37_10.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_rounding_unit_1_37_10'.
Removed a total of 0 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fp_rounding_unit_1_37_10..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fp_rounding_unit_1_37_10.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_rounding_unit_1_37_10'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$44 ($dff) from module fp_rounding_unit_1_37_10 (D = $procmux$6_Y, Q = \out_reg, rval = 37'0000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$45 ($sdff) from module fp_rounding_unit_1_37_10 (D = $procmux$37_Y, Q = \out_reg).
Adding SRST signal on $procdff$43 ($dff) from module fp_rounding_unit_1_37_10 (D = $procmux$11_Y, Q = \valid_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$47 ($sdff) from module fp_rounding_unit_1_37_10 (D = \floor_ceil_valid, Q = \valid_reg).
Adding SRST signal on $procdff$39 ($dff) from module fp_rounding_unit_1_37_10 (D = $procmux$31_Y, Q = \floor, rval = 37'0000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$49 ($sdff) from module fp_rounding_unit_1_37_10 (D = { 10'0000000000 \in [36:10] }, Q = \floor).
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$50 ($sdffe) from module fp_rounding_unit_1_37_10.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$50 ($sdffe) from module fp_rounding_unit_1_37_10.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$50 ($sdffe) from module fp_rounding_unit_1_37_10.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$50 ($sdffe) from module fp_rounding_unit_1_37_10.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$50 ($sdffe) from module fp_rounding_unit_1_37_10.
Setting constant 0-bit at position 32 on $auto$ff.cc:262:slice$50 ($sdffe) from module fp_rounding_unit_1_37_10.
Setting constant 0-bit at position 33 on $auto$ff.cc:262:slice$50 ($sdffe) from module fp_rounding_unit_1_37_10.
Setting constant 0-bit at position 34 on $auto$ff.cc:262:slice$50 ($sdffe) from module fp_rounding_unit_1_37_10.
Setting constant 0-bit at position 35 on $auto$ff.cc:262:slice$50 ($sdffe) from module fp_rounding_unit_1_37_10.
Setting constant 0-bit at position 36 on $auto$ff.cc:262:slice$50 ($sdffe) from module fp_rounding_unit_1_37_10.
Adding SRST signal on $procdff$40 ($dff) from module fp_rounding_unit_1_37_10 (D = $procmux$26_Y, Q = \ceil, rval = 37'0000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$52 ($sdff) from module fp_rounding_unit_1_37_10 (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/koios/clstm_like.medium_submodules/fp_rounding_unit_1_37_10.v:40$5_Y, Q = \ceil).
Adding SRST signal on $procdff$41 ($dff) from module fp_rounding_unit_1_37_10 (D = $procmux$21_Y, Q = \is_ceil, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$54 ($sdff) from module fp_rounding_unit_1_37_10 (D = \in [9], Q = \is_ceil).
Adding SRST signal on $procdff$42 ($dff) from module fp_rounding_unit_1_37_10 (D = $procmux$16_Y, Q = \floor_ceil_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$56 ($sdff) from module fp_rounding_unit_1_37_10 (D = \i_valid, Q = \floor_ceil_valid).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_rounding_unit_1_37_10..
Removed 12 unused cells and 36 unused wires.
<suppressed ~13 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module fp_rounding_unit_1_37_10.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fp_rounding_unit_1_37_10..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fp_rounding_unit_1_37_10.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fp_rounding_unit_1_37_10'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fp_rounding_unit_1_37_10..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module fp_rounding_unit_1_37_10.

4.16. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== fp_rounding_unit_1_37_10 ===

   Number of wires:                 15
   Number of wire bits:            267
   Number of public wires:          14
   Number of public wire bits:     230
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  8
     $add                           37
     $mux                           37
     $sdffe                        104

End of script. Logfile hash: acace31172, CPU: user 0.02s system 0.00s, MEM: 11.59 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 19% 4x opt_expr (0 sec), 19% 2x read_verilog (0 sec), ...
