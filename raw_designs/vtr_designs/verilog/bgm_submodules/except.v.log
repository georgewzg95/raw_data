
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v' to AST representation.
Generating RTLIL representation for module `\except'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: except              
Automatically selected except as design top module.

2.2. Analyzing design hierarchy..
Top module:  \except

2.3. Analyzing design hierarchy..
Top module:  \except
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 24 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:114$66'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:111$65'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:108$63'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:105$61'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:102$58'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:99$55'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:96$52'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:93$49'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:90$47'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:87$45'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:84$41'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:81$37'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:78$33'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:75$29'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:72$25'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:69$21'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:66$17'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:63$16'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:60$12'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:57$11'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:54$8'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:51$5'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:48$3'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:45$1'.

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\except.\opb_dn' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:114$66'.
  created $dff cell `$procdff$67' with positive edge clock.
Creating register for signal `\except.\opa_dn' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:111$65'.
  created $dff cell `$procdff$68' with positive edge clock.
Creating register for signal `\except.\opb_00' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:108$63'.
  created $dff cell `$procdff$69' with positive edge clock.
Creating register for signal `\except.\opa_00' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:105$61'.
  created $dff cell `$procdff$70' with positive edge clock.
Creating register for signal `\except.\fractb_00' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:102$58'.
  created $dff cell `$procdff$71' with positive edge clock.
Creating register for signal `\except.\fracta_00' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:99$55'.
  created $dff cell `$procdff$72' with positive edge clock.
Creating register for signal `\except.\expb_00' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:96$52'.
  created $dff cell `$procdff$73' with positive edge clock.
Creating register for signal `\except.\expa_00' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:93$49'.
  created $dff cell `$procdff$74' with positive edge clock.
Creating register for signal `\except.\opb_inf' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:90$47'.
  created $dff cell `$procdff$75' with positive edge clock.
Creating register for signal `\except.\opa_inf' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:87$45'.
  created $dff cell `$procdff$76' with positive edge clock.
Creating register for signal `\except.\opb_nan' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:84$41'.
  created $dff cell `$procdff$77' with positive edge clock.
Creating register for signal `\except.\opa_nan' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:81$37'.
  created $dff cell `$procdff$78' with positive edge clock.
Creating register for signal `\except.\snan' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:78$33'.
  created $dff cell `$procdff$79' with positive edge clock.
Creating register for signal `\except.\qnan' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:75$29'.
  created $dff cell `$procdff$80' with positive edge clock.
Creating register for signal `\except.\inf' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:72$25'.
  created $dff cell `$procdff$81' with positive edge clock.
Creating register for signal `\except.\ind' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:69$21'.
  created $dff cell `$procdff$82' with positive edge clock.
Creating register for signal `\except.\snan_r_b' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:66$17'.
  created $dff cell `$procdff$83' with positive edge clock.
Creating register for signal `\except.\qnan_r_b' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:63$16'.
  created $dff cell `$procdff$84' with positive edge clock.
Creating register for signal `\except.\snan_r_a' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:60$12'.
  created $dff cell `$procdff$85' with positive edge clock.
Creating register for signal `\except.\qnan_r_a' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:57$11'.
  created $dff cell `$procdff$86' with positive edge clock.
Creating register for signal `\except.\infb_f_r' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:54$8'.
  created $dff cell `$procdff$87' with positive edge clock.
Creating register for signal `\except.\infa_f_r' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:51$5'.
  created $dff cell `$procdff$88' with positive edge clock.
Creating register for signal `\except.\expb_ff' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:48$3'.
  created $dff cell `$procdff$89' with positive edge clock.
Creating register for signal `\except.\expa_ff' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:45$1'.
  created $dff cell `$procdff$90' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:114$66'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:111$65'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:108$63'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:105$61'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:102$58'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:99$55'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:96$52'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:93$49'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:90$47'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:87$45'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:84$41'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:81$37'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:78$33'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:75$29'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:72$25'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:69$21'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:66$17'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:63$16'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:60$12'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:57$11'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:54$8'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:51$5'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:48$3'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm_submodules/except.v:45$1'.
Cleaned up 0 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module except.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module except.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\except'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \except..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \except.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\except'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \except..
Removed 0 unused cells and 36 unused wires.
<suppressed ~1 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module except.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \except..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \except.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\except'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \except..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module except.

4.16. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== except ===

   Number of wires:                 61
   Number of wire bits:            179
   Number of public wires:          31
   Number of public wire bits:     149
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 52
     $and                           13
     $dff                           22
     $logic_not                      6
     $or                             3
     $reduce_and                    16
     $reduce_or                    106

End of script. Logfile hash: 4eff037b5a, CPU: user 0.05s system 0.00s, MEM: 11.63 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 33% 4x opt_expr (0 sec), 16% 3x opt_merge (0 sec), ...
