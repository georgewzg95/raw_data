
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v' to AST representation.
Warning: Encountered `full_case' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using the Verilog `full_case' attribute or the SystemVerilog `unique' or `unique0' keywords is recommended!
Warning: Encountered `parallel_case' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using the Verilog `parallel_case' attribute or the SystemVerilog `unique' or `priority' keywords is recommended!
Generating RTLIL representation for module `\bgm'.
Generating RTLIL representation for module `\delay5'.
Generating RTLIL representation for module `\fpu_mul'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:719.1-720.22 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\except'.
Generating RTLIL representation for module `\pre_norm_fmul'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1144.1-1150.11 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\mul_r2'.
Generating RTLIL representation for module `\post_norm'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1529.2-1535.10 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1537.2-1543.10 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\pri_encoder'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1687.1-1787.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\b_right_shifter'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1803.1-1857.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\b_left_shifter'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1874.1-1928.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\b_left_shifter_new'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1944.1-2005.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\fpu_add'.
Generating RTLIL representation for module `\pre_norm'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2462.1-2492.11 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2517.1-2531.11 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2570.1-2584.11 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\b_right_shifter_new'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2602.1-2634.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\add_sub27'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: add_sub27           
root of   0 design levels: b_right_shifter_new 
root of   1 design levels: pre_norm            
root of   2 design levels: fpu_add             
root of   0 design levels: b_left_shifter_new  
root of   0 design levels: b_left_shifter      
root of   0 design levels: b_right_shifter     
root of   0 design levels: pri_encoder         
root of   1 design levels: post_norm           
root of   0 design levels: mul_r2              
root of   0 design levels: pre_norm_fmul       
root of   0 design levels: except              
root of   2 design levels: fpu_mul             
root of   0 design levels: delay5              
root of   3 design levels: bgm                 
Automatically selected bgm as design top module.

2.2. Analyzing design hierarchy..
Top module:  \bgm
Used module:     \fpu_add
Used module:         \post_norm
Used module:             \b_left_shifter_new
Used module:             \b_left_shifter
Used module:             \b_right_shifter
Used module:             \pri_encoder
Used module:         \add_sub27
Used module:         \pre_norm
Used module:             \b_right_shifter_new
Used module:         \except
Used module:     \fpu_mul
Used module:         \mul_r2
Used module:         \pre_norm_fmul
Used module:     \delay5

2.3. Analyzing design hierarchy..
Top module:  \bgm
Used module:     \fpu_add
Used module:         \post_norm
Used module:             \b_left_shifter_new
Used module:             \b_left_shifter
Used module:             \b_right_shifter
Used module:             \pri_encoder
Used module:         \add_sub27
Used module:         \pre_norm
Used module:             \b_right_shifter_new
Used module:         \except
Used module:     \fpu_mul
Used module:         \mul_r2
Used module:         \pre_norm_fmul
Used module:     \delay5
Removed 0 unused modules.
Mapping positional arguments of cell bgm.delay_Fn_delay5 (delay5).
Mapping positional arguments of cell bgm.delay_Fn (delay5).
Mapping positional arguments of cell bgm.delay_a5 (delay5).
Mapping positional arguments of cell bgm.fifo_3 (delay5).
Mapping positional arguments of cell bgm.fifo_2 (delay5).
Mapping positional arguments of cell bgm.fifo_1 (delay5).
Mapping positional arguments of cell bgm.delay_u6 (delay5).
Mapping positional arguments of cell bgm.delay_u5 (delay5).
Mapping positional arguments of cell bgm.delay_u4 (delay5).
Mapping positional arguments of cell bgm.delay_u3 (delay5).
Mapping positional arguments of cell bgm.delay_u2 (delay5).
Mapping positional arguments of cell bgm.delay_u1 (delay5).
Warning: Resizing cell port fpu_add.u0.opb from 32 bits to 31 bits.
Warning: Resizing cell port fpu_add.u0.opa from 32 bits to 31 bits.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2602$1297 in module b_right_shifter_new.
Removed 1 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2570$1295 in module pre_norm.
Removed 1 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2517$1258 in module pre_norm.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1944$1052 in module b_left_shifter_new.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1874$1003 in module b_left_shifter.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1803$954 in module b_right_shifter.
Marked 49 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1687$904 in module pri_encoder.
Removed 1 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1537$655 in module post_norm.
Removed 1 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1529$654 in module post_norm.
Removed 1 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1144$331 in module pre_norm_fmul.
Removed a total of 5 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 135 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\b_right_shifter_new.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2602$1297'.
     1/1: $1\shift_out[26:0]
Creating decoders for process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2586$1296'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2570$1295'.
     1/1: $1\add_d[0:0]
Creating decoders for process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2561$1291'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2556$1286'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2553$1284'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2546$1265'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2543$1264'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2540$1263'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2537$1262'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2533$1261'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2517$1258'.
     1/1: $1\sign_d[0:0]
Creating decoders for process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2510$1257'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2507$1256'.
Creating decoders for process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2462$1222'.
     1/1: $1\sticky[0:0]
Creating decoders for process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2428$1209'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2323$1195'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2319$1194'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2316$1190'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2313$1189'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2308$1170'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2305$1165'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2299$1164'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2296$1163'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2291$1158'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2285$1153'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2278$1142'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2272$1136'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2263$1130'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2260$1129'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2222$1125'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2217$1124'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2214$1123'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2207$1122'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2203$1121'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2184$1120'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2168$1119'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2116$1117'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2113$1116'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2110$1115'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2107$1114'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2104$1113'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2101$1112'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2098$1111'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2095$1110'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2086$1109'.
Creating decoders for process `\b_left_shifter_new.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1944$1052'.
     1/1: $1\shift_out[55:0]
Creating decoders for process `\b_left_shifter.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1874$1003'.
     1/1: $1\shift_out[47:0]
Creating decoders for process `\b_right_shifter.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1803$954'.
     1/1: $1\shift_out[47:0]
Creating decoders for process `\pri_encoder.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1687$904'.
     1/49: $49\fi_ldz_r0[5:0]
     2/49: $48\fi_ldz_r0[5:0]
     3/49: $47\fi_ldz_r0[5:0]
     4/49: $46\fi_ldz_r0[5:0]
     5/49: $45\fi_ldz_r0[5:0]
     6/49: $44\fi_ldz_r0[5:0]
     7/49: $43\fi_ldz_r0[5:0]
     8/49: $42\fi_ldz_r0[5:0]
     9/49: $41\fi_ldz_r0[5:0]
    10/49: $40\fi_ldz_r0[5:0]
    11/49: $39\fi_ldz_r0[5:0]
    12/49: $38\fi_ldz_r0[5:0]
    13/49: $37\fi_ldz_r0[5:0]
    14/49: $36\fi_ldz_r0[5:0]
    15/49: $35\fi_ldz_r0[5:0]
    16/49: $34\fi_ldz_r0[5:0]
    17/49: $33\fi_ldz_r0[5:0]
    18/49: $32\fi_ldz_r0[5:0]
    19/49: $31\fi_ldz_r0[5:0]
    20/49: $30\fi_ldz_r0[5:0]
    21/49: $29\fi_ldz_r0[5:0]
    22/49: $28\fi_ldz_r0[5:0]
    23/49: $27\fi_ldz_r0[5:0]
    24/49: $26\fi_ldz_r0[5:0]
    25/49: $25\fi_ldz_r0[5:0]
    26/49: $24\fi_ldz_r0[5:0]
    27/49: $23\fi_ldz_r0[5:0]
    28/49: $22\fi_ldz_r0[5:0]
    29/49: $21\fi_ldz_r0[5:0]
    30/49: $20\fi_ldz_r0[5:0]
    31/49: $19\fi_ldz_r0[5:0]
    32/49: $18\fi_ldz_r0[5:0]
    33/49: $17\fi_ldz_r0[5:0]
    34/49: $16\fi_ldz_r0[5:0]
    35/49: $15\fi_ldz_r0[5:0]
    36/49: $14\fi_ldz_r0[5:0]
    37/49: $13\fi_ldz_r0[5:0]
    38/49: $12\fi_ldz_r0[5:0]
    39/49: $11\fi_ldz_r0[5:0]
    40/49: $10\fi_ldz_r0[5:0]
    41/49: $9\fi_ldz_r0[5:0]
    42/49: $8\fi_ldz_r0[5:0]
    43/49: $7\fi_ldz_r0[5:0]
    44/49: $6\fi_ldz_r0[5:0]
    45/49: $5\fi_ldz_r0[5:0]
    46/49: $4\fi_ldz_r0[5:0]
    47/49: $3\fi_ldz_r0[5:0]
    48/49: $2\fi_ldz_r0[5:0]
    49/49: $1\fi_ldz_r0[5:0]
Creating decoders for process `\post_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1537$655'.
     1/1: $1\fract_out_rnd[22:0]
Creating decoders for process `\post_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1529$654'.
     1/1: $1\exp_out_rnd[7:0]
Creating decoders for process `\mul_r2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1176$337'.
Creating decoders for process `\mul_r2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1173$335'.
Creating decoders for process `\pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1155$333'.
Creating decoders for process `\pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1152$332'.
Creating decoders for process `\pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1144$331'.
     1/1: $1\sign_d[0:0]
Creating decoders for process `\pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1134$326'.
Creating decoders for process `\pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1131$325'.
Creating decoders for process `\pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1123$300'.
Creating decoders for process `\pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1114$278'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1033$251'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1030$250'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1027$248'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1024$246'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1021$243'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1018$240'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1015$237'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1012$234'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1009$232'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1006$230'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1003$226'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1000$222'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:997$218'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:994$214'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:991$210'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:988$206'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:985$202'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:982$201'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:979$197'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:976$196'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:973$193'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:970$190'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:967$188'.
Creating decoders for process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:964$186'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:906$185'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:901$179'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:898$175'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:895$174'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:880$144'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:871$124'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:867$123'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:864$122'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:827$104'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:824$103'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:818$95'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:807$67'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:798$47'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:781$25'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:730$20'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:725$19'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:722$18'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:719$17'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:715$16'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:712$15'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:685$14'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:682$13'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:679$12'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:676$11'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:618$10'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:615$9'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:612$8'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:609$7'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:606$6'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:603$5'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:600$4'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:597$3'.
Creating decoders for process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:593$2'.
Creating decoders for process `\delay5.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:440$1'.

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
Latch inferred for signal `\b_right_shifter_new.\shift_out' from process `\b_right_shifter_new.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2602$1297': $auto$proc_dlatch.cc:427:proc_dlatch$5429
No latch inferred for signal `\pre_norm.\add_d' from process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2570$1295'.
No latch inferred for signal `\pre_norm.\sign_d' from process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2517$1258'.
No latch inferred for signal `\pre_norm.\sticky' from process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2462$1222'.
Latch inferred for signal `\b_left_shifter_new.\shift_out' from process `\b_left_shifter_new.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1944$1052': $auto$proc_dlatch.cc:427:proc_dlatch$5776
Latch inferred for signal `\b_left_shifter.\shift_out' from process `\b_left_shifter.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1874$1003': $auto$proc_dlatch.cc:427:proc_dlatch$6075
Latch inferred for signal `\b_right_shifter.\shift_out' from process `\b_right_shifter.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1803$954': $auto$proc_dlatch.cc:427:proc_dlatch$6374
Latch inferred for signal `\pri_encoder.\fi_ldz_r0' from process `\pri_encoder.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1687$904': $auto$proc_dlatch.cc:427:proc_dlatch$16177
No latch inferred for signal `\post_norm.\fract_out_rnd' from process `\post_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1537$655'.
No latch inferred for signal `\post_norm.\exp_out_rnd' from process `\post_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1529$654'.
No latch inferred for signal `\pre_norm_fmul.\sign_d' from process `\pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1144$331'.
No latch inferred for signal `\fpu_mul.\fract_denorm' from process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:719$17'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\pre_norm.\fasu_op' using process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2586$1296'.
  created $dff cell `$procdff$16178' with positive edge clock.
Creating register for signal `\pre_norm.\nan_sign' using process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2561$1291'.
  created $dff cell `$procdff$16179' with positive edge clock.
Creating register for signal `\pre_norm.\fracta_eq_fractb' using process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2556$1286'.
  created $dff cell `$procdff$16180' with positive edge clock.
Creating register for signal `\pre_norm.\fracta_lt_fractb' using process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2553$1284'.
  created $dff cell `$procdff$16181' with positive edge clock.
Creating register for signal `\pre_norm.\result_zero_sign' using process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2546$1265'.
  created $dff cell `$procdff$16182' with positive edge clock.
Creating register for signal `\pre_norm.\add_r' using process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2543$1264'.
  created $dff cell `$procdff$16183' with positive edge clock.
Creating register for signal `\pre_norm.\signb_r' using process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2540$1263'.
  created $dff cell `$procdff$16184' with positive edge clock.
Creating register for signal `\pre_norm.\signa_r' using process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2537$1262'.
  created $dff cell `$procdff$16185' with positive edge clock.
Creating register for signal `\pre_norm.\sign' using process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2533$1261'.
  created $dff cell `$procdff$16186' with positive edge clock.
Creating register for signal `\pre_norm.\fractb_out' using process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2510$1257'.
  created $dff cell `$procdff$16187' with positive edge clock.
Creating register for signal `\pre_norm.\fracta_out' using process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2507$1256'.
  created $dff cell `$procdff$16188' with positive edge clock.
Creating register for signal `\pre_norm.\exp_dn_out' using process `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2428$1209'.
  created $dff cell `$procdff$16189' with positive edge clock.
Creating register for signal `\fpu_add.\out' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2323$1195'.
  created $dff cell `$procdff$16190' with positive edge clock.
Creating register for signal `\fpu_add.\zero' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2323$1195'.
  created $dff cell `$procdff$16191' with positive edge clock.
Creating register for signal `\fpu_add.\div_by_zero' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2323$1195'.
  created $dff cell `$procdff$16192' with positive edge clock.
Creating register for signal `\fpu_add.\overflow' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2323$1195'.
  created $dff cell `$procdff$16193' with positive edge clock.
Creating register for signal `\fpu_add.\underflow' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2323$1195'.
  created $dff cell `$procdff$16194' with positive edge clock.
Creating register for signal `\fpu_add.\inf' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2323$1195'.
  created $dff cell `$procdff$16195' with positive edge clock.
Creating register for signal `\fpu_add.\snan' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2323$1195'.
  created $dff cell `$procdff$16196' with positive edge clock.
Creating register for signal `\fpu_add.\qnan' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2323$1195'.
  created $dff cell `$procdff$16197' with positive edge clock.
Creating register for signal `\fpu_add.\ine' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2323$1195'.
  created $dff cell `$procdff$16198' with positive edge clock.
Creating register for signal `\fpu_add.\div_by_zero_o1' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2319$1194'.
  created $dff cell `$procdff$16199' with positive edge clock.
Creating register for signal `\fpu_add.\opa_nan_r' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2316$1190'.
  created $dff cell `$procdff$16200' with positive edge clock.
Creating register for signal `\fpu_add.\zero_o1' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2313$1189'.
  created $dff cell `$procdff$16201' with positive edge clock.
Creating register for signal `\fpu_add.\inf_o1' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2308$1170'.
  created $dff cell `$procdff$16202' with positive edge clock.
Creating register for signal `\fpu_add.\qnan_o1' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2305$1165'.
  created $dff cell `$procdff$16203' with positive edge clock.
Creating register for signal `\fpu_add.\snan_o1' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2299$1164'.
  created $dff cell `$procdff$16204' with positive edge clock.
Creating register for signal `\fpu_add.\underflow_o1' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2296$1163'.
  created $dff cell `$procdff$16205' with positive edge clock.
Creating register for signal `\fpu_add.\overflow_o1' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2291$1158'.
  created $dff cell `$procdff$16206' with positive edge clock.
Creating register for signal `\fpu_add.\ine_o1' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2285$1153'.
  created $dff cell `$procdff$16207' with positive edge clock.
Creating register for signal `\fpu_add.\out_o1 [31]' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2278$1142'.
  created $dff cell `$procdff$16208' with positive edge clock.
Creating register for signal `\fpu_add.\out_o1 [30:0]' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2272$1136'.
  created $dff cell `$procdff$16209' with positive edge clock.
Creating register for signal `\fpu_add.\fasu_op_r2' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2263$1130'.
  created $dff cell `$procdff$16210' with positive edge clock.
Creating register for signal `\fpu_add.\fasu_op_r1' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2260$1129'.
  created $dff cell `$procdff$16211' with positive edge clock.
Creating register for signal `\fpu_add.\sign' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2222$1125'.
  created $dff cell `$procdff$16212' with positive edge clock.
Creating register for signal `\fpu_add.\opas_r2' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2217$1124'.
  created $dff cell `$procdff$16213' with positive edge clock.
Creating register for signal `\fpu_add.\opas_r1' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2214$1123'.
  created $dff cell `$procdff$16214' with positive edge clock.
Creating register for signal `\fpu_add.\opa_r1' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2207$1122'.
  created $dff cell `$procdff$16215' with positive edge clock.
Creating register for signal `\fpu_add.\exp_r' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2203$1121'.
  created $dff cell `$procdff$16216' with positive edge clock.
Creating register for signal `\fpu_add.\fract_out_q' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2184$1120'.
  created $dff cell `$procdff$16217' with positive edge clock.
Creating register for signal `\fpu_add.\sign_fasu_r' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2168$1119'.
  created $dff cell `$procdff$16218' with positive edge clock.
Creating register for signal `\fpu_add.\fpu_op_r3' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2116$1117'.
  created $dff cell `$procdff$16219' with positive edge clock.
Creating register for signal `\fpu_add.\fpu_op_r2' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2113$1116'.
  created $dff cell `$procdff$16220' with positive edge clock.
Creating register for signal `\fpu_add.\fpu_op_r1' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2110$1115'.
  created $dff cell `$procdff$16221' with positive edge clock.
Creating register for signal `\fpu_add.\rmode_r3' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2107$1114'.
  created $dff cell `$procdff$16222' with positive edge clock.
Creating register for signal `\fpu_add.\rmode_r2' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2104$1113'.
  created $dff cell `$procdff$16223' with positive edge clock.
Creating register for signal `\fpu_add.\rmode_r1' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2101$1112'.
  created $dff cell `$procdff$16224' with positive edge clock.
Creating register for signal `\fpu_add.\opb_r' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2098$1111'.
  created $dff cell `$procdff$16225' with positive edge clock.
Creating register for signal `\fpu_add.\opa_r' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2095$1110'.
  created $dff cell `$procdff$16226' with positive edge clock.
Creating register for signal `\fpu_add.\fpu_op' using process `\fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2086$1109'.
  created $dff cell `$procdff$16227' with positive edge clock.
Creating register for signal `\mul_r2.\prod' using process `\mul_r2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1176$337'.
  created $dff cell `$procdff$16228' with positive edge clock.
Creating register for signal `\mul_r2.\prod1' using process `\mul_r2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1173$335'.
  created $dff cell `$procdff$16229' with positive edge clock.
Creating register for signal `\pre_norm_fmul.\sign_exe' using process `\pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1155$333'.
  created $dff cell `$procdff$16230' with positive edge clock.
Creating register for signal `\pre_norm_fmul.\sign' using process `\pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1152$332'.
  created $dff cell `$procdff$16231' with positive edge clock.
Creating register for signal `\pre_norm_fmul.\inf' using process `\pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1134$326'.
  created $dff cell `$procdff$16232' with positive edge clock.
Creating register for signal `\pre_norm_fmul.\underflow' using process `\pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1131$325'.
  created $dff cell `$procdff$16233' with positive edge clock.
Creating register for signal `\pre_norm_fmul.\exp_ovf' using process `\pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1123$300'.
  created $dff cell `$procdff$16234' with positive edge clock.
Creating register for signal `\pre_norm_fmul.\exp_out' using process `\pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1114$278'.
  created $dff cell `$procdff$16235' with positive edge clock.
Creating register for signal `\except.\opb_dn' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1033$251'.
  created $dff cell `$procdff$16236' with positive edge clock.
Creating register for signal `\except.\opa_dn' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1030$250'.
  created $dff cell `$procdff$16237' with positive edge clock.
Creating register for signal `\except.\opb_00' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1027$248'.
  created $dff cell `$procdff$16238' with positive edge clock.
Creating register for signal `\except.\opa_00' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1024$246'.
  created $dff cell `$procdff$16239' with positive edge clock.
Creating register for signal `\except.\fractb_00' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1021$243'.
  created $dff cell `$procdff$16240' with positive edge clock.
Creating register for signal `\except.\fracta_00' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1018$240'.
  created $dff cell `$procdff$16241' with positive edge clock.
Creating register for signal `\except.\expb_00' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1015$237'.
  created $dff cell `$procdff$16242' with positive edge clock.
Creating register for signal `\except.\expa_00' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1012$234'.
  created $dff cell `$procdff$16243' with positive edge clock.
Creating register for signal `\except.\opb_inf' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1009$232'.
  created $dff cell `$procdff$16244' with positive edge clock.
Creating register for signal `\except.\opa_inf' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1006$230'.
  created $dff cell `$procdff$16245' with positive edge clock.
Creating register for signal `\except.\opb_nan' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1003$226'.
  created $dff cell `$procdff$16246' with positive edge clock.
Creating register for signal `\except.\opa_nan' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1000$222'.
  created $dff cell `$procdff$16247' with positive edge clock.
Creating register for signal `\except.\snan' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:997$218'.
  created $dff cell `$procdff$16248' with positive edge clock.
Creating register for signal `\except.\qnan' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:994$214'.
  created $dff cell `$procdff$16249' with positive edge clock.
Creating register for signal `\except.\inf' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:991$210'.
  created $dff cell `$procdff$16250' with positive edge clock.
Creating register for signal `\except.\ind' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:988$206'.
  created $dff cell `$procdff$16251' with positive edge clock.
Creating register for signal `\except.\snan_r_b' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:985$202'.
  created $dff cell `$procdff$16252' with positive edge clock.
Creating register for signal `\except.\qnan_r_b' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:982$201'.
  created $dff cell `$procdff$16253' with positive edge clock.
Creating register for signal `\except.\snan_r_a' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:979$197'.
  created $dff cell `$procdff$16254' with positive edge clock.
Creating register for signal `\except.\qnan_r_a' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:976$196'.
  created $dff cell `$procdff$16255' with positive edge clock.
Creating register for signal `\except.\infb_f_r' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:973$193'.
  created $dff cell `$procdff$16256' with positive edge clock.
Creating register for signal `\except.\infa_f_r' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:970$190'.
  created $dff cell `$procdff$16257' with positive edge clock.
Creating register for signal `\except.\expb_ff' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:967$188'.
  created $dff cell `$procdff$16258' with positive edge clock.
Creating register for signal `\except.\expa_ff' using process `\except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:964$186'.
  created $dff cell `$procdff$16259' with positive edge clock.
Creating register for signal `\fpu_mul.\out' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:906$185'.
  created $dff cell `$procdff$16260' with positive edge clock.
Creating register for signal `\fpu_mul.\zero' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:906$185'.
  created $dff cell `$procdff$16261' with positive edge clock.
Creating register for signal `\fpu_mul.\div_by_zero' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:906$185'.
  created $dff cell `$procdff$16262' with positive edge clock.
Creating register for signal `\fpu_mul.\overflow' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:906$185'.
  created $dff cell `$procdff$16263' with positive edge clock.
Creating register for signal `\fpu_mul.\underflow' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:906$185'.
  created $dff cell `$procdff$16264' with positive edge clock.
Creating register for signal `\fpu_mul.\inf' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:906$185'.
  created $dff cell `$procdff$16265' with positive edge clock.
Creating register for signal `\fpu_mul.\snan' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:906$185'.
  created $dff cell `$procdff$16266' with positive edge clock.
Creating register for signal `\fpu_mul.\qnan' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:906$185'.
  created $dff cell `$procdff$16267' with positive edge clock.
Creating register for signal `\fpu_mul.\ine' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:906$185'.
  created $dff cell `$procdff$16268' with positive edge clock.
Creating register for signal `\fpu_mul.\div_by_zero_o1' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:901$179'.
  created $dff cell `$procdff$16269' with positive edge clock.
Creating register for signal `\fpu_mul.\opa_nan_r' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:898$175'.
  created $dff cell `$procdff$16270' with positive edge clock.
Creating register for signal `\fpu_mul.\zero_o1' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:895$174'.
  created $dff cell `$procdff$16271' with positive edge clock.
Creating register for signal `\fpu_mul.\inf_o1' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:880$144'.
  created $dff cell `$procdff$16272' with positive edge clock.
Creating register for signal `\fpu_mul.\qnan_o1' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:871$124'.
  created $dff cell `$procdff$16273' with positive edge clock.
Creating register for signal `\fpu_mul.\snan_o1' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:867$123'.
  created $dff cell `$procdff$16274' with positive edge clock.
Creating register for signal `\fpu_mul.\underflow_o1' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:864$122'.
  created $dff cell `$procdff$16275' with positive edge clock.
Creating register for signal `\fpu_mul.\underflow_fmul_r' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:827$104'.
  created $dff cell `$procdff$16276' with positive edge clock.
Creating register for signal `\fpu_mul.\overflow_o1' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:824$103'.
  created $dff cell `$procdff$16277' with positive edge clock.
Creating register for signal `\fpu_mul.\ine_o1' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:818$95'.
  created $dff cell `$procdff$16278' with positive edge clock.
Creating register for signal `\fpu_mul.\out_o1 [31]' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:807$67'.
  created $dff cell `$procdff$16279' with positive edge clock.
Creating register for signal `\fpu_mul.\out_o1 [30:0]' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:798$47'.
  created $dff cell `$procdff$16280' with positive edge clock.
Creating register for signal `\fpu_mul.\inf_mul2' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:781$25'.
  created $dff cell `$procdff$16281' with positive edge clock.
Creating register for signal `\fpu_mul.\sign' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:730$20'.
  created $dff cell `$procdff$16282' with positive edge clock.
Creating register for signal `\fpu_mul.\opas_r2' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:725$19'.
  created $dff cell `$procdff$16283' with positive edge clock.
Creating register for signal `\fpu_mul.\opas_r1' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:722$18'.
  created $dff cell `$procdff$16284' with positive edge clock.
Creating register for signal `\fpu_mul.\opa_r1' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:715$16'.
  created $dff cell `$procdff$16285' with positive edge clock.
Creating register for signal `\fpu_mul.\exp_r' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:712$15'.
  created $dff cell `$procdff$16286' with positive edge clock.
Creating register for signal `\fpu_mul.\exp_ovf_r' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:685$14'.
  created $dff cell `$procdff$16287' with positive edge clock.
Creating register for signal `\fpu_mul.\inf_mul_r' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:682$13'.
  created $dff cell `$procdff$16288' with positive edge clock.
Creating register for signal `\fpu_mul.\sign_exe_r' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:679$12'.
  created $dff cell `$procdff$16289' with positive edge clock.
Creating register for signal `\fpu_mul.\sign_mul_r' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:676$11'.
  created $dff cell `$procdff$16290' with positive edge clock.
Creating register for signal `\fpu_mul.\fpu_op_r3' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:618$10'.
  created $dff cell `$procdff$16291' with positive edge clock.
Creating register for signal `\fpu_mul.\fpu_op_r2' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:615$9'.
  created $dff cell `$procdff$16292' with positive edge clock.
Creating register for signal `\fpu_mul.\fpu_op_r1' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:612$8'.
  created $dff cell `$procdff$16293' with positive edge clock.
Creating register for signal `\fpu_mul.\rmode_r3' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:609$7'.
  created $dff cell `$procdff$16294' with positive edge clock.
Creating register for signal `\fpu_mul.\rmode_r2' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:606$6'.
  created $dff cell `$procdff$16295' with positive edge clock.
Creating register for signal `\fpu_mul.\rmode_r1' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:603$5'.
  created $dff cell `$procdff$16296' with positive edge clock.
Creating register for signal `\fpu_mul.\opb_r' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:600$4'.
  created $dff cell `$procdff$16297' with positive edge clock.
Creating register for signal `\fpu_mul.\opa_r' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:597$3'.
  created $dff cell `$procdff$16298' with positive edge clock.
Creating register for signal `\fpu_mul.\fpu_op' using process `\fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:593$2'.
  created $dff cell `$procdff$16299' with positive edge clock.
Creating register for signal `\delay5.\d5_reg1' using process `\delay5.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:440$1'.
  created $dff cell `$procdff$16300' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\b_right_shifter_new.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2602$1297'.
Removing empty process `b_right_shifter_new.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2602$1297'.
Removing empty process `pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2586$1296'.
Found and cleaned up 1 empty switch in `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2570$1295'.
Removing empty process `pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2570$1295'.
Removing empty process `pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2561$1291'.
Removing empty process `pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2556$1286'.
Removing empty process `pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2553$1284'.
Removing empty process `pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2546$1265'.
Removing empty process `pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2543$1264'.
Removing empty process `pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2540$1263'.
Removing empty process `pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2537$1262'.
Removing empty process `pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2533$1261'.
Found and cleaned up 1 empty switch in `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2517$1258'.
Removing empty process `pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2517$1258'.
Removing empty process `pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2510$1257'.
Removing empty process `pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2507$1256'.
Found and cleaned up 1 empty switch in `\pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2462$1222'.
Removing empty process `pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2462$1222'.
Removing empty process `pre_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2428$1209'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2323$1195'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2319$1194'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2316$1190'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2313$1189'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2308$1170'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2305$1165'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2299$1164'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2296$1163'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2291$1158'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2285$1153'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2278$1142'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2272$1136'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2263$1130'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2260$1129'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2222$1125'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2217$1124'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2214$1123'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2207$1122'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2203$1121'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2184$1120'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2168$1119'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2116$1117'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2113$1116'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2110$1115'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2107$1114'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2104$1113'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2101$1112'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2098$1111'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2095$1110'.
Removing empty process `fpu_add.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2086$1109'.
Found and cleaned up 1 empty switch in `\b_left_shifter_new.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1944$1052'.
Removing empty process `b_left_shifter_new.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1944$1052'.
Found and cleaned up 1 empty switch in `\b_left_shifter.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1874$1003'.
Removing empty process `b_left_shifter.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1874$1003'.
Found and cleaned up 1 empty switch in `\b_right_shifter.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1803$954'.
Removing empty process `b_right_shifter.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1803$954'.
Found and cleaned up 49 empty switches in `\pri_encoder.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1687$904'.
Removing empty process `pri_encoder.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1687$904'.
Found and cleaned up 1 empty switch in `\post_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1537$655'.
Removing empty process `post_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1537$655'.
Found and cleaned up 1 empty switch in `\post_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1529$654'.
Removing empty process `post_norm.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1529$654'.
Removing empty process `mul_r2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1176$337'.
Removing empty process `mul_r2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1173$335'.
Removing empty process `pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1155$333'.
Removing empty process `pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1152$332'.
Found and cleaned up 1 empty switch in `\pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1144$331'.
Removing empty process `pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1144$331'.
Removing empty process `pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1134$326'.
Removing empty process `pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1131$325'.
Removing empty process `pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1123$300'.
Removing empty process `pre_norm_fmul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1114$278'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1033$251'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1030$250'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1027$248'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1024$246'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1021$243'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1018$240'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1015$237'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1012$234'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1009$232'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1006$230'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1003$226'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1000$222'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:997$218'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:994$214'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:991$210'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:988$206'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:985$202'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:982$201'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:979$197'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:976$196'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:973$193'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:970$190'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:967$188'.
Removing empty process `except.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:964$186'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:906$185'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:901$179'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:898$175'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:895$174'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:880$144'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:871$124'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:867$123'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:864$122'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:827$104'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:824$103'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:818$95'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:807$67'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:798$47'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:781$25'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:730$20'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:725$19'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:722$18'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:719$17'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:715$16'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:712$15'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:685$14'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:682$13'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:679$12'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:676$11'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:618$10'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:615$9'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:612$8'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:609$7'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:606$6'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:603$5'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:600$4'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:597$3'.
Removing empty process `fpu_mul.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:593$2'.
Removing empty process `delay5.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:440$1'.
Cleaned up 59 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_right_shifter_new.
<suppressed ~59 debug messages>
Optimizing module pre_norm.
<suppressed ~8 debug messages>
Optimizing module fpu_add.
Optimizing module b_left_shifter_new.
<suppressed ~117 debug messages>
Optimizing module b_left_shifter.
<suppressed ~101 debug messages>
Optimizing module b_right_shifter.
<suppressed ~101 debug messages>
Optimizing module pri_encoder.
<suppressed ~3632 debug messages>
Optimizing module post_norm.
<suppressed ~16 debug messages>
Optimizing module mul_r2.
Optimizing module pre_norm_fmul.
<suppressed ~9 debug messages>
Optimizing module except.
Optimizing module fpu_mul.
<suppressed ~5 debug messages>
Optimizing module delay5.
Optimizing module bgm.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_right_shifter_new.
Optimizing module pre_norm.
Optimizing module fpu_add.
Optimizing module b_left_shifter_new.
Optimizing module b_left_shifter.
Optimizing module b_right_shifter.
Optimizing module pri_encoder.
Optimizing module post_norm.
Optimizing module mul_r2.
Optimizing module pre_norm_fmul.
Optimizing module except.
Optimizing module fpu_mul.
Optimizing module delay5.
Optimizing module bgm.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\add_sub27'.
Finding identical cells in module `\b_right_shifter_new'.
Finding identical cells in module `\pre_norm'.
<suppressed ~36 debug messages>
Finding identical cells in module `\fpu_add'.
<suppressed ~51 debug messages>
Finding identical cells in module `\b_left_shifter_new'.
Finding identical cells in module `\b_left_shifter'.
Finding identical cells in module `\b_right_shifter'.
Finding identical cells in module `\pri_encoder'.
<suppressed ~3528 debug messages>
Finding identical cells in module `\post_norm'.
<suppressed ~396 debug messages>
Finding identical cells in module `\mul_r2'.
Finding identical cells in module `\pre_norm_fmul'.
<suppressed ~12 debug messages>
Finding identical cells in module `\except'.
<suppressed ~42 debug messages>
Finding identical cells in module `\fpu_mul'.
<suppressed ~108 debug messages>
Finding identical cells in module `\delay5'.
Finding identical cells in module `\bgm'.
Removed a total of 1391 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \add_sub27..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pri_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \post_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1439$505: \opas -> 1'1
      Replacing known input bits on port A of cell $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1438$501: \opas -> 1'0
  Analyzing evaluation results.
Running muxtree optimizer on module \mul_r2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \pre_norm_fmul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \except..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:805$66.
    dead port 2/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:805$66.
Running muxtree optimizer on module \delay5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \bgm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 2 multiplexer ports.
<suppressed ~57 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \add_sub27.
  Optimizing cells in module \b_right_shifter_new.
    New ctrl vector for $pmux cell $procmux$1329: { $procmux$1356_CMP $procmux$1355_CMP $procmux$1354_CMP $procmux$1353_CMP $procmux$1352_CMP $procmux$1351_CMP $procmux$1350_CMP $procmux$1349_CMP $procmux$1348_CMP $procmux$1347_CMP $procmux$1346_CMP $procmux$1345_CMP $procmux$1344_CMP $procmux$1343_CMP $procmux$1342_CMP $procmux$1341_CMP $procmux$1340_CMP $procmux$1339_CMP $procmux$1338_CMP $procmux$1337_CMP $procmux$1336_CMP $procmux$1335_CMP $procmux$1334_CMP $procmux$1333_CMP $procmux$1332_CMP $procmux$1331_CMP $procmux$1330_CMP }
  Optimizing cells in module \b_right_shifter_new.
  Optimizing cells in module \pre_norm.
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2469$1226: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [1:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2470$1227: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [2:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2471$1228: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [3:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2472$1229: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [4:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2473$1230: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [5:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2474$1231: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [6:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2475$1232: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [7:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2476$1233: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [8:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2477$1234: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [9:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2478$1235: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [10:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2479$1236: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [11:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2480$1237: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [12:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2481$1238: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [13:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2482$1239: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [14:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2483$1240: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [15:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2484$1241: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [16:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2485$1242: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [17:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2486$1243: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [18:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2487$1244: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [19:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2488$1245: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [20:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2489$1246: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y [21:0]
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2490$1247: $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y
    New input vector for $reduce_or cell $reduce_or$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2491$1248: { $not$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2438$1218_Y $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:2436$1217_Y }
    New ctrl vector for $pmux cell $procmux$1377: { $auto$opt_reduce.cc:134:opt_mux$16302 $procmux$1401_CMP $procmux$1400_CMP $procmux$1399_CMP $procmux$1398_CMP $procmux$1397_CMP $procmux$1396_CMP $procmux$1395_CMP $procmux$1394_CMP $procmux$1393_CMP $procmux$1392_CMP $procmux$1391_CMP $procmux$1390_CMP $procmux$1389_CMP $procmux$1388_CMP $procmux$1387_CMP $procmux$1386_CMP $procmux$1385_CMP $procmux$1384_CMP $procmux$1383_CMP $procmux$1382_CMP $procmux$1381_CMP $procmux$1380_CMP $procmux$1379_CMP $procmux$1378_CMP }
    New ctrl vector for $pmux cell $procmux$1367: { $auto$opt_reduce.cc:134:opt_mux$16310 $auto$opt_reduce.cc:134:opt_mux$16308 $auto$opt_reduce.cc:134:opt_mux$16306 $auto$opt_reduce.cc:134:opt_mux$16304 }
    New ctrl vector for $pmux cell $procmux$1358: { $auto$opt_reduce.cc:134:opt_mux$16314 $auto$opt_reduce.cc:134:opt_mux$16312 }
  Optimizing cells in module \pre_norm.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \b_left_shifter_new.
    New ctrl vector for $pmux cell $procmux$1407: { $procmux$1463_CMP $procmux$1462_CMP $procmux$1461_CMP $procmux$1460_CMP $procmux$1459_CMP $procmux$1458_CMP $procmux$1457_CMP $procmux$1456_CMP $procmux$1455_CMP $procmux$1454_CMP $procmux$1453_CMP $procmux$1452_CMP $procmux$1451_CMP $procmux$1450_CMP $procmux$1449_CMP $procmux$1448_CMP $procmux$1447_CMP $procmux$1446_CMP $procmux$1445_CMP $procmux$1444_CMP $procmux$1443_CMP $procmux$1442_CMP $procmux$1441_CMP $procmux$1440_CMP $procmux$1439_CMP $procmux$1438_CMP $procmux$1437_CMP $procmux$1436_CMP $procmux$1435_CMP $procmux$1434_CMP $procmux$1433_CMP $procmux$1432_CMP $procmux$1431_CMP $procmux$1430_CMP $procmux$1429_CMP $procmux$1428_CMP $procmux$1427_CMP $procmux$1426_CMP $procmux$1425_CMP $procmux$1424_CMP $procmux$1423_CMP $procmux$1422_CMP $procmux$1421_CMP $procmux$1420_CMP $procmux$1419_CMP $procmux$1418_CMP $procmux$1417_CMP $procmux$1416_CMP $procmux$1415_CMP $procmux$1414_CMP $procmux$1413_CMP $procmux$1412_CMP $procmux$1411_CMP $procmux$1410_CMP $procmux$1409_CMP $procmux$1408_CMP }
  Optimizing cells in module \b_left_shifter_new.
  Optimizing cells in module \b_left_shifter.
    New ctrl vector for $pmux cell $procmux$1466: { $procmux$1514_CMP $procmux$1513_CMP $procmux$1512_CMP $procmux$1511_CMP $procmux$1510_CMP $procmux$1509_CMP $procmux$1508_CMP $procmux$1507_CMP $procmux$1506_CMP $procmux$1505_CMP $procmux$1504_CMP $procmux$1503_CMP $procmux$1502_CMP $procmux$1501_CMP $procmux$1500_CMP $procmux$1499_CMP $procmux$1498_CMP $procmux$1497_CMP $procmux$1496_CMP $procmux$1495_CMP $procmux$1494_CMP $procmux$1493_CMP $procmux$1492_CMP $procmux$1491_CMP $procmux$1490_CMP $procmux$1489_CMP $procmux$1488_CMP $procmux$1487_CMP $procmux$1486_CMP $procmux$1485_CMP $procmux$1484_CMP $procmux$1483_CMP $procmux$1482_CMP $procmux$1481_CMP $procmux$1480_CMP $procmux$1479_CMP $procmux$1478_CMP $procmux$1477_CMP $procmux$1476_CMP $procmux$1475_CMP $procmux$1474_CMP $procmux$1473_CMP $procmux$1472_CMP $procmux$1471_CMP $procmux$1470_CMP $procmux$1469_CMP $procmux$1468_CMP $procmux$1467_CMP }
  Optimizing cells in module \b_left_shifter.
  Optimizing cells in module \b_right_shifter.
    New ctrl vector for $pmux cell $procmux$1517: { $procmux$1565_CMP $procmux$1564_CMP $procmux$1563_CMP $procmux$1562_CMP $procmux$1561_CMP $procmux$1560_CMP $procmux$1559_CMP $procmux$1558_CMP $procmux$1557_CMP $procmux$1556_CMP $procmux$1555_CMP $procmux$1554_CMP $procmux$1553_CMP $procmux$1552_CMP $procmux$1551_CMP $procmux$1550_CMP $procmux$1549_CMP $procmux$1548_CMP $procmux$1547_CMP $procmux$1546_CMP $procmux$1545_CMP $procmux$1544_CMP $procmux$1543_CMP $procmux$1542_CMP $procmux$1541_CMP $procmux$1540_CMP $procmux$1539_CMP $procmux$1538_CMP $procmux$1537_CMP $procmux$1536_CMP $procmux$1535_CMP $procmux$1534_CMP $procmux$1533_CMP $procmux$1532_CMP $procmux$1531_CMP $procmux$1530_CMP $procmux$1529_CMP $procmux$1528_CMP $procmux$1527_CMP $procmux$1526_CMP $procmux$1525_CMP $procmux$1524_CMP $procmux$1523_CMP $procmux$1522_CMP $procmux$1521_CMP $procmux$1520_CMP $procmux$1519_CMP $procmux$1518_CMP }
  Optimizing cells in module \b_right_shifter.
  Optimizing cells in module \pri_encoder.
  Optimizing cells in module \post_norm.
    New ctrl vector for $pmux cell $procmux$5242: { $procmux$5246_CMP $procmux$5245_CMP $auto$opt_reduce.cc:134:opt_mux$16316 }
    New ctrl vector for $pmux cell $procmux$5247: { $procmux$5246_CMP $procmux$5245_CMP $auto$opt_reduce.cc:134:opt_mux$16318 }
    New ctrl vector for $mux cell $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1439$505: { }
    New ctrl vector for $mux cell $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1438$501: { }
    New ctrl vector for $mux cell $ternary$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/bgm.v:1438$502: { }
  Optimizing cells in module \post_norm.
  Optimizing cells in module \mul_r2.
  Optimizing cells in module \pre_norm_fmul.
    New ctrl vector for $pmux cell $procmux$5252: { $auto$opt_reduce.cc:134:opt_mux$16322 $auto$opt_reduce.cc:134:opt_mux$16320 }
  Optimizing cells in module \pre_norm_fmul.
  Optimizing cells in module \except.
  Optimizing cells in module \fpu_mul.
  Optimizing cells in module \delay5.
  Optimizing cells in module \bgm.
Performed a total of 36 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\add_sub27'.
Finding identical cells in module `\b_right_shifter_new'.
Finding identical cells in module `\pre_norm'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\b_left_shifter_new'.
Finding identical cells in module `\b_left_shifter'.
Finding identical cells in module `\b_right_shifter'.
Finding identical cells in module `\pri_encoder'.
Finding identical cells in module `\post_norm'.
<suppressed ~3 debug messages>
Finding identical cells in module `\mul_r2'.
Finding identical cells in module `\pre_norm_fmul'.
Finding identical cells in module `\except'.
Finding identical cells in module `\fpu_mul'.
Finding identical cells in module `\delay5'.
Finding identical cells in module `\bgm'.
Removed a total of 1 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$16189 ($dff) from module pre_norm (D = \exp_large, Q = \exp_dn_out, rval = 8'00000000).
Setting constant 0-bit at position 0 on $procdff$16224 ($dff) from module fpu_add.
Setting constant 0-bit at position 1 on $procdff$16224 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16227 ($dff) from module fpu_add.
Setting constant 0-bit at position 1 on $procdff$16227 ($dff) from module fpu_add.
Setting constant 0-bit at position 2 on $procdff$16227 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16199 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16296 ($dff) from module fpu_mul.
Setting constant 0-bit at position 1 on $procdff$16296 ($dff) from module fpu_mul.
Setting constant 0-bit at position 0 on $procdff$16299 ($dff) from module fpu_mul.
Setting constant 1-bit at position 1 on $procdff$16299 ($dff) from module fpu_mul.
Setting constant 0-bit at position 2 on $procdff$16299 ($dff) from module fpu_mul.

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \add_sub27..
Finding unused cells or wires in module \b_right_shifter_new..
Finding unused cells or wires in module \pre_norm..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \b_left_shifter_new..
Finding unused cells or wires in module \b_left_shifter..
Finding unused cells or wires in module \b_right_shifter..
Finding unused cells or wires in module \pri_encoder..
Finding unused cells or wires in module \post_norm..
Finding unused cells or wires in module \mul_r2..
Finding unused cells or wires in module \pre_norm_fmul..
Finding unused cells or wires in module \except..
Finding unused cells or wires in module \fpu_mul..
Finding unused cells or wires in module \delay5..
Finding unused cells or wires in module \bgm..
Removed 18 unused cells and 7060 unused wires.
<suppressed ~66 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_left_shifter.
Optimizing module b_left_shifter_new.
Optimizing module b_right_shifter.
Optimizing module b_right_shifter_new.
Optimizing module bgm.
Optimizing module delay5.
Optimizing module except.
Optimizing module fpu_add.
Optimizing module fpu_mul.
Optimizing module mul_r2.
Optimizing module post_norm.
Optimizing module pre_norm.
Optimizing module pre_norm_fmul.
Optimizing module pri_encoder.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \add_sub27..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \bgm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \delay5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \except..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mul_r2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \post_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm_fmul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pri_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \add_sub27.
  Optimizing cells in module \b_left_shifter.
  Optimizing cells in module \b_left_shifter_new.
  Optimizing cells in module \b_right_shifter.
  Optimizing cells in module \b_right_shifter_new.
  Optimizing cells in module \bgm.
  Optimizing cells in module \delay5.
  Optimizing cells in module \except.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_mul.
  Optimizing cells in module \mul_r2.
  Optimizing cells in module \post_norm.
  Optimizing cells in module \pre_norm.
  Optimizing cells in module \pre_norm_fmul.
  Optimizing cells in module \pri_encoder.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\add_sub27'.
Finding identical cells in module `\b_left_shifter'.
Finding identical cells in module `\b_left_shifter_new'.
Finding identical cells in module `\b_right_shifter'.
Finding identical cells in module `\b_right_shifter_new'.
Finding identical cells in module `\bgm'.
Finding identical cells in module `\delay5'.
Finding identical cells in module `\except'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\fpu_mul'.
Finding identical cells in module `\mul_r2'.
Finding identical cells in module `\post_norm'.
Finding identical cells in module `\pre_norm'.
Finding identical cells in module `\pre_norm_fmul'.
Finding identical cells in module `\pri_encoder'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$16223 ($dff) from module fpu_add.
Setting constant 0-bit at position 1 on $procdff$16223 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16221 ($dff) from module fpu_add.
Setting constant 0-bit at position 1 on $procdff$16221 ($dff) from module fpu_add.
Setting constant 0-bit at position 2 on $procdff$16221 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16192 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16295 ($dff) from module fpu_mul.
Setting constant 0-bit at position 1 on $procdff$16295 ($dff) from module fpu_mul.
Setting constant 0-bit at position 0 on $procdff$16293 ($dff) from module fpu_mul.
Setting constant 1-bit at position 1 on $procdff$16293 ($dff) from module fpu_mul.
Setting constant 0-bit at position 2 on $procdff$16293 ($dff) from module fpu_mul.

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \add_sub27..
Finding unused cells or wires in module \b_left_shifter..
Finding unused cells or wires in module \b_left_shifter_new..
Finding unused cells or wires in module \b_right_shifter..
Finding unused cells or wires in module \b_right_shifter_new..
Finding unused cells or wires in module \bgm..
Finding unused cells or wires in module \delay5..
Finding unused cells or wires in module \except..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_mul..
Finding unused cells or wires in module \mul_r2..
Finding unused cells or wires in module \post_norm..
Finding unused cells or wires in module \pre_norm..
Finding unused cells or wires in module \pre_norm_fmul..
Finding unused cells or wires in module \pri_encoder..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_left_shifter.
Optimizing module b_left_shifter_new.
Optimizing module b_right_shifter.
Optimizing module b_right_shifter_new.
Optimizing module bgm.
Optimizing module delay5.
Optimizing module except.
Optimizing module fpu_add.
<suppressed ~3 debug messages>
Optimizing module fpu_mul.
<suppressed ~2 debug messages>
Optimizing module mul_r2.
Optimizing module post_norm.
Optimizing module pre_norm.
Optimizing module pre_norm_fmul.
Optimizing module pri_encoder.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \add_sub27..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \bgm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \delay5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \except..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mul_r2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \post_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm_fmul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pri_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~54 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \add_sub27.
  Optimizing cells in module \b_left_shifter.
  Optimizing cells in module \b_left_shifter_new.
  Optimizing cells in module \b_right_shifter.
  Optimizing cells in module \b_right_shifter_new.
  Optimizing cells in module \bgm.
  Optimizing cells in module \delay5.
  Optimizing cells in module \except.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_mul.
  Optimizing cells in module \mul_r2.
  Optimizing cells in module \post_norm.
  Optimizing cells in module \pre_norm.
  Optimizing cells in module \pre_norm_fmul.
  Optimizing cells in module \pri_encoder.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\add_sub27'.
Finding identical cells in module `\b_left_shifter'.
Finding identical cells in module `\b_left_shifter_new'.
Finding identical cells in module `\b_right_shifter'.
Finding identical cells in module `\b_right_shifter_new'.
Finding identical cells in module `\bgm'.
Finding identical cells in module `\delay5'.
Finding identical cells in module `\except'.
Finding identical cells in module `\fpu_add'.
<suppressed ~3 debug messages>
Finding identical cells in module `\fpu_mul'.
<suppressed ~3 debug messages>
Finding identical cells in module `\mul_r2'.
Finding identical cells in module `\post_norm'.
Finding identical cells in module `\pre_norm'.
Finding identical cells in module `\pre_norm_fmul'.
Finding identical cells in module `\pri_encoder'.
Removed a total of 2 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$16222 ($dff) from module fpu_add.
Setting constant 0-bit at position 1 on $procdff$16222 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16220 ($dff) from module fpu_add.
Setting constant 0-bit at position 1 on $procdff$16220 ($dff) from module fpu_add.
Setting constant 0-bit at position 2 on $procdff$16220 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16294 ($dff) from module fpu_mul.
Setting constant 0-bit at position 1 on $procdff$16294 ($dff) from module fpu_mul.
Setting constant 0-bit at position 0 on $procdff$16292 ($dff) from module fpu_mul.
Setting constant 1-bit at position 1 on $procdff$16292 ($dff) from module fpu_mul.
Setting constant 0-bit at position 2 on $procdff$16292 ($dff) from module fpu_mul.

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \add_sub27..
Finding unused cells or wires in module \b_left_shifter..
Finding unused cells or wires in module \b_left_shifter_new..
Finding unused cells or wires in module \b_right_shifter..
Finding unused cells or wires in module \b_right_shifter_new..
Finding unused cells or wires in module \bgm..
Finding unused cells or wires in module \delay5..
Finding unused cells or wires in module \except..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_mul..
Finding unused cells or wires in module \mul_r2..
Finding unused cells or wires in module \post_norm..
Finding unused cells or wires in module \pre_norm..
Finding unused cells or wires in module \pre_norm_fmul..
Finding unused cells or wires in module \pri_encoder..
Removed 2 unused cells and 6 unused wires.
<suppressed ~4 debug messages>

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_left_shifter.
Optimizing module b_left_shifter_new.
Optimizing module b_right_shifter.
Optimizing module b_right_shifter_new.
Optimizing module bgm.
Optimizing module delay5.
Optimizing module except.
Optimizing module fpu_add.
Optimizing module fpu_mul.
<suppressed ~10 debug messages>
Optimizing module mul_r2.
Optimizing module post_norm.
Optimizing module pre_norm.
Optimizing module pre_norm_fmul.
Optimizing module pri_encoder.

4.23. Rerunning OPT passes. (Maybe there is more to do..)

4.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \add_sub27..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \bgm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \delay5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \except..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mul_r2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \post_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm_fmul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pri_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~54 debug messages>

4.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \add_sub27.
  Optimizing cells in module \b_left_shifter.
  Optimizing cells in module \b_left_shifter_new.
  Optimizing cells in module \b_right_shifter.
  Optimizing cells in module \b_right_shifter_new.
  Optimizing cells in module \bgm.
  Optimizing cells in module \delay5.
  Optimizing cells in module \except.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_mul.
  Optimizing cells in module \mul_r2.
  Optimizing cells in module \post_norm.
  Optimizing cells in module \pre_norm.
  Optimizing cells in module \pre_norm_fmul.
  Optimizing cells in module \pri_encoder.
Performed a total of 0 changes.

4.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\add_sub27'.
Finding identical cells in module `\b_left_shifter'.
Finding identical cells in module `\b_left_shifter_new'.
Finding identical cells in module `\b_right_shifter'.
Finding identical cells in module `\b_right_shifter_new'.
Finding identical cells in module `\bgm'.
Finding identical cells in module `\delay5'.
Finding identical cells in module `\except'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\fpu_mul'.
<suppressed ~6 debug messages>
Finding identical cells in module `\mul_r2'.
Finding identical cells in module `\post_norm'.
Finding identical cells in module `\pre_norm'.
Finding identical cells in module `\pre_norm_fmul'.
Finding identical cells in module `\pri_encoder'.
Removed a total of 2 cells.

4.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$16219 ($dff) from module fpu_add.
Setting constant 0-bit at position 1 on $procdff$16219 ($dff) from module fpu_add.
Setting constant 0-bit at position 2 on $procdff$16219 ($dff) from module fpu_add.
Setting constant 0-bit at position 0 on $procdff$16291 ($dff) from module fpu_mul.
Setting constant 1-bit at position 1 on $procdff$16291 ($dff) from module fpu_mul.
Setting constant 0-bit at position 2 on $procdff$16291 ($dff) from module fpu_mul.
Setting constant 0-bit at position 0 on $procdff$16270 ($dff) from module fpu_mul.

4.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \add_sub27..
Finding unused cells or wires in module \b_left_shifter..
Finding unused cells or wires in module \b_left_shifter_new..
Finding unused cells or wires in module \b_right_shifter..
Finding unused cells or wires in module \b_right_shifter_new..
Finding unused cells or wires in module \bgm..
Finding unused cells or wires in module \delay5..
Finding unused cells or wires in module \except..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_mul..
Finding unused cells or wires in module \mul_r2..
Finding unused cells or wires in module \post_norm..
Finding unused cells or wires in module \pre_norm..
Finding unused cells or wires in module \pre_norm_fmul..
Finding unused cells or wires in module \pri_encoder..
Removed 1 unused cells and 12 unused wires.
<suppressed ~2 debug messages>

4.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_left_shifter.
Optimizing module b_left_shifter_new.
Optimizing module b_right_shifter.
Optimizing module b_right_shifter_new.
Optimizing module bgm.
Optimizing module delay5.
Optimizing module except.
Optimizing module fpu_add.
<suppressed ~2 debug messages>
Optimizing module fpu_mul.
<suppressed ~18 debug messages>
Optimizing module mul_r2.
Optimizing module post_norm.
Optimizing module pre_norm.
Optimizing module pre_norm_fmul.
Optimizing module pri_encoder.

4.30. Rerunning OPT passes. (Maybe there is more to do..)

4.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \add_sub27..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \bgm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \delay5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \except..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mul_r2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \post_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm_fmul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pri_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~54 debug messages>

4.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \add_sub27.
  Optimizing cells in module \b_left_shifter.
  Optimizing cells in module \b_left_shifter_new.
  Optimizing cells in module \b_right_shifter.
  Optimizing cells in module \b_right_shifter_new.
  Optimizing cells in module \bgm.
  Optimizing cells in module \delay5.
  Optimizing cells in module \except.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_mul.
  Optimizing cells in module \mul_r2.
  Optimizing cells in module \post_norm.
  Optimizing cells in module \pre_norm.
  Optimizing cells in module \pre_norm_fmul.
  Optimizing cells in module \pri_encoder.
Performed a total of 0 changes.

4.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\add_sub27'.
Finding identical cells in module `\b_left_shifter'.
Finding identical cells in module `\b_left_shifter_new'.
Finding identical cells in module `\b_right_shifter'.
Finding identical cells in module `\b_right_shifter_new'.
Finding identical cells in module `\bgm'.
Finding identical cells in module `\delay5'.
Finding identical cells in module `\except'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\fpu_mul'.
Finding identical cells in module `\mul_r2'.
Finding identical cells in module `\post_norm'.
Finding identical cells in module `\pre_norm'.
Finding identical cells in module `\pre_norm_fmul'.
Finding identical cells in module `\pri_encoder'.
Removed a total of 0 cells.

4.34. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$16269 ($dff) from module fpu_mul.

4.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \add_sub27..
Finding unused cells or wires in module \b_left_shifter..
Finding unused cells or wires in module \b_left_shifter_new..
Finding unused cells or wires in module \b_right_shifter..
Finding unused cells or wires in module \b_right_shifter_new..
Finding unused cells or wires in module \bgm..
Finding unused cells or wires in module \delay5..
Finding unused cells or wires in module \except..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_mul..
Finding unused cells or wires in module \mul_r2..
Finding unused cells or wires in module \post_norm..
Finding unused cells or wires in module \pre_norm..
Finding unused cells or wires in module \pre_norm_fmul..
Finding unused cells or wires in module \pri_encoder..
Removed 3 unused cells and 20 unused wires.
<suppressed ~5 debug messages>

4.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_left_shifter.
Optimizing module b_left_shifter_new.
Optimizing module b_right_shifter.
Optimizing module b_right_shifter_new.
Optimizing module bgm.
Optimizing module delay5.
Optimizing module except.
Optimizing module fpu_add.
Optimizing module fpu_mul.
Optimizing module mul_r2.
Optimizing module post_norm.
Optimizing module pre_norm.
Optimizing module pre_norm_fmul.
Optimizing module pri_encoder.

4.37. Rerunning OPT passes. (Maybe there is more to do..)

4.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \add_sub27..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \bgm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \delay5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \except..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mul_r2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \post_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm_fmul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pri_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~54 debug messages>

4.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \add_sub27.
  Optimizing cells in module \b_left_shifter.
  Optimizing cells in module \b_left_shifter_new.
  Optimizing cells in module \b_right_shifter.
  Optimizing cells in module \b_right_shifter_new.
  Optimizing cells in module \bgm.
  Optimizing cells in module \delay5.
  Optimizing cells in module \except.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_mul.
  Optimizing cells in module \mul_r2.
  Optimizing cells in module \post_norm.
  Optimizing cells in module \pre_norm.
  Optimizing cells in module \pre_norm_fmul.
  Optimizing cells in module \pri_encoder.
Performed a total of 0 changes.

4.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\add_sub27'.
Finding identical cells in module `\b_left_shifter'.
Finding identical cells in module `\b_left_shifter_new'.
Finding identical cells in module `\b_right_shifter'.
Finding identical cells in module `\b_right_shifter_new'.
Finding identical cells in module `\bgm'.
Finding identical cells in module `\delay5'.
Finding identical cells in module `\except'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\fpu_mul'.
Finding identical cells in module `\mul_r2'.
Finding identical cells in module `\post_norm'.
Finding identical cells in module `\pre_norm'.
Finding identical cells in module `\pre_norm_fmul'.
Finding identical cells in module `\pri_encoder'.
Removed a total of 0 cells.

4.41. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$16262 ($dff) from module fpu_mul.

4.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \add_sub27..
Finding unused cells or wires in module \b_left_shifter..
Finding unused cells or wires in module \b_left_shifter_new..
Finding unused cells or wires in module \b_right_shifter..
Finding unused cells or wires in module \b_right_shifter_new..
Finding unused cells or wires in module \bgm..
Finding unused cells or wires in module \delay5..
Finding unused cells or wires in module \except..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_mul..
Finding unused cells or wires in module \mul_r2..
Finding unused cells or wires in module \post_norm..
Finding unused cells or wires in module \pre_norm..
Finding unused cells or wires in module \pre_norm_fmul..
Finding unused cells or wires in module \pri_encoder..

4.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_left_shifter.
Optimizing module b_left_shifter_new.
Optimizing module b_right_shifter.
Optimizing module b_right_shifter_new.
Optimizing module bgm.
Optimizing module delay5.
Optimizing module except.
Optimizing module fpu_add.
Optimizing module fpu_mul.
Optimizing module mul_r2.
Optimizing module post_norm.
Optimizing module pre_norm.
Optimizing module pre_norm_fmul.
Optimizing module pri_encoder.

4.44. Rerunning OPT passes. (Maybe there is more to do..)

4.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \add_sub27..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_left_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \b_right_shifter_new..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \bgm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \delay5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \except..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mul_r2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \post_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pre_norm_fmul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \pri_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~54 debug messages>

4.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \add_sub27.
  Optimizing cells in module \b_left_shifter.
  Optimizing cells in module \b_left_shifter_new.
  Optimizing cells in module \b_right_shifter.
  Optimizing cells in module \b_right_shifter_new.
  Optimizing cells in module \bgm.
  Optimizing cells in module \delay5.
  Optimizing cells in module \except.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_mul.
  Optimizing cells in module \mul_r2.
  Optimizing cells in module \post_norm.
  Optimizing cells in module \pre_norm.
  Optimizing cells in module \pre_norm_fmul.
  Optimizing cells in module \pri_encoder.
Performed a total of 0 changes.

4.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\add_sub27'.
Finding identical cells in module `\b_left_shifter'.
Finding identical cells in module `\b_left_shifter_new'.
Finding identical cells in module `\b_right_shifter'.
Finding identical cells in module `\b_right_shifter_new'.
Finding identical cells in module `\bgm'.
Finding identical cells in module `\delay5'.
Finding identical cells in module `\except'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\fpu_mul'.
Finding identical cells in module `\mul_r2'.
Finding identical cells in module `\post_norm'.
Finding identical cells in module `\pre_norm'.
Finding identical cells in module `\pre_norm_fmul'.
Finding identical cells in module `\pri_encoder'.
Removed a total of 0 cells.

4.48. Executing OPT_DFF pass (perform DFF optimizations).

4.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \add_sub27..
Finding unused cells or wires in module \b_left_shifter..
Finding unused cells or wires in module \b_left_shifter_new..
Finding unused cells or wires in module \b_right_shifter..
Finding unused cells or wires in module \b_right_shifter_new..
Finding unused cells or wires in module \bgm..
Finding unused cells or wires in module \delay5..
Finding unused cells or wires in module \except..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_mul..
Finding unused cells or wires in module \mul_r2..
Finding unused cells or wires in module \post_norm..
Finding unused cells or wires in module \pre_norm..
Finding unused cells or wires in module \pre_norm_fmul..
Finding unused cells or wires in module \pri_encoder..

4.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module add_sub27.
Optimizing module b_left_shifter.
Optimizing module b_left_shifter_new.
Optimizing module b_right_shifter.
Optimizing module b_right_shifter_new.
Optimizing module bgm.
Optimizing module delay5.
Optimizing module except.
Optimizing module fpu_add.
Optimizing module fpu_mul.
Optimizing module mul_r2.
Optimizing module post_norm.
Optimizing module pre_norm.
Optimizing module pre_norm_fmul.
Optimizing module pri_encoder.

4.51. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== add_sub27 ===

   Number of wires:                  7
   Number of wire bits:            139
   Number of public wires:           5
   Number of public wire bits:      83
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $add                           28
     $mux                           28
     $sub                           28

=== b_left_shifter ===

   Number of wires:                150
   Number of wire bits:            296
   Number of public wires:           3
   Number of public wire bits:     102
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                148
     $and                           48
     $dlatch                        48
     $eq                           288
     $logic_not                      6
     $not                           49
     $pmux                          48

=== b_left_shifter_new ===

   Number of wires:                174
   Number of wire bits:            344
   Number of public wires:           3
   Number of public wire bits:     118
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                172
     $and                           56
     $dlatch                        56
     $eq                           336
     $logic_not                      6
     $not                           57
     $pmux                          56

=== b_right_shifter ===

   Number of wires:                150
   Number of wire bits:            296
   Number of public wires:           3
   Number of public wire bits:     102
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                148
     $and                           48
     $dlatch                        48
     $eq                           288
     $logic_not                      6
     $not                           49
     $pmux                          48

=== b_right_shifter_new ===

   Number of wires:                 87
   Number of wire bits:            169
   Number of public wires:           3
   Number of public wire bits:      59
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 85
     $and                           27
     $dlatch                        27
     $eq                           135
     $logic_not                      5
     $not                           28
     $pmux                          27

=== bgm ===

   Number of wires:                 63
   Number of wire bits:           1474
   Number of public wires:          63
   Number of public wire bits:    1474
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 32

=== delay5 ===

   Number of wires:                  4
   Number of wire bits:             97
   Number of public wires:           4
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $dff                           32

=== except ===

   Number of wires:                 61
   Number of wire bits:            179
   Number of public wires:          31
   Number of public wire bits:     149
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 52
     $and                           13
     $dff                           22
     $logic_not                      6
     $or                             3
     $reduce_and                    16
     $reduce_or                    106

=== fpu_add ===

   Number of wires:                103
   Number of wire bits:            654
   Number of public wires:          78
   Number of public wire bits:     599
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 61
     $and                            8
     $dff                          183
     $logic_not                      7
     $mux                           64
     $or                             9
     $reduce_and                     8
     $reduce_or                     54

=== fpu_mul ===

   Number of wires:                151
   Number of wire bits:            696
   Number of public wires:          91
   Number of public wire bits:     606
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                105
     $and                           21
     $dff                          161
     $eq                             8
     $logic_not                     44
     $mux                           63
     $or                            29
     $reduce_and                     8
     $reduce_bool                   48
     $reduce_or                     54

=== mul_r2 ===

   Number of wires:                  6
   Number of wire bits:            193
   Number of public wires:           5
   Number of public wire bits:     145
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $dff                           96
     $mul                           48

=== post_norm ===

   Number of wires:                458
   Number of wire bits:           1475
   Number of public wires:         133
   Number of public wire bits:     995
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                435
     $add                           81
     $and                          169
     $eq                            34
     $gt                            55
     $logic_not                     38
     $lt                            66
     $mux                          628
     $ne                            32
     $or                            83
     $pmux                          31
     $reduce_and                    54
     $reduce_or                    197
     $sub                          118

=== pre_norm ===

   Number of wires:                150
   Number of wire bits:            580
   Number of public wires:          52
   Number of public wire bits:     482
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                135
     $and                           13
     $dff                           63
     $eq                           190
     $gt                            43
     $logic_not                     14
     $lt                            23
     $mux                          173
     $not                            1
     $or                             6
     $pmux                           3
     $reduce_or                    335
     $sdff                           8
     $sub                           16

=== pre_norm_fmul ===

   Number of wires:                 82
   Number of wire bits:            349
   Number of public wires:          34
   Number of public wire bits:     227
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 75
     $add                           34
     $and                           15
     $dff                           16
     $eq                            17
     $gt                             9
     $logic_not                     10
     $lt                             8
     $mux                           85
     $or                             8
     $pmux                           1
     $reduce_or                    128
     $sub                           34

=== pri_encoder ===

   Number of wires:               1371
   Number of wire bits:           1663
   Number of public wires:           3
   Number of public wire bits:      60
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1369
     $and                         1224
     $dlatch                         6
     $eq                          1175
     $logic_not                     48
     $mux                          282
     $not                           49

=== design hierarchy ===

   bgm                               1
     delay5                          0
     fpu_add                         0
       add_sub27                     0
       except                        0
       post_norm                     0
         b_left_shifter              0
         b_left_shifter_new          0
         b_right_shifter             0
         pri_encoder                 0
       pre_norm                      0
         b_right_shifter_new         0
     fpu_mul                         0
       except                        0
       mul_r2                        0
       post_norm                     0
         b_left_shifter              0
         b_left_shifter_new          0
         b_right_shifter             0
         pri_encoder                 0
       pre_norm_fmul                 0

   Number of wires:                 63
   Number of wire bits:           1474
   Number of public wires:          63
   Number of public wire bits:    1474
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 32

Warnings: 4 unique messages, 4 total
End of script. Logfile hash: fc15aead00, CPU: user 2.77s system 0.01s, MEM: 45.33 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 32% 9x opt_expr (0 sec), 15% 7x opt_clean (0 sec), ...
