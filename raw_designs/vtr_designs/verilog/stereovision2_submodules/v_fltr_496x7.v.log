
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v' to AST representation.
Generating RTLIL representation for module `\v_fltr_496x7'.
Generating RTLIL representation for module `\fifo496'.
Generating RTLIL representation for module `\fltr_compute_f1'.
Generating RTLIL representation for module `\fltr_compute_f2'.
Generating RTLIL representation for module `\fltr_compute_f3'.
Generating RTLIL representation for module `\fltr_compute_h1'.
Generating RTLIL representation for module `\fltr_compute_h2'.
Generating RTLIL representation for module `\fltr_compute_h3'.
Generating RTLIL representation for module `\fltr_compute_h4'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: fltr_compute_h4     
root of   0 design levels: fltr_compute_h3     
root of   0 design levels: fltr_compute_h2     
root of   0 design levels: fltr_compute_h1     
root of   0 design levels: fltr_compute_f3     
root of   0 design levels: fltr_compute_f2     
root of   0 design levels: fltr_compute_f1     
root of   0 design levels: fifo496             
root of   1 design levels: v_fltr_496x7        
Automatically selected v_fltr_496x7 as design top module.

2.2. Analyzing design hierarchy..
Top module:  \v_fltr_496x7
Used module:     \fltr_compute_h4
Used module:     \fltr_compute_h3
Used module:     \fltr_compute_h2
Used module:     \fltr_compute_h1
Used module:     \fltr_compute_f3
Used module:     \fltr_compute_f2
Used module:     \fltr_compute_f1
Used module:     \fifo496

2.3. Analyzing design hierarchy..
Top module:  \v_fltr_496x7
Used module:     \fltr_compute_h4
Used module:     \fltr_compute_h3
Used module:     \fltr_compute_h2
Used module:     \fltr_compute_h1
Used module:     \fltr_compute_f3
Used module:     \fltr_compute_f2
Used module:     \fltr_compute_f1
Used module:     \fifo496
Removed 0 unused modules.
Mapping positional arguments of cell v_fltr_496x7.inst_fltr_compute_h4 (fltr_compute_h4).
Mapping positional arguments of cell v_fltr_496x7.inst_fltr_compute_h3 (fltr_compute_h3).
Mapping positional arguments of cell v_fltr_496x7.inst_fltr_compute_h2 (fltr_compute_h2).
Mapping positional arguments of cell v_fltr_496x7.inst_fltr_compute_h1 (fltr_compute_h1).
Mapping positional arguments of cell v_fltr_496x7.inst_fltr_compute_f3 (fltr_compute_f3).
Mapping positional arguments of cell v_fltr_496x7.inst_fltr_compute_f2 (fltr_compute_f2).
Mapping positional arguments of cell v_fltr_496x7.inst_fltr_compute_f1 (fltr_compute_f1).
Mapping positional arguments of cell v_fltr_496x7.fifo6 (fifo496).
Mapping positional arguments of cell v_fltr_496x7.fifo5 (fifo496).
Mapping positional arguments of cell v_fltr_496x7.fifo4 (fifo496).
Mapping positional arguments of cell v_fltr_496x7.fifo3 (fifo496).
Mapping positional arguments of cell v_fltr_496x7.fifo2 (fifo496).
Mapping positional arguments of cell v_fltr_496x7.fifo1 (fifo496).
Mapping positional arguments of cell v_fltr_496x7.fifo0 (fifo496).

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 63 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\fltr_compute_h4.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:373$87'.
Creating decoders for process `\fltr_compute_h3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:341$73'.
Creating decoders for process `\fltr_compute_h2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:309$59'.
Creating decoders for process `\fltr_compute_h1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:277$45'.
Creating decoders for process `\fltr_compute_f3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:245$31'.
Creating decoders for process `\fltr_compute_f2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:214$17'.
Creating decoders for process `\fltr_compute_f1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:183$3'.
Creating decoders for process `\fifo496.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:157$1'.
     1/3: $0\buff2[7:0]
     2/3: $0\buff1[7:0]
     3/3: $0\dout[7:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\fltr_compute_h4.\dout' using process `\fltr_compute_h4.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:373$87'.
  created $dff cell `$procdff$107' with positive edge clock.
Creating register for signal `\fltr_compute_h4.\q1' using process `\fltr_compute_h4.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:373$87'.
  created $dff cell `$procdff$108' with positive edge clock.
Creating register for signal `\fltr_compute_h4.\q2' using process `\fltr_compute_h4.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:373$87'.
  created $dff cell `$procdff$109' with positive edge clock.
Creating register for signal `\fltr_compute_h4.\q3' using process `\fltr_compute_h4.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:373$87'.
  created $dff cell `$procdff$110' with positive edge clock.
Creating register for signal `\fltr_compute_h4.\q4' using process `\fltr_compute_h4.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:373$87'.
  created $dff cell `$procdff$111' with positive edge clock.
Creating register for signal `\fltr_compute_h4.\q5' using process `\fltr_compute_h4.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:373$87'.
  created $dff cell `$procdff$112' with positive edge clock.
Creating register for signal `\fltr_compute_h4.\q6' using process `\fltr_compute_h4.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:373$87'.
  created $dff cell `$procdff$113' with positive edge clock.
Creating register for signal `\fltr_compute_h4.\q7' using process `\fltr_compute_h4.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:373$87'.
  created $dff cell `$procdff$114' with positive edge clock.
Creating register for signal `\fltr_compute_h4.\d_out_tmp' using process `\fltr_compute_h4.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:373$87'.
  created $dff cell `$procdff$115' with positive edge clock.
Creating register for signal `\fltr_compute_h3.\dout' using process `\fltr_compute_h3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:341$73'.
  created $dff cell `$procdff$116' with positive edge clock.
Creating register for signal `\fltr_compute_h3.\q1' using process `\fltr_compute_h3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:341$73'.
  created $dff cell `$procdff$117' with positive edge clock.
Creating register for signal `\fltr_compute_h3.\q2' using process `\fltr_compute_h3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:341$73'.
  created $dff cell `$procdff$118' with positive edge clock.
Creating register for signal `\fltr_compute_h3.\q3' using process `\fltr_compute_h3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:341$73'.
  created $dff cell `$procdff$119' with positive edge clock.
Creating register for signal `\fltr_compute_h3.\q4' using process `\fltr_compute_h3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:341$73'.
  created $dff cell `$procdff$120' with positive edge clock.
Creating register for signal `\fltr_compute_h3.\q5' using process `\fltr_compute_h3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:341$73'.
  created $dff cell `$procdff$121' with positive edge clock.
Creating register for signal `\fltr_compute_h3.\q6' using process `\fltr_compute_h3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:341$73'.
  created $dff cell `$procdff$122' with positive edge clock.
Creating register for signal `\fltr_compute_h3.\q7' using process `\fltr_compute_h3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:341$73'.
  created $dff cell `$procdff$123' with positive edge clock.
Creating register for signal `\fltr_compute_h3.\d_out_tmp' using process `\fltr_compute_h3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:341$73'.
  created $dff cell `$procdff$124' with positive edge clock.
Creating register for signal `\fltr_compute_h2.\dout' using process `\fltr_compute_h2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:309$59'.
  created $dff cell `$procdff$125' with positive edge clock.
Creating register for signal `\fltr_compute_h2.\q1' using process `\fltr_compute_h2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:309$59'.
  created $dff cell `$procdff$126' with positive edge clock.
Creating register for signal `\fltr_compute_h2.\q2' using process `\fltr_compute_h2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:309$59'.
  created $dff cell `$procdff$127' with positive edge clock.
Creating register for signal `\fltr_compute_h2.\q3' using process `\fltr_compute_h2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:309$59'.
  created $dff cell `$procdff$128' with positive edge clock.
Creating register for signal `\fltr_compute_h2.\q4' using process `\fltr_compute_h2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:309$59'.
  created $dff cell `$procdff$129' with positive edge clock.
Creating register for signal `\fltr_compute_h2.\q5' using process `\fltr_compute_h2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:309$59'.
  created $dff cell `$procdff$130' with positive edge clock.
Creating register for signal `\fltr_compute_h2.\q6' using process `\fltr_compute_h2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:309$59'.
  created $dff cell `$procdff$131' with positive edge clock.
Creating register for signal `\fltr_compute_h2.\q7' using process `\fltr_compute_h2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:309$59'.
  created $dff cell `$procdff$132' with positive edge clock.
Creating register for signal `\fltr_compute_h2.\d_out_tmp' using process `\fltr_compute_h2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:309$59'.
  created $dff cell `$procdff$133' with positive edge clock.
Creating register for signal `\fltr_compute_h1.\dout' using process `\fltr_compute_h1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:277$45'.
  created $dff cell `$procdff$134' with positive edge clock.
Creating register for signal `\fltr_compute_h1.\q1' using process `\fltr_compute_h1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:277$45'.
  created $dff cell `$procdff$135' with positive edge clock.
Creating register for signal `\fltr_compute_h1.\q2' using process `\fltr_compute_h1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:277$45'.
  created $dff cell `$procdff$136' with positive edge clock.
Creating register for signal `\fltr_compute_h1.\q3' using process `\fltr_compute_h1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:277$45'.
  created $dff cell `$procdff$137' with positive edge clock.
Creating register for signal `\fltr_compute_h1.\q4' using process `\fltr_compute_h1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:277$45'.
  created $dff cell `$procdff$138' with positive edge clock.
Creating register for signal `\fltr_compute_h1.\q5' using process `\fltr_compute_h1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:277$45'.
  created $dff cell `$procdff$139' with positive edge clock.
Creating register for signal `\fltr_compute_h1.\q6' using process `\fltr_compute_h1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:277$45'.
  created $dff cell `$procdff$140' with positive edge clock.
Creating register for signal `\fltr_compute_h1.\q7' using process `\fltr_compute_h1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:277$45'.
  created $dff cell `$procdff$141' with positive edge clock.
Creating register for signal `\fltr_compute_h1.\d_out_tmp' using process `\fltr_compute_h1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:277$45'.
  created $dff cell `$procdff$142' with positive edge clock.
Creating register for signal `\fltr_compute_f3.\dout' using process `\fltr_compute_f3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:245$31'.
  created $dff cell `$procdff$143' with positive edge clock.
Creating register for signal `\fltr_compute_f3.\q1' using process `\fltr_compute_f3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:245$31'.
  created $dff cell `$procdff$144' with positive edge clock.
Creating register for signal `\fltr_compute_f3.\q2' using process `\fltr_compute_f3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:245$31'.
  created $dff cell `$procdff$145' with positive edge clock.
Creating register for signal `\fltr_compute_f3.\q3' using process `\fltr_compute_f3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:245$31'.
  created $dff cell `$procdff$146' with positive edge clock.
Creating register for signal `\fltr_compute_f3.\q4' using process `\fltr_compute_f3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:245$31'.
  created $dff cell `$procdff$147' with positive edge clock.
Creating register for signal `\fltr_compute_f3.\q5' using process `\fltr_compute_f3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:245$31'.
  created $dff cell `$procdff$148' with positive edge clock.
Creating register for signal `\fltr_compute_f3.\q6' using process `\fltr_compute_f3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:245$31'.
  created $dff cell `$procdff$149' with positive edge clock.
Creating register for signal `\fltr_compute_f3.\q7' using process `\fltr_compute_f3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:245$31'.
  created $dff cell `$procdff$150' with positive edge clock.
Creating register for signal `\fltr_compute_f3.\d_out_tmp' using process `\fltr_compute_f3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:245$31'.
  created $dff cell `$procdff$151' with positive edge clock.
Creating register for signal `\fltr_compute_f2.\dout' using process `\fltr_compute_f2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:214$17'.
  created $dff cell `$procdff$152' with positive edge clock.
Creating register for signal `\fltr_compute_f2.\q1' using process `\fltr_compute_f2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:214$17'.
  created $dff cell `$procdff$153' with positive edge clock.
Creating register for signal `\fltr_compute_f2.\q2' using process `\fltr_compute_f2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:214$17'.
  created $dff cell `$procdff$154' with positive edge clock.
Creating register for signal `\fltr_compute_f2.\q3' using process `\fltr_compute_f2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:214$17'.
  created $dff cell `$procdff$155' with positive edge clock.
Creating register for signal `\fltr_compute_f2.\q4' using process `\fltr_compute_f2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:214$17'.
  created $dff cell `$procdff$156' with positive edge clock.
Creating register for signal `\fltr_compute_f2.\q5' using process `\fltr_compute_f2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:214$17'.
  created $dff cell `$procdff$157' with positive edge clock.
Creating register for signal `\fltr_compute_f2.\q6' using process `\fltr_compute_f2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:214$17'.
  created $dff cell `$procdff$158' with positive edge clock.
Creating register for signal `\fltr_compute_f2.\q7' using process `\fltr_compute_f2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:214$17'.
  created $dff cell `$procdff$159' with positive edge clock.
Creating register for signal `\fltr_compute_f2.\d_out_tmp' using process `\fltr_compute_f2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:214$17'.
  created $dff cell `$procdff$160' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\dout' using process `\fltr_compute_f1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:183$3'.
  created $dff cell `$procdff$161' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\q1' using process `\fltr_compute_f1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:183$3'.
  created $dff cell `$procdff$162' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\q2' using process `\fltr_compute_f1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:183$3'.
  created $dff cell `$procdff$163' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\q3' using process `\fltr_compute_f1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:183$3'.
  created $dff cell `$procdff$164' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\q4' using process `\fltr_compute_f1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:183$3'.
  created $dff cell `$procdff$165' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\q5' using process `\fltr_compute_f1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:183$3'.
  created $dff cell `$procdff$166' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\q6' using process `\fltr_compute_f1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:183$3'.
  created $dff cell `$procdff$167' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\q7' using process `\fltr_compute_f1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:183$3'.
  created $dff cell `$procdff$168' with positive edge clock.
Creating register for signal `\fltr_compute_f1.\d_out_tmp' using process `\fltr_compute_f1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:183$3'.
  created $dff cell `$procdff$169' with positive edge clock.
Creating register for signal `\fifo496.\dout' using process `\fifo496.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:157$1'.
  created $dff cell `$procdff$170' with positive edge clock.
Creating register for signal `\fifo496.\buff1' using process `\fifo496.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:157$1'.
  created $dff cell `$procdff$171' with positive edge clock.
Creating register for signal `\fifo496.\buff2' using process `\fifo496.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:157$1'.
  created $dff cell `$procdff$172' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `fltr_compute_h4.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:373$87'.
Removing empty process `fltr_compute_h3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:341$73'.
Removing empty process `fltr_compute_h2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:309$59'.
Removing empty process `fltr_compute_h1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:277$45'.
Removing empty process `fltr_compute_f3.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:245$31'.
Removing empty process `fltr_compute_f2.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:214$17'.
Removing empty process `fltr_compute_f1.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:183$3'.
Found and cleaned up 1 empty switch in `\fifo496.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:157$1'.
Removing empty process `fifo496.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision2_submodules/v_fltr_496x7.v:157$1'.
Cleaned up 1 empty switch.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module fltr_compute_h4.
Optimizing module fltr_compute_h3.
Optimizing module fltr_compute_h2.
Optimizing module fltr_compute_h1.
Optimizing module fltr_compute_f3.
Optimizing module fltr_compute_f2.
Optimizing module fltr_compute_f1.
Optimizing module fifo496.
<suppressed ~1 debug messages>
Optimizing module v_fltr_496x7.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module fltr_compute_h4.
<suppressed ~5 debug messages>
Optimizing module fltr_compute_h3.
<suppressed ~3 debug messages>
Optimizing module fltr_compute_h2.
<suppressed ~6 debug messages>
Optimizing module fltr_compute_h1.
<suppressed ~1 debug messages>
Optimizing module fltr_compute_f3.
<suppressed ~5 debug messages>
Optimizing module fltr_compute_f2.
<suppressed ~6 debug messages>
Optimizing module fltr_compute_f1.
Optimizing module fifo496.
Optimizing module v_fltr_496x7.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fltr_compute_h4'.
Finding identical cells in module `\fltr_compute_h3'.
Finding identical cells in module `\fltr_compute_h2'.
Finding identical cells in module `\fltr_compute_h1'.
Finding identical cells in module `\fltr_compute_f3'.
Finding identical cells in module `\fltr_compute_f2'.
Finding identical cells in module `\fltr_compute_f1'.
Finding identical cells in module `\fifo496'.
Finding identical cells in module `\v_fltr_496x7'.
Removed a total of 0 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fltr_compute_h4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_h3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_h2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_h1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_f3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_f2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_f1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fifo496..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \v_fltr_496x7..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fltr_compute_h4.
  Optimizing cells in module \fltr_compute_h3.
  Optimizing cells in module \fltr_compute_h2.
  Optimizing cells in module \fltr_compute_h1.
  Optimizing cells in module \fltr_compute_f3.
  Optimizing cells in module \fltr_compute_f2.
  Optimizing cells in module \fltr_compute_f1.
  Optimizing cells in module \fifo496.
  Optimizing cells in module \v_fltr_496x7.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fltr_compute_h4'.
Finding identical cells in module `\fltr_compute_h3'.
Finding identical cells in module `\fltr_compute_h2'.
Finding identical cells in module `\fltr_compute_h1'.
Finding identical cells in module `\fltr_compute_f3'.
Finding identical cells in module `\fltr_compute_f2'.
Finding identical cells in module `\fltr_compute_f1'.
Finding identical cells in module `\fifo496'.
Finding identical cells in module `\v_fltr_496x7'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$120 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 1 on $procdff$120 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 2 on $procdff$120 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 3 on $procdff$120 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 4 on $procdff$120 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 5 on $procdff$120 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 6 on $procdff$120 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 7 on $procdff$120 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 8 on $procdff$120 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 9 on $procdff$120 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 10 on $procdff$120 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 11 on $procdff$120 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 12 on $procdff$120 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 13 on $procdff$120 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 14 on $procdff$120 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 15 on $procdff$120 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 16 on $procdff$120 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 0 on $procdff$138 ($dff) from module fltr_compute_h1.
Setting constant 0-bit at position 1 on $procdff$138 ($dff) from module fltr_compute_h1.
Setting constant 0-bit at position 2 on $procdff$138 ($dff) from module fltr_compute_h1.
Setting constant 0-bit at position 3 on $procdff$138 ($dff) from module fltr_compute_h1.
Setting constant 0-bit at position 4 on $procdff$138 ($dff) from module fltr_compute_h1.
Setting constant 0-bit at position 5 on $procdff$138 ($dff) from module fltr_compute_h1.
Setting constant 0-bit at position 6 on $procdff$138 ($dff) from module fltr_compute_h1.
Setting constant 0-bit at position 7 on $procdff$138 ($dff) from module fltr_compute_h1.
Setting constant 0-bit at position 8 on $procdff$138 ($dff) from module fltr_compute_h1.
Setting constant 0-bit at position 9 on $procdff$138 ($dff) from module fltr_compute_h1.
Setting constant 0-bit at position 10 on $procdff$138 ($dff) from module fltr_compute_h1.
Setting constant 0-bit at position 11 on $procdff$138 ($dff) from module fltr_compute_h1.
Setting constant 0-bit at position 12 on $procdff$138 ($dff) from module fltr_compute_h1.
Setting constant 0-bit at position 13 on $procdff$138 ($dff) from module fltr_compute_h1.
Setting constant 0-bit at position 14 on $procdff$138 ($dff) from module fltr_compute_h1.
Setting constant 0-bit at position 15 on $procdff$138 ($dff) from module fltr_compute_h1.
Setting constant 0-bit at position 16 on $procdff$138 ($dff) from module fltr_compute_h1.
Setting constant 0-bit at position 0 on $procdff$147 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 1 on $procdff$147 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 2 on $procdff$147 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 3 on $procdff$147 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 4 on $procdff$147 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 5 on $procdff$147 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 6 on $procdff$147 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 7 on $procdff$147 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 8 on $procdff$147 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 9 on $procdff$147 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 10 on $procdff$147 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 11 on $procdff$147 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 12 on $procdff$147 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 13 on $procdff$147 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 14 on $procdff$147 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 15 on $procdff$147 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 16 on $procdff$147 ($dff) from module fltr_compute_f3.
Adding EN signal on $procdff$172 ($dff) from module fifo496 (D = \buff1, Q = \buff2).
Adding EN signal on $procdff$170 ($dff) from module fifo496 (D = \buff2, Q = \dout).
Adding EN signal on $procdff$171 ($dff) from module fifo496 (D = \din, Q = \buff1).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fltr_compute_h4..
Finding unused cells or wires in module \fltr_compute_h3..
Finding unused cells or wires in module \fltr_compute_h2..
Finding unused cells or wires in module \fltr_compute_h1..
Finding unused cells or wires in module \fltr_compute_f3..
Finding unused cells or wires in module \fltr_compute_f2..
Finding unused cells or wires in module \fltr_compute_f1..
Finding unused cells or wires in module \fifo496..
Finding unused cells or wires in module \v_fltr_496x7..
Removed 3 unused cells and 80 unused wires.
<suppressed ~11 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module fifo496.
Optimizing module fltr_compute_f1.
Optimizing module fltr_compute_f2.
Optimizing module fltr_compute_f3.
<suppressed ~1 debug messages>
Optimizing module fltr_compute_h1.
<suppressed ~1 debug messages>
Optimizing module fltr_compute_h2.
Optimizing module fltr_compute_h3.
<suppressed ~1 debug messages>
Optimizing module fltr_compute_h4.
Optimizing module v_fltr_496x7.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fifo496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_f1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_f2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_f3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_h1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_h2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_h3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_h4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \v_fltr_496x7..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fifo496.
  Optimizing cells in module \fltr_compute_f1.
  Optimizing cells in module \fltr_compute_f2.
  Optimizing cells in module \fltr_compute_f3.
  Optimizing cells in module \fltr_compute_h1.
  Optimizing cells in module \fltr_compute_h2.
  Optimizing cells in module \fltr_compute_h3.
  Optimizing cells in module \fltr_compute_h4.
  Optimizing cells in module \v_fltr_496x7.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fifo496'.
Finding identical cells in module `\fltr_compute_f1'.
Finding identical cells in module `\fltr_compute_f2'.
Finding identical cells in module `\fltr_compute_f3'.
Finding identical cells in module `\fltr_compute_h1'.
Finding identical cells in module `\fltr_compute_h2'.
Finding identical cells in module `\fltr_compute_h3'.
Finding identical cells in module `\fltr_compute_h4'.
Finding identical cells in module `\v_fltr_496x7'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$159 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 1 on $procdff$159 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 10 on $procdff$159 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 11 on $procdff$159 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 12 on $procdff$159 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 13 on $procdff$159 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 14 on $procdff$159 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 15 on $procdff$159 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 16 on $procdff$159 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 0 on $procdff$158 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 0 on $procdff$154 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 0 on $procdff$153 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 1 on $procdff$153 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 10 on $procdff$153 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 11 on $procdff$153 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 12 on $procdff$153 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 13 on $procdff$153 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 14 on $procdff$153 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 15 on $procdff$153 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 16 on $procdff$153 ($dff) from module fltr_compute_f2.
Setting constant 0-bit at position 0 on $procdff$150 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 1 on $procdff$150 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 0 on $procdff$148 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 1 on $procdff$148 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 0 on $procdff$146 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 1 on $procdff$146 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 0 on $procdff$144 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 1 on $procdff$144 ($dff) from module fltr_compute_f3.
Setting constant 0-bit at position 0 on $procdff$132 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 1 on $procdff$132 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 10 on $procdff$132 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 11 on $procdff$132 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 12 on $procdff$132 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 13 on $procdff$132 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 14 on $procdff$132 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 15 on $procdff$132 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 16 on $procdff$132 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 0 on $procdff$131 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 0 on $procdff$127 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 0 on $procdff$126 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 1 on $procdff$126 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 10 on $procdff$126 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 11 on $procdff$126 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 12 on $procdff$126 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 13 on $procdff$126 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 14 on $procdff$126 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 15 on $procdff$126 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 16 on $procdff$126 ($dff) from module fltr_compute_h2.
Setting constant 0-bit at position 0 on $procdff$122 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 1 on $procdff$122 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 2 on $procdff$122 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 0 on $procdff$118 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 1 on $procdff$118 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 2 on $procdff$118 ($dff) from module fltr_compute_h3.
Setting constant 0-bit at position 0 on $procdff$114 ($dff) from module fltr_compute_h4.
Setting constant 0-bit at position 0 on $procdff$112 ($dff) from module fltr_compute_h4.
Setting constant 0-bit at position 1 on $procdff$112 ($dff) from module fltr_compute_h4.
Setting constant 0-bit at position 2 on $procdff$112 ($dff) from module fltr_compute_h4.
Setting constant 0-bit at position 3 on $procdff$112 ($dff) from module fltr_compute_h4.
Setting constant 0-bit at position 0 on $procdff$111 ($dff) from module fltr_compute_h4.
Setting constant 0-bit at position 1 on $procdff$111 ($dff) from module fltr_compute_h4.
Setting constant 0-bit at position 0 on $procdff$110 ($dff) from module fltr_compute_h4.
Setting constant 0-bit at position 1 on $procdff$110 ($dff) from module fltr_compute_h4.
Setting constant 0-bit at position 2 on $procdff$110 ($dff) from module fltr_compute_h4.
Setting constant 0-bit at position 3 on $procdff$110 ($dff) from module fltr_compute_h4.
Setting constant 0-bit at position 0 on $procdff$108 ($dff) from module fltr_compute_h4.

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fifo496..
Finding unused cells or wires in module \fltr_compute_f1..
Finding unused cells or wires in module \fltr_compute_f2..
Finding unused cells or wires in module \fltr_compute_f3..
Finding unused cells or wires in module \fltr_compute_h1..
Finding unused cells or wires in module \fltr_compute_h2..
Finding unused cells or wires in module \fltr_compute_h3..
Finding unused cells or wires in module \fltr_compute_h4..
Finding unused cells or wires in module \v_fltr_496x7..
Removed 0 unused cells and 3 unused wires.
<suppressed ~6 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module fifo496.
Optimizing module fltr_compute_f1.
Optimizing module fltr_compute_f2.
Optimizing module fltr_compute_f3.
Optimizing module fltr_compute_h1.
Optimizing module fltr_compute_h2.
Optimizing module fltr_compute_h3.
Optimizing module fltr_compute_h4.
Optimizing module v_fltr_496x7.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fifo496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_f1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_f2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_f3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_h1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_h2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_h3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fltr_compute_h4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \v_fltr_496x7..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fifo496.
  Optimizing cells in module \fltr_compute_f1.
  Optimizing cells in module \fltr_compute_f2.
  Optimizing cells in module \fltr_compute_f3.
  Optimizing cells in module \fltr_compute_h1.
  Optimizing cells in module \fltr_compute_h2.
  Optimizing cells in module \fltr_compute_h3.
  Optimizing cells in module \fltr_compute_h4.
  Optimizing cells in module \v_fltr_496x7.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fifo496'.
Finding identical cells in module `\fltr_compute_f1'.
Finding identical cells in module `\fltr_compute_f2'.
Finding identical cells in module `\fltr_compute_f3'.
Finding identical cells in module `\fltr_compute_h1'.
Finding identical cells in module `\fltr_compute_h2'.
Finding identical cells in module `\fltr_compute_h3'.
Finding identical cells in module `\fltr_compute_h4'.
Finding identical cells in module `\v_fltr_496x7'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fifo496..
Finding unused cells or wires in module \fltr_compute_f1..
Finding unused cells or wires in module \fltr_compute_f2..
Finding unused cells or wires in module \fltr_compute_f3..
Finding unused cells or wires in module \fltr_compute_h1..
Finding unused cells or wires in module \fltr_compute_h2..
Finding unused cells or wires in module \fltr_compute_h3..
Finding unused cells or wires in module \fltr_compute_h4..
Finding unused cells or wires in module \v_fltr_496x7..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module fifo496.
Optimizing module fltr_compute_f1.
Optimizing module fltr_compute_f2.
Optimizing module fltr_compute_f3.
Optimizing module fltr_compute_h1.
Optimizing module fltr_compute_h2.
Optimizing module fltr_compute_h3.
Optimizing module fltr_compute_h4.
Optimizing module v_fltr_496x7.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== fifo496 ===

   Number of wires:                  6
   Number of wire bits:             34
   Number of public wires:           6
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $dffe                          24

=== fltr_compute_f1 ===

   Number of wires:                 24
   Number of wire bits:            451
   Number of public wires:          11
   Number of public wire bits:     212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 22
     $add                          120
     $dff                          155
     $mul                          119

=== fltr_compute_f2 ===

   Number of wires:                 22
   Number of wire bits:            417
   Number of public wires:          11
   Number of public wire bits:     212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 20
     $add                          120
     $dff                          135
     $mul                           83

=== fltr_compute_f3 ===

   Number of wires:                 22
   Number of wire bits:            414
   Number of public wires:          11
   Number of public wire bits:     212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 19
     $add                          100
     $dff                          130
     $mul                           94

=== fltr_compute_h1 ===

   Number of wires:                 22
   Number of wire bits:            414
   Number of public wires:          11
   Number of public wire bits:     212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 19
     $add                          100
     $dff                          138
     $mul                          102

=== fltr_compute_h2 ===

   Number of wires:                 22
   Number of wire bits:            417
   Number of public wires:          11
   Number of public wire bits:     212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 20
     $add                          120
     $dff                          135
     $mul                           83

=== fltr_compute_h3 ===

   Number of wires:                 22
   Number of wire bits:            414
   Number of public wires:          11
   Number of public wire bits:     212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 19
     $add                          100
     $dff                          132
     $mul                           96

=== fltr_compute_h4 ===

   Number of wires:                 24
   Number of wire bits:            451
   Number of public wires:          11
   Number of public wire bits:     212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 22
     $add                          120
     $dff                          143
     $mul                          107

=== v_fltr_496x7 ===

   Number of wires:                 18
   Number of wire bits:            186
   Number of public wires:          18
   Number of public wire bits:     186
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 14

=== design hierarchy ===

   v_fltr_496x7                      1
     fifo496                         0
     fltr_compute_f1                 0
     fltr_compute_f2                 0
     fltr_compute_f3                 0
     fltr_compute_h1                 0
     fltr_compute_h2                 0
     fltr_compute_h3                 0
     fltr_compute_h4                 0

   Number of wires:                 18
   Number of wire bits:            186
   Number of public wires:          18
   Number of public wire bits:     186
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 14

End of script. Logfile hash: 1d510c4dd9, CPU: user 0.22s system 0.00s, MEM: 13.11 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 26% 5x opt_expr (0 sec), 16% 3x opt_dff (0 sec), ...
