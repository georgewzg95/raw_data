
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v
Parsing SystemVerilog input from `/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v' to AST representation.
Generating RTLIL representation for module `\wrapper_norm_corr_20'.
Generating RTLIL representation for module `\wrapper_corr_20'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: wrapper_corr_20     
root of   1 design levels: wrapper_norm_corr_20
Automatically selected wrapper_norm_corr_20 as design top module.

2.2. Analyzing design hierarchy..
Top module:  \wrapper_norm_corr_20
Used module:     \wrapper_corr_20

2.3. Analyzing design hierarchy..
Top module:  \wrapper_norm_corr_20
Used module:     \wrapper_corr_20
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1 in module wrapper_corr_20.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 21 redundant assignments.
Promoted 0 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
     1/21: $0\corr_out_20[15:0]
     2/21: $0\corr_out_19[15:0]
     3/21: $0\corr_out_18[15:0]
     4/21: $0\corr_out_17[15:0]
     5/21: $0\corr_out_16[15:0]
     6/21: $0\corr_out_15[15:0]
     7/21: $0\corr_out_14[15:0]
     8/21: $0\corr_out_13[15:0]
     9/21: $0\corr_out_12[15:0]
    10/21: $0\corr_out_11[15:0]
    11/21: $0\corr_out_10[15:0]
    12/21: $0\corr_out_9[15:0]
    13/21: $0\corr_out_8[15:0]
    14/21: $0\corr_out_7[15:0]
    15/21: $0\corr_out_6[15:0]
    16/21: $0\corr_out_5[15:0]
    17/21: $0\corr_out_4[15:0]
    18/21: $0\corr_out_3[15:0]
    19/21: $0\corr_out_2[15:0]
    20/21: $0\corr_out_1[15:0]
    21/21: $0\corr_out_0[15:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\wrapper_corr_20.\corr_out_0' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$66' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_1' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$67' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_2' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$68' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_3' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$69' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_4' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$70' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_5' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$71' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_6' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$72' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_7' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$73' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_8' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$74' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_9' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$75' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_10' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$76' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_11' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$77' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_12' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$78' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_13' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$79' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_14' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$80' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_15' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$81' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_16' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$82' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_17' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$83' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_18' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$84' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_19' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$85' with positive edge clock.
Creating register for signal `\wrapper_corr_20.\corr_out_20' using process `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
  created $dff cell `$procdff$86' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
Removing empty process `wrapper_corr_20.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/stereovision1_submodules/wrapper_norm_corr_20.v:226$1'.
Cleaned up 1 empty switch.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_corr_20.
<suppressed ~1 debug messages>
Optimizing module wrapper_norm_corr_20.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_corr_20.
Optimizing module wrapper_norm_corr_20.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_corr_20'.
Finding identical cells in module `\wrapper_norm_corr_20'.
Removed a total of 0 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_corr_20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \wrapper_norm_corr_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_corr_20.
  Optimizing cells in module \wrapper_norm_corr_20.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_corr_20'.
Finding identical cells in module `\wrapper_norm_corr_20'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$86 ($dff) from module wrapper_corr_20 (D = \corr_out_20_tmp, Q = \corr_out_20).
Adding EN signal on $procdff$66 ($dff) from module wrapper_corr_20 (D = \corr_out_0_tmp, Q = \corr_out_0).
Adding EN signal on $procdff$67 ($dff) from module wrapper_corr_20 (D = \corr_out_1_tmp, Q = \corr_out_1).
Adding EN signal on $procdff$68 ($dff) from module wrapper_corr_20 (D = \corr_out_2_tmp, Q = \corr_out_2).
Adding EN signal on $procdff$69 ($dff) from module wrapper_corr_20 (D = \corr_out_3_tmp, Q = \corr_out_3).
Adding EN signal on $procdff$70 ($dff) from module wrapper_corr_20 (D = \corr_out_4_tmp, Q = \corr_out_4).
Adding EN signal on $procdff$71 ($dff) from module wrapper_corr_20 (D = \corr_out_5_tmp, Q = \corr_out_5).
Adding EN signal on $procdff$72 ($dff) from module wrapper_corr_20 (D = \corr_out_6_tmp, Q = \corr_out_6).
Adding EN signal on $procdff$73 ($dff) from module wrapper_corr_20 (D = \corr_out_7_tmp, Q = \corr_out_7).
Adding EN signal on $procdff$74 ($dff) from module wrapper_corr_20 (D = \corr_out_8_tmp, Q = \corr_out_8).
Adding EN signal on $procdff$75 ($dff) from module wrapper_corr_20 (D = \corr_out_9_tmp, Q = \corr_out_9).
Adding EN signal on $procdff$76 ($dff) from module wrapper_corr_20 (D = \corr_out_10_tmp, Q = \corr_out_10).
Adding EN signal on $procdff$77 ($dff) from module wrapper_corr_20 (D = \corr_out_11_tmp, Q = \corr_out_11).
Adding EN signal on $procdff$78 ($dff) from module wrapper_corr_20 (D = \corr_out_12_tmp, Q = \corr_out_12).
Adding EN signal on $procdff$79 ($dff) from module wrapper_corr_20 (D = \corr_out_13_tmp, Q = \corr_out_13).
Adding EN signal on $procdff$80 ($dff) from module wrapper_corr_20 (D = \corr_out_14_tmp, Q = \corr_out_14).
Adding EN signal on $procdff$81 ($dff) from module wrapper_corr_20 (D = \corr_out_15_tmp, Q = \corr_out_15).
Adding EN signal on $procdff$82 ($dff) from module wrapper_corr_20 (D = \corr_out_16_tmp, Q = \corr_out_16).
Adding EN signal on $procdff$83 ($dff) from module wrapper_corr_20 (D = \corr_out_17_tmp, Q = \corr_out_17).
Adding EN signal on $procdff$84 ($dff) from module wrapper_corr_20 (D = \corr_out_18_tmp, Q = \corr_out_18).
Adding EN signal on $procdff$85 ($dff) from module wrapper_corr_20 (D = \corr_out_19_tmp, Q = \corr_out_19).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_corr_20..
Finding unused cells or wires in module \wrapper_norm_corr_20..
Removed 21 unused cells and 64 unused wires.
<suppressed ~22 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_corr_20.
Optimizing module wrapper_norm_corr_20.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_corr_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_norm_corr_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_corr_20.
  Optimizing cells in module \wrapper_norm_corr_20.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_corr_20'.
Finding identical cells in module `\wrapper_norm_corr_20'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_corr_20..
Finding unused cells or wires in module \wrapper_norm_corr_20..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_corr_20.
Optimizing module wrapper_norm_corr_20.

4.16. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== wrapper_corr_20 ===

   Number of wires:                 92
   Number of wire bits:           1058
   Number of public wires:          92
   Number of public wire bits:    1058
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 64
     $dffe                          21
     corr                           21
     sh_reg                         22

=== wrapper_norm_corr_20 ===

   Number of wires:                 31
   Number of wire bits:            434
   Number of public wires:          31
   Number of public wire bits:     434
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     wrapper_corr_20                 1
     wrapper_norm                    2

=== design hierarchy ===

   wrapper_norm_corr_20              1
     wrapper_corr_20                 1

   Number of wires:                123
   Number of wire bits:           1492
   Number of public wires:         123
   Number of public wire bits:    1492
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 66
     $dffe                          21
     corr                           21
     sh_reg                         22
     wrapper_norm                    2

End of script. Logfile hash: d9dff1fcce, CPU: user 0.10s system 0.00s, MEM: 13.43 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 30% 2x read_verilog (0 sec), 19% 4x opt_expr (0 sec), ...
