
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v' to AST representation.
Generating RTLIL representation for module `\my_divider'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:36.2-65.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:75.2-138.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: my_divider          
Automatically selected my_divider as design top module.

2.2. Analyzing design hierarchy..
Top module:  \my_divider

2.3. Analyzing design hierarchy..
Top module:  \my_divider
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 9 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:140$10 in module my_divider.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:75$7 in module my_divider.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:67$5 in module my_divider.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:36$1 in module my_divider.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 6 redundant assignments.
Promoted 9 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:140$10'.
     1/5: $0\Count[3:0]
     2/5: $0\ff0[0:0]
     3/5: $0\DataA[15:0]
     4/5: $0\Remainder[7:0]
     5/5: $0\RegB[16:0]
Creating decoders for process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:75$7'.
     1/13: $2\EC[0:0]
     2/13: $3\LR[0:0]
     3/13: $2\EA[0:0]
     4/13: $2\ER0[0:0]
     5/13: $2\LR[0:0]
     6/13: $1\ER0[0:0]
     7/13: $1\LR[0:0]
     8/13: $1\EA[0:0]
     9/13: $1\Done[0:0]
    10/13: $1\Rsel[0:0]
    11/13: $1\EC[0:0]
    12/13: $1\ER[0:0]
    13/13: $1\LC[0:0]
Creating decoders for process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:67$5'.
     1/1: $0\y[1:0]
Creating decoders for process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:36$1'.
     1/4: $4\Y[1:0]
     2/4: $3\Y[1:0]
     3/4: $2\Y[1:0]
     4/4: $1\Y[1:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\my_divider.\Done' from process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:75$7'.
No latch inferred for signal `\my_divider.\EA' from process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:75$7'.
No latch inferred for signal `\my_divider.\Rsel' from process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:75$7'.
No latch inferred for signal `\my_divider.\LR' from process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:75$7'.
No latch inferred for signal `\my_divider.\ER' from process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:75$7'.
No latch inferred for signal `\my_divider.\ER0' from process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:75$7'.
No latch inferred for signal `\my_divider.\LC' from process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:75$7'.
No latch inferred for signal `\my_divider.\EC' from process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:75$7'.
No latch inferred for signal `\my_divider.\Y' from process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:36$1'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\my_divider.\Remainder' using process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:140$10'.
  created $dff cell `$procdff$173' with positive edge clock.
Creating register for signal `\my_divider.\Count' using process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:140$10'.
  created $dff cell `$procdff$174' with positive edge clock.
Creating register for signal `\my_divider.\RegB' using process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:140$10'.
  created $dff cell `$procdff$175' with positive edge clock.
Creating register for signal `\my_divider.\DataA' using process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:140$10'.
  created $dff cell `$procdff$176' with positive edge clock.
Creating register for signal `\my_divider.\ff0' using process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:140$10'.
  created $dff cell `$procdff$177' with positive edge clock.
Creating register for signal `\my_divider.\y' using process `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:67$5'.
  created $dff cell `$procdff$178' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 9 empty switches in `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:140$10'.
Removing empty process `my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:140$10'.
Found and cleaned up 4 empty switches in `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:75$7'.
Removing empty process `my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:75$7'.
Found and cleaned up 1 empty switch in `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:67$5'.
Removing empty process `my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:67$5'.
Found and cleaned up 4 empty switches in `\my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:36$1'.
Removing empty process `my_divider.$proc$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:36$1'.
Cleaned up 18 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module my_divider.
<suppressed ~34 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module my_divider.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\my_divider'.
<suppressed ~66 debug messages>
Removed a total of 22 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \my_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$106.
    dead port 2/2 on $mux $procmux$98.
    dead port 2/2 on $mux $procmux$158.
    dead port 2/2 on $mux $procmux$91.
    dead port 2/2 on $mux $procmux$83.
    dead port 2/2 on $mux $procmux$76.
    dead port 2/2 on $mux $procmux$166.
    dead port 2/2 on $mux $procmux$151.
Removed 8 multiplexer ports.
<suppressed ~14 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \my_divider.
    New ctrl vector for $pmux cell $procmux$110: $auto$opt_reduce.cc:134:opt_mux$180
    New ctrl vector for $pmux cell $procmux$136: $auto$opt_reduce.cc:134:opt_mux$182
  Optimizing cells in module \my_divider.
Performed a total of 2 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\my_divider'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$178 ($dff) from module my_divider (D = $procmux$169_Y, Q = \y, rval = 2'00).
Adding SRST signal on $procdff$177 ($dff) from module my_divider (D = \DataA [15], Q = \ff0, rval = 1'0).
Adding SRST signal on $procdff$176 ($dff) from module my_divider (D = $procmux$51_Y, Q = \DataA, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$189 ($sdff) from module my_divider (D = $procmux$51_Y, Q = \DataA).
Adding SRST signal on $procdff$175 ($dff) from module my_divider (D = $procmux$66_Y, Q = \RegB, rval = 17'00000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$193 ($sdff) from module my_divider (D = \data_in_b, Q = \RegB).
Adding SRST signal on $procdff$174 ($dff) from module my_divider (D = $procmux$33_Y, Q = \Count, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$195 ($sdff) from module my_divider (D = $add$/home/zhigang/raw_data/raw_designs/vtr_designs/verilog/stereovision1_submodules/my_divider.v:202$26_Y [3:0], Q = \Count).
Adding SRST signal on $procdff$173 ($dff) from module my_divider (D = $procmux$60_Y, Q = \Remainder, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$199 ($sdff) from module my_divider (D = $procmux$60_Y, Q = \Remainder).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \my_divider..
Removed 13 unused cells and 121 unused wires.
<suppressed ~16 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module my_divider.
<suppressed ~2 debug messages>

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \my_divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \my_divider.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\my_divider'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \my_divider..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module my_divider.

4.16. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== my_divider ===

   Number of wires:                 53
   Number of wire bits:            373
   Number of public wires:          26
   Number of public wire bits:     122
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 42
     $add                           96
     $eq                             4
     $logic_not                      6
     $mux                           95
     $not                           33
     $or                            24
     $pmux                           4
     $reduce_bool                    4
     $reduce_or                      6
     $sdff                           3
     $sdffe                         45

End of script. Logfile hash: 293a44f8ba, CPU: user 0.07s system 0.01s, MEM: 11.88 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 33% 4x opt_expr (0 sec), 22% 2x read_verilog (0 sec), ...
