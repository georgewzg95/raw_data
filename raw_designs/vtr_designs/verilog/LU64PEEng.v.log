
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 4d87019, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v
Parsing SystemVerilog input from `/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v' to AST representation.
Warning: Encountered `translate_off' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using a portable and standards-compliant construct such as `ifdef is recommended!
Generating RTLIL representation for module `\LU64PEEng'.
Generating RTLIL representation for module `\MarshallerController'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:511.1-523.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\LU'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1227.1-1495.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\LUControl'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2152.1-2342.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2344.1-2359.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2362.1-2385.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\ram'.
Generating RTLIL representation for module `\ram1'.
Generating RTLIL representation for module `\ram2'.
Generating RTLIL representation for module `\ram3'.
Generating RTLIL representation for module `\top_ram'.
Generating RTLIL representation for module `\mult_add'.
Generating RTLIL representation for module `\DataTransferUnit'.
Generating RTLIL representation for module `\rfifo'.
Generating RTLIL representation for module `\wfifo'.
Generating RTLIL representation for module `\addr_fifo'.
Generating RTLIL representation for module `\memcmd_fifo'.
Generating RTLIL representation for module `\fpu_add'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4219.2-4401.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4404.2-4444.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4449.2-4551.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\fpu_div'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4587.2-4593.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4600.2-4602.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4605.2-4703.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\div_24b'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752.2-4944.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\fpmul'.
/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5127: Warning: Identifier `\sign' is implicitly declared.
Generating RTLIL representation for module `\preprocess'.
Generating RTLIL representation for module `\special'.
Generating RTLIL representation for module `\prenorm'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5397.2-5495.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5500.2-5598.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\multiply_a'.
Generating RTLIL representation for module `\exponent'.
Generating RTLIL representation for module `\normalize'.
Generating RTLIL representation for module `\shift'.
Note: Assuming pure combinatorial block at /home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5713.3-5843.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\round'.
Generating RTLIL representation for module `\flag'.
Generating RTLIL representation for module `\assemble'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: assemble            
root of   0 design levels: flag                
root of   0 design levels: round               
root of   0 design levels: shift               
root of   0 design levels: normalize           
root of   0 design levels: exponent            
root of   0 design levels: multiply_a          
root of   0 design levels: prenorm             
root of   0 design levels: special             
root of   0 design levels: preprocess          
root of   1 design levels: fpmul               
root of   0 design levels: div_24b             
root of   1 design levels: fpu_div             
root of   0 design levels: fpu_add             
root of   0 design levels: memcmd_fifo         
root of   0 design levels: addr_fifo           
root of   0 design levels: wfifo               
root of   0 design levels: rfifo               
root of   1 design levels: DataTransferUnit    
root of   2 design levels: mult_add            
root of   0 design levels: top_ram             
root of   0 design levels: ram3                
root of   0 design levels: ram2                
root of   0 design levels: ram1                
root of   0 design levels: ram                 
root of   0 design levels: LUControl           
root of   3 design levels: LU                  
root of   0 design levels: MarshallerController
root of   4 design levels: LU64PEEng           
Automatically selected LU64PEEng as design top module.

2.2. Analyzing design hierarchy..
Top module:  \LU64PEEng
Used module:     \DataTransferUnit
Used module:         \rfifo
Used module:         \addr_fifo
Used module:         \wfifo
Used module:         \memcmd_fifo
Used module:     \LU
Used module:         \mult_add
Used module:             \fpu_add
Used module:             \fpmul
Used module:                 \assemble
Used module:                 \flag
Used module:                 \round
Used module:                 \shift
Used module:                 \normalize
Used module:                 \exponent
Used module:                 \multiply_a
Used module:                 \prenorm
Used module:                 \special
Used module:                 \preprocess
Used module:         \top_ram
Used module:         \ram3
Used module:         \ram2
Used module:         \ram1
Used module:         \ram
Used module:         \fpu_div
Used module:             \div_24b
Used module:         \LUControl
Used module:     \MarshallerController

2.3. Analyzing design hierarchy..
Top module:  \LU64PEEng
Used module:     \DataTransferUnit
Used module:         \rfifo
Used module:         \addr_fifo
Used module:         \wfifo
Used module:         \memcmd_fifo
Used module:     \LU
Used module:         \mult_add
Used module:             \fpu_add
Used module:             \fpmul
Used module:                 \assemble
Used module:                 \flag
Used module:                 \round
Used module:                 \shift
Used module:                 \normalize
Used module:                 \exponent
Used module:                 \multiply_a
Used module:                 \prenorm
Used module:                 \special
Used module:                 \preprocess
Used module:         \top_ram
Used module:         \ram3
Used module:         \ram2
Used module:         \ram1
Used module:         \ram
Used module:         \fpu_div
Used module:             \div_24b
Used module:         \LUControl
Used module:     \MarshallerController
Removed 0 unused modules.
Mapping positional arguments of cell fpmul.assembler (assemble).
Mapping positional arguments of cell fpmul.flager (flag).
Mapping positional arguments of cell fpmul.rounder (round).
Mapping positional arguments of cell fpmul.shifter (shift).
Mapping positional arguments of cell fpmul.normalizer (normalize).
Mapping positional arguments of cell fpmul.exponenter (exponent).
Mapping positional arguments of cell fpmul.multiplier (multiply_a).
Mapping positional arguments of cell fpmul.prenormer (prenorm).
Mapping positional arguments of cell fpmul.specialer (special).
Mapping positional arguments of cell fpmul.preprocesser (preprocess).
Mapping positional arguments of cell LU.PE63 (mult_add).
Mapping positional arguments of cell LU.PE62 (mult_add).
Mapping positional arguments of cell LU.PE61 (mult_add).
Mapping positional arguments of cell LU.PE60 (mult_add).
Mapping positional arguments of cell LU.PE59 (mult_add).
Mapping positional arguments of cell LU.PE58 (mult_add).
Mapping positional arguments of cell LU.PE57 (mult_add).
Mapping positional arguments of cell LU.PE56 (mult_add).
Mapping positional arguments of cell LU.PE55 (mult_add).
Mapping positional arguments of cell LU.PE54 (mult_add).
Mapping positional arguments of cell LU.PE53 (mult_add).
Mapping positional arguments of cell LU.PE52 (mult_add).
Mapping positional arguments of cell LU.PE51 (mult_add).
Mapping positional arguments of cell LU.PE50 (mult_add).
Mapping positional arguments of cell LU.PE49 (mult_add).
Mapping positional arguments of cell LU.PE48 (mult_add).
Mapping positional arguments of cell LU.PE47 (mult_add).
Mapping positional arguments of cell LU.PE46 (mult_add).
Mapping positional arguments of cell LU.PE45 (mult_add).
Mapping positional arguments of cell LU.PE44 (mult_add).
Mapping positional arguments of cell LU.PE43 (mult_add).
Mapping positional arguments of cell LU.PE42 (mult_add).
Mapping positional arguments of cell LU.PE41 (mult_add).
Mapping positional arguments of cell LU.PE40 (mult_add).
Mapping positional arguments of cell LU.PE39 (mult_add).
Mapping positional arguments of cell LU.PE38 (mult_add).
Mapping positional arguments of cell LU.PE37 (mult_add).
Mapping positional arguments of cell LU.PE36 (mult_add).
Mapping positional arguments of cell LU.PE35 (mult_add).
Mapping positional arguments of cell LU.PE34 (mult_add).
Mapping positional arguments of cell LU.PE33 (mult_add).
Mapping positional arguments of cell LU.PE32 (mult_add).
Mapping positional arguments of cell LU.PE31 (mult_add).
Mapping positional arguments of cell LU.PE30 (mult_add).
Mapping positional arguments of cell LU.PE29 (mult_add).
Mapping positional arguments of cell LU.PE28 (mult_add).
Mapping positional arguments of cell LU.PE27 (mult_add).
Mapping positional arguments of cell LU.PE26 (mult_add).
Mapping positional arguments of cell LU.PE25 (mult_add).
Mapping positional arguments of cell LU.PE24 (mult_add).
Mapping positional arguments of cell LU.PE23 (mult_add).
Mapping positional arguments of cell LU.PE22 (mult_add).
Mapping positional arguments of cell LU.PE21 (mult_add).
Mapping positional arguments of cell LU.PE20 (mult_add).
Mapping positional arguments of cell LU.PE19 (mult_add).
Mapping positional arguments of cell LU.PE18 (mult_add).
Mapping positional arguments of cell LU.PE17 (mult_add).
Mapping positional arguments of cell LU.PE16 (mult_add).
Mapping positional arguments of cell LU.PE15 (mult_add).
Mapping positional arguments of cell LU.PE14 (mult_add).
Mapping positional arguments of cell LU.PE13 (mult_add).
Mapping positional arguments of cell LU.PE12 (mult_add).
Mapping positional arguments of cell LU.PE11 (mult_add).
Mapping positional arguments of cell LU.PE10 (mult_add).
Mapping positional arguments of cell LU.PE9 (mult_add).
Mapping positional arguments of cell LU.PE8 (mult_add).
Mapping positional arguments of cell LU.PE7 (mult_add).
Mapping positional arguments of cell LU.PE6 (mult_add).
Mapping positional arguments of cell LU.PE5 (mult_add).
Mapping positional arguments of cell LU.PE4 (mult_add).
Mapping positional arguments of cell LU.PE3 (mult_add).
Mapping positional arguments of cell LU.PE2 (mult_add).
Mapping positional arguments of cell LU.PE1 (mult_add).
Mapping positional arguments of cell LU.PE0 (mult_add).
Mapping positional arguments of cell LU.topBlock (top_ram).
Mapping positional arguments of cell LU.leftBlock1 (ram3).
Mapping positional arguments of cell LU.leftBlock0 (ram2).
Mapping positional arguments of cell LU.currentBlock1 (ram1).
Mapping positional arguments of cell LU.currentBlock0 (ram).
Mapping positional arguments of cell LU.conBlock (LUControl).
Mapping positional arguments of cell LU64PEEng.compBlock (LU).
Mapping positional arguments of cell LU64PEEng.MC (MarshallerController).

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5713$1186 in module shift.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5500$1144 in module prenorm.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5397$1119 in module prenorm.
Marked 24 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974 in module div_24b.
Marked 23 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4605$950 in module fpu_div.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4587$942 in module fpu_div.
Marked 24 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4449$916 in module fpu_add.
Marked 6 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4404$902 in module fpu_add.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4219$847 in module fpu_add.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4139$835 in module memcmd_fifo.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4065$817 in module addr_fifo.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3987$799 in module wfifo.
Marked 32 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3916$765 in module wfifo.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3844$749 in module rfifo.
Marked 32 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3773$715 in module rfifo.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707 in module DataTransferUnit.
Marked 6 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3592$678 in module DataTransferUnit.
Marked 6 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3552$668 in module DataTransferUnit.
Marked 7 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618 in module LUControl.
Marked 17 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584 in module LUControl.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2654$581 in module LUControl.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2645$573 in module LUControl.
Removed 1 dead cases from process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2388$526 in module LUControl.
Marked 14 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2388$526 in module LUControl.
Marked 5 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2362$512 in module LUControl.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2344$494 in module LUControl.
Marked 26 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2152$453 in module LUControl.
Marked 28 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2037$369 in module LUControl.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2002$360 in module LUControl.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353 in module LU.
Removed 2 dead cases from process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1227$221 in module LU.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1227$221 in module LU.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1213$217 in module LU.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210 in module LU.
Marked 15 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115 in module MarshallerController.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:511$114 in module MarshallerController.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:497$113 in module MarshallerController.
Marked 24 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:341$76 in module MarshallerController.
Marked 5 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:301$51 in module MarshallerController.
Marked 10 switch rules as full_case in process $proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:230$31 in module MarshallerController.
Removed a total of 3 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 56 redundant assignments.
Promoted 417 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\shift.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5713$1186'.
     1/1: $1\postshift[95:0]
Creating decoders for process `\prenorm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5500$1144'.
     1/1: $1\shiftedb[23:0]
Creating decoders for process `\prenorm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5397$1119'.
     1/1: $1\shifteda[23:0]
Creating decoders for process `\fpmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5179$1026'.
Creating decoders for process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
     1/47: $24\res[0:0]
     2/47: $1\numer0[46:0]
     3/47: $23\res[1:1]
     4/47: $1\numer1[46:0]
     5/47: $22\res[2:2]
     6/47: $1\numer2[46:0]
     7/47: $21\res[3:3]
     8/47: $1\numer3[46:0]
     9/47: $20\res[4:4]
    10/47: $1\numer4[46:0]
    11/47: $19\res[5:5]
    12/47: $1\numer5[46:0]
    13/47: $18\res[6:6]
    14/47: $1\numer6[46:0]
    15/47: $17\res[7:7]
    16/47: $1\numer7[46:0]
    17/47: $16\res[8:8]
    18/47: $1\numer8[46:0]
    19/47: $15\res[9:9]
    20/47: $1\numer9[46:0]
    21/47: $14\res[10:10]
    22/47: $1\numer10[46:0]
    23/47: $13\res[11:11]
    24/47: $1\numer11[46:0]
    25/47: $12\res[12:12]
    26/47: $1\numer12[46:0]
    27/47: $11\res[13:13]
    28/47: $1\numer13[46:0]
    29/47: $10\res[14:14]
    30/47: $1\numer14[46:0]
    31/47: $9\res[15:15]
    32/47: $1\numer15[46:0]
    33/47: $8\res[16:16]
    34/47: $1\numer16[46:0]
    35/47: $7\res[17:17]
    36/47: $1\numer17[46:0]
    37/47: $6\res[18:18]
    38/47: $1\numer18[46:0]
    39/47: $5\res[19:19]
    40/47: $1\numer19[46:0]
    41/47: $4\res[20:20]
    42/47: $1\numer20[46:0]
    43/47: $3\res[21:21]
    44/47: $1\numer21[46:0]
    45/47: $2\res[22:22]
    46/47: $1\numer22[46:0]
    47/47: $1\res[23:23]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4605$950'.
     1/46: $23\div[30:0] [30:23]
     2/46: $23\div[30:0] [22:0]
     3/46: $22\div[30:0] [30:23]
     4/46: $22\div[30:0] [22:0]
     5/46: $21\div[30:0] [30:23]
     6/46: $21\div[30:0] [22:0]
     7/46: $20\div[30:0] [30:23]
     8/46: $20\div[30:0] [22:0]
     9/46: $19\div[30:0] [30:23]
    10/46: $19\div[30:0] [22:0]
    11/46: $18\div[30:0] [30:23]
    12/46: $18\div[30:0] [22:0]
    13/46: $17\div[30:0] [30:23]
    14/46: $17\div[30:0] [22:0]
    15/46: $16\div[30:0] [30:23]
    16/46: $16\div[30:0] [22:0]
    17/46: $15\div[30:0] [30:23]
    18/46: $15\div[30:0] [22:0]
    19/46: $14\div[30:0] [30:23]
    20/46: $14\div[30:0] [22:0]
    21/46: $13\div[30:0] [30:23]
    22/46: $13\div[30:0] [22:0]
    23/46: $12\div[30:0] [30:23]
    24/46: $12\div[30:0] [22:0]
    25/46: $11\div[30:0] [30:23]
    26/46: $11\div[30:0] [22:0]
    27/46: $10\div[30:0] [30:23]
    28/46: $10\div[30:0] [22:0]
    29/46: $9\div[30:0] [30:23]
    30/46: $9\div[30:0] [22:0]
    31/46: $8\div[30:0] [30:23]
    32/46: $8\div[30:0] [22:0]
    33/46: $7\div[30:0] [30:23]
    34/46: $7\div[30:0] [22:0]
    35/46: $6\div[30:0] [30:23]
    36/46: $6\div[30:0] [22:0]
    37/46: $5\div[30:0] [30:23]
    38/46: $5\div[30:0] [22:0]
    39/46: $4\div[30:0] [30:23]
    40/46: $4\div[30:0] [22:0]
    41/46: $3\div[30:0] [30:23]
    42/46: $3\div[30:0] [22:0]
    43/46: $2\div[30:0] [30:23]
    44/46: $2\div[30:0] [22:0]
    45/46: $1\div[30:0] [30:23]
    46/46: $1\div[30:0] [22:0]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4600$948'.
Creating decoders for process `\fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4587$942'.
     1/1: $1\div_exp[7:0]
Creating decoders for process `\fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4577$941'.
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4449$916'.
     1/48: $24\sum[30:0] [30:23]
     2/48: $24\sum[30:0] [22:0]
     3/48: $23\sum[30:0] [30:23]
     4/48: $23\sum[30:0] [22:0]
     5/48: $22\sum[30:0] [30:23]
     6/48: $22\sum[30:0] [22:0]
     7/48: $21\sum[30:0] [30:23]
     8/48: $21\sum[30:0] [22:0]
     9/48: $20\sum[30:0] [30:23]
    10/48: $20\sum[30:0] [22:0]
    11/48: $19\sum[30:0] [30:23]
    12/48: $19\sum[30:0] [22:0]
    13/48: $18\sum[30:0] [30:23]
    14/48: $18\sum[30:0] [22:0]
    15/48: $17\sum[30:0] [30:23]
    16/48: $17\sum[30:0] [22:0]
    17/48: $16\sum[30:0] [30:23]
    18/48: $16\sum[30:0] [22:0]
    19/48: $15\sum[30:0] [30:23]
    20/48: $15\sum[30:0] [22:0]
    21/48: $14\sum[30:0] [30:23]
    22/48: $14\sum[30:0] [22:0]
    23/48: $13\sum[30:0] [30:23]
    24/48: $13\sum[30:0] [22:0]
    25/48: $12\sum[30:0] [30:23]
    26/48: $12\sum[30:0] [22:0]
    27/48: $11\sum[30:0] [30:23]
    28/48: $11\sum[30:0] [22:0]
    29/48: $10\sum[30:0] [30:23]
    30/48: $10\sum[30:0] [22:0]
    31/48: $9\sum[30:0] [30:23]
    32/48: $9\sum[30:0] [22:0]
    33/48: $8\sum[30:0] [30:23]
    34/48: $8\sum[30:0] [22:0]
    35/48: $7\sum[30:0] [30:23]
    36/48: $7\sum[30:0] [22:0]
    37/48: $6\sum[30:0] [30:23]
    38/48: $6\sum[30:0] [22:0]
    39/48: $5\sum[30:0] [30:23]
    40/48: $5\sum[30:0] [22:0]
    41/48: $4\sum[30:0] [30:23]
    42/48: $4\sum[30:0] [22:0]
    43/48: $3\sum[30:0] [30:23]
    44/48: $3\sum[30:0] [22:0]
    45/48: $2\sum[30:0] [30:23]
    46/48: $2\sum[30:0] [22:0]
    47/48: $1\sum[30:0] [30:23]
    48/48: $1\sum[30:0] [22:0]
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4404$902'.
     1/11: $5\sum[31:31]
     2/11: $5\sum_man[24:0]
     3/11: $4\sum[31:31]
     4/11: $4\sum_man[24:0]
     5/11: $3\sum_man[24:0]
     6/11: $3\sum[31:31]
     7/11: $2\sum[31:31]
     8/11: $2\sum_man[24:0]
     9/11: $1\sum[31:31]
    10/11: $1\sum_man[24:0]
    11/11: $1\smaller[0:0]
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4219$847'.
     1/10: $3\b_man[23:0]
     2/10: $2\a_exp[7:0]
     3/10: $2\b_man[23:0]
     4/10: $3\a_man[23:0]
     5/10: $2\temp[7:0]
     6/10: $2\a_man[23:0]
     7/10: $1\a_exp[7:0]
     8/10: $1\b_man[23:0]
     9/10: $1\a_man[23:0]
    10/10: $1\temp[7:0]
Creating decoders for process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4211$846'.
Creating decoders for process `\memcmd_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4139$835'.
     1/1: $0\status_cnt[4:0]
Creating decoders for process `\memcmd_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4133$834'.
     1/1: $0\q[27:0]
Creating decoders for process `\memcmd_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4126$832'.
     1/1: $0\rd_pointer[3:0]
Creating decoders for process `\memcmd_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4119$830'.
     1/1: $0\wr_pointer[3:0]
Creating decoders for process `\addr_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4065$817'.
     1/1: $0\status_cnt[4:0]
Creating decoders for process `\addr_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4059$816'.
     1/1: $0\q[7:0]
Creating decoders for process `\addr_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4052$814'.
     1/1: $0\rd_pointer[3:0]
Creating decoders for process `\addr_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4045$812'.
     1/1: $0\wr_pointer[3:0]
Creating decoders for process `\wfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3987$799'.
     1/1: $0\status_cnt[4:0]
Creating decoders for process `\wfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3916$765'.
     1/2: $0\counter[4:0]
     2/2: $0\q[63:0]
Creating decoders for process `\wfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3909$763'.
     1/1: $0\rd_pointer[3:0]
Creating decoders for process `\wfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3902$761'.
     1/1: $0\wr_pointer[3:0]
Creating decoders for process `\rfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3844$749'.
     1/1: $0\status_cnt[4:0]
Creating decoders for process `\rfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3773$715'.
     1/33: $0\q[2047:0] [2047:1984]
     2/33: $0\q[2047:0] [1983:1920]
     3/33: $0\q[2047:0] [1919:1856]
     4/33: $0\q[2047:0] [1855:1792]
     5/33: $0\q[2047:0] [1791:1728]
     6/33: $0\q[2047:0] [1727:1664]
     7/33: $0\q[2047:0] [1663:1600]
     8/33: $0\q[2047:0] [1599:1536]
     9/33: $0\q[2047:0] [1535:1472]
    10/33: $0\q[2047:0] [1471:1408]
    11/33: $0\q[2047:0] [1407:1344]
    12/33: $0\q[2047:0] [1343:1280]
    13/33: $0\q[2047:0] [1279:1216]
    14/33: $0\q[2047:0] [1215:1152]
    15/33: $0\q[2047:0] [1151:1088]
    16/33: $0\q[2047:0] [1087:1024]
    17/33: $0\q[2047:0] [1023:960]
    18/33: $0\q[2047:0] [959:896]
    19/33: $0\q[2047:0] [895:832]
    20/33: $0\q[2047:0] [831:768]
    21/33: $0\q[2047:0] [767:704]
    22/33: $0\q[2047:0] [703:640]
    23/33: $0\q[2047:0] [639:576]
    24/33: $0\q[2047:0] [575:512]
    25/33: $0\q[2047:0] [511:448]
    26/33: $0\q[2047:0] [447:384]
    27/33: $0\q[2047:0] [383:320]
    28/33: $0\q[2047:0] [319:256]
    29/33: $0\q[2047:0] [255:192]
    30/33: $0\q[2047:0] [191:128]
    31/33: $0\q[2047:0] [127:64]
    32/33: $0\q[2047:0] [63:0]
    33/33: $0\counter[4:0]
Creating decoders for process `\rfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3766$713'.
     1/1: $0\rd_pointer[3:0]
Creating decoders for process `\rfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3759$711'.
     1/1: $0\wr_pointer[3:0]
Creating decoders for process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
     1/25: $0\read_req_reg[3:0] [3]
     2/25: $0\read_req_reg[3:0] [2]
     3/25: $0\write_req_reg[3:0] [2]
     4/25: $0\read_req_reg[3:0] [1]
     5/25: $0\write_req_reg[3:0] [1]
     6/25: $0\read_req_reg[3:0] [0]
     7/25: $0\write_req_reg[3:0] [0]
     8/25: $0\fifo_write_reg[3:0] [2]
     9/25: $0\fifo_write_reg[3:0] [1]
    10/25: $0\fifo_write_reg[3:0] [0]
    11/25: $0\ram_addr3[7:0]
    12/25: $0\ram_addr2[7:0]
    13/25: $0\ram_addr1[7:0]
    14/25: $0\ram_addr0[7:0]
    15/25: $0\size_count3[1:0]
    16/25: $0\size_count2[1:0]
    17/25: $0\size_count1[1:0]
    18/25: $0\size_count0[1:0]
    19/25: $0\write_req_reg[3:0] [3]
    20/25: $0\fifo_write_reg[3:0] [3]
    21/25: $0\mem_addr4[23:0]
    22/25: $0\mem_addr3[23:0]
    23/25: $0\mem_addr2[23:0]
    24/25: $0\mem_addr1[23:0]
    25/25: $0\mem_addr0[23:0]
Creating decoders for process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3592$678'.
     1/9: $0\fifo_write_reg[4:4]
     2/9: $0\data_count[5:0]
     3/9: $0\ram_addr4[7:0]
     4/9: $0\size[7:0]
     5/9: $0\size_count4[1:0]
     6/9: $0\fifo_read_reg[0:0]
     7/9: $0\read_req_reg[4:4]
     8/9: $0\write_req_reg[4:4]
     9/9: $0\mem_addr5[23:0]
Creating decoders for process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3552$668'.
     1/1: $0\state[1:0]
Creating decoders for process `\mult_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3290$643'.
Creating decoders for process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
     1/5: $0\done[0:0]
     2/5: $0\MOEn[0:0]
     3/5: $0\topReadAddr[13:0]
     4/5: $0\leftReadAddr[7:0]
     5/5: $0\curReadAddr[7:0]
Creating decoders for process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
     1/16: $0\MOEnDelay[5:0] [5]
     2/16: $0\topWriteSelDelay4[5:0]
     3/16: $0\topWriteEnDelay[31:0] [4]
     4/16: $0\topWriteAddrDelay4[13:0]
     5/16: $0\leftWriteEnDelay[31:0] [31]
     6/16: $0\leftWriteEnDelay[31:0] [15]
     7/16: $0\leftWriteEnDelay[31:0] [4]
     8/16: $0\leftWriteSelDelay[4:0] [4]
     9/16: $0\curWriteEnDelay[31:0] [31]
    10/16: $0\curWriteEnDelay[31:0] [15]
    11/16: $0\curWriteSelDelay[15:0] [15]
    12/16: $0\writeByteEnDelay15[255:0]
    13/16: $0\writeByteEnDelay4[255:0]
    14/16: $0\curWriteAddrDelay15[7:0]
    15/16: $0\curWriteAddrDelay4[7:0]
    16/16: $0\topSourceSelDelay[4:0] [4]
Creating decoders for process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2654$581'.
     1/2: $0\currentRowState[1:0]
     2/2: $0\currentState[3:0]
Creating decoders for process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2645$573'.
     1/1: $0\byteEn[255:0]
Creating decoders for process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2388$526'.
     1/10: $0\i1modkByteEn[255:0]
     2/10: $0\counter[7:0]
     3/10: $0\leftIdxCounter[7:0]
     4/10: $0\msIdxCounter[7:0]
     5/10: $0\diagIdxCounter[7:0]
     6/10: $0\topIdxCounter[1:0]
     7/10: $0\divCounter[5:0]
     8/10: $0\topWriteCounter[7:0]
     9/10: $0\readRowCounter[7:0]
    10/10: $0\nextTopIdxCounter[13:0]
Creating decoders for process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2362$512'.
     1/5: $5\nextRowState[1:0]
     2/5: $4\nextRowState[1:0]
     3/5: $3\nextRowState[1:0]
     4/5: $2\nextRowState[1:0]
     5/5: $1\nextRowState[1:0]
Creating decoders for process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2344$494'.
     1/3: $1\loadRow[0:0]
     2/3: $1\startFetchRow[0:0]
     3/3: $1\doneFetchRow[0:0]
Creating decoders for process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2152$453'.
     1/36: $26\nextState[3:0]
     2/36: $25\nextState[3:0]
     3/36: $24\nextState[3:0]
     4/36: $10\updateCounter[0:0]
     5/36: $23\nextState[3:0]
     6/36: $22\nextState[3:0]
     7/36: $9\updateCounter[0:0]
     8/36: $21\nextState[3:0]
     9/36: $20\nextState[3:0]
    10/36: $8\updateCounter[0:0]
    11/36: $19\nextState[3:0]
    12/36: $7\updateCounter[0:0]
    13/36: $18\nextState[3:0]
    14/36: $6\updateCounter[0:0]
    15/36: $17\nextState[3:0]
    16/36: $16\nextState[3:0]
    17/36: $5\updateCounter[0:0]
    18/36: $15\nextState[3:0]
    19/36: $14\nextState[3:0]
    20/36: $13\nextState[3:0]
    21/36: $4\updateCounter[0:0]
    22/36: $12\nextState[3:0]
    23/36: $11\nextState[3:0]
    24/36: $3\updateCounter[0:0]
    25/36: $10\nextState[3:0]
    26/36: $2\updateCounter[0:0]
    27/36: $9\nextState[3:0]
    28/36: $8\nextState[3:0]
    29/36: $7\nextState[3:0]
    30/36: $6\nextState[3:0]
    31/36: $5\nextState[3:0]
    32/36: $4\nextState[3:0]
    33/36: $3\nextState[3:0]
    34/36: $2\nextState[3:0]
    35/36: $1\updateCounter[0:0]
    36/36: $1\nextState[3:0]
Creating decoders for process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2037$369'.
     1/11: $0\waitCycles[7:0]
     2/11: $0\i1modk[5:0]
     3/11: $0\imodk[5:0]
     4/11: $0\msIdx[7:0]
     5/11: $0\leftIdx[7:0]
     6/11: $0\diagIdx[7:0]
     7/11: $0\topIdx[1:0]
     8/11: $0\curTopIdx[13:0]
     9/11: $0\nextTopIdx[13:0]
    10/11: $0\j[7:0]
    11/11: $0\i1[7:0]
Creating decoders for process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2002$360'.
     1/5: $0\stop[7:0]
     2/5: $0\mode[1:0]
     3/5: $0\loop[7:0]
     4/5: $0\n[7:0]
     5/5: $0\m[7:0]
Creating decoders for process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1770$355'.
Creating decoders for process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
     1/10: $0\curWriteEn1Reg0[0:0]
     2/10: $0\curWriteByteEn1Reg0[255:0]
     3/10: $0\curReadAddr1Reg0[7:0]
     4/10: $0\curWriteAddr1Reg0[7:0]
     5/10: $0\curWriteData1Reg0[2047:0]
     6/10: $0\curWriteEn0Reg0[0:0]
     7/10: $0\curWriteByteEn0Reg0[255:0]
     8/10: $0\curReadAddr0Reg0[7:0]
     9/10: $0\curWriteAddr0Reg0[7:0]
    10/10: $0\curWriteData0Reg0[2047:0]
Creating decoders for process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1516$224'.
Creating decoders for process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1497$223'.
Creating decoders for process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1227$221'.
     1/3: $3\topWriteDataLU[31:0]
     2/3: $2\topWriteDataLU[31:0]
     3/3: $1\topWriteDataLU[31:0]
Creating decoders for process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1213$217'.
     1/1: $0\multOperand[31:0]
Creating decoders for process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1205$215'.
     1/1: $0\diag[31:0]
Creating decoders for process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1198$212'.
Creating decoders for process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
     1/8: $0\leftWriteEn1Reg0[0:0]
     2/8: $0\leftWriteByteEn1Reg0[255:0]
     3/8: $0\leftWriteAddr1Reg0[7:0]
     4/8: $0\leftWriteData1Reg0[2047:0]
     5/8: $0\leftWriteEn0Reg0[0:0]
     6/8: $0\leftWriteByteEn0Reg0[255:0]
     7/8: $0\leftWriteAddr0Reg0[7:0]
     8/8: $0\leftWriteData0Reg0[2047:0]
Creating decoders for process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
     1/20: $0\block_n[7:0]
     2/20: $0\block_m[7:0]
     3/20: $0\mem_write_size_buf[7:0]
     4/20: $0\mem_write_size[7:0]
     5/20: $0\mem_write_buf[23:0]
     6/20: $0\mem_cur[23:0]
     7/20: $0\mem_left[23:0]
     8/20: $0\mem_write[23:0]
     9/20: $0\mem_top[23:0]
    10/20: $0\mem_base[23:0]
    11/20: $0\no_left_switch[0:0]
    12/20: $0\write_n_buf[7:0]
    13/20: $0\write_n[7:0]
    14/20: $0\ncount[19:0]
    15/20: $0\mcount[19:0]
    16/20: $0\comp_N[19:0]
    17/20: $0\left_mem_sel[0:0]
    18/20: $0\cur_mem_sel[0:0]
    19/20: $0\loop[7:0]
    20/20: $0\N[19:0]
Creating decoders for process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:511$114'.
     1/1: $1\mode[1:0]
Creating decoders for process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:497$113'.
     1/2: $0\cur_mem_state[3:0]
     2/2: $0\cur_state[4:0]
Creating decoders for process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:341$76'.
     1/1: $0\next_state[4:0]
Creating decoders for process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:301$51'.
     1/5: $0\mem_read[1:0]
     2/5: $0\mem_count[7:0]
     3/5: $0\mem_addr[23:0]
     4/5: $0\ram_addr[7:0]
     5/5: $0\read_n[7:0]
Creating decoders for process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:230$31'.
     1/1: $0\next_mem_state[3:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\shift.\postshift' from process `\shift.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5713$1186'.
No latch inferred for signal `\prenorm.\shiftedb' from process `\prenorm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5500$1144'.
No latch inferred for signal `\prenorm.\shifteda' from process `\prenorm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5397$1119'.
No latch inferred for signal `\div_24b.\res' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer22' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer21' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer20' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer19' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer18' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer17' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer16' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer15' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer14' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer13' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer12' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer11' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer10' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer9' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer8' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer7' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer6' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer5' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer4' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer3' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer2' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer1' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\div_24b.\numer0' from process `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
No latch inferred for signal `\fpu_div.\div [30:0]' from process `\fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4605$950'.
No latch inferred for signal `\fpu_div.\div [31]' from process `\fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4600$948'.
No latch inferred for signal `\fpu_div.\div_exp' from process `\fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4587$942'.
No latch inferred for signal `\fpu_add.\sum [30:0]' from process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4449$916'.
No latch inferred for signal `\fpu_add.\sum [31]' from process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4404$902'.
No latch inferred for signal `\fpu_add.\sum_man' from process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4404$902'.
No latch inferred for signal `\fpu_add.\smaller' from process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4404$902'.
No latch inferred for signal `\fpu_add.\a_exp' from process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4219$847'.
No latch inferred for signal `\fpu_add.\a_man' from process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4219$847'.
No latch inferred for signal `\fpu_add.\b_man' from process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4219$847'.
No latch inferred for signal `\fpu_add.\temp' from process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4219$847'.
No latch inferred for signal `\LUControl.\nextRowState' from process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2362$512'.
No latch inferred for signal `\LUControl.\startFetchRow' from process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2344$494'.
No latch inferred for signal `\LUControl.\doneFetchRow' from process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2344$494'.
No latch inferred for signal `\LUControl.\loadRow' from process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2344$494'.
No latch inferred for signal `\LUControl.\writeRow' from process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2344$494'.
No latch inferred for signal `\LUControl.\nextState' from process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2152$453'.
No latch inferred for signal `\LUControl.\updateCounter' from process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2152$453'.
No latch inferred for signal `\LU.\topWriteDataLU' from process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1227$221'.
No latch inferred for signal `\MarshallerController.\mode' from process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:511$114'.

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\fpmul.\y_out' using process `\fpmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5179$1026'.
  created $dff cell `$procdff$8583' with positive edge clock.
Creating register for signal `\fpu_div.\n_exp' using process `\fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4577$941'.
  created $dff cell `$procdff$8584' with positive edge clock.
Creating register for signal `\fpu_div.\d_exp' using process `\fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4577$941'.
  created $dff cell `$procdff$8585' with positive edge clock.
Creating register for signal `\fpu_div.\n_man' using process `\fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4577$941'.
  created $dff cell `$procdff$8586' with positive edge clock.
Creating register for signal `\fpu_div.\d_man' using process `\fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4577$941'.
  created $dff cell `$procdff$8587' with positive edge clock.
Creating register for signal `\fpu_div.\n_sign' using process `\fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4577$941'.
  created $dff cell `$procdff$8588' with positive edge clock.
Creating register for signal `\fpu_div.\d_sign' using process `\fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4577$941'.
  created $dff cell `$procdff$8589' with positive edge clock.
Creating register for signal `\fpu_add.\a' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4211$846'.
  created $dff cell `$procdff$8590' with positive edge clock.
Creating register for signal `\fpu_add.\b' using process `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4211$846'.
  created $dff cell `$procdff$8591' with positive edge clock.
Creating register for signal `\memcmd_fifo.\status_cnt' using process `\memcmd_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4139$835'.
  created $dff cell `$procdff$8592' with positive edge clock.
Creating register for signal `\memcmd_fifo.\q' using process `\memcmd_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4133$834'.
  created $dff cell `$procdff$8593' with positive edge clock.
Creating register for signal `\memcmd_fifo.\rd_pointer' using process `\memcmd_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4126$832'.
  created $dff cell `$procdff$8594' with positive edge clock.
Creating register for signal `\memcmd_fifo.\wr_pointer' using process `\memcmd_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4119$830'.
  created $dff cell `$procdff$8595' with positive edge clock.
Creating register for signal `\addr_fifo.\status_cnt' using process `\addr_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4065$817'.
  created $dff cell `$procdff$8596' with positive edge clock.
Creating register for signal `\addr_fifo.\q' using process `\addr_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4059$816'.
  created $dff cell `$procdff$8597' with positive edge clock.
Creating register for signal `\addr_fifo.\rd_pointer' using process `\addr_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4052$814'.
  created $dff cell `$procdff$8598' with positive edge clock.
Creating register for signal `\addr_fifo.\wr_pointer' using process `\addr_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4045$812'.
  created $dff cell `$procdff$8599' with positive edge clock.
Creating register for signal `\wfifo.\status_cnt' using process `\wfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3987$799'.
  created $dff cell `$procdff$8600' with positive edge clock.
Creating register for signal `\wfifo.\counter' using process `\wfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3916$765'.
  created $dff cell `$procdff$8601' with positive edge clock.
Creating register for signal `\wfifo.\q' using process `\wfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3916$765'.
  created $dff cell `$procdff$8602' with positive edge clock.
Creating register for signal `\wfifo.\rd_pointer' using process `\wfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3909$763'.
  created $dff cell `$procdff$8603' with positive edge clock.
Creating register for signal `\wfifo.\wr_pointer' using process `\wfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3902$761'.
  created $dff cell `$procdff$8604' with positive edge clock.
Creating register for signal `\rfifo.\status_cnt' using process `\rfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3844$749'.
  created $dff cell `$procdff$8605' with positive edge clock.
Creating register for signal `\rfifo.\counter' using process `\rfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3773$715'.
  created $dff cell `$procdff$8606' with positive edge clock.
Creating register for signal `\rfifo.\q' using process `\rfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3773$715'.
  created $dff cell `$procdff$8607' with positive edge clock.
Creating register for signal `\rfifo.\rd_pointer' using process `\rfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3766$713'.
  created $dff cell `$procdff$8608' with positive edge clock.
Creating register for signal `\rfifo.\wr_pointer' using process `\rfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3759$711'.
  created $dff cell `$procdff$8609' with positive edge clock.
Creating register for signal `\DataTransferUnit.\mem_addr0' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
  created $dff cell `$procdff$8610' with positive edge clock.
Creating register for signal `\DataTransferUnit.\mem_addr1' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
  created $dff cell `$procdff$8611' with positive edge clock.
Creating register for signal `\DataTransferUnit.\mem_addr2' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
  created $dff cell `$procdff$8612' with positive edge clock.
Creating register for signal `\DataTransferUnit.\mem_addr3' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
  created $dff cell `$procdff$8613' with positive edge clock.
Creating register for signal `\DataTransferUnit.\mem_addr4' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
  created $dff cell `$procdff$8614' with positive edge clock.
Creating register for signal `\DataTransferUnit.\fifo_write_reg [3:0]' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
  created $dff cell `$procdff$8615' with positive edge clock.
Creating register for signal `\DataTransferUnit.\write_req_reg [3:0]' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
  created $dff cell `$procdff$8616' with positive edge clock.
Creating register for signal `\DataTransferUnit.\read_req_reg [3:0]' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
  created $dff cell `$procdff$8617' with positive edge clock.
Creating register for signal `\DataTransferUnit.\size_count0' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
  created $dff cell `$procdff$8618' with positive edge clock.
Creating register for signal `\DataTransferUnit.\size_count1' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
  created $dff cell `$procdff$8619' with positive edge clock.
Creating register for signal `\DataTransferUnit.\size_count2' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
  created $dff cell `$procdff$8620' with positive edge clock.
Creating register for signal `\DataTransferUnit.\size_count3' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
  created $dff cell `$procdff$8621' with positive edge clock.
Creating register for signal `\DataTransferUnit.\ram_addr0' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
  created $dff cell `$procdff$8622' with positive edge clock.
Creating register for signal `\DataTransferUnit.\ram_addr1' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
  created $dff cell `$procdff$8623' with positive edge clock.
Creating register for signal `\DataTransferUnit.\ram_addr2' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
  created $dff cell `$procdff$8624' with positive edge clock.
Creating register for signal `\DataTransferUnit.\ram_addr3' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
  created $dff cell `$procdff$8625' with positive edge clock.
Creating register for signal `\DataTransferUnit.\ram_write_en_reg' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
  created $dff cell `$procdff$8626' with positive edge clock.
Creating register for signal `\DataTransferUnit.\mem_addr5' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3592$678'.
  created $dff cell `$procdff$8627' with positive edge clock.
Creating register for signal `\DataTransferUnit.\fifo_write_reg [4]' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3592$678'.
  created $dff cell `$procdff$8628' with positive edge clock.
Creating register for signal `\DataTransferUnit.\write_req_reg [4]' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3592$678'.
  created $dff cell `$procdff$8629' with positive edge clock.
Creating register for signal `\DataTransferUnit.\read_req_reg [4]' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3592$678'.
  created $dff cell `$procdff$8630' with positive edge clock.
Creating register for signal `\DataTransferUnit.\fifo_read_reg' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3592$678'.
  created $dff cell `$procdff$8631' with positive edge clock.
Creating register for signal `\DataTransferUnit.\size_count4' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3592$678'.
  created $dff cell `$procdff$8632' with positive edge clock.
Creating register for signal `\DataTransferUnit.\size' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3592$678'.
  created $dff cell `$procdff$8633' with positive edge clock.
Creating register for signal `\DataTransferUnit.\ram_addr4' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3592$678'.
  created $dff cell `$procdff$8634' with positive edge clock.
Creating register for signal `\DataTransferUnit.\data_count' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3592$678'.
  created $dff cell `$procdff$8635' with positive edge clock.
Creating register for signal `\DataTransferUnit.\state' using process `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3552$668'.
  created $dff cell `$procdff$8636' with positive edge clock.
Creating register for signal `\mult_add.\mult_result' using process `\mult_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3290$643'.
  created $dff cell `$procdff$8637' with positive edge clock.
Creating register for signal `\mult_add.\add_result' using process `\mult_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3290$643'.
  created $dff cell `$procdff$8638' with positive edge clock.
Creating register for signal `\LUControl.\done' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8639' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddr' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8640' with positive edge clock.
Creating register for signal `\LUControl.\topReadAddr' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8641' with positive edge clock.
Creating register for signal `\LUControl.\topWriteEn' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8642' with positive edge clock.
Creating register for signal `\LUControl.\leftWriteSel' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8643' with positive edge clock.
Creating register for signal `\LUControl.\curWriteSel' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8644' with positive edge clock.
Creating register for signal `\LUControl.\topSourceSel' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8645' with positive edge clock.
Creating register for signal `\LUControl.\diagEn' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8646' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSel' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8647' with positive edge clock.
Creating register for signal `\LUControl.\MOSel' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8648' with positive edge clock.
Creating register for signal `\LUControl.\MOEn' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8649' with positive edge clock.
Creating register for signal `\LUControl.\curWriteByteEn' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8650' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddr' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8651' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddr' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8652' with positive edge clock.
Creating register for signal `\LUControl.\curWriteEn' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8653' with positive edge clock.
Creating register for signal `\LUControl.\leftWriteByteEn' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8654' with positive edge clock.
Creating register for signal `\LUControl.\leftWriteAddr' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8655' with positive edge clock.
Creating register for signal `\LUControl.\leftReadAddr' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8656' with positive edge clock.
Creating register for signal `\LUControl.\leftWriteEn' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
  created $dff cell `$procdff$8657' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay0' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8658' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay1' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8659' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay2' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8660' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay3' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8661' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay4' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8662' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay5' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8663' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay6' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8664' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay7' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8665' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay8' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8666' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay9' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8667' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay10' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8668' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay11' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8669' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay12' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8670' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay13' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8671' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay14' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8672' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay15' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8673' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay16' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8674' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay17' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8675' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay18' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8676' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay19' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8677' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay20' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8678' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay21' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8679' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay22' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8680' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay23' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8681' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay24' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8682' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay25' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8683' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay26' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8684' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay27' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8685' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay28' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8686' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay29' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8687' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay30' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8688' with positive edge clock.
Creating register for signal `\LUControl.\writeByteEnDelay31' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8689' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay0' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8690' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay1' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8691' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay2' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8692' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay3' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8693' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay4' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8694' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay5' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8695' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay6' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8696' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay7' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8697' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay8' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8698' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay9' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8699' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay10' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8700' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay11' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8701' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay12' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8702' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay13' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8703' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay14' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8704' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay15' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8705' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay16' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8706' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay17' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8707' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay18' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8708' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay19' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8709' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay20' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8710' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay21' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8711' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay22' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8712' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay23' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8713' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay24' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8714' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay25' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8715' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay26' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8716' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay27' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8717' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay28' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8718' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay29' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8719' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay30' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8720' with positive edge clock.
Creating register for signal `\LUControl.\curWriteAddrDelay31' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8721' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay0' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8722' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay1' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8723' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay2' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8724' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay3' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8725' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay4' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8726' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay5' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8727' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay6' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8728' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay7' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8729' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay8' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8730' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay9' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8731' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay10' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8732' with positive edge clock.
Creating register for signal `\LUControl.\curReadAddrDelay11' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8733' with positive edge clock.
Creating register for signal `\LUControl.\leftWriteEnDelay' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8734' with positive edge clock.
Creating register for signal `\LUControl.\curWriteEnDelay' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8735' with positive edge clock.
Creating register for signal `\LUControl.\leftWriteSelDelay' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8736' with positive edge clock.
Creating register for signal `\LUControl.\curWriteSelDelay' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8737' with positive edge clock.
Creating register for signal `\LUControl.\leftReadAddrDelay0' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8738' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay0' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8739' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay1' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8740' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay2' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8741' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay3' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8742' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay4' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8743' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay5' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8744' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay6' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8745' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay7' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8746' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay8' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8747' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay9' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8748' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay10' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8749' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay11' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8750' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay12' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8751' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay13' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8752' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay14' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8753' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay15' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8754' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay16' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8755' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay17' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8756' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay18' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8757' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay19' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8758' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay20' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8759' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay21' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8760' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay22' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8761' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay23' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8762' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay24' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8763' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay25' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8764' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay26' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8765' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay27' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8766' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay28' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8767' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay29' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8768' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay30' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8769' with positive edge clock.
Creating register for signal `\LUControl.\topWriteAddrDelay31' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8770' with positive edge clock.
Creating register for signal `\LUControl.\topWriteEnDelay' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8771' with positive edge clock.
Creating register for signal `\LUControl.\topSourceSelDelay' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8772' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay0' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8773' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay1' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8774' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay2' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8775' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay3' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8776' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay4' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8777' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay5' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8778' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay6' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8779' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay7' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8780' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay8' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8781' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay9' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8782' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay10' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8783' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay11' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8784' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay12' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8785' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay13' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8786' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay14' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8787' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay15' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8788' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay16' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8789' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay17' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8790' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay18' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8791' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay19' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8792' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay20' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8793' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay21' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8794' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay22' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8795' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay23' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8796' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay24' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8797' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay25' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8798' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay26' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8799' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay27' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8800' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay28' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8801' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay29' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8802' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay30' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8803' with positive edge clock.
Creating register for signal `\LUControl.\topWriteSelDelay31' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8804' with positive edge clock.
Creating register for signal `\LUControl.\diagEnDelay' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8805' with positive edge clock.
Creating register for signal `\LUControl.\MOEnDelay' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
  created $dff cell `$procdff$8806' with positive edge clock.
Creating register for signal `\LUControl.\currentState' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2654$581'.
  created $dff cell `$procdff$8807' with positive edge clock.
Creating register for signal `\LUControl.\currentRowState' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2654$581'.
  created $dff cell `$procdff$8808' with positive edge clock.
Creating register for signal `\LUControl.\byteEn' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2645$573'.
  created $dff cell `$procdff$8809' with positive edge clock.
Creating register for signal `\LUControl.\nextTopIdxCounter' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2388$526'.
  created $dff cell `$procdff$8810' with positive edge clock.
Creating register for signal `\LUControl.\topIdxCounter' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2388$526'.
  created $dff cell `$procdff$8811' with positive edge clock.
Creating register for signal `\LUControl.\diagIdxCounter' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2388$526'.
  created $dff cell `$procdff$8812' with positive edge clock.
Creating register for signal `\LUControl.\leftIdxCounter' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2388$526'.
  created $dff cell `$procdff$8813' with positive edge clock.
Creating register for signal `\LUControl.\msIdxCounter' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2388$526'.
  created $dff cell `$procdff$8814' with positive edge clock.
Creating register for signal `\LUControl.\readRowCounter' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2388$526'.
  created $dff cell `$procdff$8815' with positive edge clock.
Creating register for signal `\LUControl.\topWriteCounter' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2388$526'.
  created $dff cell `$procdff$8816' with positive edge clock.
Creating register for signal `\LUControl.\i1modkByteEn' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2388$526'.
  created $dff cell `$procdff$8817' with positive edge clock.
Creating register for signal `\LUControl.\counter' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2388$526'.
  created $dff cell `$procdff$8818' with positive edge clock.
Creating register for signal `\LUControl.\divCounter' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2388$526'.
  created $dff cell `$procdff$8819' with positive edge clock.
Creating register for signal `\LUControl.\i1' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2037$369'.
  created $dff cell `$procdff$8820' with positive edge clock.
Creating register for signal `\LUControl.\j' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2037$369'.
  created $dff cell `$procdff$8821' with positive edge clock.
Creating register for signal `\LUControl.\nextTopIdx' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2037$369'.
  created $dff cell `$procdff$8822' with positive edge clock.
Creating register for signal `\LUControl.\nextTopIdx2' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2037$369'.
  created $dff cell `$procdff$8823' with positive edge clock.
Creating register for signal `\LUControl.\curTopIdx' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2037$369'.
  created $dff cell `$procdff$8824' with positive edge clock.
Creating register for signal `\LUControl.\topIdx' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2037$369'.
  created $dff cell `$procdff$8825' with positive edge clock.
Creating register for signal `\LUControl.\diagIdx' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2037$369'.
  created $dff cell `$procdff$8826' with positive edge clock.
Creating register for signal `\LUControl.\leftIdx' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2037$369'.
  created $dff cell `$procdff$8827' with positive edge clock.
Creating register for signal `\LUControl.\msIdx' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2037$369'.
  created $dff cell `$procdff$8828' with positive edge clock.
Creating register for signal `\LUControl.\imodk' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2037$369'.
  created $dff cell `$procdff$8829' with positive edge clock.
Creating register for signal `\LUControl.\i1modk' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2037$369'.
  created $dff cell `$procdff$8830' with positive edge clock.
Creating register for signal `\LUControl.\waitCycles' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2037$369'.
  created $dff cell `$procdff$8831' with positive edge clock.
Creating register for signal `\LUControl.\start' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2002$360'.
  created $dff cell `$procdff$8832' with positive edge clock.
Creating register for signal `\LUControl.\m' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2002$360'.
  created $dff cell `$procdff$8833' with positive edge clock.
Creating register for signal `\LUControl.\n' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2002$360'.
  created $dff cell `$procdff$8834' with positive edge clock.
Creating register for signal `\LUControl.\loop' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2002$360'.
  created $dff cell `$procdff$8835' with positive edge clock.
Creating register for signal `\LUControl.\mode' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2002$360'.
  created $dff cell `$procdff$8836' with positive edge clock.
Creating register for signal `\LUControl.\startDelay' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2002$360'.
  created $dff cell `$procdff$8837' with positive edge clock.
Creating register for signal `\LUControl.\stop' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2002$360'.
  created $dff cell `$procdff$8838' with positive edge clock.
Creating register for signal `\LUControl.\stop2' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2002$360'.
  created $dff cell `$procdff$8839' with positive edge clock.
Creating register for signal `\LUControl.\mdivk' using process `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2002$360'.
  created $dff cell `$procdff$8840' with positive edge clock.
Creating register for signal `\LU.\curReadData0Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1770$355'.
  created $dff cell `$procdff$8841' with positive edge clock.
Creating register for signal `\LU.\curReadData1Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1770$355'.
  created $dff cell `$procdff$8842' with positive edge clock.
Creating register for signal `\LU.\curWriteData0Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8843' with positive edge clock.
Creating register for signal `\LU.\curWriteData0Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8844' with positive edge clock.
Creating register for signal `\LU.\curWriteData1Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8845' with positive edge clock.
Creating register for signal `\LU.\curWriteData1Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8846' with positive edge clock.
Creating register for signal `\LU.\curWriteAddr0Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8847' with positive edge clock.
Creating register for signal `\LU.\curWriteAddr0Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8848' with positive edge clock.
Creating register for signal `\LU.\curReadAddr0Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8849' with positive edge clock.
Creating register for signal `\LU.\curReadAddr0Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8850' with positive edge clock.
Creating register for signal `\LU.\curWriteAddr1Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8851' with positive edge clock.
Creating register for signal `\LU.\curWriteAddr1Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8852' with positive edge clock.
Creating register for signal `\LU.\curReadAddr1Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8853' with positive edge clock.
Creating register for signal `\LU.\curReadAddr1Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8854' with positive edge clock.
Creating register for signal `\LU.\curWriteByteEn0Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8855' with positive edge clock.
Creating register for signal `\LU.\curWriteByteEn0Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8856' with positive edge clock.
Creating register for signal `\LU.\curWriteByteEn1Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8857' with positive edge clock.
Creating register for signal `\LU.\curWriteByteEn1Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8858' with positive edge clock.
Creating register for signal `\LU.\curWriteEn0Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8859' with positive edge clock.
Creating register for signal `\LU.\curWriteEn0Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8860' with positive edge clock.
Creating register for signal `\LU.\curWriteEn1Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8861' with positive edge clock.
Creating register for signal `\LU.\curWriteEn1Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
  created $dff cell `$procdff$8862' with positive edge clock.
Creating register for signal `\LU.\topReadDataReg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1516$224'.
  created $dff cell `$procdff$8863' with positive edge clock.
Creating register for signal `\LU.\topWriteDataReg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1497$223'.
  created $dff cell `$procdff$8864' with positive edge clock.
Creating register for signal `\LU.\topWriteDataReg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1497$223'.
  created $dff cell `$procdff$8865' with positive edge clock.
Creating register for signal `\LU.\topWriteDataReg2' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1497$223'.
  created $dff cell `$procdff$8866' with positive edge clock.
Creating register for signal `\LU.\topWriteAddrReg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1497$223'.
  created $dff cell `$procdff$8867' with positive edge clock.
Creating register for signal `\LU.\topWriteAddrReg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1497$223'.
  created $dff cell `$procdff$8868' with positive edge clock.
Creating register for signal `\LU.\topWriteAddrReg2' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1497$223'.
  created $dff cell `$procdff$8869' with positive edge clock.
Creating register for signal `\LU.\topReadAddrReg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1497$223'.
  created $dff cell `$procdff$8870' with positive edge clock.
Creating register for signal `\LU.\topReadAddrReg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1497$223'.
  created $dff cell `$procdff$8871' with positive edge clock.
Creating register for signal `\LU.\topReadAddrReg2' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1497$223'.
  created $dff cell `$procdff$8872' with positive edge clock.
Creating register for signal `\LU.\topWriteEnReg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1497$223'.
  created $dff cell `$procdff$8873' with positive edge clock.
Creating register for signal `\LU.\topWriteEnReg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1497$223'.
  created $dff cell `$procdff$8874' with positive edge clock.
Creating register for signal `\LU.\topWriteEnReg2' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1497$223'.
  created $dff cell `$procdff$8875' with positive edge clock.
Creating register for signal `\LU.\multOperand' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1213$217'.
  created $dff cell `$procdff$8876' with positive edge clock.
Creating register for signal `\LU.\diag' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1205$215'.
  created $dff cell `$procdff$8877' with positive edge clock.
Creating register for signal `\LU.\leftReadData0Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1198$212'.
  created $dff cell `$procdff$8878' with positive edge clock.
Creating register for signal `\LU.\leftReadData1Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1198$212'.
  created $dff cell `$procdff$8879' with positive edge clock.
Creating register for signal `\LU.\leftWriteData0Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8880' with positive edge clock.
Creating register for signal `\LU.\leftWriteData0Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8881' with positive edge clock.
Creating register for signal `\LU.\leftWriteData1Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8882' with positive edge clock.
Creating register for signal `\LU.\leftWriteData1Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8883' with positive edge clock.
Creating register for signal `\LU.\leftWriteAddr0Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8884' with positive edge clock.
Creating register for signal `\LU.\leftWriteAddr0Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8885' with positive edge clock.
Creating register for signal `\LU.\leftReadAddr0Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8886' with positive edge clock.
Creating register for signal `\LU.\leftReadAddr0Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8887' with positive edge clock.
Creating register for signal `\LU.\leftWriteAddr1Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8888' with positive edge clock.
Creating register for signal `\LU.\leftWriteAddr1Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8889' with positive edge clock.
Creating register for signal `\LU.\leftReadAddr1Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8890' with positive edge clock.
Creating register for signal `\LU.\leftReadAddr1Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8891' with positive edge clock.
Creating register for signal `\LU.\leftWriteByteEn0Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8892' with positive edge clock.
Creating register for signal `\LU.\leftWriteByteEn0Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8893' with positive edge clock.
Creating register for signal `\LU.\leftWriteByteEn1Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8894' with positive edge clock.
Creating register for signal `\LU.\leftWriteByteEn1Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8895' with positive edge clock.
Creating register for signal `\LU.\leftWriteEn0Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8896' with positive edge clock.
Creating register for signal `\LU.\leftWriteEn0Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8897' with positive edge clock.
Creating register for signal `\LU.\leftWriteEn1Reg0' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8898' with positive edge clock.
Creating register for signal `\LU.\leftWriteEn1Reg1' using process `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
  created $dff cell `$procdff$8899' with positive edge clock.
Creating register for signal `\MarshallerController.\N' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8900' with positive edge clock.
Creating register for signal `\MarshallerController.\loop' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8901' with positive edge clock.
Creating register for signal `\MarshallerController.\block_m' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8902' with positive edge clock.
Creating register for signal `\MarshallerController.\block_n' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8903' with positive edge clock.
Creating register for signal `\MarshallerController.\cur_mem_sel' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8904' with positive edge clock.
Creating register for signal `\MarshallerController.\left_mem_sel' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8905' with positive edge clock.
Creating register for signal `\MarshallerController.\comp_N' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8906' with positive edge clock.
Creating register for signal `\MarshallerController.\mcount' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8907' with positive edge clock.
Creating register for signal `\MarshallerController.\ncount' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8908' with positive edge clock.
Creating register for signal `\MarshallerController.\Ndivk' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8909' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_N' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8910' with positive edge clock.
Creating register for signal `\MarshallerController.\write_n' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8911' with positive edge clock.
Creating register for signal `\MarshallerController.\write_n_buf' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8912' with positive edge clock.
Creating register for signal `\MarshallerController.\no_left_switch' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8913' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_base' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8914' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_top' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8915' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_write' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8916' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_left' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8917' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_cur' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8918' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_write_buf' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8919' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_write_size' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8920' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_write_size_buf' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8921' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_read_size' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
  created $dff cell `$procdff$8922' with positive edge clock.
Creating register for signal `\MarshallerController.\cur_state' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:497$113'.
  created $dff cell `$procdff$8923' with positive edge clock.
Creating register for signal `\MarshallerController.\cur_mem_state' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:497$113'.
  created $dff cell `$procdff$8924' with positive edge clock.
Creating register for signal `\MarshallerController.\next_state' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:341$76'.
  created $dff cell `$procdff$8925' with positive edge clock.
Creating register for signal `\MarshallerController.\read_n' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:301$51'.
  created $dff cell `$procdff$8926' with positive edge clock.
Creating register for signal `\MarshallerController.\ram_addr' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:301$51'.
  created $dff cell `$procdff$8927' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_addr' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:301$51'.
  created $dff cell `$procdff$8928' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_count' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:301$51'.
  created $dff cell `$procdff$8929' with positive edge clock.
Creating register for signal `\MarshallerController.\mem_read' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:301$51'.
  created $dff cell `$procdff$8930' with positive edge clock.
Creating register for signal `\MarshallerController.\next_mem_state' using process `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:230$31'.
  created $dff cell `$procdff$8931' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\shift.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5713$1186'.
Removing empty process `shift.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5713$1186'.
Found and cleaned up 1 empty switch in `\prenorm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5500$1144'.
Removing empty process `prenorm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5500$1144'.
Found and cleaned up 1 empty switch in `\prenorm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5397$1119'.
Removing empty process `prenorm.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5397$1119'.
Removing empty process `fpmul.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:5179$1026'.
Found and cleaned up 24 empty switches in `\div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
Removing empty process `div_24b.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4752$974'.
Found and cleaned up 23 empty switches in `\fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4605$950'.
Removing empty process `fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4605$950'.
Removing empty process `fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4600$948'.
Found and cleaned up 1 empty switch in `\fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4587$942'.
Removing empty process `fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4587$942'.
Removing empty process `fpu_div.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4577$941'.
Found and cleaned up 24 empty switches in `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4449$916'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4449$916'.
Found and cleaned up 6 empty switches in `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4404$902'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4404$902'.
Found and cleaned up 4 empty switches in `\fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4219$847'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4219$847'.
Removing empty process `fpu_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4211$846'.
Found and cleaned up 2 empty switches in `\memcmd_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4139$835'.
Removing empty process `memcmd_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4139$835'.
Found and cleaned up 1 empty switch in `\memcmd_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4133$834'.
Removing empty process `memcmd_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4133$834'.
Found and cleaned up 1 empty switch in `\memcmd_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4126$832'.
Removing empty process `memcmd_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4126$832'.
Found and cleaned up 1 empty switch in `\memcmd_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4119$830'.
Removing empty process `memcmd_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4119$830'.
Found and cleaned up 2 empty switches in `\addr_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4065$817'.
Removing empty process `addr_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4065$817'.
Found and cleaned up 1 empty switch in `\addr_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4059$816'.
Removing empty process `addr_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4059$816'.
Found and cleaned up 1 empty switch in `\addr_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4052$814'.
Removing empty process `addr_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4052$814'.
Found and cleaned up 1 empty switch in `\addr_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4045$812'.
Removing empty process `addr_fifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4045$812'.
Found and cleaned up 2 empty switches in `\wfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3987$799'.
Removing empty process `wfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3987$799'.
Found and cleaned up 33 empty switches in `\wfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3916$765'.
Removing empty process `wfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3916$765'.
Found and cleaned up 1 empty switch in `\wfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3909$763'.
Removing empty process `wfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3909$763'.
Found and cleaned up 1 empty switch in `\wfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3902$761'.
Removing empty process `wfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3902$761'.
Found and cleaned up 2 empty switches in `\rfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3844$749'.
Removing empty process `rfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3844$749'.
Found and cleaned up 33 empty switches in `\rfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3773$715'.
Removing empty process `rfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3773$715'.
Found and cleaned up 1 empty switch in `\rfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3766$713'.
Removing empty process `rfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3766$713'.
Found and cleaned up 1 empty switch in `\rfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3759$711'.
Removing empty process `rfifo.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3759$711'.
Found and cleaned up 3 empty switches in `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
Removing empty process `DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3661$707'.
Found and cleaned up 6 empty switches in `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3592$678'.
Removing empty process `DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3592$678'.
Found and cleaned up 6 empty switches in `\DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3552$668'.
Removing empty process `DataTransferUnit.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3552$668'.
Removing empty process `mult_add.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3290$643'.
Found and cleaned up 7 empty switches in `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
Removing empty process `LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3012$618'.
Found and cleaned up 18 empty switches in `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
Removing empty process `LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2668$584'.
Found and cleaned up 2 empty switches in `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2654$581'.
Removing empty process `LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2654$581'.
Found and cleaned up 1 empty switch in `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2645$573'.
Removing empty process `LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2645$573'.
Found and cleaned up 18 empty switches in `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2388$526'.
Removing empty process `LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2388$526'.
Found and cleaned up 5 empty switches in `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2362$512'.
Removing empty process `LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2362$512'.
Found and cleaned up 3 empty switches in `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2344$494'.
Removing empty process `LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2344$494'.
Found and cleaned up 26 empty switches in `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2152$453'.
Removing empty process `LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2152$453'.
Found and cleaned up 40 empty switches in `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2037$369'.
Removing empty process `LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2037$369'.
Found and cleaned up 2 empty switches in `\LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2002$360'.
Removing empty process `LUControl.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2002$360'.
Removing empty process `LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1770$355'.
Found and cleaned up 1 empty switch in `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
Removing empty process `LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1720$353'.
Removing empty process `LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1516$224'.
Removing empty process `LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1497$223'.
Found and cleaned up 3 empty switches in `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1227$221'.
Removing empty process `LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1227$221'.
Found and cleaned up 3 empty switches in `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1213$217'.
Removing empty process `LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1213$217'.
Found and cleaned up 1 empty switch in `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1205$215'.
Removing empty process `LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1205$215'.
Removing empty process `LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1198$212'.
Found and cleaned up 1 empty switch in `\LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
Removing empty process `LU.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:1150$210'.
Found and cleaned up 24 empty switches in `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
Removing empty process `MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:525$115'.
Found and cleaned up 1 empty switch in `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:511$114'.
Removing empty process `MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:511$114'.
Found and cleaned up 1 empty switch in `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:497$113'.
Removing empty process `MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:497$113'.
Found and cleaned up 24 empty switches in `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:341$76'.
Removing empty process `MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:341$76'.
Found and cleaned up 6 empty switches in `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:301$51'.
Removing empty process `MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:301$51'.
Found and cleaned up 10 empty switches in `\MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:230$31'.
Removing empty process `MarshallerController.$proc$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:230$31'.
Cleaned up 381 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module assemble.
Optimizing module flag.
Optimizing module round.
Optimizing module shift.
<suppressed ~33 debug messages>
Optimizing module normalize.
Optimizing module exponent.
Optimizing module multiply_a.
Optimizing module prenorm.
<suppressed ~46 debug messages>
Optimizing module special.
Optimizing module preprocess.
<suppressed ~4 debug messages>
Optimizing module fpmul.
Optimizing module div_24b.
Optimizing module fpu_div.
Optimizing module fpu_add.
<suppressed ~50 debug messages>
Optimizing module memcmd_fifo.
<suppressed ~2 debug messages>
Optimizing module addr_fifo.
<suppressed ~2 debug messages>
Optimizing module wfifo.
<suppressed ~3 debug messages>
Optimizing module rfifo.
<suppressed ~5 debug messages>
Optimizing module DataTransferUnit.
<suppressed ~58 debug messages>
Optimizing module mult_add.
<suppressed ~1 debug messages>
Optimizing module top_ram.
Optimizing module ram3.
Optimizing module ram2.
Optimizing module ram1.
Optimizing module ram.
Optimizing module LUControl.
<suppressed ~61 debug messages>
Optimizing module LU.
<suppressed ~167 debug messages>
Optimizing module MarshallerController.
<suppressed ~29 debug messages>
Optimizing module LU64PEEng.
<suppressed ~2 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module assemble.
Optimizing module flag.
Optimizing module round.
Optimizing module shift.
Optimizing module normalize.
Optimizing module exponent.
Optimizing module multiply_a.
Optimizing module prenorm.
Optimizing module special.
Optimizing module preprocess.
Optimizing module fpmul.
Optimizing module div_24b.
Optimizing module fpu_div.
Optimizing module fpu_add.
Optimizing module memcmd_fifo.
Optimizing module addr_fifo.
Optimizing module wfifo.
Optimizing module rfifo.
Optimizing module DataTransferUnit.
Optimizing module mult_add.
Optimizing module top_ram.
Optimizing module ram3.
Optimizing module ram2.
Optimizing module ram1.
Optimizing module ram.
Optimizing module LUControl.
Optimizing module LU.
Optimizing module MarshallerController.
Optimizing module LU64PEEng.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\assemble'.
Finding identical cells in module `\flag'.
<suppressed ~3 debug messages>
Finding identical cells in module `\round'.
<suppressed ~3 debug messages>
Finding identical cells in module `\shift'.
Finding identical cells in module `\normalize'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\multiply_a'.
Finding identical cells in module `\prenorm'.
Finding identical cells in module `\special'.
Finding identical cells in module `\preprocess'.
Finding identical cells in module `\fpmul'.
<suppressed ~3 debug messages>
Finding identical cells in module `\div_24b'.
Finding identical cells in module `\fpu_div'.
Finding identical cells in module `\fpu_add'.
<suppressed ~12 debug messages>
Finding identical cells in module `\memcmd_fifo'.
Finding identical cells in module `\addr_fifo'.
Finding identical cells in module `\wfifo'.
Finding identical cells in module `\rfifo'.
Finding identical cells in module `\DataTransferUnit'.
<suppressed ~69 debug messages>
Finding identical cells in module `\mult_add'.
Finding identical cells in module `\top_ram'.
Finding identical cells in module `\ram3'.
Finding identical cells in module `\ram2'.
Finding identical cells in module `\ram1'.
Finding identical cells in module `\ram'.
Finding identical cells in module `\LUControl'.
<suppressed ~534 debug messages>
Finding identical cells in module `\LU'.
<suppressed ~396 debug messages>
Finding identical cells in module `\MarshallerController'.
<suppressed ~294 debug messages>
Finding identical cells in module `\LU64PEEng'.
Removed a total of 438 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \assemble..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \flag..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \round..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \normalize..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exponent..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \multiply_a..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \prenorm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \special..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \preprocess..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpmul..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \div_24b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$3146.
    dead port 1/2 on $mux $procmux$3140.
    dead port 1/2 on $mux $procmux$3134.
    dead port 1/2 on $mux $procmux$3131.
    dead port 1/2 on $mux $procmux$3125.
    dead port 1/2 on $mux $procmux$3122.
    dead port 1/2 on $mux $procmux$3116.
    dead port 1/2 on $mux $procmux$3113.
    dead port 1/2 on $mux $procmux$3110.
    dead port 1/2 on $mux $procmux$3104.
    dead port 1/2 on $mux $procmux$3101.
    dead port 1/2 on $mux $procmux$3098.
    dead port 1/2 on $mux $procmux$3092.
    dead port 1/2 on $mux $procmux$3089.
    dead port 1/2 on $mux $procmux$3086.
    dead port 1/2 on $mux $procmux$3083.
    dead port 1/2 on $mux $procmux$3077.
    dead port 1/2 on $mux $procmux$3074.
    dead port 1/2 on $mux $procmux$3071.
    dead port 1/2 on $mux $procmux$3068.
    dead port 1/2 on $mux $procmux$3062.
    dead port 1/2 on $mux $procmux$3059.
    dead port 1/2 on $mux $procmux$3056.
    dead port 1/2 on $mux $procmux$3053.
    dead port 1/2 on $mux $procmux$3050.
    dead port 1/2 on $mux $procmux$3044.
    dead port 1/2 on $mux $procmux$3041.
    dead port 1/2 on $mux $procmux$3038.
    dead port 1/2 on $mux $procmux$3035.
    dead port 1/2 on $mux $procmux$3032.
    dead port 1/2 on $mux $procmux$3026.
    dead port 1/2 on $mux $procmux$3023.
    dead port 1/2 on $mux $procmux$3020.
    dead port 1/2 on $mux $procmux$3017.
    dead port 1/2 on $mux $procmux$3014.
    dead port 1/2 on $mux $procmux$3011.
    dead port 1/2 on $mux $procmux$3005.
    dead port 1/2 on $mux $procmux$3002.
    dead port 1/2 on $mux $procmux$2999.
    dead port 1/2 on $mux $procmux$2996.
    dead port 1/2 on $mux $procmux$2993.
    dead port 1/2 on $mux $procmux$2990.
    dead port 1/2 on $mux $procmux$2984.
    dead port 1/2 on $mux $procmux$2981.
    dead port 1/2 on $mux $procmux$2978.
    dead port 1/2 on $mux $procmux$2975.
    dead port 1/2 on $mux $procmux$2972.
    dead port 1/2 on $mux $procmux$2969.
    dead port 1/2 on $mux $procmux$2966.
    dead port 1/2 on $mux $procmux$2960.
    dead port 1/2 on $mux $procmux$2957.
    dead port 1/2 on $mux $procmux$2954.
    dead port 1/2 on $mux $procmux$2951.
    dead port 1/2 on $mux $procmux$2948.
    dead port 1/2 on $mux $procmux$2945.
    dead port 1/2 on $mux $procmux$2942.
    dead port 1/2 on $mux $procmux$2936.
    dead port 1/2 on $mux $procmux$2933.
    dead port 1/2 on $mux $procmux$2930.
    dead port 1/2 on $mux $procmux$2927.
    dead port 1/2 on $mux $procmux$2924.
    dead port 1/2 on $mux $procmux$2921.
    dead port 1/2 on $mux $procmux$2918.
    dead port 1/2 on $mux $procmux$2915.
    dead port 1/2 on $mux $procmux$2909.
    dead port 1/2 on $mux $procmux$2906.
    dead port 1/2 on $mux $procmux$2903.
    dead port 1/2 on $mux $procmux$2900.
    dead port 1/2 on $mux $procmux$2897.
    dead port 1/2 on $mux $procmux$2894.
    dead port 1/2 on $mux $procmux$2891.
    dead port 1/2 on $mux $procmux$2888.
    dead port 1/2 on $mux $procmux$2882.
    dead port 1/2 on $mux $procmux$2879.
    dead port 1/2 on $mux $procmux$2876.
    dead port 1/2 on $mux $procmux$2873.
    dead port 1/2 on $mux $procmux$2870.
    dead port 1/2 on $mux $procmux$2867.
    dead port 1/2 on $mux $procmux$2864.
    dead port 1/2 on $mux $procmux$2861.
    dead port 1/2 on $mux $procmux$2858.
    dead port 1/2 on $mux $procmux$2852.
    dead port 1/2 on $mux $procmux$2849.
    dead port 1/2 on $mux $procmux$2846.
    dead port 1/2 on $mux $procmux$2843.
    dead port 1/2 on $mux $procmux$2840.
    dead port 1/2 on $mux $procmux$2837.
    dead port 1/2 on $mux $procmux$2834.
    dead port 1/2 on $mux $procmux$2831.
    dead port 1/2 on $mux $procmux$2828.
    dead port 1/2 on $mux $procmux$2822.
    dead port 1/2 on $mux $procmux$2819.
    dead port 1/2 on $mux $procmux$2816.
    dead port 1/2 on $mux $procmux$2813.
    dead port 1/2 on $mux $procmux$2810.
    dead port 1/2 on $mux $procmux$2807.
    dead port 1/2 on $mux $procmux$2804.
    dead port 1/2 on $mux $procmux$2801.
    dead port 1/2 on $mux $procmux$2798.
    dead port 1/2 on $mux $procmux$2795.
    dead port 1/2 on $mux $procmux$2789.
    dead port 1/2 on $mux $procmux$2786.
    dead port 1/2 on $mux $procmux$2783.
    dead port 1/2 on $mux $procmux$2780.
    dead port 1/2 on $mux $procmux$2777.
    dead port 1/2 on $mux $procmux$2774.
    dead port 1/2 on $mux $procmux$2771.
    dead port 1/2 on $mux $procmux$2768.
    dead port 1/2 on $mux $procmux$2765.
    dead port 1/2 on $mux $procmux$2762.
    dead port 1/2 on $mux $procmux$2756.
    dead port 1/2 on $mux $procmux$2753.
    dead port 1/2 on $mux $procmux$2750.
    dead port 1/2 on $mux $procmux$2747.
    dead port 1/2 on $mux $procmux$2744.
    dead port 1/2 on $mux $procmux$2741.
    dead port 1/2 on $mux $procmux$2738.
    dead port 1/2 on $mux $procmux$2735.
    dead port 1/2 on $mux $procmux$2732.
    dead port 1/2 on $mux $procmux$2729.
    dead port 1/2 on $mux $procmux$2726.
    dead port 1/2 on $mux $procmux$2720.
    dead port 1/2 on $mux $procmux$2717.
    dead port 1/2 on $mux $procmux$2714.
    dead port 1/2 on $mux $procmux$2711.
    dead port 1/2 on $mux $procmux$2708.
    dead port 1/2 on $mux $procmux$2705.
    dead port 1/2 on $mux $procmux$2702.
    dead port 1/2 on $mux $procmux$2699.
    dead port 1/2 on $mux $procmux$2696.
    dead port 1/2 on $mux $procmux$2693.
    dead port 1/2 on $mux $procmux$2690.
    dead port 1/2 on $mux $procmux$2684.
    dead port 1/2 on $mux $procmux$2681.
    dead port 1/2 on $mux $procmux$2678.
    dead port 1/2 on $mux $procmux$2675.
    dead port 1/2 on $mux $procmux$2672.
    dead port 1/2 on $mux $procmux$2669.
    dead port 1/2 on $mux $procmux$2666.
    dead port 1/2 on $mux $procmux$2663.
    dead port 1/2 on $mux $procmux$2660.
    dead port 1/2 on $mux $procmux$2657.
    dead port 1/2 on $mux $procmux$2654.
    dead port 1/2 on $mux $procmux$2651.
    dead port 1/2 on $mux $procmux$2645.
    dead port 1/2 on $mux $procmux$2642.
    dead port 1/2 on $mux $procmux$2639.
    dead port 1/2 on $mux $procmux$2636.
    dead port 1/2 on $mux $procmux$2633.
    dead port 1/2 on $mux $procmux$2630.
    dead port 1/2 on $mux $procmux$2627.
    dead port 1/2 on $mux $procmux$2624.
    dead port 1/2 on $mux $procmux$2621.
    dead port 1/2 on $mux $procmux$2618.
    dead port 1/2 on $mux $procmux$2615.
    dead port 1/2 on $mux $procmux$2612.
    dead port 1/2 on $mux $procmux$2606.
    dead port 1/2 on $mux $procmux$2603.
    dead port 1/2 on $mux $procmux$2600.
    dead port 1/2 on $mux $procmux$2597.
    dead port 1/2 on $mux $procmux$2594.
    dead port 1/2 on $mux $procmux$2591.
    dead port 1/2 on $mux $procmux$2588.
    dead port 1/2 on $mux $procmux$2585.
    dead port 1/2 on $mux $procmux$2582.
    dead port 1/2 on $mux $procmux$2579.
    dead port 1/2 on $mux $procmux$2576.
    dead port 1/2 on $mux $procmux$2573.
    dead port 1/2 on $mux $procmux$2570.
    dead port 1/2 on $mux $procmux$2564.
    dead port 1/2 on $mux $procmux$2561.
    dead port 1/2 on $mux $procmux$2558.
    dead port 1/2 on $mux $procmux$2555.
    dead port 1/2 on $mux $procmux$2552.
    dead port 1/2 on $mux $procmux$2549.
    dead port 1/2 on $mux $procmux$2546.
    dead port 1/2 on $mux $procmux$2543.
    dead port 1/2 on $mux $procmux$2540.
    dead port 1/2 on $mux $procmux$2537.
    dead port 1/2 on $mux $procmux$2534.
    dead port 1/2 on $mux $procmux$2531.
    dead port 1/2 on $mux $procmux$2528.
    dead port 1/2 on $mux $procmux$2522.
    dead port 1/2 on $mux $procmux$2519.
    dead port 1/2 on $mux $procmux$2516.
    dead port 1/2 on $mux $procmux$2513.
    dead port 1/2 on $mux $procmux$2510.
    dead port 1/2 on $mux $procmux$2507.
    dead port 1/2 on $mux $procmux$2504.
    dead port 1/2 on $mux $procmux$2501.
    dead port 1/2 on $mux $procmux$2498.
    dead port 1/2 on $mux $procmux$2495.
    dead port 1/2 on $mux $procmux$2492.
    dead port 1/2 on $mux $procmux$2489.
    dead port 1/2 on $mux $procmux$2486.
    dead port 1/2 on $mux $procmux$2483.
    dead port 1/2 on $mux $procmux$2477.
    dead port 1/2 on $mux $procmux$2474.
    dead port 1/2 on $mux $procmux$2471.
    dead port 1/2 on $mux $procmux$2468.
    dead port 1/2 on $mux $procmux$2465.
    dead port 1/2 on $mux $procmux$2462.
    dead port 1/2 on $mux $procmux$2459.
    dead port 1/2 on $mux $procmux$2456.
    dead port 1/2 on $mux $procmux$2453.
    dead port 1/2 on $mux $procmux$2450.
    dead port 1/2 on $mux $procmux$2447.
    dead port 1/2 on $mux $procmux$2444.
    dead port 1/2 on $mux $procmux$2441.
    dead port 1/2 on $mux $procmux$2438.
    dead port 1/2 on $mux $procmux$2432.
    dead port 1/2 on $mux $procmux$2429.
    dead port 1/2 on $mux $procmux$2426.
    dead port 1/2 on $mux $procmux$2423.
    dead port 1/2 on $mux $procmux$2420.
    dead port 1/2 on $mux $procmux$2417.
    dead port 1/2 on $mux $procmux$2414.
    dead port 1/2 on $mux $procmux$2411.
    dead port 1/2 on $mux $procmux$2408.
    dead port 1/2 on $mux $procmux$2405.
    dead port 1/2 on $mux $procmux$2402.
    dead port 1/2 on $mux $procmux$2399.
    dead port 1/2 on $mux $procmux$2396.
    dead port 1/2 on $mux $procmux$2393.
    dead port 1/2 on $mux $procmux$2390.
    dead port 1/2 on $mux $procmux$2384.
    dead port 1/2 on $mux $procmux$2381.
    dead port 1/2 on $mux $procmux$2378.
    dead port 1/2 on $mux $procmux$2375.
    dead port 1/2 on $mux $procmux$2372.
    dead port 1/2 on $mux $procmux$2369.
    dead port 1/2 on $mux $procmux$2366.
    dead port 1/2 on $mux $procmux$2363.
    dead port 1/2 on $mux $procmux$2360.
    dead port 1/2 on $mux $procmux$2357.
    dead port 1/2 on $mux $procmux$2354.
    dead port 1/2 on $mux $procmux$2351.
    dead port 1/2 on $mux $procmux$2348.
    dead port 1/2 on $mux $procmux$2345.
    dead port 1/2 on $mux $procmux$2342.
    dead port 1/2 on $mux $procmux$2336.
    dead port 1/2 on $mux $procmux$2333.
    dead port 1/2 on $mux $procmux$2330.
    dead port 1/2 on $mux $procmux$2327.
    dead port 1/2 on $mux $procmux$2324.
    dead port 1/2 on $mux $procmux$2321.
    dead port 1/2 on $mux $procmux$2318.
    dead port 1/2 on $mux $procmux$2315.
    dead port 1/2 on $mux $procmux$2312.
    dead port 1/2 on $mux $procmux$2309.
    dead port 1/2 on $mux $procmux$2306.
    dead port 1/2 on $mux $procmux$2303.
    dead port 1/2 on $mux $procmux$2300.
    dead port 1/2 on $mux $procmux$2297.
    dead port 1/2 on $mux $procmux$2294.
    dead port 1/2 on $mux $procmux$2291.
    dead port 1/2 on $mux $procmux$2285.
    dead port 1/2 on $mux $procmux$2282.
    dead port 1/2 on $mux $procmux$2279.
    dead port 1/2 on $mux $procmux$2276.
    dead port 1/2 on $mux $procmux$2273.
    dead port 1/2 on $mux $procmux$2270.
    dead port 1/2 on $mux $procmux$2267.
    dead port 1/2 on $mux $procmux$2264.
    dead port 1/2 on $mux $procmux$2261.
    dead port 1/2 on $mux $procmux$2258.
    dead port 1/2 on $mux $procmux$2255.
    dead port 1/2 on $mux $procmux$2252.
    dead port 1/2 on $mux $procmux$2249.
    dead port 1/2 on $mux $procmux$2246.
    dead port 1/2 on $mux $procmux$2243.
    dead port 1/2 on $mux $procmux$2240.
    dead port 1/2 on $mux $procmux$2234.
    dead port 1/2 on $mux $procmux$2231.
    dead port 1/2 on $mux $procmux$2228.
    dead port 1/2 on $mux $procmux$2225.
    dead port 1/2 on $mux $procmux$2222.
    dead port 1/2 on $mux $procmux$2219.
    dead port 1/2 on $mux $procmux$2216.
    dead port 1/2 on $mux $procmux$2213.
    dead port 1/2 on $mux $procmux$2210.
    dead port 1/2 on $mux $procmux$2207.
    dead port 1/2 on $mux $procmux$2204.
    dead port 1/2 on $mux $procmux$2201.
    dead port 1/2 on $mux $procmux$2198.
    dead port 1/2 on $mux $procmux$2195.
    dead port 1/2 on $mux $procmux$2192.
    dead port 1/2 on $mux $procmux$2189.
    dead port 1/2 on $mux $procmux$2186.
    dead port 1/2 on $mux $procmux$2180.
    dead port 1/2 on $mux $procmux$2177.
    dead port 1/2 on $mux $procmux$2174.
    dead port 1/2 on $mux $procmux$2171.
    dead port 1/2 on $mux $procmux$2168.
    dead port 1/2 on $mux $procmux$2165.
    dead port 1/2 on $mux $procmux$2162.
    dead port 1/2 on $mux $procmux$2159.
    dead port 1/2 on $mux $procmux$2156.
    dead port 1/2 on $mux $procmux$2153.
    dead port 1/2 on $mux $procmux$2150.
    dead port 1/2 on $mux $procmux$2147.
    dead port 1/2 on $mux $procmux$2144.
    dead port 1/2 on $mux $procmux$2141.
    dead port 1/2 on $mux $procmux$2138.
    dead port 1/2 on $mux $procmux$2135.
    dead port 1/2 on $mux $procmux$2132.
    dead port 1/2 on $mux $procmux$2126.
    dead port 1/2 on $mux $procmux$2123.
    dead port 1/2 on $mux $procmux$2120.
    dead port 1/2 on $mux $procmux$2117.
    dead port 1/2 on $mux $procmux$2114.
    dead port 1/2 on $mux $procmux$2111.
    dead port 1/2 on $mux $procmux$2108.
    dead port 1/2 on $mux $procmux$2105.
    dead port 1/2 on $mux $procmux$2102.
    dead port 1/2 on $mux $procmux$2099.
    dead port 1/2 on $mux $procmux$2096.
    dead port 1/2 on $mux $procmux$2093.
    dead port 1/2 on $mux $procmux$2090.
    dead port 1/2 on $mux $procmux$2087.
    dead port 1/2 on $mux $procmux$2084.
    dead port 1/2 on $mux $procmux$2081.
    dead port 1/2 on $mux $procmux$2078.
    dead port 1/2 on $mux $procmux$2075.
    dead port 1/2 on $mux $procmux$2069.
    dead port 1/2 on $mux $procmux$2066.
    dead port 1/2 on $mux $procmux$2063.
    dead port 1/2 on $mux $procmux$2060.
    dead port 1/2 on $mux $procmux$2057.
    dead port 1/2 on $mux $procmux$2054.
    dead port 1/2 on $mux $procmux$2051.
    dead port 1/2 on $mux $procmux$2048.
    dead port 1/2 on $mux $procmux$2045.
    dead port 1/2 on $mux $procmux$2042.
    dead port 1/2 on $mux $procmux$2039.
    dead port 1/2 on $mux $procmux$2036.
    dead port 1/2 on $mux $procmux$2033.
    dead port 1/2 on $mux $procmux$2030.
    dead port 1/2 on $mux $procmux$2027.
    dead port 1/2 on $mux $procmux$2024.
    dead port 1/2 on $mux $procmux$2021.
    dead port 1/2 on $mux $procmux$2018.
    dead port 1/2 on $mux $procmux$2012.
    dead port 1/2 on $mux $procmux$2009.
    dead port 1/2 on $mux $procmux$2006.
    dead port 1/2 on $mux $procmux$2003.
    dead port 1/2 on $mux $procmux$2000.
    dead port 1/2 on $mux $procmux$1997.
    dead port 1/2 on $mux $procmux$1994.
    dead port 1/2 on $mux $procmux$1991.
    dead port 1/2 on $mux $procmux$1988.
    dead port 1/2 on $mux $procmux$1985.
    dead port 1/2 on $mux $procmux$1982.
    dead port 1/2 on $mux $procmux$1979.
    dead port 1/2 on $mux $procmux$1976.
    dead port 1/2 on $mux $procmux$1973.
    dead port 1/2 on $mux $procmux$1970.
    dead port 1/2 on $mux $procmux$1967.
    dead port 1/2 on $mux $procmux$1964.
    dead port 1/2 on $mux $procmux$1961.
    dead port 1/2 on $mux $procmux$1958.
    dead port 1/2 on $mux $procmux$1952.
    dead port 1/2 on $mux $procmux$1949.
    dead port 1/2 on $mux $procmux$1946.
    dead port 1/2 on $mux $procmux$1943.
    dead port 1/2 on $mux $procmux$1940.
    dead port 1/2 on $mux $procmux$1937.
    dead port 1/2 on $mux $procmux$1934.
    dead port 1/2 on $mux $procmux$1931.
    dead port 1/2 on $mux $procmux$1928.
    dead port 1/2 on $mux $procmux$1925.
    dead port 1/2 on $mux $procmux$1922.
    dead port 1/2 on $mux $procmux$1919.
    dead port 1/2 on $mux $procmux$1916.
    dead port 1/2 on $mux $procmux$1913.
    dead port 1/2 on $mux $procmux$1910.
    dead port 1/2 on $mux $procmux$1907.
    dead port 1/2 on $mux $procmux$1904.
    dead port 1/2 on $mux $procmux$1901.
    dead port 1/2 on $mux $procmux$1898.
    dead port 1/2 on $mux $procmux$1892.
    dead port 1/2 on $mux $procmux$1889.
    dead port 1/2 on $mux $procmux$1886.
    dead port 1/2 on $mux $procmux$1883.
    dead port 1/2 on $mux $procmux$1880.
    dead port 1/2 on $mux $procmux$1877.
    dead port 1/2 on $mux $procmux$1874.
    dead port 1/2 on $mux $procmux$1871.
    dead port 1/2 on $mux $procmux$1868.
    dead port 1/2 on $mux $procmux$1865.
    dead port 1/2 on $mux $procmux$1862.
    dead port 1/2 on $mux $procmux$1859.
    dead port 1/2 on $mux $procmux$1856.
    dead port 1/2 on $mux $procmux$1853.
    dead port 1/2 on $mux $procmux$1850.
    dead port 1/2 on $mux $procmux$1847.
    dead port 1/2 on $mux $procmux$1844.
    dead port 1/2 on $mux $procmux$1841.
    dead port 1/2 on $mux $procmux$1838.
    dead port 1/2 on $mux $procmux$1835.
    dead port 1/2 on $mux $procmux$1829.
    dead port 1/2 on $mux $procmux$1826.
    dead port 1/2 on $mux $procmux$1823.
    dead port 1/2 on $mux $procmux$1820.
    dead port 1/2 on $mux $procmux$1817.
    dead port 1/2 on $mux $procmux$1814.
    dead port 1/2 on $mux $procmux$1811.
    dead port 1/2 on $mux $procmux$1808.
    dead port 1/2 on $mux $procmux$1805.
    dead port 1/2 on $mux $procmux$1802.
    dead port 1/2 on $mux $procmux$1799.
    dead port 1/2 on $mux $procmux$1796.
    dead port 1/2 on $mux $procmux$1793.
    dead port 1/2 on $mux $procmux$1790.
    dead port 1/2 on $mux $procmux$1787.
    dead port 1/2 on $mux $procmux$1784.
    dead port 1/2 on $mux $procmux$1781.
    dead port 1/2 on $mux $procmux$1778.
    dead port 1/2 on $mux $procmux$1775.
    dead port 1/2 on $mux $procmux$1772.
    dead port 1/2 on $mux $procmux$1766.
    dead port 1/2 on $mux $procmux$1763.
    dead port 1/2 on $mux $procmux$1760.
    dead port 1/2 on $mux $procmux$1757.
    dead port 1/2 on $mux $procmux$1754.
    dead port 1/2 on $mux $procmux$1751.
    dead port 1/2 on $mux $procmux$1748.
    dead port 1/2 on $mux $procmux$1745.
    dead port 1/2 on $mux $procmux$1742.
    dead port 1/2 on $mux $procmux$1739.
    dead port 1/2 on $mux $procmux$1736.
    dead port 1/2 on $mux $procmux$1733.
    dead port 1/2 on $mux $procmux$1730.
    dead port 1/2 on $mux $procmux$1727.
    dead port 1/2 on $mux $procmux$1724.
    dead port 1/2 on $mux $procmux$1721.
    dead port 1/2 on $mux $procmux$1718.
    dead port 1/2 on $mux $procmux$1715.
    dead port 1/2 on $mux $procmux$1712.
    dead port 1/2 on $mux $procmux$1709.
    dead port 1/2 on $mux $procmux$1706.
    dead port 1/2 on $mux $procmux$1700.
    dead port 1/2 on $mux $procmux$1697.
    dead port 1/2 on $mux $procmux$1694.
    dead port 1/2 on $mux $procmux$1691.
    dead port 1/2 on $mux $procmux$1688.
    dead port 1/2 on $mux $procmux$1685.
    dead port 1/2 on $mux $procmux$1682.
    dead port 1/2 on $mux $procmux$1679.
    dead port 1/2 on $mux $procmux$1676.
    dead port 1/2 on $mux $procmux$1673.
    dead port 1/2 on $mux $procmux$1670.
    dead port 1/2 on $mux $procmux$1667.
    dead port 1/2 on $mux $procmux$1664.
    dead port 1/2 on $mux $procmux$1661.
    dead port 1/2 on $mux $procmux$1658.
    dead port 1/2 on $mux $procmux$1655.
    dead port 1/2 on $mux $procmux$1652.
    dead port 1/2 on $mux $procmux$1649.
    dead port 1/2 on $mux $procmux$1646.
    dead port 1/2 on $mux $procmux$1643.
    dead port 1/2 on $mux $procmux$1640.
    dead port 1/2 on $mux $procmux$1634.
    dead port 1/2 on $mux $procmux$1631.
    dead port 1/2 on $mux $procmux$1628.
    dead port 1/2 on $mux $procmux$1625.
    dead port 1/2 on $mux $procmux$1622.
    dead port 1/2 on $mux $procmux$1619.
    dead port 1/2 on $mux $procmux$1616.
    dead port 1/2 on $mux $procmux$1613.
    dead port 1/2 on $mux $procmux$1610.
    dead port 1/2 on $mux $procmux$1607.
    dead port 1/2 on $mux $procmux$1604.
    dead port 1/2 on $mux $procmux$1601.
    dead port 1/2 on $mux $procmux$1598.
    dead port 1/2 on $mux $procmux$1595.
    dead port 1/2 on $mux $procmux$1592.
    dead port 1/2 on $mux $procmux$1589.
    dead port 1/2 on $mux $procmux$1586.
    dead port 1/2 on $mux $procmux$1583.
    dead port 1/2 on $mux $procmux$1580.
    dead port 1/2 on $mux $procmux$1577.
    dead port 1/2 on $mux $procmux$1574.
    dead port 1/2 on $mux $procmux$1571.
    dead port 1/2 on $mux $procmux$1565.
    dead port 1/2 on $mux $procmux$1562.
    dead port 1/2 on $mux $procmux$1559.
    dead port 1/2 on $mux $procmux$1556.
    dead port 1/2 on $mux $procmux$1553.
    dead port 1/2 on $mux $procmux$1550.
    dead port 1/2 on $mux $procmux$1547.
    dead port 1/2 on $mux $procmux$1544.
    dead port 1/2 on $mux $procmux$1541.
    dead port 1/2 on $mux $procmux$1538.
    dead port 1/2 on $mux $procmux$1535.
    dead port 1/2 on $mux $procmux$1532.
    dead port 1/2 on $mux $procmux$1529.
    dead port 1/2 on $mux $procmux$1526.
    dead port 1/2 on $mux $procmux$1523.
    dead port 1/2 on $mux $procmux$1520.
    dead port 1/2 on $mux $procmux$1517.
    dead port 1/2 on $mux $procmux$1514.
    dead port 1/2 on $mux $procmux$1511.
    dead port 1/2 on $mux $procmux$1508.
    dead port 1/2 on $mux $procmux$1505.
    dead port 1/2 on $mux $procmux$1502.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$5033.
    dead port 1/2 on $mux $procmux$5027.
    dead port 1/2 on $mux $procmux$5021.
    dead port 1/2 on $mux $procmux$5018.
    dead port 1/2 on $mux $procmux$5012.
    dead port 1/2 on $mux $procmux$5009.
    dead port 1/2 on $mux $procmux$5003.
    dead port 1/2 on $mux $procmux$5000.
    dead port 2/2 on $mux $procmux$4997.
    dead port 1/2 on $mux $procmux$4991.
    dead port 1/2 on $mux $procmux$4988.
    dead port 2/2 on $mux $procmux$4985.
    dead port 1/2 on $mux $procmux$4979.
    dead port 1/2 on $mux $procmux$4976.
    dead port 1/2 on $mux $procmux$4973.
    dead port 1/2 on $mux $procmux$4967.
    dead port 1/2 on $mux $procmux$4964.
    dead port 1/2 on $mux $procmux$4961.
    dead port 1/2 on $mux $procmux$4949.
    dead port 1/2 on $mux $procmux$4943.
    dead port 1/2 on $mux $procmux$4937.
    dead port 1/2 on $mux $procmux$4934.
    dead port 1/2 on $mux $procmux$4928.
    dead port 1/2 on $mux $procmux$4925.
    dead port 1/2 on $mux $procmux$4919.
    dead port 1/2 on $mux $procmux$4916.
    dead port 1/2 on $mux $procmux$4913.
    dead port 1/2 on $mux $procmux$4907.
    dead port 1/2 on $mux $procmux$4904.
    dead port 1/2 on $mux $procmux$4901.
    dead port 1/2 on $mux $procmux$4895.
    dead port 1/2 on $mux $procmux$4892.
    dead port 1/2 on $mux $procmux$4889.
    dead port 1/2 on $mux $procmux$4886.
    dead port 1/2 on $mux $procmux$4880.
    dead port 1/2 on $mux $procmux$4877.
    dead port 1/2 on $mux $procmux$4874.
    dead port 1/2 on $mux $procmux$4871.
    dead port 1/2 on $mux $procmux$4865.
    dead port 1/2 on $mux $procmux$4862.
    dead port 1/2 on $mux $procmux$4859.
    dead port 1/2 on $mux $procmux$4856.
    dead port 1/2 on $mux $procmux$4853.
    dead port 1/2 on $mux $procmux$4847.
    dead port 1/2 on $mux $procmux$4844.
    dead port 1/2 on $mux $procmux$4841.
    dead port 1/2 on $mux $procmux$4838.
    dead port 1/2 on $mux $procmux$4835.
    dead port 1/2 on $mux $procmux$4829.
    dead port 1/2 on $mux $procmux$4826.
    dead port 1/2 on $mux $procmux$4823.
    dead port 1/2 on $mux $procmux$4820.
    dead port 1/2 on $mux $procmux$4817.
    dead port 1/2 on $mux $procmux$4814.
    dead port 1/2 on $mux $procmux$4808.
    dead port 1/2 on $mux $procmux$4805.
    dead port 1/2 on $mux $procmux$4802.
    dead port 1/2 on $mux $procmux$4799.
    dead port 1/2 on $mux $procmux$4796.
    dead port 1/2 on $mux $procmux$4793.
    dead port 1/2 on $mux $procmux$4787.
    dead port 1/2 on $mux $procmux$4784.
    dead port 1/2 on $mux $procmux$4781.
    dead port 1/2 on $mux $procmux$4778.
    dead port 1/2 on $mux $procmux$4775.
    dead port 1/2 on $mux $procmux$4772.
    dead port 1/2 on $mux $procmux$4769.
    dead port 1/2 on $mux $procmux$4763.
    dead port 1/2 on $mux $procmux$4760.
    dead port 1/2 on $mux $procmux$4757.
    dead port 1/2 on $mux $procmux$4754.
    dead port 1/2 on $mux $procmux$4751.
    dead port 1/2 on $mux $procmux$4748.
    dead port 1/2 on $mux $procmux$4745.
    dead port 1/2 on $mux $procmux$4739.
    dead port 1/2 on $mux $procmux$4736.
    dead port 1/2 on $mux $procmux$4733.
    dead port 1/2 on $mux $procmux$4730.
    dead port 1/2 on $mux $procmux$4727.
    dead port 1/2 on $mux $procmux$4724.
    dead port 1/2 on $mux $procmux$4721.
    dead port 1/2 on $mux $procmux$4718.
    dead port 1/2 on $mux $procmux$4712.
    dead port 1/2 on $mux $procmux$4709.
    dead port 1/2 on $mux $procmux$4706.
    dead port 1/2 on $mux $procmux$4703.
    dead port 1/2 on $mux $procmux$4700.
    dead port 1/2 on $mux $procmux$4697.
    dead port 1/2 on $mux $procmux$4694.
    dead port 1/2 on $mux $procmux$4691.
    dead port 1/2 on $mux $procmux$4685.
    dead port 1/2 on $mux $procmux$4682.
    dead port 1/2 on $mux $procmux$4679.
    dead port 1/2 on $mux $procmux$4676.
    dead port 1/2 on $mux $procmux$4673.
    dead port 1/2 on $mux $procmux$4670.
    dead port 1/2 on $mux $procmux$4667.
    dead port 1/2 on $mux $procmux$4664.
    dead port 1/2 on $mux $procmux$4661.
    dead port 1/2 on $mux $procmux$4655.
    dead port 1/2 on $mux $procmux$4652.
    dead port 1/2 on $mux $procmux$4649.
    dead port 1/2 on $mux $procmux$4646.
    dead port 1/2 on $mux $procmux$4643.
    dead port 1/2 on $mux $procmux$4640.
    dead port 1/2 on $mux $procmux$4637.
    dead port 1/2 on $mux $procmux$4634.
    dead port 1/2 on $mux $procmux$4631.
    dead port 1/2 on $mux $procmux$4625.
    dead port 1/2 on $mux $procmux$4622.
    dead port 1/2 on $mux $procmux$4619.
    dead port 1/2 on $mux $procmux$4616.
    dead port 1/2 on $mux $procmux$4613.
    dead port 1/2 on $mux $procmux$4610.
    dead port 1/2 on $mux $procmux$4607.
    dead port 1/2 on $mux $procmux$4604.
    dead port 1/2 on $mux $procmux$4601.
    dead port 1/2 on $mux $procmux$4598.
    dead port 1/2 on $mux $procmux$4592.
    dead port 1/2 on $mux $procmux$4589.
    dead port 1/2 on $mux $procmux$4586.
    dead port 1/2 on $mux $procmux$4583.
    dead port 1/2 on $mux $procmux$4580.
    dead port 1/2 on $mux $procmux$4577.
    dead port 1/2 on $mux $procmux$4574.
    dead port 1/2 on $mux $procmux$4571.
    dead port 1/2 on $mux $procmux$4568.
    dead port 1/2 on $mux $procmux$4565.
    dead port 1/2 on $mux $procmux$4559.
    dead port 1/2 on $mux $procmux$4556.
    dead port 1/2 on $mux $procmux$4553.
    dead port 1/2 on $mux $procmux$4550.
    dead port 1/2 on $mux $procmux$4547.
    dead port 1/2 on $mux $procmux$4544.
    dead port 1/2 on $mux $procmux$4541.
    dead port 1/2 on $mux $procmux$4538.
    dead port 1/2 on $mux $procmux$4535.
    dead port 1/2 on $mux $procmux$4532.
    dead port 1/2 on $mux $procmux$4529.
    dead port 1/2 on $mux $procmux$4523.
    dead port 1/2 on $mux $procmux$4520.
    dead port 1/2 on $mux $procmux$4517.
    dead port 1/2 on $mux $procmux$4514.
    dead port 1/2 on $mux $procmux$4511.
    dead port 1/2 on $mux $procmux$4508.
    dead port 1/2 on $mux $procmux$4505.
    dead port 1/2 on $mux $procmux$4502.
    dead port 1/2 on $mux $procmux$4499.
    dead port 1/2 on $mux $procmux$4496.
    dead port 1/2 on $mux $procmux$4493.
    dead port 1/2 on $mux $procmux$4487.
    dead port 1/2 on $mux $procmux$4484.
    dead port 1/2 on $mux $procmux$4481.
    dead port 1/2 on $mux $procmux$4478.
    dead port 1/2 on $mux $procmux$4475.
    dead port 1/2 on $mux $procmux$4472.
    dead port 1/2 on $mux $procmux$4469.
    dead port 1/2 on $mux $procmux$4466.
    dead port 1/2 on $mux $procmux$4463.
    dead port 1/2 on $mux $procmux$4460.
    dead port 1/2 on $mux $procmux$4457.
    dead port 1/2 on $mux $procmux$4454.
    dead port 1/2 on $mux $procmux$4448.
    dead port 1/2 on $mux $procmux$4445.
    dead port 1/2 on $mux $procmux$4442.
    dead port 1/2 on $mux $procmux$4439.
    dead port 1/2 on $mux $procmux$4436.
    dead port 1/2 on $mux $procmux$4433.
    dead port 1/2 on $mux $procmux$4430.
    dead port 1/2 on $mux $procmux$4427.
    dead port 1/2 on $mux $procmux$4424.
    dead port 1/2 on $mux $procmux$4421.
    dead port 1/2 on $mux $procmux$4418.
    dead port 1/2 on $mux $procmux$4415.
    dead port 1/2 on $mux $procmux$4409.
    dead port 1/2 on $mux $procmux$4406.
    dead port 1/2 on $mux $procmux$4403.
    dead port 1/2 on $mux $procmux$4400.
    dead port 1/2 on $mux $procmux$4397.
    dead port 1/2 on $mux $procmux$4394.
    dead port 1/2 on $mux $procmux$4391.
    dead port 1/2 on $mux $procmux$4388.
    dead port 1/2 on $mux $procmux$4385.
    dead port 1/2 on $mux $procmux$4382.
    dead port 1/2 on $mux $procmux$4379.
    dead port 1/2 on $mux $procmux$4376.
    dead port 1/2 on $mux $procmux$4373.
    dead port 1/2 on $mux $procmux$4367.
    dead port 1/2 on $mux $procmux$4364.
    dead port 1/2 on $mux $procmux$4361.
    dead port 1/2 on $mux $procmux$4358.
    dead port 1/2 on $mux $procmux$4355.
    dead port 1/2 on $mux $procmux$4352.
    dead port 1/2 on $mux $procmux$4349.
    dead port 1/2 on $mux $procmux$4346.
    dead port 1/2 on $mux $procmux$4343.
    dead port 1/2 on $mux $procmux$4340.
    dead port 1/2 on $mux $procmux$4337.
    dead port 1/2 on $mux $procmux$4334.
    dead port 1/2 on $mux $procmux$4331.
    dead port 1/2 on $mux $procmux$4325.
    dead port 1/2 on $mux $procmux$4322.
    dead port 1/2 on $mux $procmux$4319.
    dead port 1/2 on $mux $procmux$4316.
    dead port 1/2 on $mux $procmux$4313.
    dead port 1/2 on $mux $procmux$4310.
    dead port 1/2 on $mux $procmux$4307.
    dead port 1/2 on $mux $procmux$4304.
    dead port 1/2 on $mux $procmux$4301.
    dead port 1/2 on $mux $procmux$4298.
    dead port 1/2 on $mux $procmux$4295.
    dead port 1/2 on $mux $procmux$4292.
    dead port 1/2 on $mux $procmux$4289.
    dead port 1/2 on $mux $procmux$4286.
    dead port 1/2 on $mux $procmux$4280.
    dead port 1/2 on $mux $procmux$4277.
    dead port 1/2 on $mux $procmux$4274.
    dead port 1/2 on $mux $procmux$4271.
    dead port 1/2 on $mux $procmux$4268.
    dead port 1/2 on $mux $procmux$4265.
    dead port 1/2 on $mux $procmux$4262.
    dead port 1/2 on $mux $procmux$4259.
    dead port 1/2 on $mux $procmux$4256.
    dead port 1/2 on $mux $procmux$4253.
    dead port 1/2 on $mux $procmux$4250.
    dead port 1/2 on $mux $procmux$4247.
    dead port 1/2 on $mux $procmux$4244.
    dead port 1/2 on $mux $procmux$4241.
    dead port 1/2 on $mux $procmux$4235.
    dead port 1/2 on $mux $procmux$4232.
    dead port 1/2 on $mux $procmux$4229.
    dead port 1/2 on $mux $procmux$4226.
    dead port 1/2 on $mux $procmux$4223.
    dead port 1/2 on $mux $procmux$4220.
    dead port 1/2 on $mux $procmux$4217.
    dead port 1/2 on $mux $procmux$4214.
    dead port 1/2 on $mux $procmux$4211.
    dead port 1/2 on $mux $procmux$4208.
    dead port 1/2 on $mux $procmux$4205.
    dead port 1/2 on $mux $procmux$4202.
    dead port 1/2 on $mux $procmux$4199.
    dead port 1/2 on $mux $procmux$4196.
    dead port 1/2 on $mux $procmux$4193.
    dead port 1/2 on $mux $procmux$4187.
    dead port 1/2 on $mux $procmux$4184.
    dead port 1/2 on $mux $procmux$4181.
    dead port 1/2 on $mux $procmux$4178.
    dead port 1/2 on $mux $procmux$4175.
    dead port 1/2 on $mux $procmux$4172.
    dead port 1/2 on $mux $procmux$4169.
    dead port 1/2 on $mux $procmux$4166.
    dead port 1/2 on $mux $procmux$4163.
    dead port 1/2 on $mux $procmux$4160.
    dead port 1/2 on $mux $procmux$4157.
    dead port 1/2 on $mux $procmux$4154.
    dead port 1/2 on $mux $procmux$4151.
    dead port 1/2 on $mux $procmux$4148.
    dead port 1/2 on $mux $procmux$4145.
    dead port 1/2 on $mux $procmux$4139.
    dead port 1/2 on $mux $procmux$4136.
    dead port 1/2 on $mux $procmux$4133.
    dead port 1/2 on $mux $procmux$4130.
    dead port 1/2 on $mux $procmux$4127.
    dead port 1/2 on $mux $procmux$4124.
    dead port 1/2 on $mux $procmux$4121.
    dead port 1/2 on $mux $procmux$4118.
    dead port 1/2 on $mux $procmux$4115.
    dead port 1/2 on $mux $procmux$4112.
    dead port 1/2 on $mux $procmux$4109.
    dead port 1/2 on $mux $procmux$4106.
    dead port 1/2 on $mux $procmux$4103.
    dead port 1/2 on $mux $procmux$4100.
    dead port 1/2 on $mux $procmux$4097.
    dead port 1/2 on $mux $procmux$4094.
    dead port 1/2 on $mux $procmux$4088.
    dead port 1/2 on $mux $procmux$4085.
    dead port 1/2 on $mux $procmux$4082.
    dead port 1/2 on $mux $procmux$4079.
    dead port 1/2 on $mux $procmux$4076.
    dead port 1/2 on $mux $procmux$4073.
    dead port 1/2 on $mux $procmux$4070.
    dead port 1/2 on $mux $procmux$4067.
    dead port 1/2 on $mux $procmux$4064.
    dead port 1/2 on $mux $procmux$4061.
    dead port 1/2 on $mux $procmux$4058.
    dead port 1/2 on $mux $procmux$4055.
    dead port 1/2 on $mux $procmux$4052.
    dead port 1/2 on $mux $procmux$4049.
    dead port 1/2 on $mux $procmux$4046.
    dead port 1/2 on $mux $procmux$4043.
    dead port 1/2 on $mux $procmux$4037.
    dead port 1/2 on $mux $procmux$4034.
    dead port 1/2 on $mux $procmux$4031.
    dead port 1/2 on $mux $procmux$4028.
    dead port 1/2 on $mux $procmux$4025.
    dead port 1/2 on $mux $procmux$4022.
    dead port 1/2 on $mux $procmux$4019.
    dead port 1/2 on $mux $procmux$4016.
    dead port 1/2 on $mux $procmux$4013.
    dead port 1/2 on $mux $procmux$4010.
    dead port 1/2 on $mux $procmux$4007.
    dead port 1/2 on $mux $procmux$4004.
    dead port 1/2 on $mux $procmux$4001.
    dead port 1/2 on $mux $procmux$3998.
    dead port 1/2 on $mux $procmux$3995.
    dead port 1/2 on $mux $procmux$3992.
    dead port 1/2 on $mux $procmux$3989.
    dead port 1/2 on $mux $procmux$3983.
    dead port 1/2 on $mux $procmux$3980.
    dead port 1/2 on $mux $procmux$3977.
    dead port 1/2 on $mux $procmux$3974.
    dead port 1/2 on $mux $procmux$3971.
    dead port 1/2 on $mux $procmux$3968.
    dead port 1/2 on $mux $procmux$3965.
    dead port 1/2 on $mux $procmux$3962.
    dead port 1/2 on $mux $procmux$3959.
    dead port 1/2 on $mux $procmux$3956.
    dead port 1/2 on $mux $procmux$3953.
    dead port 1/2 on $mux $procmux$3950.
    dead port 1/2 on $mux $procmux$3947.
    dead port 1/2 on $mux $procmux$3944.
    dead port 1/2 on $mux $procmux$3941.
    dead port 1/2 on $mux $procmux$3938.
    dead port 1/2 on $mux $procmux$3935.
    dead port 1/2 on $mux $procmux$3929.
    dead port 1/2 on $mux $procmux$3926.
    dead port 1/2 on $mux $procmux$3923.
    dead port 1/2 on $mux $procmux$3920.
    dead port 1/2 on $mux $procmux$3917.
    dead port 1/2 on $mux $procmux$3914.
    dead port 1/2 on $mux $procmux$3911.
    dead port 1/2 on $mux $procmux$3908.
    dead port 1/2 on $mux $procmux$3905.
    dead port 1/2 on $mux $procmux$3902.
    dead port 1/2 on $mux $procmux$3899.
    dead port 1/2 on $mux $procmux$3896.
    dead port 1/2 on $mux $procmux$3893.
    dead port 1/2 on $mux $procmux$3890.
    dead port 1/2 on $mux $procmux$3887.
    dead port 1/2 on $mux $procmux$3884.
    dead port 1/2 on $mux $procmux$3881.
    dead port 1/2 on $mux $procmux$3878.
    dead port 1/2 on $mux $procmux$3872.
    dead port 1/2 on $mux $procmux$3869.
    dead port 1/2 on $mux $procmux$3866.
    dead port 1/2 on $mux $procmux$3863.
    dead port 1/2 on $mux $procmux$3860.
    dead port 1/2 on $mux $procmux$3857.
    dead port 1/2 on $mux $procmux$3854.
    dead port 1/2 on $mux $procmux$3851.
    dead port 1/2 on $mux $procmux$3848.
    dead port 1/2 on $mux $procmux$3845.
    dead port 1/2 on $mux $procmux$3842.
    dead port 1/2 on $mux $procmux$3839.
    dead port 1/2 on $mux $procmux$3836.
    dead port 1/2 on $mux $procmux$3833.
    dead port 1/2 on $mux $procmux$3830.
    dead port 1/2 on $mux $procmux$3827.
    dead port 1/2 on $mux $procmux$3824.
    dead port 1/2 on $mux $procmux$3821.
    dead port 1/2 on $mux $procmux$3815.
    dead port 1/2 on $mux $procmux$3812.
    dead port 1/2 on $mux $procmux$3809.
    dead port 1/2 on $mux $procmux$3806.
    dead port 1/2 on $mux $procmux$3803.
    dead port 1/2 on $mux $procmux$3800.
    dead port 1/2 on $mux $procmux$3797.
    dead port 1/2 on $mux $procmux$3794.
    dead port 1/2 on $mux $procmux$3791.
    dead port 1/2 on $mux $procmux$3788.
    dead port 1/2 on $mux $procmux$3785.
    dead port 1/2 on $mux $procmux$3782.
    dead port 1/2 on $mux $procmux$3779.
    dead port 1/2 on $mux $procmux$3776.
    dead port 1/2 on $mux $procmux$3773.
    dead port 1/2 on $mux $procmux$3770.
    dead port 1/2 on $mux $procmux$3767.
    dead port 1/2 on $mux $procmux$3764.
    dead port 1/2 on $mux $procmux$3761.
    dead port 1/2 on $mux $procmux$3755.
    dead port 1/2 on $mux $procmux$3752.
    dead port 1/2 on $mux $procmux$3749.
    dead port 1/2 on $mux $procmux$3746.
    dead port 1/2 on $mux $procmux$3743.
    dead port 1/2 on $mux $procmux$3740.
    dead port 1/2 on $mux $procmux$3737.
    dead port 1/2 on $mux $procmux$3734.
    dead port 1/2 on $mux $procmux$3731.
    dead port 1/2 on $mux $procmux$3728.
    dead port 1/2 on $mux $procmux$3725.
    dead port 1/2 on $mux $procmux$3722.
    dead port 1/2 on $mux $procmux$3719.
    dead port 1/2 on $mux $procmux$3716.
    dead port 1/2 on $mux $procmux$3713.
    dead port 1/2 on $mux $procmux$3710.
    dead port 1/2 on $mux $procmux$3707.
    dead port 1/2 on $mux $procmux$3704.
    dead port 1/2 on $mux $procmux$3701.
    dead port 1/2 on $mux $procmux$3695.
    dead port 1/2 on $mux $procmux$3692.
    dead port 1/2 on $mux $procmux$3689.
    dead port 1/2 on $mux $procmux$3686.
    dead port 1/2 on $mux $procmux$3683.
    dead port 1/2 on $mux $procmux$3680.
    dead port 1/2 on $mux $procmux$3677.
    dead port 1/2 on $mux $procmux$3674.
    dead port 1/2 on $mux $procmux$3671.
    dead port 1/2 on $mux $procmux$3668.
    dead port 1/2 on $mux $procmux$3665.
    dead port 1/2 on $mux $procmux$3662.
    dead port 1/2 on $mux $procmux$3659.
    dead port 1/2 on $mux $procmux$3656.
    dead port 1/2 on $mux $procmux$3653.
    dead port 1/2 on $mux $procmux$3650.
    dead port 1/2 on $mux $procmux$3647.
    dead port 1/2 on $mux $procmux$3644.
    dead port 1/2 on $mux $procmux$3641.
    dead port 1/2 on $mux $procmux$3638.
    dead port 1/2 on $mux $procmux$3632.
    dead port 1/2 on $mux $procmux$3629.
    dead port 1/2 on $mux $procmux$3626.
    dead port 1/2 on $mux $procmux$3623.
    dead port 1/2 on $mux $procmux$3620.
    dead port 1/2 on $mux $procmux$3617.
    dead port 1/2 on $mux $procmux$3614.
    dead port 1/2 on $mux $procmux$3611.
    dead port 1/2 on $mux $procmux$3608.
    dead port 1/2 on $mux $procmux$3605.
    dead port 1/2 on $mux $procmux$3602.
    dead port 1/2 on $mux $procmux$3599.
    dead port 1/2 on $mux $procmux$3596.
    dead port 1/2 on $mux $procmux$3593.
    dead port 1/2 on $mux $procmux$3590.
    dead port 1/2 on $mux $procmux$3587.
    dead port 1/2 on $mux $procmux$3584.
    dead port 1/2 on $mux $procmux$3581.
    dead port 1/2 on $mux $procmux$3578.
    dead port 1/2 on $mux $procmux$3575.
    dead port 1/2 on $mux $procmux$3569.
    dead port 1/2 on $mux $procmux$3566.
    dead port 1/2 on $mux $procmux$3563.
    dead port 1/2 on $mux $procmux$3560.
    dead port 1/2 on $mux $procmux$3557.
    dead port 1/2 on $mux $procmux$3554.
    dead port 1/2 on $mux $procmux$3551.
    dead port 1/2 on $mux $procmux$3548.
    dead port 1/2 on $mux $procmux$3545.
    dead port 1/2 on $mux $procmux$3542.
    dead port 1/2 on $mux $procmux$3539.
    dead port 1/2 on $mux $procmux$3536.
    dead port 1/2 on $mux $procmux$3533.
    dead port 1/2 on $mux $procmux$3530.
    dead port 1/2 on $mux $procmux$3527.
    dead port 1/2 on $mux $procmux$3524.
    dead port 1/2 on $mux $procmux$3521.
    dead port 1/2 on $mux $procmux$3518.
    dead port 1/2 on $mux $procmux$3515.
    dead port 1/2 on $mux $procmux$3512.
    dead port 1/2 on $mux $procmux$3509.
    dead port 1/2 on $mux $procmux$3503.
    dead port 1/2 on $mux $procmux$3500.
    dead port 1/2 on $mux $procmux$3497.
    dead port 1/2 on $mux $procmux$3494.
    dead port 1/2 on $mux $procmux$3491.
    dead port 1/2 on $mux $procmux$3488.
    dead port 1/2 on $mux $procmux$3485.
    dead port 1/2 on $mux $procmux$3482.
    dead port 1/2 on $mux $procmux$3479.
    dead port 1/2 on $mux $procmux$3476.
    dead port 1/2 on $mux $procmux$3473.
    dead port 1/2 on $mux $procmux$3470.
    dead port 1/2 on $mux $procmux$3467.
    dead port 1/2 on $mux $procmux$3464.
    dead port 1/2 on $mux $procmux$3461.
    dead port 1/2 on $mux $procmux$3458.
    dead port 1/2 on $mux $procmux$3455.
    dead port 1/2 on $mux $procmux$3452.
    dead port 1/2 on $mux $procmux$3449.
    dead port 1/2 on $mux $procmux$3446.
    dead port 1/2 on $mux $procmux$3443.
    dead port 1/2 on $mux $procmux$3437.
    dead port 1/2 on $mux $procmux$3434.
    dead port 1/2 on $mux $procmux$3431.
    dead port 1/2 on $mux $procmux$3428.
    dead port 1/2 on $mux $procmux$3425.
    dead port 1/2 on $mux $procmux$3422.
    dead port 1/2 on $mux $procmux$3419.
    dead port 1/2 on $mux $procmux$3416.
    dead port 1/2 on $mux $procmux$3413.
    dead port 1/2 on $mux $procmux$3410.
    dead port 1/2 on $mux $procmux$3407.
    dead port 1/2 on $mux $procmux$3404.
    dead port 1/2 on $mux $procmux$3401.
    dead port 1/2 on $mux $procmux$3398.
    dead port 1/2 on $mux $procmux$3395.
    dead port 1/2 on $mux $procmux$3392.
    dead port 1/2 on $mux $procmux$3389.
    dead port 1/2 on $mux $procmux$3386.
    dead port 1/2 on $mux $procmux$3383.
    dead port 1/2 on $mux $procmux$3380.
    dead port 1/2 on $mux $procmux$3377.
    dead port 1/2 on $mux $procmux$3374.
    dead port 1/2 on $mux $procmux$3368.
    dead port 1/2 on $mux $procmux$3365.
    dead port 1/2 on $mux $procmux$3362.
    dead port 1/2 on $mux $procmux$3359.
    dead port 1/2 on $mux $procmux$3356.
    dead port 1/2 on $mux $procmux$3353.
    dead port 1/2 on $mux $procmux$3350.
    dead port 1/2 on $mux $procmux$3347.
    dead port 1/2 on $mux $procmux$3344.
    dead port 1/2 on $mux $procmux$3341.
    dead port 1/2 on $mux $procmux$3338.
    dead port 1/2 on $mux $procmux$3335.
    dead port 1/2 on $mux $procmux$3332.
    dead port 1/2 on $mux $procmux$3329.
    dead port 1/2 on $mux $procmux$3326.
    dead port 1/2 on $mux $procmux$3323.
    dead port 1/2 on $mux $procmux$3320.
    dead port 1/2 on $mux $procmux$3317.
    dead port 1/2 on $mux $procmux$3314.
    dead port 1/2 on $mux $procmux$3311.
    dead port 1/2 on $mux $procmux$3308.
    dead port 1/2 on $mux $procmux$3305.
    dead port 1/2 on $mux $procmux$3299.
    dead port 1/2 on $mux $procmux$3296.
    dead port 1/2 on $mux $procmux$3293.
    dead port 1/2 on $mux $procmux$3290.
    dead port 1/2 on $mux $procmux$3287.
    dead port 1/2 on $mux $procmux$3284.
    dead port 1/2 on $mux $procmux$3281.
    dead port 1/2 on $mux $procmux$3278.
    dead port 1/2 on $mux $procmux$3275.
    dead port 1/2 on $mux $procmux$3272.
    dead port 1/2 on $mux $procmux$3269.
    dead port 1/2 on $mux $procmux$3266.
    dead port 1/2 on $mux $procmux$3263.
    dead port 1/2 on $mux $procmux$3260.
    dead port 1/2 on $mux $procmux$3257.
    dead port 1/2 on $mux $procmux$3254.
    dead port 1/2 on $mux $procmux$3251.
    dead port 1/2 on $mux $procmux$3248.
    dead port 1/2 on $mux $procmux$3245.
    dead port 1/2 on $mux $procmux$3242.
    dead port 1/2 on $mux $procmux$3239.
    dead port 1/2 on $mux $procmux$3236.
    dead port 1/2 on $mux $procmux$3233.
    dead port 1/2 on $mux $procmux$3227.
    dead port 1/2 on $mux $procmux$3224.
    dead port 1/2 on $mux $procmux$3221.
    dead port 1/2 on $mux $procmux$3218.
    dead port 1/2 on $mux $procmux$3215.
    dead port 1/2 on $mux $procmux$3212.
    dead port 1/2 on $mux $procmux$3209.
    dead port 1/2 on $mux $procmux$3206.
    dead port 1/2 on $mux $procmux$3203.
    dead port 1/2 on $mux $procmux$3200.
    dead port 1/2 on $mux $procmux$3197.
    dead port 1/2 on $mux $procmux$3194.
    dead port 1/2 on $mux $procmux$3191.
    dead port 1/2 on $mux $procmux$3188.
    dead port 1/2 on $mux $procmux$3185.
    dead port 1/2 on $mux $procmux$3182.
    dead port 1/2 on $mux $procmux$3179.
    dead port 1/2 on $mux $procmux$3176.
    dead port 1/2 on $mux $procmux$3173.
    dead port 1/2 on $mux $procmux$3170.
    dead port 1/2 on $mux $procmux$3167.
    dead port 1/2 on $mux $procmux$3164.
    dead port 1/2 on $mux $procmux$3161.
    dead port 2/2 on $mux $procmux$5071.
    dead port 1/2 on $mux $procmux$5074.
    dead port 1/2 on $mux $procmux$5079.
    dead port 1/2 on $mux $procmux$5085.
    dead port 1/2 on $mux $procmux$5090.
    dead port 1/2 on $mux $procmux$5093.
    dead port 2/2 on $mux $procmux$5093.
    dead port 1/2 on $mux $procmux$5096.
    dead port 2/2 on $mux $procmux$5096.
    dead port 2/2 on $mux $procmux$5125.
    dead port 1/2 on $mux $procmux$5137.
    dead port 2/2 on $mux $procmux$5137.
Running muxtree optimizer on module \memcmd_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \addr_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \wfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \DataTransferUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mult_add..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \top_ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$7913.
    dead port 2/2 on $mux $procmux$7893.
    dead port 2/2 on $mux $procmux$7874.
    dead port 2/2 on $mux $procmux$7872.
    dead port 2/2 on $mux $procmux$7852.
    dead port 1/2 on $mux $procmux$7850.
    dead port 2/2 on $mux $procmux$7830.
    dead port 1/2 on $mux $procmux$7828.
    dead port 1/2 on $mux $procmux$7825.
    dead port 2/2 on $mux $procmux$7805.
    dead port 2/2 on $mux $procmux$7787.
    dead port 2/2 on $mux $procmux$7785.
    dead port 2/2 on $mux $procmux$7766.
    dead port 2/2 on $mux $procmux$7749.
    dead port 2/2 on $mux $procmux$7732.
    dead port 2/2 on $mux $procmux$7730.
    dead port 2/2 on $mux $procmux$7712.
    dead port 2/2 on $mux $procmux$7710.
    dead port 2/2 on $mux $procmux$7692.
    dead port 2/2 on $mux $procmux$7690.
    dead port 1/2 on $mux $procmux$7688.
    dead port 2/2 on $mux $procmux$7669.
    dead port 2/2 on $mux $procmux$7653.
    dead port 2/2 on $mux $procmux$7637.
    dead port 2/2 on $mux $procmux$7635.
    dead port 2/2 on $mux $procmux$7618.
    dead port 2/2 on $mux $procmux$7603.
    dead port 2/2 on $mux $procmux$7589.
    dead port 2/2 on $mux $procmux$7575.
    dead port 2/2 on $mux $procmux$7573.
    dead port 2/2 on $mux $procmux$7558.
    dead port 2/2 on $mux $procmux$7546.
    dead port 2/2 on $mux $procmux$7535.
    dead port 2/2 on $mux $procmux$7524.
    dead port 2/2 on $mux $procmux$7513.
    dead port 2/2 on $mux $procmux$7503.
    dead port 2/2 on $mux $procmux$7493.
    dead port 2/2 on $mux $procmux$7491.
    dead port 2/2 on $mux $procmux$7480.
    dead port 2/2 on $mux $procmux$7471.
    dead port 2/2 on $mux $procmux$7462.
    dead port 2/2 on $mux $procmux$7460.
    dead port 2/2 on $mux $procmux$7450.
    dead port 2/2 on $mux $procmux$7443.
    dead port 2/2 on $mux $procmux$7436.
    dead port 2/2 on $mux $procmux$7434.
    dead port 2/2 on $mux $procmux$7426.
    dead port 2/2 on $mux $procmux$7424.
    dead port 1/2 on $mux $procmux$7422.
    dead port 2/2 on $mux $procmux$7413.
    dead port 2/2 on $mux $procmux$7411.
    dead port 1/2 on $mux $procmux$7409.
    dead port 1/2 on $mux $procmux$7406.
    dead port 2/2 on $mux $procmux$7383.
    dead port 2/2 on $mux $procmux$7375.
    dead port 2/2 on $mux $procmux$7368.
    dead port 1/2 on $mux $procmux$7366.
    dead port 2/2 on $mux $procmux$7358.
Running muxtree optimizer on module \LU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$8159.
    dead port 1/2 on $mux $procmux$8227.
Running muxtree optimizer on module \MarshallerController..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LU64PEEng..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 1148 multiplexer ports.
<suppressed ~337 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \assemble.
  Optimizing cells in module \flag.
  Optimizing cells in module \round.
  Optimizing cells in module \shift.
  Optimizing cells in module \normalize.
  Optimizing cells in module \exponent.
  Optimizing cells in module \multiply_a.
  Optimizing cells in module \prenorm.
  Optimizing cells in module \special.
  Optimizing cells in module \preprocess.
  Optimizing cells in module \fpmul.
  Optimizing cells in module \div_24b.
  Optimizing cells in module \fpu_div.
  Optimizing cells in module \fpu_add.
    New ctrl vector for $pmux cell $procmux$5046: { $procmux$5070_CMP $procmux$5069_CMP $procmux$5068_CMP $procmux$5067_CMP $procmux$5066_CMP $procmux$5065_CMP $procmux$5064_CMP $procmux$5063_CMP $procmux$5062_CMP $procmux$5061_CMP $procmux$5060_CMP $procmux$5059_CMP $procmux$5058_CMP $procmux$5057_CMP $procmux$5056_CMP $procmux$5055_CMP $procmux$5054_CMP $procmux$5053_CMP $procmux$5052_CMP $procmux$5051_CMP $procmux$5050_CMP $procmux$5049_CMP $procmux$5048_CMP }
    New ctrl vector for $pmux cell $procmux$5100: { $procmux$5124_CMP $procmux$5123_CMP $procmux$5122_CMP $procmux$5121_CMP $procmux$5120_CMP $procmux$5119_CMP $procmux$5118_CMP $procmux$5117_CMP $procmux$5116_CMP $procmux$5115_CMP $procmux$5114_CMP $procmux$5113_CMP $procmux$5112_CMP $procmux$5111_CMP $procmux$5110_CMP $procmux$5109_CMP $procmux$5108_CMP $procmux$5107_CMP $procmux$5106_CMP $procmux$5105_CMP $procmux$5104_CMP $procmux$5103_CMP $procmux$5102_CMP }
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \memcmd_fifo.
  Optimizing cells in module \addr_fifo.
  Optimizing cells in module \wfifo.
  Optimizing cells in module \rfifo.
  Optimizing cells in module \DataTransferUnit.
  Optimizing cells in module \mult_add.
  Optimizing cells in module \top_ram.
  Optimizing cells in module \ram3.
  Optimizing cells in module \ram2.
  Optimizing cells in module \ram1.
  Optimizing cells in module \ram.
  Optimizing cells in module \LUControl.
    New ctrl vector for $pmux cell $procmux$7916: { $procmux$7940_CMP $procmux$7939_CMP $procmux$7937_CMP $procmux$7934_CMP $procmux$7933_CMP $procmux$7932_CMP $procmux$7930_CMP $auto$opt_reduce.cc:134:opt_mux$8933 }
    New ctrl vector for $pmux cell $procmux$7242: { $auto$opt_reduce.cc:134:opt_mux$8965 $auto$opt_reduce.cc:134:opt_mux$8963 $auto$opt_reduce.cc:134:opt_mux$8961 $auto$opt_reduce.cc:134:opt_mux$8959 $auto$opt_reduce.cc:134:opt_mux$8957 $auto$opt_reduce.cc:134:opt_mux$8955 $auto$opt_reduce.cc:134:opt_mux$8953 $auto$opt_reduce.cc:134:opt_mux$8951 $auto$opt_reduce.cc:134:opt_mux$8949 $auto$opt_reduce.cc:134:opt_mux$8947 $auto$opt_reduce.cc:134:opt_mux$8945 $auto$opt_reduce.cc:134:opt_mux$8943 $auto$opt_reduce.cc:134:opt_mux$8941 $auto$opt_reduce.cc:134:opt_mux$8939 $auto$opt_reduce.cc:134:opt_mux$8937 $auto$opt_reduce.cc:134:opt_mux$8935 }
  Optimizing cells in module \LUControl.
  Optimizing cells in module \LU.
  Optimizing cells in module \MarshallerController.
  Optimizing cells in module \LU64PEEng.
Performed a total of 4 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\assemble'.
Finding identical cells in module `\flag'.
Finding identical cells in module `\round'.
Finding identical cells in module `\shift'.
Finding identical cells in module `\normalize'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\multiply_a'.
Finding identical cells in module `\prenorm'.
Finding identical cells in module `\special'.
Finding identical cells in module `\preprocess'.
Finding identical cells in module `\fpmul'.
Finding identical cells in module `\div_24b'.
Finding identical cells in module `\fpu_div'.
Finding identical cells in module `\fpu_add'.
<suppressed ~3 debug messages>
Finding identical cells in module `\memcmd_fifo'.
Finding identical cells in module `\addr_fifo'.
Finding identical cells in module `\wfifo'.
Finding identical cells in module `\rfifo'.
Finding identical cells in module `\DataTransferUnit'.
Finding identical cells in module `\mult_add'.
Finding identical cells in module `\top_ram'.
Finding identical cells in module `\ram3'.
Finding identical cells in module `\ram2'.
Finding identical cells in module `\ram1'.
Finding identical cells in module `\ram'.
Finding identical cells in module `\LUControl'.
<suppressed ~9 debug messages>
Finding identical cells in module `\LU'.
Finding identical cells in module `\MarshallerController'.
<suppressed ~21 debug messages>
Finding identical cells in module `\LU64PEEng'.
Removed a total of 11 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 23 on $procdff$8586 ($dff) from module fpu_div.
Setting constant 1-bit at position 23 on $procdff$8587 ($dff) from module fpu_div.
Adding EN signal on $procdff$8592 ($dff) from module memcmd_fifo (D = $procmux$5142_Y, Q = \status_cnt).
Adding EN signal on $procdff$8593 ($dff) from module memcmd_fifo (D = \data_ram, Q = \q).
Adding EN signal on $procdff$8594 ($dff) from module memcmd_fifo (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4130$833_Y, Q = \rd_pointer).
Adding EN signal on $procdff$8595 ($dff) from module memcmd_fifo (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4123$831_Y, Q = \wr_pointer).
Adding EN signal on $procdff$8596 ($dff) from module addr_fifo (D = $procmux$5153_Y, Q = \status_cnt).
Adding EN signal on $procdff$8597 ($dff) from module addr_fifo (D = \data_ram, Q = \q).
Adding EN signal on $procdff$8598 ($dff) from module addr_fifo (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4056$815_Y, Q = \rd_pointer).
Adding EN signal on $procdff$8599 ($dff) from module addr_fifo (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:4049$813_Y, Q = \wr_pointer).
Adding EN signal on $procdff$8600 ($dff) from module wfifo (D = $procmux$5164_Y, Q = \status_cnt).
Adding SRST signal on $procdff$8601 ($dff) from module wfifo (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3921$766_Y, Q = \counter, rval = 5'00000).
Adding EN signal on $procdff$8602 ($dff) from module wfifo (D = $procmux$5262_Y, Q = \q).
Adding EN signal on $procdff$8603 ($dff) from module wfifo (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3913$764_Y, Q = \rd_pointer).
Adding EN signal on $procdff$8604 ($dff) from module wfifo (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3906$762_Y, Q = \wr_pointer).
Adding EN signal on $procdff$8609 ($dff) from module rfifo (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3763$712_Y, Q = \wr_pointer).
Adding EN signal on $procdff$8608 ($dff) from module rfifo (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3770$714_Y, Q = \rd_pointer).
Adding EN signal on $procdff$8605 ($dff) from module rfifo (D = $procmux$5271_Y, Q = \status_cnt).
Adding SRST signal on $procdff$8606 ($dff) from module rfifo (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:3778$716_Y, Q = \counter, rval = 5'00000).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [2047:1984]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [1983:1920]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [1919:1856]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [1855:1792]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [1791:1728]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [1727:1664]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [1663:1600]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [1599:1536]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [1535:1472]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [1471:1408]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [1407:1344]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [1343:1280]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [1279:1216]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [1215:1152]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [1151:1088]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [1087:1024]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [1023:960]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [959:896]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [895:832]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [831:768]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [767:704]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [703:640]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [639:576]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [575:512]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [511:448]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [447:384]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [383:320]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [319:256]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [255:192]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [191:128]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [127:64]).
Adding EN signal on $procdff$8607 ($dff) from module rfifo (D = \data_ram, Q = \q [63:0]).
Adding SRST signal on $procdff$8636 ($dff) from module DataTransferUnit (D = $procmux$7143_Y, Q = \state, rval = 2'00).
Adding SRST signal on $procdff$8610 ($dff) from module DataTransferUnit (D = $procmux$6975_Y, Q = \mem_addr0, rval = 24'000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$10082 ($sdff) from module DataTransferUnit (D = \mem_addr1, Q = \mem_addr0).
Adding SRST signal on $procdff$8635 ($dff) from module DataTransferUnit (D = $procmux$7008_Y, Q = \data_count, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$10084 ($sdff) from module DataTransferUnit (D = $procmux$7008_Y, Q = \data_count).
Adding SRST signal on $procdff$8634 ($dff) from module DataTransferUnit (D = $procmux$7029_Y, Q = \ram_addr4, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$10098 ($sdff) from module DataTransferUnit (D = $procmux$7029_Y, Q = \ram_addr4).
Adding SRST signal on $procdff$8633 ($dff) from module DataTransferUnit (D = $procmux$7047_Y, Q = \size, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$10110 ($sdff) from module DataTransferUnit (D = $procmux$7047_Y, Q = \size).
Adding SRST signal on $procdff$8611 ($dff) from module DataTransferUnit (D = $procmux$6970_Y, Q = \mem_addr1, rval = 24'000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$10122 ($sdff) from module DataTransferUnit (D = \mem_addr2, Q = \mem_addr1).
Adding SRST signal on $procdff$8612 ($dff) from module DataTransferUnit (D = $procmux$6965_Y, Q = \mem_addr2, rval = 24'000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$10124 ($sdff) from module DataTransferUnit (D = \mem_addr3, Q = \mem_addr2).
Adding SRST signal on $procdff$8613 ($dff) from module DataTransferUnit (D = $procmux$6960_Y, Q = \mem_addr3, rval = 24'000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$10126 ($sdff) from module DataTransferUnit (D = \mem_addr4, Q = \mem_addr3).
Adding SRST signal on $procdff$8614 ($dff) from module DataTransferUnit (D = $procmux$6955_Y, Q = \mem_addr4, rval = 24'000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$10128 ($sdff) from module DataTransferUnit (D = \mem_addr5, Q = \mem_addr4).
Adding SRST signal on $procdff$8615 ($dff) from module DataTransferUnit (D = \fifo_write_reg [4:1], Q = \fifo_write_reg [3:0], rval = 4'0000).
Adding SRST signal on $procdff$8616 ($dff) from module DataTransferUnit (D = { $procmux$6947_Y $procmux$6873_Y $procmux$6883_Y $procmux$6893_Y }, Q = \write_req_reg [3:0], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$10131 ($sdff) from module DataTransferUnit (D = \write_req_reg [4:1], Q = \write_req_reg [3:0]).
Adding SRST signal on $procdff$8617 ($dff) from module DataTransferUnit (D = { $procmux$6863_Y $procmux$6868_Y $procmux$6878_Y $procmux$6888_Y }, Q = \read_req_reg [3:0], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$10133 ($sdff) from module DataTransferUnit (D = \read_req_reg [4:1], Q = \read_req_reg [3:0]).
Adding SRST signal on $procdff$8618 ($dff) from module DataTransferUnit (D = $procmux$6942_Y, Q = \size_count0, rval = 2'01).
Adding EN signal on $auto$ff.cc:262:slice$10135 ($sdff) from module DataTransferUnit (D = \size_count1, Q = \size_count0).
Adding SRST signal on $procdff$8619 ($dff) from module DataTransferUnit (D = $procmux$6937_Y, Q = \size_count1, rval = 2'01).
Adding EN signal on $auto$ff.cc:262:slice$10137 ($sdff) from module DataTransferUnit (D = \size_count2, Q = \size_count1).
Adding SRST signal on $procdff$8620 ($dff) from module DataTransferUnit (D = $procmux$6932_Y, Q = \size_count2, rval = 2'01).
Adding EN signal on $auto$ff.cc:262:slice$10139 ($sdff) from module DataTransferUnit (D = \size_count3, Q = \size_count2).
Adding SRST signal on $procdff$8621 ($dff) from module DataTransferUnit (D = $procmux$6927_Y, Q = \size_count3, rval = 2'01).
Adding EN signal on $auto$ff.cc:262:slice$10141 ($sdff) from module DataTransferUnit (D = \size_count4, Q = \size_count3).
Adding SRST signal on $procdff$8622 ($dff) from module DataTransferUnit (D = $procmux$6922_Y, Q = \ram_addr0, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$10143 ($sdff) from module DataTransferUnit (D = \ram_addr1, Q = \ram_addr0).
Adding SRST signal on $procdff$8632 ($dff) from module DataTransferUnit (D = $procmux$7062_Y, Q = \size_count4, rval = 2'01).
Adding EN signal on $auto$ff.cc:262:slice$10145 ($sdff) from module DataTransferUnit (D = $procmux$7062_Y, Q = \size_count4).
Adding SRST signal on $procdff$8631 ($dff) from module DataTransferUnit (D = $procmux$7068_Y, Q = \fifo_read_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$10155 ($sdff) from module DataTransferUnit (D = $procmux$7144_CMP, Q = \fifo_read_reg).
Adding SRST signal on $procdff$8623 ($dff) from module DataTransferUnit (D = $procmux$6917_Y, Q = \ram_addr1, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$10161 ($sdff) from module DataTransferUnit (D = \ram_addr2, Q = \ram_addr1).
Adding SRST signal on $procdff$8624 ($dff) from module DataTransferUnit (D = $procmux$6912_Y, Q = \ram_addr2, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$10163 ($sdff) from module DataTransferUnit (D = \ram_addr3, Q = \ram_addr2).
Adding SRST signal on $procdff$8630 ($dff) from module DataTransferUnit (D = $procmux$7095_Y, Q = \read_req_reg [4], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$10165 ($sdff) from module DataTransferUnit (D = $procmux$7095_Y, Q = \read_req_reg [4]).
Adding SRST signal on $procdff$8625 ($dff) from module DataTransferUnit (D = $procmux$6907_Y, Q = \ram_addr3, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$10173 ($sdff) from module DataTransferUnit (D = \ram_addr4, Q = \ram_addr3).
Adding SRST signal on $procdff$8627 ($dff) from module DataTransferUnit (D = $procmux$7134_Y, Q = \mem_addr5, rval = 24'000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$10175 ($sdff) from module DataTransferUnit (D = $procmux$7134_Y, Q = \mem_addr5).
Adding SRST signal on $procdff$8628 ($dff) from module DataTransferUnit (D = $procmux$7148_CMP, Q = \fifo_write_reg [4], rval = 1'0).
Adding SRST signal on $procdff$8629 ($dff) from module DataTransferUnit (D = $procmux$7113_Y, Q = \write_req_reg [4], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$10192 ($sdff) from module DataTransferUnit (D = $procmux$7113_Y, Q = \write_req_reg [4]).
Adding SRST signal on $procdff$8649 ($dff) from module LUControl (D = \MOEnDelay [0], Q = \MOEn, rval = 1'1).
Adding EN signal on $procdff$8836 ($dff) from module LUControl (D = \mode_in, Q = \mode).
Adding EN signal on $procdff$8835 ($dff) from module LUControl (D = \loop_in, Q = \loop).
Adding SRST signal on $procdff$8662 ($dff) from module LUControl (D = $procmux$7217_Y, Q = \writeByteEnDelay4, rval = 256'1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111).
Adding SRST signal on $procdff$8829 ($dff) from module LUControl (D = $procmux$7977_Y, Q = \imodk, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$10204 ($sdff) from module LUControl (D = $procmux$7975_Y, Q = \imodk).
Adding SRST signal on $procdff$8828 ($dff) from module LUControl (D = $procmux$7988_Y, Q = \msIdx, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$10206 ($sdff) from module LUControl (D = $procmux$7988_Y, Q = \msIdx).
Adding SRST signal on $procdff$8827 ($dff) from module LUControl (D = $procmux$7996_Y, Q = \leftIdx, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$10210 ($sdff) from module LUControl (D = $procmux$7994_Y, Q = \leftIdx).
Adding SRST signal on $procdff$8826 ($dff) from module LUControl (D = $procmux$8007_Y [1], Q = \diagIdx [1], rval = 1'0).
Adding SRST signal on $procdff$8826 ($dff) from module LUControl (D = { $procmux$8004_Y [7:2] $procmux$8004_Y [0] }, Q = { \diagIdx [7:2] \diagIdx [0] }, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$10213 ($sdff) from module LUControl (D = { $procmux$8002_Y [7:2] $procmux$8002_Y [0] }, Q = { \diagIdx [7:2] \diagIdx [0] }).
Adding EN signal on $auto$ff.cc:262:slice$10212 ($sdff) from module LUControl (D = $procmux$8007_Y [1], Q = \diagIdx [1]).
Adding SRST signal on $procdff$8825 ($dff) from module LUControl (D = $procmux$8012_Y, Q = \topIdx, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$10220 ($sdff) from module LUControl (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2042$376_Y, Q = \topIdx).
Adding SRST signal on $procdff$8824 ($dff) from module LUControl (D = $procmux$8023_Y, Q = \curTopIdx, rval = 14'00000000000001).
Adding EN signal on $auto$ff.cc:262:slice$10222 ($sdff) from module LUControl (D = $procmux$8023_Y, Q = \curTopIdx).
Adding EN signal on $procdff$8834 ($dff) from module LUControl (D = \n_in, Q = \n).
Adding EN signal on $procdff$8833 ($dff) from module LUControl (D = \m_in, Q = \m).
Adding SRST signal on $procdff$8831 ($dff) from module LUControl (D = $procmux$7961_Y, Q = \waitCycles, rval = 8'00011111).
Adding EN signal on $auto$ff.cc:262:slice$10228 ($sdff) from module LUControl (D = $procmux$7961_Y, Q = \waitCycles).
Adding SRST signal on $procdff$8830 ($dff) from module LUControl (D = $procmux$7969_Y, Q = \i1modk, rval = 6'000001).
Adding EN signal on $auto$ff.cc:262:slice$10236 ($sdff) from module LUControl (D = $procmux$7967_Y, Q = \i1modk).
Adding SRST signal on $procdff$8822 ($dff) from module LUControl (D = $procmux$8031_Y, Q = \nextTopIdx, rval = 14'00000000000000).
Adding EN signal on $auto$ff.cc:262:slice$10238 ($sdff) from module LUControl (D = $procmux$8029_Y, Q = \nextTopIdx).
Adding SRST signal on $procdff$8821 ($dff) from module LUControl (D = $procmux$8042_Y, Q = \j, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$10240 ($sdff) from module LUControl (D = $procmux$8042_Y, Q = \j).
Adding SRST signal on $procdff$8820 ($dff) from module LUControl (D = $procmux$8047_Y, Q = \i1, rval = 8'00000001).
Adding EN signal on $auto$ff.cc:262:slice$10244 ($sdff) from module LUControl (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2117$430_Y [7:0], Q = \i1).
Adding SRST signal on $procdff$8819 ($dff) from module LUControl (D = $procmux$7322_Y, Q = \divCounter, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$10246 ($sdff) from module LUControl (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2443$572_Y [5:0], Q = \divCounter).
Adding SRST signal on $procdff$8818 ($dff) from module LUControl (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:2438$567_Y [7:0], Q = \counter, rval = 8'00000000).
Adding EN signal on $procdff$8816 ($dff) from module LUControl (D = $procmux$7330_Y, Q = \topWriteCounter).
Adding SRST signal on $procdff$8815 ($dff) from module LUControl (D = $procmux$7338_Y, Q = \readRowCounter, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$10252 ($sdff) from module LUControl (D = $procmux$7338_Y, Q = \readRowCounter).
Adding SRST signal on $procdff$8807 ($dff) from module LUControl (D = \nextState, Q = \currentState, rval = 4'0000).
Adding SRST signal on $procdff$8808 ($dff) from module LUControl (D = \nextRowState, Q = \currentRowState, rval = 2'10).
Adding SRST signal on $procdff$8809 ($dff) from module LUControl (D = \i1modkByteEn, Q = \byteEn, rval = 256'1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111).
Adding EN signal on $procdff$8810 ($dff) from module LUControl (D = $procmux$7352_Y, Q = \nextTopIdxCounter).
Adding SRST signal on $procdff$8734 ($dff) from module LUControl (D = \leftWriteEnDelay [16], Q = \leftWriteEnDelay [15], rval = 1'1).
Adding SRST signal on $procdff$8734 ($dff) from module LUControl (D = \leftWriteEnDelay [5], Q = \leftWriteEnDelay [4], rval = 1'1).
Adding SRST signal on $procdff$8735 ($dff) from module LUControl (D = \curWriteEnDelay [16], Q = \curWriteEnDelay [15], rval = 1'1).
Adding SRST signal on $procdff$8771 ($dff) from module LUControl (D = \topWriteEnDelay [5], Q = \topWriteEnDelay [4], rval = 1'1).
Adding SRST signal on $procdff$8772 ($dff) from module LUControl (D = $procmux$7228_Y, Q = \topSourceSelDelay [4], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$10269 ($sdff) from module LUControl (D = 1'1, Q = \topSourceSelDelay [4]).
Adding SRST signal on $procdff$8876 ($dff) from module LU (D = $procmux$8235_Y, Q = \multOperand, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$10272 ($sdff) from module LU (D = $procmux$8233_Y, Q = \multOperand).
Adding EN signal on $procdff$8877 ($dff) from module LU (D = \topReadDataReg0, Q = \diag).
Adding SRST signal on $procdff$8908 ($dff) from module MarshallerController (D = $procmux$8358_Y, Q = \ncount, rval = 20'00000000000010000000).
Adding EN signal on $auto$ff.cc:262:slice$10275 ($sdff) from module MarshallerController (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:606$157_Y, Q = \ncount).
Adding EN signal on $procdff$8930 ($dff) from module MarshallerController (D = $procmux$8508_Y, Q = \mem_read).
Adding SRST signal on $procdff$8929 ($dff) from module MarshallerController (D = $procmux$8510_Y, Q = \mem_count, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$10280 ($sdff) from module MarshallerController (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:335$75_Y, Q = \mem_count).
Adding EN signal on $procdff$8928 ($dff) from module MarshallerController (D = $procmux$8527_Y, Q = \mem_addr).
Adding EN signal on $procdff$8906 ($dff) from module MarshallerController (D = $procmux$8371_Y, Q = \comp_N).
Adding SRST signal on $procdff$8927 ($dff) from module MarshallerController (D = $procmux$8529_Y, Q = \ram_addr, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$10290 ($sdff) from module MarshallerController (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:333$73_Y, Q = \ram_addr).
Adding EN signal on $procdff$8926 ($dff) from module MarshallerController (D = $procmux$8539_Y, Q = \read_n).
Adding SRST signal on $procdff$8924 ($dff) from module MarshallerController (D = \next_mem_state, Q = \cur_mem_state, rval = 4'0000).
Adding SRST signal on $procdff$8923 ($dff) from module MarshallerController (D = \next_state, Q = \cur_state, rval = 5'00000).
Setting constant 0-bit at position 0 on $procdff$8922 ($dff) from module MarshallerController.
Setting constant 1-bit at position 1 on $procdff$8922 ($dff) from module MarshallerController.
Setting constant 0-bit at position 2 on $procdff$8922 ($dff) from module MarshallerController.
Setting constant 0-bit at position 3 on $procdff$8922 ($dff) from module MarshallerController.
Setting constant 0-bit at position 4 on $procdff$8922 ($dff) from module MarshallerController.
Setting constant 0-bit at position 5 on $procdff$8922 ($dff) from module MarshallerController.
Setting constant 0-bit at position 6 on $procdff$8922 ($dff) from module MarshallerController.
Setting constant 0-bit at position 7 on $procdff$8922 ($dff) from module MarshallerController.
Adding SRST signal on $procdff$8921 ($dff) from module MarshallerController (D = $procmux$8272_Y, Q = \mem_write_size_buf, rval = 8'00000010).
Adding EN signal on $auto$ff.cc:262:slice$10301 ($sdff) from module MarshallerController (D = \mem_read_size, Q = \mem_write_size_buf).
Adding SRST signal on $procdff$8920 ($dff) from module MarshallerController (D = $procmux$8277_Y, Q = \mem_write_size, rval = 8'00000010).
Adding EN signal on $auto$ff.cc:262:slice$10303 ($sdff) from module MarshallerController (D = \mem_write_size_buf, Q = \mem_write_size).
Adding SRST signal on $procdff$8919 ($dff) from module MarshallerController (D = $procmux$8282_Y, Q = \mem_write_buf, rval = 24'000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$10305 ($sdff) from module MarshallerController (D = \mem_cur, Q = \mem_write_buf).
Adding EN signal on $procdff$8918 ($dff) from module MarshallerController (D = $procmux$8299_Y, Q = \mem_cur).
Adding EN signal on $procdff$8917 ($dff) from module MarshallerController (D = $procmux$8313_Y, Q = \mem_left).
Adding SRST signal on $procdff$8916 ($dff) from module MarshallerController (D = $procmux$8315_Y, Q = \mem_write, rval = 24'000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$10317 ($sdff) from module MarshallerController (D = \mem_write_buf, Q = \mem_write).
Adding EN signal on $procdff$8915 ($dff) from module MarshallerController (D = $procmux$8332_Y, Q = \mem_top).
Adding EN signal on $procdff$8914 ($dff) from module MarshallerController (D = $procmux$8338_Y, Q = \mem_base).
Adding SRST signal on $procdff$8913 ($dff) from module MarshallerController (D = $procmux$8343_Y, Q = \no_left_switch, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$10331 ($sdff) from module MarshallerController (D = $procmux$8343_Y, Q = \no_left_switch).
Adding EN signal on $procdff$8912 ($dff) from module MarshallerController (D = $procmux$8351_Y, Q = \write_n_buf).
Adding EN signal on $procdff$8911 ($dff) from module MarshallerController (D = $procmux$8356_Y, Q = \write_n).
Adding SRST signal on $procdff$8907 ($dff) from module MarshallerController (D = $procmux$8363_Y, Q = \mcount, rval = 20'00000000000010000000).
Adding EN signal on $auto$ff.cc:262:slice$10341 ($sdff) from module MarshallerController (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:600$153_Y, Q = \mcount).
Adding EN signal on $procdff$8900 ($dff) from module MarshallerController (D = \input_N, Q = \N).
Adding SRST signal on $procdff$8901 ($dff) from module MarshallerController (D = $procmux$8383_Y, Q = \loop, rval = 8'10000000).
Adding EN signal on $auto$ff.cc:262:slice$10344 ($sdff) from module MarshallerController (D = $sub$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:594$145_Y [7:0], Q = \loop).
Adding SRST signal on $procdff$8902 ($dff) from module MarshallerController (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:612$160_Y [7:0], Q = \block_m, rval = 8'10000000).
Adding SRST signal on $procdff$8903 ($dff) from module MarshallerController (D = $add$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:618$163_Y [7:0], Q = \block_n, rval = 8'10000000).
Adding SRST signal on $procdff$8904 ($dff) from module MarshallerController (D = $procmux$8378_Y, Q = \cur_mem_sel, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$10348 ($sdff) from module MarshallerController (D = $logic_not$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:625$179_Y, Q = \cur_mem_sel).
Adding SRST signal on $procdff$8905 ($dff) from module MarshallerController (D = $procmux$8373_Y, Q = \left_mem_sel, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$10350 ($sdff) from module MarshallerController (D = $logic_not$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:641$207_Y, Q = \left_mem_sel).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \assemble..
Finding unused cells or wires in module \flag..
Finding unused cells or wires in module \round..
Finding unused cells or wires in module \shift..
Finding unused cells or wires in module \normalize..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \multiply_a..
Finding unused cells or wires in module \prenorm..
Finding unused cells or wires in module \special..
Finding unused cells or wires in module \preprocess..
Finding unused cells or wires in module \fpmul..
Finding unused cells or wires in module \div_24b..
Finding unused cells or wires in module \fpu_div..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \memcmd_fifo..
Finding unused cells or wires in module \addr_fifo..
Finding unused cells or wires in module \wfifo..
Finding unused cells or wires in module \rfifo..
Finding unused cells or wires in module \DataTransferUnit..
Finding unused cells or wires in module \mult_add..
Finding unused cells or wires in module \top_ram..
Finding unused cells or wires in module \ram3..
Finding unused cells or wires in module \ram2..
Finding unused cells or wires in module \ram1..
Finding unused cells or wires in module \ram..
Finding unused cells or wires in module \LUControl..
Finding unused cells or wires in module \LU..
Finding unused cells or wires in module \MarshallerController..
Finding unused cells or wires in module \LU64PEEng..
Removed 703 unused cells and 5521 unused wires.
<suppressed ~759 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module DataTransferUnit.
<suppressed ~7 debug messages>
Optimizing module LU.
Optimizing module LU64PEEng.
Optimizing module LUControl.
<suppressed ~7 debug messages>
Optimizing module MarshallerController.
<suppressed ~10 debug messages>
Optimizing module addr_fifo.
<suppressed ~1 debug messages>
Optimizing module assemble.
Optimizing module div_24b.
Optimizing module exponent.
Optimizing module flag.
Optimizing module fpmul.
Optimizing module fpu_add.
<suppressed ~1 debug messages>
Optimizing module fpu_div.
Optimizing module memcmd_fifo.
<suppressed ~1 debug messages>
Optimizing module mult_add.
Optimizing module multiply_a.
Optimizing module normalize.
Optimizing module prenorm.
Optimizing module preprocess.
Optimizing module ram.
Optimizing module ram1.
Optimizing module ram2.
Optimizing module ram3.
Optimizing module rfifo.
<suppressed ~1 debug messages>
Optimizing module round.
Optimizing module shift.
Optimizing module special.
Optimizing module top_ram.
Optimizing module wfifo.
<suppressed ~2 debug messages>

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \DataTransferUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LU64PEEng..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MarshallerController..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \addr_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \assemble..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \div_24b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exponent..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \flag..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpmul..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \memcmd_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mult_add..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \multiply_a..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \normalize..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \prenorm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \preprocess..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \round..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \special..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top_ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~235 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \DataTransferUnit.
  Optimizing cells in module \LU.
  Optimizing cells in module \LU64PEEng.
  Optimizing cells in module \LUControl.
  Optimizing cells in module \MarshallerController.
    New ctrl vector for $pmux cell $procmux$8406: { $eq$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:235$32_Y $procmux$8496_CMP $procmux$8495_CMP $procmux$8484_CMP $procmux$8483_CMP $auto$opt_reduce.cc:134:opt_mux$10355 $procmux$8472_CMP $procmux$8471_CMP $eq$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:223$9_Y $eq$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:563$137_Y $procmux$8456_CMP $eq$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:558$134_Y $procmux$8441_CMP $auto$opt_reduce.cc:134:opt_mux$10353 $procmux$8427_CMP $procmux$8426_CMP $eq$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:243$42_Y $procmux$8421_CMP $eq$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:223$17_Y $procmux$8416_CMP $eq$/home/zhigang/DATA/raw_designs/vtr_designs/verilog/LU64PEEng.v:243$40_Y $procmux$8411_CMP \done }
  Optimizing cells in module \MarshallerController.
  Optimizing cells in module \addr_fifo.
  Optimizing cells in module \assemble.
  Optimizing cells in module \div_24b.
  Optimizing cells in module \exponent.
  Optimizing cells in module \flag.
  Optimizing cells in module \fpmul.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_div.
  Optimizing cells in module \memcmd_fifo.
  Optimizing cells in module \mult_add.
  Optimizing cells in module \multiply_a.
  Optimizing cells in module \normalize.
  Optimizing cells in module \prenorm.
  Optimizing cells in module \preprocess.
  Optimizing cells in module \ram.
  Optimizing cells in module \ram1.
  Optimizing cells in module \ram2.
  Optimizing cells in module \ram3.
  Optimizing cells in module \rfifo.
  Optimizing cells in module \round.
  Optimizing cells in module \shift.
  Optimizing cells in module \special.
  Optimizing cells in module \top_ram.
  Optimizing cells in module \wfifo.
Performed a total of 1 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DataTransferUnit'.
<suppressed ~54 debug messages>
Finding identical cells in module `\LU'.
Finding identical cells in module `\LU64PEEng'.
Finding identical cells in module `\LUControl'.
<suppressed ~3 debug messages>
Finding identical cells in module `\MarshallerController'.
<suppressed ~18 debug messages>
Finding identical cells in module `\addr_fifo'.
Finding identical cells in module `\assemble'.
Finding identical cells in module `\div_24b'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\flag'.
Finding identical cells in module `\fpmul'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\fpu_div'.
Finding identical cells in module `\memcmd_fifo'.
Finding identical cells in module `\mult_add'.
Finding identical cells in module `\multiply_a'.
Finding identical cells in module `\normalize'.
Finding identical cells in module `\prenorm'.
Finding identical cells in module `\preprocess'.
Finding identical cells in module `\ram'.
Finding identical cells in module `\ram1'.
Finding identical cells in module `\ram2'.
Finding identical cells in module `\ram3'.
Finding identical cells in module `\rfifo'.
<suppressed ~1395 debug messages>
Finding identical cells in module `\round'.
Finding identical cells in module `\shift'.
Finding identical cells in module `\special'.
Finding identical cells in module `\top_ram'.
Finding identical cells in module `\wfifo'.
Removed a total of 490 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$8910 ($dff) from module MarshallerController.
Setting constant 0-bit at position 1 on $procdff$8910 ($dff) from module MarshallerController.
Setting constant 0-bit at position 2 on $procdff$8910 ($dff) from module MarshallerController.
Setting constant 0-bit at position 3 on $procdff$8910 ($dff) from module MarshallerController.
Setting constant 0-bit at position 4 on $procdff$8910 ($dff) from module MarshallerController.
Setting constant 0-bit at position 5 on $procdff$8910 ($dff) from module MarshallerController.
Setting constant 0-bit at position 6 on $procdff$8910 ($dff) from module MarshallerController.
Setting constant 0-bit at position 0 on $procdff$8909 ($dff) from module MarshallerController.
Setting constant 0-bit at position 1 on $procdff$8909 ($dff) from module MarshallerController.
Setting constant 0-bit at position 2 on $procdff$8909 ($dff) from module MarshallerController.
Setting constant 0-bit at position 3 on $procdff$8909 ($dff) from module MarshallerController.
Setting constant 0-bit at position 4 on $procdff$8909 ($dff) from module MarshallerController.
Setting constant 0-bit at position 5 on $procdff$8909 ($dff) from module MarshallerController.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10302 ($sdffe) from module MarshallerController.
Setting constant 1-bit at position 1 on $auto$ff.cc:262:slice$10302 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$10302 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$10302 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$10302 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$10302 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$10302 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$10302 ($sdffe) from module MarshallerController.

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DataTransferUnit..
Finding unused cells or wires in module \LU..
Finding unused cells or wires in module \LU64PEEng..
Finding unused cells or wires in module \LUControl..
Finding unused cells or wires in module \MarshallerController..
Finding unused cells or wires in module \addr_fifo..
Finding unused cells or wires in module \assemble..
Finding unused cells or wires in module \div_24b..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \flag..
Finding unused cells or wires in module \fpmul..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_div..
Finding unused cells or wires in module \memcmd_fifo..
Finding unused cells or wires in module \mult_add..
Finding unused cells or wires in module \multiply_a..
Finding unused cells or wires in module \normalize..
Finding unused cells or wires in module \prenorm..
Finding unused cells or wires in module \preprocess..
Finding unused cells or wires in module \ram..
Finding unused cells or wires in module \ram1..
Finding unused cells or wires in module \ram2..
Finding unused cells or wires in module \ram3..
Finding unused cells or wires in module \rfifo..
Finding unused cells or wires in module \round..
Finding unused cells or wires in module \shift..
Finding unused cells or wires in module \special..
Finding unused cells or wires in module \top_ram..
Finding unused cells or wires in module \wfifo..
Removed 0 unused cells and 491 unused wires.
<suppressed ~5 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module DataTransferUnit.
Optimizing module LU.
Optimizing module LU64PEEng.
Optimizing module LUControl.
Optimizing module MarshallerController.
Optimizing module addr_fifo.
Optimizing module assemble.
Optimizing module div_24b.
Optimizing module exponent.
Optimizing module flag.
Optimizing module fpmul.
Optimizing module fpu_add.
Optimizing module fpu_div.
Optimizing module memcmd_fifo.
Optimizing module mult_add.
Optimizing module multiply_a.
Optimizing module normalize.
Optimizing module prenorm.
Optimizing module preprocess.
Optimizing module ram.
Optimizing module ram1.
Optimizing module ram2.
Optimizing module ram3.
Optimizing module rfifo.
Optimizing module round.
Optimizing module shift.
Optimizing module special.
Optimizing module top_ram.
Optimizing module wfifo.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \DataTransferUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LU64PEEng..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MarshallerController..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \addr_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \assemble..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \div_24b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exponent..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \flag..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpmul..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \memcmd_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mult_add..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \multiply_a..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \normalize..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \prenorm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \preprocess..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \round..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \special..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top_ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~236 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \DataTransferUnit.
  Optimizing cells in module \LU.
  Optimizing cells in module \LU64PEEng.
  Optimizing cells in module \LUControl.
  Optimizing cells in module \MarshallerController.
  Optimizing cells in module \addr_fifo.
  Optimizing cells in module \assemble.
  Optimizing cells in module \div_24b.
  Optimizing cells in module \exponent.
  Optimizing cells in module \flag.
  Optimizing cells in module \fpmul.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_div.
  Optimizing cells in module \memcmd_fifo.
  Optimizing cells in module \mult_add.
  Optimizing cells in module \multiply_a.
  Optimizing cells in module \normalize.
  Optimizing cells in module \prenorm.
  Optimizing cells in module \preprocess.
  Optimizing cells in module \ram.
  Optimizing cells in module \ram1.
  Optimizing cells in module \ram2.
  Optimizing cells in module \ram3.
  Optimizing cells in module \rfifo.
  Optimizing cells in module \round.
  Optimizing cells in module \shift.
  Optimizing cells in module \special.
  Optimizing cells in module \top_ram.
  Optimizing cells in module \wfifo.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DataTransferUnit'.
Finding identical cells in module `\LU'.
Finding identical cells in module `\LU64PEEng'.
Finding identical cells in module `\LUControl'.
Finding identical cells in module `\MarshallerController'.
Finding identical cells in module `\addr_fifo'.
Finding identical cells in module `\assemble'.
Finding identical cells in module `\div_24b'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\flag'.
Finding identical cells in module `\fpmul'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\fpu_div'.
Finding identical cells in module `\memcmd_fifo'.
Finding identical cells in module `\mult_add'.
Finding identical cells in module `\multiply_a'.
Finding identical cells in module `\normalize'.
Finding identical cells in module `\prenorm'.
Finding identical cells in module `\preprocess'.
Finding identical cells in module `\ram'.
Finding identical cells in module `\ram1'.
Finding identical cells in module `\ram2'.
Finding identical cells in module `\ram3'.
Finding identical cells in module `\rfifo'.
Finding identical cells in module `\round'.
Finding identical cells in module `\shift'.
Finding identical cells in module `\special'.
Finding identical cells in module `\top_ram'.
Finding identical cells in module `\wfifo'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10356 ($dff) from module MarshallerController.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10356 ($dff) from module MarshallerController.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$10356 ($dff) from module MarshallerController.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$10356 ($dff) from module MarshallerController.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$10356 ($dff) from module MarshallerController.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$10356 ($dff) from module MarshallerController.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10304 ($sdffe) from module MarshallerController.
Setting constant 1-bit at position 1 on $auto$ff.cc:262:slice$10304 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$10304 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$10304 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$10304 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$10304 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$10304 ($sdffe) from module MarshallerController.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$10304 ($sdffe) from module MarshallerController.

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DataTransferUnit..
Finding unused cells or wires in module \LU..
Finding unused cells or wires in module \LU64PEEng..
Finding unused cells or wires in module \LUControl..
Finding unused cells or wires in module \MarshallerController..
Finding unused cells or wires in module \addr_fifo..
Finding unused cells or wires in module \assemble..
Finding unused cells or wires in module \div_24b..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \flag..
Finding unused cells or wires in module \fpmul..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_div..
Finding unused cells or wires in module \memcmd_fifo..
Finding unused cells or wires in module \mult_add..
Finding unused cells or wires in module \multiply_a..
Finding unused cells or wires in module \normalize..
Finding unused cells or wires in module \prenorm..
Finding unused cells or wires in module \preprocess..
Finding unused cells or wires in module \ram..
Finding unused cells or wires in module \ram1..
Finding unused cells or wires in module \ram2..
Finding unused cells or wires in module \ram3..
Finding unused cells or wires in module \rfifo..
Finding unused cells or wires in module \round..
Finding unused cells or wires in module \shift..
Finding unused cells or wires in module \special..
Finding unused cells or wires in module \top_ram..
Finding unused cells or wires in module \wfifo..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module DataTransferUnit.
Optimizing module LU.
Optimizing module LU64PEEng.
Optimizing module LUControl.
Optimizing module MarshallerController.
<suppressed ~1 debug messages>
Optimizing module addr_fifo.
Optimizing module assemble.
Optimizing module div_24b.
Optimizing module exponent.
Optimizing module flag.
Optimizing module fpmul.
Optimizing module fpu_add.
Optimizing module fpu_div.
Optimizing module memcmd_fifo.
Optimizing module mult_add.
Optimizing module multiply_a.
Optimizing module normalize.
Optimizing module prenorm.
Optimizing module preprocess.
Optimizing module ram.
Optimizing module ram1.
Optimizing module ram2.
Optimizing module ram3.
Optimizing module rfifo.
Optimizing module round.
Optimizing module shift.
Optimizing module special.
Optimizing module top_ram.
Optimizing module wfifo.

4.23. Rerunning OPT passes. (Maybe there is more to do..)

4.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \DataTransferUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LU64PEEng..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LUControl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MarshallerController..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \addr_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \assemble..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \div_24b..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exponent..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \flag..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpmul..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fpu_add..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fpu_div..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \memcmd_fifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mult_add..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \multiply_a..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \normalize..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \prenorm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \preprocess..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ram3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \round..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shift..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \special..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top_ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wfifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~235 debug messages>

4.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \DataTransferUnit.
  Optimizing cells in module \LU.
  Optimizing cells in module \LU64PEEng.
  Optimizing cells in module \LUControl.
  Optimizing cells in module \MarshallerController.
  Optimizing cells in module \addr_fifo.
  Optimizing cells in module \assemble.
  Optimizing cells in module \div_24b.
  Optimizing cells in module \exponent.
  Optimizing cells in module \flag.
  Optimizing cells in module \fpmul.
  Optimizing cells in module \fpu_add.
  Optimizing cells in module \fpu_div.
  Optimizing cells in module \memcmd_fifo.
  Optimizing cells in module \mult_add.
  Optimizing cells in module \multiply_a.
  Optimizing cells in module \normalize.
  Optimizing cells in module \prenorm.
  Optimizing cells in module \preprocess.
  Optimizing cells in module \ram.
  Optimizing cells in module \ram1.
  Optimizing cells in module \ram2.
  Optimizing cells in module \ram3.
  Optimizing cells in module \rfifo.
  Optimizing cells in module \round.
  Optimizing cells in module \shift.
  Optimizing cells in module \special.
  Optimizing cells in module \top_ram.
  Optimizing cells in module \wfifo.
Performed a total of 0 changes.

4.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DataTransferUnit'.
Finding identical cells in module `\LU'.
Finding identical cells in module `\LU64PEEng'.
Finding identical cells in module `\LUControl'.
Finding identical cells in module `\MarshallerController'.
Finding identical cells in module `\addr_fifo'.
Finding identical cells in module `\assemble'.
Finding identical cells in module `\div_24b'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\flag'.
Finding identical cells in module `\fpmul'.
Finding identical cells in module `\fpu_add'.
Finding identical cells in module `\fpu_div'.
Finding identical cells in module `\memcmd_fifo'.
Finding identical cells in module `\mult_add'.
Finding identical cells in module `\multiply_a'.
Finding identical cells in module `\normalize'.
Finding identical cells in module `\prenorm'.
Finding identical cells in module `\preprocess'.
Finding identical cells in module `\ram'.
Finding identical cells in module `\ram1'.
Finding identical cells in module `\ram2'.
Finding identical cells in module `\ram3'.
Finding identical cells in module `\rfifo'.
Finding identical cells in module `\round'.
Finding identical cells in module `\shift'.
Finding identical cells in module `\special'.
Finding identical cells in module `\top_ram'.
Finding identical cells in module `\wfifo'.
Removed a total of 0 cells.

4.27. Executing OPT_DFF pass (perform DFF optimizations).

4.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DataTransferUnit..
Finding unused cells or wires in module \LU..
Finding unused cells or wires in module \LU64PEEng..
Finding unused cells or wires in module \LUControl..
Finding unused cells or wires in module \MarshallerController..
Finding unused cells or wires in module \addr_fifo..
Finding unused cells or wires in module \assemble..
Finding unused cells or wires in module \div_24b..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \flag..
Finding unused cells or wires in module \fpmul..
Finding unused cells or wires in module \fpu_add..
Finding unused cells or wires in module \fpu_div..
Finding unused cells or wires in module \memcmd_fifo..
Finding unused cells or wires in module \mult_add..
Finding unused cells or wires in module \multiply_a..
Finding unused cells or wires in module \normalize..
Finding unused cells or wires in module \prenorm..
Finding unused cells or wires in module \preprocess..
Finding unused cells or wires in module \ram..
Finding unused cells or wires in module \ram1..
Finding unused cells or wires in module \ram2..
Finding unused cells or wires in module \ram3..
Finding unused cells or wires in module \rfifo..
Finding unused cells or wires in module \round..
Finding unused cells or wires in module \shift..
Finding unused cells or wires in module \special..
Finding unused cells or wires in module \top_ram..
Finding unused cells or wires in module \wfifo..

4.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module DataTransferUnit.
Optimizing module LU.
Optimizing module LU64PEEng.
Optimizing module LUControl.
Optimizing module MarshallerController.
Optimizing module addr_fifo.
Optimizing module assemble.
Optimizing module div_24b.
Optimizing module exponent.
Optimizing module flag.
Optimizing module fpmul.
Optimizing module fpu_add.
Optimizing module fpu_div.
Optimizing module memcmd_fifo.
Optimizing module mult_add.
Optimizing module multiply_a.
Optimizing module normalize.
Optimizing module prenorm.
Optimizing module preprocess.
Optimizing module ram.
Optimizing module ram1.
Optimizing module ram2.
Optimizing module ram3.
Optimizing module rfifo.
Optimizing module round.
Optimizing module shift.
Optimizing module special.
Optimizing module top_ram.
Optimizing module wfifo.

4.30. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== DataTransferUnit ===

   Number of wires:                149
   Number of wire bits:          13549
   Number of public wires:          69
   Number of public wire bits:   13060
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                113
     $add                            3
     $dff                            1
     $eq                             2
     $ge                             1
     $logic_and                     10
     $logic_not                      4
     $logic_or                       2
     $lt                             2
     $mux                           38
     $ne                             5
     $not                            4
     $pmux                           1
     $reduce_and                     4
     $reduce_bool                    3
     $reduce_or                      3
     $sdff                           3
     $sdffe                         20
     $sub                            3
     addr_fifo                       1
     memcmd_fifo                     1
     rfifo                           1
     wfifo                           1

=== LU ===

   Number of wires:                474
   Number of wire bits:          79864
   Number of public wires:         389
   Number of public wire bits:   70436
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                282
     $dff                           55
     $dffe                           1
     $eq                            63
     $logic_not                      1
     $mux                           88
     $pmux                           2
     $sdffe                          1
     LUControl                       1
     fpu_div                         1
     mult_add                       64
     ram                             1
     ram1                            1
     ram2                            1
     ram3                            1
     top_ram                         1

=== LU64PEEng ===

   Number of wires:                 50
   Number of wire bits:          11343
   Number of public wires:          49
   Number of public wire bits:   11342
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $logic_and                      2
     $not                            1
     DataTransferUnit                1
     LU                              1
     MarshallerController            1

=== LUControl ===

   Number of wires:                520
   Number of wire bits:          13346
   Number of public wires:         214
   Number of public wire bits:   10698
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                503
     $add                           30
     $dff                          163
     $dffe                           5
     $eq                           104
     $ge                             3
     $gt                             1
     $logic_and                     23
     $logic_not                      4
     $logic_or                      11
     $lt                             3
     $mux                           89
     $ne                             4
     $not                            2
     $pmux                           4
     $reduce_and                     1
     $reduce_bool                    6
     $reduce_or                     18
     $sdff                          10
     $sdffe                         15
     $sub                            7

=== MarshallerController ===

   Number of wires:                232
   Number of wire bits:           1720
   Number of public wires:          49
   Number of public wire bits:     496
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                217
     $add                           13
     $dff                            4
     $dffe                          11
     $eq                            50
     $le                             1
     $logic_and                      5
     $logic_not                      5
     $logic_or                      28
     $lt                             2
     $mux                           58
     $ne                             2
     $not                            2
     $pmux                           3
     $reduce_and                     3
     $reduce_bool                    7
     $reduce_or                      3
     $sdff                           4
     $sdffe                         10
     $sub                            6

=== addr_fifo ===

   Number of wires:                 28
   Number of wire bits:            122
   Number of public wires:          13
   Number of public wire bits:      58
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 22
     $add                            3
     $dffe                           4
     $eq                             1
     $logic_and                      4
     $logic_not                      3
     $mux                            2
     $ne                             1
     $reduce_bool                    2
     $sub                            1
     dual_port_ram                   1

=== assemble ===

   Number of wires:                 16
   Number of wire bits:            257
   Number of public wires:          12
   Number of public wire bits:     163
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  7
     $mux                            6
     $xor                            1

=== div_24b ===

   Number of wires:                 75
   Number of wire bits:           2076
   Number of public wires:          28
   Number of public wire bits:    1247
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 94
     $le                            24
     $mux                           47
     $sub                           23

=== exponent ===

   Number of wires:                 10
   Number of wire bits:            130
   Number of public wires:           5
   Number of public wire bits:      32
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $add                            2
     $logic_not                      1
     $or                             1
     $reduce_or                      1
     $sub                            1

=== flag ===

   Number of wires:                 10
   Number of wire bits:             14
   Number of public wires:           7
   Number of public wire bits:      11
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $and                            2
     $not                            1
     $or                             2

=== fpmul ===

   Number of wires:                 42
   Number of wire bits:            502
   Number of public wires:          41
   Number of public wire bits:     501
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 14
     $and                            1
     $dff                            1
     $or                             2
     assemble                        1
     exponent                        1
     flag                            1
     multiply_a                      1
     normalize                       1
     prenorm                         1
     preprocess                      1
     round                           1
     shift                           1
     special                         1

=== fpu_add ===

   Number of wires:                126
   Number of wire bits:           1419
   Number of public wires:          11
   Number of public wire bits:     243
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                148
     $add                            2
     $dff                            2
     $eq                            46
     $gt                             1
     $logic_and                      3
     $lt                             2
     $mux                           61
     $not                            2
     $pmux                           2
     $sub                           27

=== fpu_div ===

   Number of wires:                 62
   Number of wire bits:           1094
   Number of public wires:          12
   Number of public wire bits:     195
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 83
     $add                            1
     $dff                            6
     $ge                             1
     $mux                           47
     $sub                           26
     $xor                            1
     div_24b                         1

=== memcmd_fifo ===

   Number of wires:                 28
   Number of wire bits:            195
   Number of public wires:          13
   Number of public wire bits:     158
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 22
     $add                            3
     $dffe                           4
     $eq                             1
     $logic_and                      4
     $logic_not                      3
     $mux                            2
     $ne                             1
     $reduce_bool                    2
     $sub                            1
     dual_port_ram                   1

=== mult_add ===

   Number of wires:                 10
   Number of wire bits:            262
   Number of public wires:          10
   Number of public wire bits:     262
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $dff                            2
     fpmul                           1
     fpu_add                         1

=== multiply_a ===

   Number of wires:                  4
   Number of wire bits:             97
   Number of public wires:           4
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $mul                            1

=== normalize ===

   Number of wires:                  7
   Number of wire bits:            148
   Number of public wires:           4
   Number of public wire bits:      98
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $and                            1
     $mux                            2
     $xor                            1

=== prenorm ===

   Number of wires:                108
   Number of wire bits:           1792
   Number of public wires:          14
   Number of public wire bits:     210
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 98
     $eq                            46
     $mux                           48
     $pmux                           2
     $sub                            2

=== preprocess ===

   Number of wires:                 31
   Number of wire bits:            153
   Number of public wires:          23
   Number of public wire bits:     145
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 21
     $and                            8
     $logic_not                      4
     $or                             2
     $reduce_and                     2
     $reduce_or                      4
     $xor                            1

=== ram ===

   Number of wires:                 11
   Number of wire bits:          12562
   Number of public wires:          11
   Number of public wire bits:   12562
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $and                            1
     $or                             1
     dual_port_ram                   1

=== ram1 ===

   Number of wires:                 11
   Number of wire bits:          12562
   Number of public wires:          11
   Number of public wire bits:   12562
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $and                            1
     $or                             1
     dual_port_ram                   1

=== ram2 ===

   Number of wires:                 11
   Number of wire bits:          12562
   Number of public wires:          11
   Number of public wire bits:   12562
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $and                            1
     $or                             1
     dual_port_ram                   1

=== ram3 ===

   Number of wires:                 11
   Number of wire bits:          12562
   Number of public wires:          11
   Number of public wire bits:   12562
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $and                            1
     $or                             1
     dual_port_ram                   1

=== rfifo ===

   Number of wires:                121
   Number of wire bits:           2460
   Number of public wires:          13
   Number of public wire bits:    2326
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                146
     $add                            4
     $dffe                          35
     $eq                            31
     $logic_and                      3
     $logic_not                      4
     $mux                            2
     $not                           31
     $reduce_and                    31
     $reduce_bool                    2
     $sdff                           1
     $sub                            1
     dual_port_ram                   1

=== round ===

   Number of wires:                 45
   Number of wire bits:            327
   Number of public wires:          22
   Number of public wire bits:     211
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 34
     $add                            2
     $and                           10
     $logic_not                      1
     $mux                            2
     $not                            4
     $or                             9
     $reduce_and                     1
     $reduce_or                      4
     $xor                            1

=== shift ===

   Number of wires:                 47
   Number of wire bits:            472
   Number of public wires:          11
   Number of public wire bits:     374
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 42
     $and                            2
     $eq                            31
     $gt                             1
     $mux                            3
     $neg                            1
     $not                            1
     $or                             1
     $pmux                           1
     $reduce_or                      1

=== special ===

   Number of wires:                 24
   Number of wire bits:            206
   Number of public wires:          14
   Number of public wire bits:     136
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 17
     $and                            2
     $ge                             1
     $mux                            6
     $not                            1
     $or                             7

=== top_ram ===

   Number of wires:                  9
   Number of wire bits:            190
   Number of public wires:           9
   Number of public wire bits:     190
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $and                            1
     $or                             1
     dual_port_ram                   1

=== wfifo ===

   Number of wires:                 95
   Number of wire bits:          10405
   Number of public wires:          14
   Number of public wire bits:    8282
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 88
     $add                            4
     $dffe                           4
     $eq                            31
     $logic_and                      4
     $logic_not                      4
     $mux                           34
     $ne                             1
     $reduce_bool                    3
     $sdff                           1
     $sub                            1
     dual_port_ram                   1

=== design hierarchy ===

   LU64PEEng                         1
     DataTransferUnit                1
       addr_fifo                     1
       memcmd_fifo                   1
       rfifo                         1
       wfifo                         1
     LU                              1
       LUControl                     1
       fpu_div                       1
         div_24b                     1
       mult_add                     64
         fpmul                       1
           assemble                  1
           exponent                  1
           flag                      1
           multiply_a                1
           normalize                 1
           prenorm                   1
           preprocess                1
           round                     1
           shift                     1
           special                   1
         fpu_add                     1
       ram                           1
       ram1                          1
       ram2                          1
       ram3                          1
       top_ram                       1
     MarshallerController            1

   Number of wires:              32607
   Number of wire bits:         556468
   Number of public wires:       12308
   Number of public wire bits:  327648
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              26408
     $add                          445
     $and                         1669
     $dff                          549
     $dffe                          64
     $eq                          8155
     $ge                            69
     $gt                           129
     $le                            25
     $logic_and                    247
     $logic_not                    412
     $logic_or                      41
     $lt                           135
     $mul                           64
     $mux                         8599
     $ne                            14
     $neg                           64
     $not                          616
     $or                          1541
     $pmux                         330
     $reduce_and                   231
     $reduce_bool                   25
     $reduce_or                    664
     $sdff                          19
     $sdffe                         46
     $sub                         1989
     $xor                          257
     dual_port_ram                   9

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: 168d33832c, CPU: user 10.76s system 0.03s, MEM: 89.25 MB peak
Yosys 0.10+12 (git sha1 4d87019, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 45% 4x opt_dff (4 sec), 21% 4x opt_clean (2 sec), ...
