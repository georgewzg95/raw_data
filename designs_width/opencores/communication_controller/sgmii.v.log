
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v' to AST representation.
Warning: Encountered `translate_off' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using a portable and standards-compliant construct such as `ifdef is recommended!
Generating RTLIL representation for module `\mANCtrl'.
Generating RTLIL representation for module `\mClkBuf'.
Generating RTLIL representation for module `\mRateAdapter'.
Generating RTLIL representation for module `\mReceive'.
Generating RTLIL representation for module `\mRegisters'.
Generating RTLIL representation for module `\mSGMII'.
Warning: Replacing memory \r_RxCgInvalid with list of registers. See /home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1096
Warning: Replacing memory \r_RxCgCtrl with list of registers. See /home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1095
Warning: Replacing memory \r8_RxCodeGroup with list of registers. See /home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1094
Generating RTLIL representation for module `\mSyncCtrl'.
Generating RTLIL representation for module `\mSyncFifo'.
Warning: Replacing memory \rv_Ram with list of registers. See /home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1614
Generating RTLIL representation for module `\mTransmit'.
Generating RTLIL representation for module `\mXcver'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: mXcver              
root of   1 design levels: mTransmit           
root of   0 design levels: mSyncFifo           
root of   0 design levels: mSyncCtrl           
root of   2 design levels: mSGMII              
root of   0 design levels: mRegisters          
root of   0 design levels: mReceive            
root of   0 design levels: mRateAdapter        
root of   0 design levels: mClkBuf             
root of   0 design levels: mANCtrl             
Automatically selected mSGMII as design top module.

2.2. Analyzing design hierarchy..
Top module:  \mSGMII
Used module:     \mClkBuf
Used module:     \mTransmit
Used module:         \mSyncFifo
Used module:     \mANCtrl
Used module:     \mReceive
Used module:     \mSyncCtrl
Used module:     \mRegisters
Used module:     \mRateAdapter
Parameter \pDataWidth = 10
Parameter \pPtrWidth = 2

2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\mSyncFifo'.
Parameter \pDataWidth = 10
Parameter \pPtrWidth = 2
Generating RTLIL representation for module `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo'.
Warning: Replacing memory \rv_Ram with list of registers. See /home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1614

2.4. Analyzing design hierarchy..
Top module:  \mSGMII
Used module:     \mClkBuf
Used module:     \mTransmit
Used module:         $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo
Used module:     \mANCtrl
Used module:     \mReceive
Used module:     \mSyncCtrl
Used module:     \mRegisters
Used module:     \mRateAdapter

2.5. Analyzing design hierarchy..
Top module:  \mSGMII
Used module:     \mClkBuf
Used module:     \mTransmit
Used module:         $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo
Used module:     \mANCtrl
Used module:     \mReceive
Used module:     \mSyncCtrl
Used module:     \mRegisters
Used module:     \mRateAdapter
Removing unused module `\mXcver'.
Removing unused module `\mSyncFifo'.
Removed 2 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 5 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1827$674 in module mTransmit.
Marked 24 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1763$609 in module mTransmit.
Marked 2 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1735$601 in module mTransmit.
Removed 1 dead cases from process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:0$730 in module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:0$730 in module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1604$714 in module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1551$538 in module mSyncCtrl.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1518$533 in module mSyncCtrl.
Marked 4 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1472$477 in module mSyncCtrl.
Marked 13 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1439$462 in module mSyncCtrl.
Marked 6 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1317$296 in module mSGMII.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:834$238 in module mRegisters.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:659$223 in module mReceive.
Marked 46 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:555$137 in module mReceive.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:545$121 in module mReceive.
Marked 3 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:391$103 in module mRateAdapter.
Marked 1 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:343$83 in module mRateAdapter.
Marked 11 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:146$39 in module mANCtrl.
Marked 6 switch rules as full_case in process $proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:119$12 in module mANCtrl.
Removed a total of 1 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 8 redundant assignments.
Promoted 26 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1550$543'.
  Set init value: \r7_SlipTmr = 4'0000

3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \i_ARst_L in `\mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1827$674'.
Found async reset \i_ARst_L in `\mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1735$601'.
Found async reset \i_ARst_L in `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1604$714'.
Found async reset \i_ARst_L in `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1551$538'.
Found async reset \i_ARst_L in `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1518$533'.
Found async reset \i_ARst_L in `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1472$477'.
Found async reset \i_ARst_L in `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1439$462'.
Found async reset \i_ARstHardware_L in `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1317$296'.
Found async reset \w_ARstLogic_L in `\mRegisters.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:834$238'.
Found async reset \i_ARst_L in `\mReceive.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:659$223'.
Found async reset \i_ARst_L in `\mReceive.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:545$121'.
Found async reset \i_ARst_L in `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:146$39'.
Found async reset \i_ARst_L in `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:119$12'.

3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1827$674'.
     1/4: $0\r_ToTxData[0:0]
     2/4: $0\o_TxCodeCtrl[0:0]
     3/4: $0\o8_TxCodeGroupOut[7:0]
     4/4: $0\o_Xmitting[0:0]
Creating decoders for process `\mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1763$609'.
     1/1: $0\w24_NxtState[22:0]
Creating decoders for process `\mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1735$601'.
     1/4: $0\r13_State[22:0]
     2/4: $0\o_TxEven[0:0]
     3/4: $0\r_TxEven[0:0]
     4/4: $0\r3_LstXmit[2:0]
Creating decoders for process `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:0$730'.
     1/1: $1$mem2reg_rd$\rv_Ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1625$705_DATA[9:0]$732
Creating decoders for process `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1604$714'.
     1/11: $2$mem2reg_wr$\rv_Ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1614$704_ADDR[1:0]$720
     2/11: $2$mem2reg_wr$\rv_Ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1614$704_DATA[9:0]$721
     3/11: $1$mem2reg_wr$\rv_Ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1614$704_DATA[9:0]$719
     4/11: $1$mem2reg_wr$\rv_Ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1614$704_ADDR[1:0]$718
     5/11: $0\rv_Ram[3][9:0]
     6/11: $0\rv_Ram[2][9:0]
     7/11: $0\rv_Ram[1][9:0]
     8/11: $0\rv_Ram[0][9:0]
     9/11: $0\rv_Cntr[2:0]
    10/11: $0\rv_WrPtr[1:0]
    11/11: $0\rv_RdPtr[1:0]
Creating decoders for process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1550$543'.
Creating decoders for process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1551$538'.
     1/1: $0\r7_SlipTmr[3:0]
Creating decoders for process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1518$533'.
     1/6: $0\r_IsRSTV[0:0]
     2/6: $0\r_IsComma[0:0]
     3/6: $0\o_IsRSet[0:0]
     4/6: $0\o_IsSSet[0:0]
     5/6: $0\o_IsVSet[0:0]
     6/6: $0\o_IsTSet[0:0]
Creating decoders for process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1472$477'.
     1/6: $0\r3_GoodCgs[2:0]
     2/6: $0\r_RxEven[0:0]
     3/6: $0\o_SyncStatus[0:0]
     4/6: $0\o_RxCodeCtrl[0:0]
     5/6: $0\o_RxCodeInvalid[0:0]
     6/6: $0\o8_RxCodeGroupOut[7:0]
Creating decoders for process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1439$462'.
     1/2: $0\r_LastSignalDetect[0:0]
     2/2: $0\r13_State[12:0]
Creating decoders for process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1317$296'.
     1/3: $0\r_MIIClk_D[0:0]
     2/3: $0\r_MIIClk[0:0]
     3/3: $0\r7_Cntr[6:0]
Creating decoders for process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1175$292'.
Creating decoders for process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1092$287'.
Creating decoders for process `\mRegisters.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:834$238'.
     1/13: $0\r21_LinkTimer[20:0] [20:16]
     2/13: $0\r21_LinkTimer[20:0] [15:0]
     3/13: $0\r16_CtrlReg0[15:0] [9]
     4/13: $0\r16_CtrlReg0[15:0] [8:0]
     5/13: $0\r16_CtrlReg0[15:0] [15]
     6/13: $0\r_Read[0:0]
     7/13: $0\r16_ModeReg[15:0]
     8/13: $0\r16_CtrlReg4[15:0]
     9/13: $0\r16_ScratchRev[15:0]
    10/13: $0\r_Write[0:0]
    11/13: $0\o_Ack[0:0]
    12/13: $0\o32_RdData[31:0]
    13/13: $0\r16_CtrlReg0[15:0] [14:10]
Creating decoders for process `\mReceive.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:659$223'.
     1/6: $0\o16_RxConfigReg[15:0] [15:8]
     2/6: $0\o16_RxConfigReg[15:0] [7:0]
     3/6: $0\o_RxDV[0:0]
     4/6: $0\o_Receiving[0:0]
     5/6: $0\o8_RxD[7:0]
     6/6: $0\o_RxER[0:0]
Creating decoders for process `\mReceive.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:555$137'.
     1/1: $0\r21_NxtState[16:0]
Creating decoders for process `\mReceive.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:545$121'.
     1/1: $0\r17_State[16:0]
Creating decoders for process `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:402$109'.
Creating decoders for process `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:391$103'.
     1/2: $0\r4_Cntr[3:0]
     2/2: $0\r6_GByte[5:0]
Creating decoders for process `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:363$92'.
     1/3: $0\r8_GByte[7:0]
     2/3: $0\r_GTxER[0:0]
     3/3: $0\r_GTxEN[0:0]
Creating decoders for process `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:343$83'.
     1/4: $0\r_TxER_D[0:0]
     2/4: $0\r_TxEN_D[0:0]
     3/4: $0\r4_LowNib[3:0]
     4/4: $0\r8_Byte[7:0]
Creating decoders for process `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:246$77'.
     1/1: $0\r240_ANStateName[239:0]
Creating decoders for process `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:146$39'.
     1/13: $0\o16_TxConfigReg[15:0] [14]
     2/13: $0\o16_TxConfigReg[15:0] [13:0]
     3/13: $0\o16_TxConfigReg[15:0] [15]
     4/13: $0\r16_AbilityReg[15:0]
     5/13: $0\r2_AcknowlMatchCnt[1:0]
     6/13: $0\r2_AbilityMatchCnt[1:0]
     7/13: $0\r_ToggleRx[0:0]
     8/13: $0\r_ToggleTx[0:0]
     9/13: $0\r16_LpAdvAbility[15:0]
    10/13: $0\r_ConsistencyMatch[0:0]
    11/13: $0\r21_LinkTimer[20:0]
    12/13: $0\r2_IdleMatchCnt[1:0]
    13/13: $0\o3_Xmit[2:0]
Creating decoders for process `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:119$12'.
     1/2: $0\r_ANEable[0:0]
     2/2: $0\r8_State[7:0]

3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
Latch inferred for signal `\mTransmit.\w24_NxtState' from process `\mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1763$609': $auto$proc_dlatch.cc:427:proc_dlatch$1681
No latch inferred for signal `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$mem2reg_rd$\rv_Ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1625$705_DATA' from process `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:0$730'.
Latch inferred for signal `\mReceive.\r21_NxtState' from process `\mReceive.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:555$137': $auto$proc_dlatch.cc:427:proc_dlatch$1788
Latch inferred for signal `\mANCtrl.\r240_ANStateName' from process `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:246$77': $auto$proc_dlatch.cc:427:proc_dlatch$1841

3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\mTransmit.\o_Xmitting' using process `\mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1827$674'.
  created $adff cell `$procdff$1842' with positive edge clock and negative level reset.
Creating register for signal `\mTransmit.\o8_TxCodeGroupOut' using process `\mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1827$674'.
  created $adff cell `$procdff$1843' with positive edge clock and negative level reset.
Creating register for signal `\mTransmit.\o_TxCodeCtrl' using process `\mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1827$674'.
  created $adff cell `$procdff$1844' with positive edge clock and negative level reset.
Creating register for signal `\mTransmit.\r_ToTxData' using process `\mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1827$674'.
  created $dff cell `$procdff$1847' with positive edge clock.
Creating register for signal `\mTransmit.\o_TxEven' using process `\mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1735$601'.
  created $adff cell `$procdff$1848' with positive edge clock and negative level reset.
Creating register for signal `\mTransmit.\r13_State' using process `\mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1735$601'.
  created $adff cell `$procdff$1849' with positive edge clock and negative level reset.
Creating register for signal `\mTransmit.\r3_LstXmit' using process `\mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1735$601'.
  created $adff cell `$procdff$1850' with positive edge clock and negative level reset.
Creating register for signal `\mTransmit.\r_TxEven' using process `\mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1735$601'.
  created $adff cell `$procdff$1851' with positive edge clock and negative level reset.
Creating register for signal `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.\rv_RdPtr' using process `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1604$714'.
  created $adff cell `$procdff$1852' with positive edge clock and negative level reset.
Creating register for signal `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.\rv_WrPtr' using process `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1604$714'.
  created $adff cell `$procdff$1853' with positive edge clock and negative level reset.
Creating register for signal `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.\rv_Cntr' using process `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1604$714'.
  created $adff cell `$procdff$1854' with positive edge clock and negative level reset.
Creating register for signal `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.\rv_Ram[0]' using process `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1604$714'.
  created $dff cell `$procdff$1857' with positive edge clock.
Creating register for signal `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.\rv_Ram[1]' using process `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1604$714'.
  created $dff cell `$procdff$1860' with positive edge clock.
Creating register for signal `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.\rv_Ram[2]' using process `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1604$714'.
  created $dff cell `$procdff$1863' with positive edge clock.
Creating register for signal `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.\rv_Ram[3]' using process `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1604$714'.
  created $dff cell `$procdff$1866' with positive edge clock.
Creating register for signal `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$mem2reg_wr$\rv_Ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1614$704_ADDR' using process `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1604$714'.
  created $adff cell `$procdff$1867' with positive edge clock and negative level reset.
Creating register for signal `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$mem2reg_wr$\rv_Ram$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1614$704_DATA' using process `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1604$714'.
  created $adff cell `$procdff$1868' with positive edge clock and negative level reset.
Creating register for signal `\mSyncCtrl.\r7_SlipTmr' using process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1551$538'.
  created $adff cell `$procdff$1869' with positive edge clock and negative level reset.
Creating register for signal `\mSyncCtrl.\o_IsTSet' using process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1518$533'.
  created $dff cell `$procdff$1872' with positive edge clock.
Creating register for signal `\mSyncCtrl.\o_IsVSet' using process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1518$533'.
  created $dff cell `$procdff$1875' with positive edge clock.
Creating register for signal `\mSyncCtrl.\o_IsSSet' using process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1518$533'.
  created $dff cell `$procdff$1878' with positive edge clock.
Creating register for signal `\mSyncCtrl.\o_IsRSet' using process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1518$533'.
  created $dff cell `$procdff$1881' with positive edge clock.
Creating register for signal `\mSyncCtrl.\r_IsComma' using process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1518$533'.
  created $adff cell `$procdff$1882' with positive edge clock and negative level reset.
Creating register for signal `\mSyncCtrl.\r_IsRSTV' using process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1518$533'.
  created $adff cell `$procdff$1883' with positive edge clock and negative level reset.
Creating register for signal `\mSyncCtrl.\o8_RxCodeGroupOut' using process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1472$477'.
  created $dff cell `$procdff$1886' with positive edge clock.
Creating register for signal `\mSyncCtrl.\o_RxCodeInvalid' using process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1472$477'.
  created $dff cell `$procdff$1889' with positive edge clock.
Creating register for signal `\mSyncCtrl.\o_RxCodeCtrl' using process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1472$477'.
  created $dff cell `$procdff$1892' with positive edge clock.
Creating register for signal `\mSyncCtrl.\o_SyncStatus' using process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1472$477'.
  created $dff cell `$procdff$1895' with positive edge clock.
Creating register for signal `\mSyncCtrl.\r_RxEven' using process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1472$477'.
  created $adff cell `$procdff$1896' with positive edge clock and negative level reset.
Creating register for signal `\mSyncCtrl.\r3_GoodCgs' using process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1472$477'.
  created $dff cell `$procdff$1899' with positive edge clock.
Creating register for signal `\mSyncCtrl.\r13_State' using process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1439$462'.
  created $adff cell `$procdff$1900' with positive edge clock and negative level reset.
Creating register for signal `\mSyncCtrl.\r_LastSignalDetect' using process `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1439$462'.
  created $dff cell `$procdff$1903' with positive edge clock.
Creating register for signal `\mSGMII.\r7_Cntr' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1317$296'.
  created $adff cell `$procdff$1904' with positive edge clock and negative level reset.
Creating register for signal `\mSGMII.\r_MIIClk' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1317$296'.
  created $adff cell `$procdff$1905' with positive edge clock and negative level reset.
Creating register for signal `\mSGMII.\r_MIIClk_D' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1317$296'.
  created $dff cell `$procdff$1908' with positive edge clock.
Creating register for signal `\mSGMII.\r_CheckEndKDK' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1175$292'.
  created $dff cell `$procdff$1909' with positive edge clock.
Creating register for signal `\mSGMII.\r_CheckEndKD21_5D0_0' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1175$292'.
  created $dff cell `$procdff$1910' with positive edge clock.
Creating register for signal `\mSGMII.\r_CheckEndKD2_2D0_0' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1175$292'.
  created $dff cell `$procdff$1911' with positive edge clock.
Creating register for signal `\mSGMII.\r_CheckEndTRK' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1175$292'.
  created $dff cell `$procdff$1912' with positive edge clock.
Creating register for signal `\mSGMII.\r_CheckEndTRR' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1175$292'.
  created $dff cell `$procdff$1913' with positive edge clock.
Creating register for signal `\mSGMII.\r_CheckEndRRR' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1175$292'.
  created $dff cell `$procdff$1914' with positive edge clock.
Creating register for signal `\mSGMII.\r_CheckEndRRK' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1175$292'.
  created $dff cell `$procdff$1915' with positive edge clock.
Creating register for signal `\mSGMII.\r_CheckEndRRS' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1175$292'.
  created $dff cell `$procdff$1916' with positive edge clock.
Creating register for signal `\mSGMII.\DELAY' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1092$287'.
  created $dff cell `$procdff$1917' with positive edge clock.
Creating register for signal `\mSGMII.\r8_RxCodeGroup[0]' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1092$287'.
  created $dff cell `$procdff$1918' with positive edge clock.
Creating register for signal `\mSGMII.\r8_RxCodeGroup[1]' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1092$287'.
  created $dff cell `$procdff$1919' with positive edge clock.
Creating register for signal `\mSGMII.\r8_RxCodeGroup[2]' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1092$287'.
  created $dff cell `$procdff$1920' with positive edge clock.
Creating register for signal `\mSGMII.\r_RxCgCtrl[0]' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1092$287'.
  created $dff cell `$procdff$1921' with positive edge clock.
Creating register for signal `\mSGMII.\r_RxCgCtrl[1]' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1092$287'.
  created $dff cell `$procdff$1922' with positive edge clock.
Creating register for signal `\mSGMII.\r_RxCgCtrl[2]' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1092$287'.
  created $dff cell `$procdff$1923' with positive edge clock.
Creating register for signal `\mSGMII.\r_RxCgInvalid[0]' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1092$287'.
  created $dff cell `$procdff$1924' with positive edge clock.
Creating register for signal `\mSGMII.\r_RxCgInvalid[1]' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1092$287'.
  created $dff cell `$procdff$1925' with positive edge clock.
Creating register for signal `\mSGMII.\r_RxCgInvalid[2]' using process `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1092$287'.
  created $dff cell `$procdff$1926' with positive edge clock.
Creating register for signal `\mRegisters.\r21_LinkTimer' using process `\mRegisters.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:834$238'.
  created $adff cell `$procdff$1927' with positive edge clock and negative level reset.
Creating register for signal `\mRegisters.\o32_RdData' using process `\mRegisters.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:834$238'.
  created $dff cell `$procdff$1930' with positive edge clock.
Creating register for signal `\mRegisters.\o_Ack' using process `\mRegisters.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:834$238'.
  created $dff cell `$procdff$1933' with positive edge clock.
Creating register for signal `\mRegisters.\r_Write' using process `\mRegisters.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:834$238'.
  created $dff cell `$procdff$1936' with positive edge clock.
Creating register for signal `\mRegisters.\r16_CtrlReg0' using process `\mRegisters.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:834$238'.
  created $adff cell `$procdff$1937' with positive edge clock and negative level reset.
Creating register for signal `\mRegisters.\r16_CtrlReg4' using process `\mRegisters.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:834$238'.
  created $adff cell `$procdff$1938' with positive edge clock and negative level reset.
Creating register for signal `\mRegisters.\r16_ModeReg' using process `\mRegisters.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:834$238'.
  created $adff cell `$procdff$1939' with positive edge clock and negative level reset.
Creating register for signal `\mRegisters.\r_Read' using process `\mRegisters.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:834$238'.
  created $dff cell `$procdff$1942' with positive edge clock.
Creating register for signal `\mRegisters.\r16_ScratchRev' using process `\mRegisters.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:834$238'.
  created $adff cell `$procdff$1943' with positive edge clock and negative level reset.
Creating register for signal `\mReceive.\o_RxER' using process `\mReceive.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:659$223'.
  created $adff cell `$procdff$1944' with positive edge clock and negative level reset.
Creating register for signal `\mReceive.\o8_RxD' using process `\mReceive.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:659$223'.
  created $adff cell `$procdff$1945' with positive edge clock and negative level reset.
Creating register for signal `\mReceive.\o16_RxConfigReg' using process `\mReceive.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:659$223'.
  created $adff cell `$procdff$1946' with positive edge clock and negative level reset.
Creating register for signal `\mReceive.\o_RxDV' using process `\mReceive.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:659$223'.
  created $adff cell `$procdff$1947' with positive edge clock and negative level reset.
Creating register for signal `\mReceive.\o_Receiving' using process `\mReceive.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:659$223'.
  created $adff cell `$procdff$1948' with positive edge clock and negative level reset.
Creating register for signal `\mReceive.\r17_State' using process `\mReceive.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:545$121'.
  created $adff cell `$procdff$1949' with positive edge clock and negative level reset.
Creating register for signal `\mRateAdapter.\r6_MByte' using process `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:402$109'.
  created $dff cell `$procdff$1950' with positive edge clock.
Creating register for signal `\mRateAdapter.\r_RxActive' using process `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:391$103'.
  created $dff cell `$procdff$1951' with positive edge clock.
Creating register for signal `\mRateAdapter.\r4_Cntr' using process `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:391$103'.
  created $dff cell `$procdff$1952' with positive edge clock.
Creating register for signal `\mRateAdapter.\r6_GByte' using process `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:391$103'.
  created $dff cell `$procdff$1953' with positive edge clock.
Creating register for signal `\mRateAdapter.\r_GTxEN' using process `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:363$92'.
  created $dff cell `$procdff$1954' with positive edge clock.
Creating register for signal `\mRateAdapter.\r_GTxER' using process `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:363$92'.
  created $dff cell `$procdff$1955' with positive edge clock.
Creating register for signal `\mRateAdapter.\r8_GByte' using process `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:363$92'.
  created $dff cell `$procdff$1956' with positive edge clock.
Creating register for signal `\mRateAdapter.\r_TxActive' using process `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:343$83'.
  created $dff cell `$procdff$1957' with positive edge clock.
Creating register for signal `\mRateAdapter.\r8_Byte' using process `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:343$83'.
  created $dff cell `$procdff$1958' with positive edge clock.
Creating register for signal `\mRateAdapter.\r4_LowNib' using process `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:343$83'.
  created $dff cell `$procdff$1959' with positive edge clock.
Creating register for signal `\mRateAdapter.\r_HighNib' using process `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:343$83'.
  created $dff cell `$procdff$1960' with positive edge clock.
Creating register for signal `\mRateAdapter.\r_TxEN_D' using process `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:343$83'.
  created $dff cell `$procdff$1961' with positive edge clock.
Creating register for signal `\mRateAdapter.\r_TxER_D' using process `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:343$83'.
  created $dff cell `$procdff$1962' with positive edge clock.
Creating register for signal `\mANCtrl.\o3_Xmit' using process `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:146$39'.
  created $adff cell `$procdff$1963' with positive edge clock and negative level reset.
Creating register for signal `\mANCtrl.\o16_TxConfigReg' using process `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:146$39'.
  created $adff cell `$procdff$1964' with positive edge clock and negative level reset.
Creating register for signal `\mANCtrl.\r21_LinkTimer' using process `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:146$39'.
  created $adff cell `$procdff$1965' with positive edge clock and negative level reset.
Creating register for signal `\mANCtrl.\r_ConsistencyMatch' using process `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:146$39'.
  created $dff cell `$procdff$1968' with positive edge clock.
Creating register for signal `\mANCtrl.\r16_LpAdvAbility' using process `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:146$39'.
  created $adff cell `$procdff$1969' with positive edge clock and negative level reset.
Creating register for signal `\mANCtrl.\r_ToggleTx' using process `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:146$39'.
  created $dff cell `$procdff$1972' with positive edge clock.
Creating register for signal `\mANCtrl.\r_ToggleRx' using process `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:146$39'.
  created $dff cell `$procdff$1975' with positive edge clock.
Creating register for signal `\mANCtrl.\r2_AbilityMatchCnt' using process `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:146$39'.
  created $dff cell `$procdff$1978' with positive edge clock.
Creating register for signal `\mANCtrl.\r2_AcknowlMatchCnt' using process `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:146$39'.
  created $dff cell `$procdff$1981' with positive edge clock.
Creating register for signal `\mANCtrl.\r16_AbilityReg' using process `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:146$39'.
  created $adff cell `$procdff$1982' with positive edge clock and negative level reset.
Creating register for signal `\mANCtrl.\r2_IdleMatchCnt' using process `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:146$39'.
  created $adff cell `$procdff$1983' with positive edge clock and negative level reset.
Creating register for signal `\mANCtrl.\r8_State' using process `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:119$12'.
  created $adff cell `$procdff$1984' with positive edge clock and negative level reset.
Creating register for signal `\mANCtrl.\r_ANEable' using process `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:119$12'.
  created $dff cell `$procdff$1987' with positive edge clock.

3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 5 empty switches in `\mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1827$674'.
Removing empty process `mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1827$674'.
Found and cleaned up 25 empty switches in `\mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1763$609'.
Removing empty process `mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1763$609'.
Found and cleaned up 2 empty switches in `\mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1735$601'.
Removing empty process `mTransmit.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1735$601'.
Found and cleaned up 1 empty switch in `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:0$730'.
Removing empty process `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:0$730'.
Found and cleaned up 5 empty switches in `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1604$714'.
Removing empty process `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1604$714'.
Removing empty process `mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1550$543'.
Found and cleaned up 2 empty switches in `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1551$538'.
Removing empty process `mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1551$538'.
Removing empty process `mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1518$533'.
Found and cleaned up 6 empty switches in `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1472$477'.
Removing empty process `mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1472$477'.
Found and cleaned up 21 empty switches in `\mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1439$462'.
Removing empty process `mSyncCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1439$462'.
Found and cleaned up 8 empty switches in `\mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1317$296'.
Removing empty process `mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1317$296'.
Removing empty process `mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1175$292'.
Removing empty process `mSGMII.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1092$287'.
Found and cleaned up 9 empty switches in `\mRegisters.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:834$238'.
Removing empty process `mRegisters.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:834$238'.
Found and cleaned up 2 empty switches in `\mReceive.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:659$223'.
Removing empty process `mReceive.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:659$223'.
Found and cleaned up 47 empty switches in `\mReceive.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:555$137'.
Removing empty process `mReceive.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:555$137'.
Removing empty process `mReceive.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:545$121'.
Removing empty process `mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:402$109'.
Found and cleaned up 4 empty switches in `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:391$103'.
Removing empty process `mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:391$103'.
Found and cleaned up 1 empty switch in `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:363$92'.
Removing empty process `mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:363$92'.
Found and cleaned up 6 empty switches in `\mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:343$83'.
Removing empty process `mRateAdapter.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:343$83'.
Found and cleaned up 1 empty switch in `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:246$77'.
Removing empty process `mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:246$77'.
Found and cleaned up 27 empty switches in `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:146$39'.
Removing empty process `mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:146$39'.
Found and cleaned up 12 empty switches in `\mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:119$12'.
Removing empty process `mANCtrl.$proc$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:119$12'.
Cleaned up 184 empty switches.

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module mTransmit.
<suppressed ~34 debug messages>
Optimizing module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
<suppressed ~4 debug messages>
Optimizing module mSyncCtrl.
<suppressed ~5 debug messages>
Optimizing module mSGMII.
<suppressed ~52 debug messages>
Optimizing module mRegisters.
<suppressed ~14 debug messages>
Optimizing module mReceive.
<suppressed ~28 debug messages>
Optimizing module mRateAdapter.
<suppressed ~2 debug messages>
Optimizing module mClkBuf.
Optimizing module mANCtrl.
<suppressed ~26 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mTransmit.
Optimizing module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Optimizing module mSyncCtrl.
Optimizing module mSGMII.
Optimizing module mRegisters.
Optimizing module mReceive.
Optimizing module mRateAdapter.
Optimizing module mClkBuf.
Optimizing module mANCtrl.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mTransmit'.
<suppressed ~312 debug messages>
Finding identical cells in module `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo'.
Finding identical cells in module `\mSyncCtrl'.
<suppressed ~108 debug messages>
Finding identical cells in module `\mSGMII'.
<suppressed ~165 debug messages>
Finding identical cells in module `\mRegisters'.
<suppressed ~30 debug messages>
Finding identical cells in module `\mReceive'.
<suppressed ~210 debug messages>
Finding identical cells in module `\mRateAdapter'.
<suppressed ~24 debug messages>
Finding identical cells in module `\mClkBuf'.
Finding identical cells in module `\mANCtrl'.
<suppressed ~129 debug messages>
Removed a total of 326 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mTransmit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$924.
    dead port 2/2 on $mux $procmux$924.
    dead port 1/2 on $mux $procmux$921.
    dead port 2/2 on $mux $procmux$921.
Running muxtree optimizer on module \mSyncCtrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mSGMII..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1079$401.
    dead port 2/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1079$401.
    dead port 1/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1078$395.
    dead port 2/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1078$395.
    dead port 1/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1075$425.
    dead port 2/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1075$425.
    dead port 1/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1073$367.
    dead port 2/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1073$367.
    dead port 1/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1072$361.
    dead port 2/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1072$361.
    dead port 1/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1078$349.
    dead port 2/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1078$349.
    dead port 1/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1079$447.
    dead port 2/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1079$447.
    dead port 1/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1077$343.
    dead port 2/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1077$343.
    dead port 1/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1075$333.
    dead port 2/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1075$333.
    dead port 1/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1078$441.
    dead port 2/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1078$441.
    dead port 1/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1073$321.
    dead port 2/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1073$321.
    dead port 1/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1077$435.
    dead port 2/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1077$435.
    dead port 1/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1076$431.
    dead port 2/2 on $mux $ternary$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1076$431.
Running muxtree optimizer on module \mRegisters..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mReceive..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mRateAdapter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mClkBuf..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mANCtrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 30 multiplexer ports.
<suppressed ~110 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mTransmit.
    New ctrl vector for $pmux cell $procmux$808: { $auto$opt_reduce.cc:134:opt_mux$1993 $auto$opt_reduce.cc:134:opt_mux$1991 $auto$opt_reduce.cc:134:opt_mux$1989 }
    New ctrl vector for $pmux cell $procmux$773: { $procmux$805_CMP $procmux$801_CMP $auto$opt_reduce.cc:134:opt_mux$2003 $auto$opt_reduce.cc:134:opt_mux$2001 $procmux$797_CMP $auto$opt_reduce.cc:134:opt_mux$1999 $procmux$795_CMP $procmux$812_CMP $auto$opt_reduce.cc:134:opt_mux$1997 $procmux$787_CMP $procmux$810_CMP $procmux$779_CMP $auto$opt_reduce.cc:134:opt_mux$1995 $procmux$774_CMP }
    New ctrl vector for $pmux cell $procmux$746: { $auto$opt_reduce.cc:134:opt_mux$2007 $procmux$795_CMP $auto$opt_reduce.cc:134:opt_mux$2005 }
    New ctrl vector for $pmux cell $procmux$821: { $procmux$899_CMP $procmux$898_CMP $procmux$897_CMP $procmux$896_CMP $procmux$886_CMP $procmux$885_CMP $procmux$884_CMP $procmux$883_CMP $procmux$872_CMP $auto$opt_reduce.cc:134:opt_mux$2011 $procmux$858_CMP $procmux$851_CMP $procmux$843_CMP $procmux$839_CMP $procmux$838_CMP $auto$opt_reduce.cc:134:opt_mux$2009 $procmux$833_CMP $procmux$823_CMP $procmux$822_CMP }
  Optimizing cells in module \mTransmit.
  Optimizing cells in module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
  Optimizing cells in module \mSyncCtrl.
  Optimizing cells in module \mSGMII.
  Optimizing cells in module \mRegisters.
  Optimizing cells in module \mReceive.
    New ctrl vector for $pmux cell $procmux$1208: { $procmux$1344_CMP $procmux$1334_CMP $procmux$1330_CMP $procmux$1326_CMP $procmux$1322_CMP $procmux$1318_CMP $procmux$1308_CMP $procmux$1304_CMP $procmux$1285_CMP $procmux$1266_CMP $procmux$1247_CMP $procmux$1243_CMP $procmux$1239_CMP $procmux$1226_CMP $procmux$1213_CMP $procmux$1209_CMP }
    New ctrl vector for $pmux cell $procmux$1182: { $auto$opt_reduce.cc:134:opt_mux$2015 $auto$opt_reduce.cc:134:opt_mux$2013 }
    New ctrl vector for $pmux cell $procmux$1174: { $procmux$1190_CMP $procmux$1189_CMP $auto$opt_reduce.cc:134:opt_mux$2017 $procmux$1184_CMP $procmux$1175_CMP }
    New ctrl vector for $pmux cell $procmux$1166: { $procmux$1172_CMP $procmux$1189_CMP $auto$opt_reduce.cc:134:opt_mux$2019 }
    New ctrl vector for $pmux cell $procmux$1152: { $procmux$1189_CMP $auto$opt_reduce.cc:134:opt_mux$2021 }
  Optimizing cells in module \mReceive.
  Optimizing cells in module \mRateAdapter.
  Optimizing cells in module \mClkBuf.
  Optimizing cells in module \mANCtrl.
    New ctrl vector for $pmux cell $procmux$1501: { $procmux$1541_CMP $procmux$1519_CMP $auto$opt_reduce.cc:134:opt_mux$2023 }
    New ctrl vector for $pmux cell $procmux$1477: { $procmux$1537_CMP $procmux$1525_CMP $procmux$1519_CMP $auto$opt_reduce.cc:134:opt_mux$2025 }
    New ctrl vector for $pmux cell $procmux$1387: { $procmux$1537_CMP $procmux$1534_CMP $procmux$1531_CMP $procmux$1525_CMP $procmux$1519_CMP $procmux$1513_CMP $procmux$1510_CMP }
  Optimizing cells in module \mANCtrl.
Performed a total of 12 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mTransmit'.
<suppressed ~24 debug messages>
Finding identical cells in module `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo'.
Finding identical cells in module `\mSyncCtrl'.
Finding identical cells in module `\mSGMII'.
Finding identical cells in module `\mRegisters'.
Finding identical cells in module `\mReceive'.
<suppressed ~36 debug messages>
Finding identical cells in module `\mRateAdapter'.
Finding identical cells in module `\mClkBuf'.
Finding identical cells in module `\mANCtrl'.
<suppressed ~6 debug messages>
Removed a total of 22 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$1850 ($adff) from module mTransmit (D = \i3_Xmit, Q = \r3_LstXmit).
Adding EN signal on $procdff$1847 ($dff) from module mTransmit (D = $procmux$743_Y, Q = \r_ToTxData).
Adding EN signal on $procdff$1844 ($adff) from module mTransmit (D = $procmux$746_Y, Q = \o_TxCodeCtrl).
Adding EN signal on $procdff$1843 ($adff) from module mTransmit (D = $procmux$773_Y, Q = \o8_TxCodeGroupOut).
Adding EN signal on $procdff$1842 ($adff) from module mTransmit (D = $procmux$808_Y, Q = \o_Xmitting).
Setting constant 1-bit at position 0 on $procdff$1867 ($adff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Setting constant 1-bit at position 1 on $procdff$1867 ($adff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Setting constant 1-bit at position 0 on $procdff$1868 ($adff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Setting constant 1-bit at position 1 on $procdff$1868 ($adff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Setting constant 1-bit at position 2 on $procdff$1868 ($adff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Setting constant 1-bit at position 3 on $procdff$1868 ($adff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Setting constant 1-bit at position 4 on $procdff$1868 ($adff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Setting constant 1-bit at position 5 on $procdff$1868 ($adff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Setting constant 1-bit at position 6 on $procdff$1868 ($adff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Setting constant 1-bit at position 7 on $procdff$1868 ($adff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Setting constant 1-bit at position 8 on $procdff$1868 ($adff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Setting constant 1-bit at position 9 on $procdff$1868 ($adff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Adding EN signal on $procdff$1852 ($adff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo (D = $add$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1617$723_Y [1:0], Q = \rv_RdPtr).
Adding EN signal on $procdff$1853 ($adff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo (D = $add$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1613$722_Y [1:0], Q = \rv_WrPtr).
Adding EN signal on $procdff$1854 ($adff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo (D = $procmux$955_Y, Q = \rv_Cntr).
Adding EN signal on $procdff$1857 ($dff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo (D = \iv_Din, Q = \rv_Ram[0]).
Adding EN signal on $procdff$1860 ($dff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo (D = \iv_Din, Q = \rv_Ram[1]).
Adding EN signal on $procdff$1863 ($dff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo (D = \iv_Din, Q = \rv_Ram[2]).
Adding EN signal on $procdff$1866 ($dff) from module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo (D = \iv_Din, Q = \rv_Ram[3]).
Adding EN signal on $procdff$1872 ($dff) from module mSyncCtrl (D = $logic_and$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1509$528_Y, Q = \o_IsTSet).
Adding EN signal on $procdff$1875 ($dff) from module mSyncCtrl (D = $logic_and$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1510$532_Y, Q = \o_IsVSet).
Adding EN signal on $procdff$1878 ($dff) from module mSyncCtrl (D = $logic_and$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1508$524_Y, Q = \o_IsSSet).
Adding EN signal on $procdff$1881 ($dff) from module mSyncCtrl (D = $logic_and$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1507$520_Y, Q = \o_IsRSet).
Adding EN signal on $procdff$1886 ($dff) from module mSyncCtrl (D = \i8_RxCodeGroupIn, Q = \o8_RxCodeGroupOut).
Adding EN signal on $procdff$1889 ($dff) from module mSyncCtrl (D = \i_RxCodeInvalid, Q = \o_RxCodeInvalid).
Adding EN signal on $procdff$1892 ($dff) from module mSyncCtrl (D = \i_RxCodeCtrl, Q = \o_RxCodeCtrl).
Adding EN signal on $procdff$1895 ($dff) from module mSyncCtrl (D = $procmux$983_Y, Q = \o_SyncStatus).
Adding SRST signal on $auto$ff.cc:262:slice$2071 ($dffe) from module mSyncCtrl (D = $procmux$980_Y, Q = \o_SyncStatus, rval = 1'1).
Adding EN signal on $procdff$1896 ($adff) from module mSyncCtrl (D = $procmux$976_Y, Q = \r_RxEven).
Adding EN signal on $procdff$1899 ($dff) from module mSyncCtrl (D = $procmux$971_Y, Q = \r3_GoodCgs).
Adding EN signal on $procdff$1900 ($adff) from module mSyncCtrl (D = $procmux$1057_Y, Q = \r13_State).
Adding EN signal on $procdff$1903 ($dff) from module mSyncCtrl (D = \i_SignalDetect, Q = \r_LastSignalDetect).
Adding EN signal on $procdff$1904 ($adff) from module mSGMII (D = $procmux$1085_Y, Q = \r7_Cntr).
Adding EN signal on $procdff$1908 ($dff) from module mSGMII (D = \r_MIIClk, Q = \r_MIIClk_D).
Adding EN signal on $procdff$1905 ($adff) from module mSGMII (D = $procmux$1074_Y, Q = \r_MIIClk).
Setting constant 1-bit at position 0 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 1-bit at position 1 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 2 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 3 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 4 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 5 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 6 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 7 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 8 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 9 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 10 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 11 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 12 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 13 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 14 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 15 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 16 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 17 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 18 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 19 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 20 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 21 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 22 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 23 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 24 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 25 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 26 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 27 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 28 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 29 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 30 on $procdff$1917 ($dff) from module mSGMII.
Setting constant 0-bit at position 31 on $procdff$1917 ($dff) from module mSGMII.
Adding EN signal on $procdff$1930 ($dff) from module mRegisters (D = $procmux$1109_Y, Q = \o32_RdData).
Adding EN signal on $procdff$1933 ($dff) from module mRegisters (D = $or$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:847$240_Y, Q = \o_Ack).
Adding EN signal on $procdff$1936 ($dff) from module mRegisters (D = $and$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:829$227_Y, Q = \r_Write).
Adding EN signal on $procdff$1937 ($adff) from module mRegisters (D = { \i32_WrData [14:10] \i32_WrData [8:0] }, Q = { \r16_CtrlReg0 [14:10] \r16_CtrlReg0 [8:0] }).
Adding EN signal on $procdff$1937 ($adff) from module mRegisters (D = $procmux$1094_Y, Q = \r16_CtrlReg0 [9]).
Adding EN signal on $procdff$1938 ($adff) from module mRegisters (D = \i32_WrData [15:0], Q = \r16_CtrlReg4).
Adding EN signal on $procdff$1939 ($adff) from module mRegisters (D = \i32_WrData [15:0], Q = \r16_ModeReg).
Adding EN signal on $procdff$1943 ($adff) from module mRegisters (D = \i32_WrData [15:0], Q = \r16_ScratchRev).
Adding EN signal on $procdff$1942 ($dff) from module mRegisters (D = $and$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:831$232_Y, Q = \r_Read).
Adding EN signal on $procdff$1927 ($adff) from module mRegisters (D = \i32_WrData [15:0], Q = \r21_LinkTimer [15:0]).
Adding EN signal on $procdff$1927 ($adff) from module mRegisters (D = \i32_WrData [4:0], Q = \r21_LinkTimer [20:16]).
Adding EN signal on $procdff$1948 ($adff) from module mReceive (D = $procmux$1166_Y, Q = \o_Receiving).
Adding EN signal on $procdff$1947 ($adff) from module mReceive (D = $procmux$1152_Y, Q = \o_RxDV).
Adding EN signal on $procdff$1946 ($adff) from module mReceive (D = \i8_RxCodeGroupIn, Q = \o16_RxConfigReg [15:8]).
Adding EN signal on $procdff$1946 ($adff) from module mReceive (D = \i8_RxCodeGroupIn, Q = \o16_RxConfigReg [7:0]).
Adding EN signal on $procdff$1945 ($adff) from module mReceive (D = $procmux$1174_Y, Q = \o8_RxD).
Adding EN signal on $procdff$1944 ($adff) from module mReceive (D = $procmux$1182_Y, Q = \o_RxER).
Adding EN signal on $procdff$1955 ($dff) from module mRateAdapter (D = \r_TxER_D, Q = \r_GTxER).
Adding EN signal on $procdff$1956 ($dff) from module mRateAdapter (D = \r8_Byte, Q = \r8_GByte).
Adding EN signal on $procdff$1954 ($dff) from module mRateAdapter (D = \r_TxEN_D, Q = \r_GTxEN).
Adding EN signal on $procdff$1962 ($dff) from module mRateAdapter (D = $procmux$1371_Y, Q = \r_TxER_D).
Adding EN signal on $procdff$1958 ($dff) from module mRateAdapter (D = { \i8_TxD [3:0] \r4_LowNib }, Q = \r8_Byte).
Adding EN signal on $procdff$1959 ($dff) from module mRateAdapter (D = \i8_TxD [3:0], Q = \r4_LowNib).
Adding SRST signal on $procdff$1960 ($dff) from module mRateAdapter (D = $not$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:347$84_Y, Q = \r_HighNib, rval = 1'1).
Adding EN signal on $procdff$1961 ($dff) from module mRateAdapter (D = $procmux$1378_Y, Q = \r_TxEN_D).
Adding SRST signal on $procdff$1952 ($dff) from module mRateAdapter (D = $add$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:395$105_Y, Q = \r4_Cntr, rval = 4'0000).
Adding EN signal on $procdff$1953 ($dff) from module mRateAdapter (D = $procmux$1358_Y, Q = \r6_GByte).
Adding EN signal on $procdff$1984 ($adff) from module mANCtrl (D = $procmux$1543_Y, Q = \r8_State).
Adding EN signal on $procdff$1987 ($dff) from module mANCtrl (D = \i_ANEnable, Q = \r_ANEable).
Adding EN signal on $procdff$1983 ($adff) from module mANCtrl (D = $procmux$1499_Y, Q = \r2_IdleMatchCnt).
Adding EN signal on $procdff$1982 ($adff) from module mANCtrl (D = $procmux$1423_Y, Q = \r16_AbilityReg).
Adding EN signal on $procdff$1981 ($dff) from module mANCtrl (D = $procmux$1436_Y, Q = \r2_AcknowlMatchCnt).
Adding SRST signal on $auto$ff.cc:262:slice$2206 ($dffe) from module mANCtrl (D = $procmux$1430_Y, Q = \r2_AcknowlMatchCnt, rval = 2'00).
Adding EN signal on $procdff$1978 ($dff) from module mANCtrl (D = $procmux$1449_Y, Q = \r2_AbilityMatchCnt).
Adding SRST signal on $auto$ff.cc:262:slice$2216 ($dffe) from module mANCtrl (D = $procmux$1443_Y, Q = \r2_AbilityMatchCnt, rval = 2'00).
Adding EN signal on $procdff$1975 ($dff) from module mANCtrl (D = \i16_RxConfigReg [11], Q = \r_ToggleRx).
Adding EN signal on $procdff$1963 ($adff) from module mANCtrl (D = $procmux$1501_Y, Q = \o3_Xmit).
Adding EN signal on $procdff$1964 ($adff) from module mANCtrl (D = $procmux$1396_Y, Q = \o16_TxConfigReg [14]).
Adding EN signal on $procdff$1964 ($adff) from module mANCtrl (D = { $procmux$1415_Y $procmux$1407_Y }, Q = { \o16_TxConfigReg [15] \o16_TxConfigReg [13:0] }).
Adding EN signal on $procdff$1965 ($adff) from module mANCtrl (D = $procmux$1477_Y, Q = \r21_LinkTimer).
Adding EN signal on $procdff$1968 ($dff) from module mANCtrl (D = $procmux$1475_Y, Q = \r_ConsistencyMatch).
Adding SRST signal on $auto$ff.cc:262:slice$2253 ($dffe) from module mANCtrl (D = $procmux$1472_Y, Q = \r_ConsistencyMatch, rval = 1'0).
Adding EN signal on $procdff$1969 ($adff) from module mANCtrl (D = $procmux$1461_Y, Q = \r16_LpAdvAbility).
Adding EN signal on $procdff$1972 ($dff) from module mANCtrl (D = $procmux$1456_Y, Q = \r_ToggleTx).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mTransmit..
Finding unused cells or wires in module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo..
Finding unused cells or wires in module \mSyncCtrl..
Finding unused cells or wires in module \mSGMII..
Finding unused cells or wires in module \mRegisters..
Finding unused cells or wires in module \mReceive..
Finding unused cells or wires in module \mRateAdapter..
Finding unused cells or wires in module \mClkBuf..
Finding unused cells or wires in module \mANCtrl..
Removed 139 unused cells and 991 unused wires.
<suppressed ~173 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
<suppressed ~1 debug messages>
Optimizing module mANCtrl.
<suppressed ~11 debug messages>
Optimizing module mClkBuf.
Optimizing module mRateAdapter.
<suppressed ~3 debug messages>
Optimizing module mReceive.
<suppressed ~4 debug messages>
Optimizing module mRegisters.
<suppressed ~1 debug messages>
Optimizing module mSGMII.
<suppressed ~2 debug messages>
Optimizing module mSyncCtrl.
<suppressed ~3 debug messages>
Optimizing module mTransmit.
<suppressed ~4 debug messages>

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mANCtrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mClkBuf..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mRateAdapter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mReceive..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mRegisters..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mSGMII..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mSyncCtrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mTransmit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~73 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
  Optimizing cells in module \mANCtrl.
    New ctrl vector for $pmux cell $procmux$1477: { $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:186$52_Y $auto$opt_reduce.cc:134:opt_mux$2272 $auto$opt_reduce.cc:134:opt_mux$2025 }
  Optimizing cells in module \mANCtrl.
  Optimizing cells in module \mClkBuf.
  Optimizing cells in module \mRateAdapter.
  Optimizing cells in module \mReceive.
    New ctrl vector for $pmux cell $procmux$1208: { $procmux$1344_CMP $procmux$1334_CMP $procmux$1330_CMP $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:655$215_Y $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:657$219_Y $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:656$217_Y $procmux$1308_CMP $auto$opt_reduce.cc:134:opt_mux$2274 $procmux$1247_CMP $procmux$1243_CMP $procmux$1239_CMP $procmux$1226_CMP $procmux$1213_CMP $procmux$1209_CMP }
  Optimizing cells in module \mReceive.
  Optimizing cells in module \mRegisters.
  Optimizing cells in module \mSGMII.
  Optimizing cells in module \mSyncCtrl.
  Optimizing cells in module \mTransmit.
    New ctrl vector for $pmux cell $procmux$773: { $procmux$771_CMP $procmux$769_CMP $auto$opt_reduce.cc:134:opt_mux$2003 $auto$opt_reduce.cc:134:opt_mux$2001 $procmux$767_CMP $auto$opt_reduce.cc:134:opt_mux$1999 $procmux$765_CMP $procmux$760_CMP $auto$opt_reduce.cc:134:opt_mux$1997 $procmux$757_CMP $auto$opt_reduce.cc:134:opt_mux$2276 $auto$opt_reduce.cc:134:opt_mux$1989 $procmux$747_CMP }
    New ctrl vector for $pmux cell $procmux$821: { $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1714$575_Y $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1714$576_Y $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1714$578_Y $procmux$896_CMP $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1715$580_Y $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1715$582_Y $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1715$584_Y $procmux$883_CMP $eq$/home/zhigang/raw_data/raw_designs/opencores/communication_controller/sgmii.v:1733$597_Y $auto$opt_reduce.cc:134:opt_mux$2011 $procmux$843_CMP $procmux$839_CMP $procmux$838_CMP $auto$opt_reduce.cc:134:opt_mux$2009 $procmux$833_CMP $procmux$823_CMP $auto$opt_reduce.cc:134:opt_mux$2278 }
  Optimizing cells in module \mTransmit.
Performed a total of 4 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo'.
Finding identical cells in module `\mANCtrl'.
<suppressed ~18 debug messages>
Finding identical cells in module `\mClkBuf'.
Finding identical cells in module `\mRateAdapter'.
<suppressed ~12 debug messages>
Finding identical cells in module `\mReceive'.
Finding identical cells in module `\mRegisters'.
Finding identical cells in module `\mSGMII'.
<suppressed ~3 debug messages>
Finding identical cells in module `\mSyncCtrl'.
<suppressed ~9 debug messages>
Finding identical cells in module `\mTransmit'.
Removed a total of 14 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo..
Finding unused cells or wires in module \mANCtrl..
Finding unused cells or wires in module \mClkBuf..
Finding unused cells or wires in module \mRateAdapter..
Finding unused cells or wires in module \mReceive..
Finding unused cells or wires in module \mRegisters..
Finding unused cells or wires in module \mSGMII..
Finding unused cells or wires in module \mSyncCtrl..
Finding unused cells or wires in module \mTransmit..
Removed 0 unused cells and 14 unused wires.
<suppressed ~4 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Optimizing module mANCtrl.
Optimizing module mClkBuf.
Optimizing module mRateAdapter.
Optimizing module mReceive.
Optimizing module mRegisters.
Optimizing module mSGMII.
Optimizing module mSyncCtrl.
Optimizing module mTransmit.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mANCtrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mClkBuf..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mRateAdapter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mReceive..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mRegisters..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mSGMII..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mSyncCtrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \mTransmit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~75 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
  Optimizing cells in module \mANCtrl.
  Optimizing cells in module \mClkBuf.
  Optimizing cells in module \mRateAdapter.
  Optimizing cells in module \mReceive.
  Optimizing cells in module \mRegisters.
  Optimizing cells in module \mSGMII.
  Optimizing cells in module \mSyncCtrl.
  Optimizing cells in module \mTransmit.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo'.
Finding identical cells in module `\mANCtrl'.
Finding identical cells in module `\mClkBuf'.
Finding identical cells in module `\mRateAdapter'.
Finding identical cells in module `\mReceive'.
Finding identical cells in module `\mRegisters'.
Finding identical cells in module `\mSGMII'.
Finding identical cells in module `\mSyncCtrl'.
Finding identical cells in module `\mTransmit'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo..
Finding unused cells or wires in module \mANCtrl..
Finding unused cells or wires in module \mClkBuf..
Finding unused cells or wires in module \mRateAdapter..
Finding unused cells or wires in module \mReceive..
Finding unused cells or wires in module \mRegisters..
Finding unused cells or wires in module \mSGMII..
Finding unused cells or wires in module \mSyncCtrl..
Finding unused cells or wires in module \mTransmit..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo.
Optimizing module mANCtrl.
Optimizing module mClkBuf.
Optimizing module mRateAdapter.
Optimizing module mReceive.
Optimizing module mRegisters.
Optimizing module mSGMII.
Optimizing module mSyncCtrl.
Optimizing module mTransmit.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Printing statistics.

=== $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo ===

   Number of wires:                 44
   Number of wire bits:            230
   Number of public wires:          17
   Number of public wire bits:      75
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 39
     $add                            3
     $adffe                          3
     $and                            4
     $dffe                           4
     $eq                             7
     $logic_not                      3
     $mux                            4
     $not                            4
     $pmux                           1
     $reduce_and                     4
     $reduce_bool                    1
     $sub                            1

=== mANCtrl ===

   Number of wires:                153
   Number of wire bits:            636
   Number of public wires:          29
   Number of public wire bits:     171
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                143
     $add                            4
     $adffe                          8
     $dffe                           1
     $eq                            18
     $logic_and                     14
     $logic_not                      2
     $logic_or                       6
     $mux                           41
     $ne                            14
     $not                            4
     $or                             1
     $pmux                           6
     $reduce_and                     6
     $reduce_bool                   10
     $reduce_or                      4
     $sdffce                         3
     $xor                            1

=== mClkBuf ===

   Number of wires:                  2
   Number of wire bits:              2
   Number of public wires:           2
   Number of public wire bits:       2
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== mRateAdapter ===

   Number of wires:                 59
   Number of wire bits:            131
   Number of public wires:          34
   Number of public wire bits:      93
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 48
     $add                            1
     $and                            2
     $dff                            3
     $dffe                           8
     $eq                             3
     $logic_and                      1
     $logic_not                      1
     $logic_or                       1
     $mux                           13
     $ne                             1
     $not                            5
     $or                             2
     $reduce_and                     2
     $reduce_bool                    2
     $reduce_or                      1
     $sdff                           2

=== mReceive ===

   Number of wires:                199
   Number of wire bits:            829
   Number of public wires:          41
   Number of public wire bits:     104
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                174
     $adff                           1
     $adffe                          6
     $and                           16
     $dlatch                         1
     $eq                            37
     $logic_and                     24
     $logic_not                      3
     $logic_or                       6
     $mux                           38
     $ne                             4
     $not                           19
     $or                             3
     $pmux                           5
     $reduce_and                     1
     $reduce_bool                    4
     $reduce_or                      6

=== mRegisters ===

   Number of wires:                 82
   Number of wire bits:            412
   Number of public wires:          47
   Number of public wire bits:     314
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 57
     $adff                           1
     $adffe                          7
     $and                            6
     $dffe                           4
     $eq                             8
     $logic_and                      6
     $logic_not                      1
     $mux                            9
     $not                            5
     $or                             7
     $pmux                           1
     $reduce_and                     1
     $reduce_bool                    1

=== mSGMII ===

   Number of wires:                184
   Number of wire bits:            488
   Number of public wires:         124
   Number of public wire bits:     398
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                111
     $add                            1
     $adffe                          2
     $and                           16
     $dff                           17
     $dffe                           1
     $eq                            15
     $logic_and                     15
     $logic_not                      1
     $mux                           21
     $ne                             2
     $not                            9
     $reduce_and                     2
     $reduce_bool                    1
     mANCtrl                         1
     mAltA5GXlvds                    1
     mClkBuf                         1
     mRateAdapter                    1
     mReceive                        1
     mRegisters                      1
     mSyncCtrl                       1
     mTransmit                       1

=== mSyncCtrl ===

   Number of wires:                135
   Number of wire bits:            424
   Number of public wires:          43
   Number of public wire bits:      74
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                121
     $add                            2
     $adff                           3
     $adffe                          2
     $and                            3
     $dffe                           9
     $eq                            25
     $logic_and                     16
     $logic_or                       9
     $mux                           25
     $ne                             7
     $not                            4
     $or                             5
     $pmux                           1
     $reduce_and                     5
     $reduce_bool                    3
     $sdffce                         1
     $xor                            1

=== mTransmit ===

   Number of wires:                203
   Number of wire bits:            780
   Number of public wires:          30
   Number of public wire bits:     132
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                189
     $adff                           3
     $adffe                          4
     $and                           28
     $dffe                           1
     $dlatch                         1
     $eq                            47
     $logic_and                     10
     $logic_or                      13
     $mux                           27
     $ne                             2
     $not                           28
     $or                             1
     $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo      1
     $pmux                           5
     $reduce_and                     1
     $reduce_bool                    4
     $reduce_or                     13

=== design hierarchy ===

   mSGMII                            1
     mANCtrl                         1
     mClkBuf                         1
     mRateAdapter                    1
     mReceive                        1
     mRegisters                      1
     mSyncCtrl                       1
     mTransmit                       1
       $paramod$8d228aa2ed3433a925fe902346ee229814a29442\mSyncFifo      1

   Number of wires:               1061
   Number of wire bits:           3932
   Number of public wires:         367
   Number of public wire bits:    1363
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                874
     $add                           11
     $adff                           8
     $adffe                         32
     $and                           75
     $dff                           20
     $dffe                          28
     $dlatch                         2
     $eq                           160
     $logic_and                     86
     $logic_not                     11
     $logic_or                      35
     $mux                          178
     $ne                            30
     $not                           78
     $or                            19
     $pmux                          19
     $reduce_and                    22
     $reduce_bool                   26
     $reduce_or                     24
     $sdff                           2
     $sdffce                         4
     $sub                            1
     $xor                            2
     mAltA5GXlvds                    1

Warnings: 5 unique messages, 6 total
End of script. Logfile hash: 6ec5aa9770, CPU: user 0.64s system 0.01s, MEM: 21.11 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 32% 5x opt_expr (0 sec), 15% 4x opt_merge (0 sec), ...
