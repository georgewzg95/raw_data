
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/arithmetic//vedic8x8.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/arithmetic//vedic8x8.v' to AST representation.
Generating RTLIL representation for module `\vedic8x8'.
/home/zhigang/raw_data/raw_designs/opencores/arithmetic//vedic8x8.v:14: Warning: Identifier `\carry1' is implicitly declared.
Generating RTLIL representation for module `\vedic4x4'.
Generating RTLIL representation for module `\vedic2x2'.
Generating RTLIL representation for module `\ripple_adder_12bit'.
Generating RTLIL representation for module `\ripple_adder_8bit'.
Generating RTLIL representation for module `\ripple_adder_6bit'.
Generating RTLIL representation for module `\ripple_adder_4bit'.
Generating RTLIL representation for module `\full_adder'.
Generating RTLIL representation for module `\half_adder'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: half_adder          
root of   1 design levels: full_adder          
root of   2 design levels: ripple_adder_4bit   
root of   2 design levels: ripple_adder_6bit   
root of   3 design levels: ripple_adder_8bit   
root of   3 design levels: ripple_adder_12bit  
root of   1 design levels: vedic2x2            
root of   3 design levels: vedic4x4            
root of   4 design levels: vedic8x8            
Automatically selected vedic8x8 as design top module.

2.2. Analyzing design hierarchy..
Top module:  \vedic8x8
Used module:     \ripple_adder_12bit
Used module:         \ripple_adder_6bit
Used module:             \full_adder
Used module:                 \half_adder
Used module:     \ripple_adder_8bit
Used module:         \ripple_adder_4bit
Used module:     \vedic4x4
Used module:         \vedic2x2

2.3. Analyzing design hierarchy..
Top module:  \vedic8x8
Used module:     \ripple_adder_12bit
Used module:         \ripple_adder_6bit
Used module:             \full_adder
Used module:                 \half_adder
Used module:     \ripple_adder_8bit
Used module:         \ripple_adder_4bit
Used module:     \vedic4x4
Used module:         \vedic2x2
Removed 0 unused modules.
Mapping positional arguments of cell full_adder.HA1 (half_adder).
Mapping positional arguments of cell full_adder.HA0 (half_adder).
Mapping positional arguments of cell ripple_adder_4bit.FA3 (full_adder).
Mapping positional arguments of cell ripple_adder_4bit.FA2 (full_adder).
Mapping positional arguments of cell ripple_adder_4bit.FA1 (full_adder).
Mapping positional arguments of cell ripple_adder_4bit.FA0 (full_adder).
Mapping positional arguments of cell ripple_adder_6bit.FA5 (full_adder).
Mapping positional arguments of cell ripple_adder_6bit.FA4 (full_adder).
Mapping positional arguments of cell ripple_adder_6bit.FA3 (full_adder).
Mapping positional arguments of cell ripple_adder_6bit.FA2 (full_adder).
Mapping positional arguments of cell ripple_adder_6bit.FA1 (full_adder).
Mapping positional arguments of cell ripple_adder_6bit.FA0 (full_adder).
Mapping positional arguments of cell ripple_adder_8bit.RA1 (ripple_adder_4bit).
Mapping positional arguments of cell ripple_adder_8bit.RA0 (ripple_adder_4bit).
Mapping positional arguments of cell ripple_adder_12bit.RA1 (ripple_adder_6bit).
Mapping positional arguments of cell ripple_adder_12bit.RA0 (ripple_adder_6bit).
Mapping positional arguments of cell vedic2x2.HA1 (half_adder).
Mapping positional arguments of cell vedic2x2.HA0 (half_adder).
Mapping positional arguments of cell vedic4x4.RA2 (ripple_adder_6bit).
Mapping positional arguments of cell vedic4x4.RA1 (ripple_adder_6bit).
Mapping positional arguments of cell vedic4x4.RA0 (ripple_adder_4bit).
Mapping positional arguments of cell vedic4x4.VD3 (vedic2x2).
Mapping positional arguments of cell vedic4x4.VD2 (vedic2x2).
Mapping positional arguments of cell vedic4x4.VD1 (vedic2x2).
Mapping positional arguments of cell vedic4x4.VD0 (vedic2x2).
Mapping positional arguments of cell vedic8x8.RA2 (ripple_adder_12bit).
Mapping positional arguments of cell vedic8x8.RA1 (ripple_adder_12bit).
Mapping positional arguments of cell vedic8x8.RA0 (ripple_adder_8bit).
Mapping positional arguments of cell vedic8x8.VD3 (vedic4x4).
Mapping positional arguments of cell vedic8x8.VD2 (vedic4x4).
Mapping positional arguments of cell vedic8x8.VD1 (vedic4x4).
Mapping positional arguments of cell vedic8x8.VD0 (vedic4x4).

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: bcaa99f732, CPU: user 0.01s system 0.00s, MEM: 11.10 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 99% 2x read_verilog (0 sec), 0% 1x hierarchy (0 sec)
