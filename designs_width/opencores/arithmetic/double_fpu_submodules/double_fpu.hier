
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)


-- Executing script file `out.ys' --

1. Executing Verilog-2005 frontend: /home/zhigang/raw_data/raw_designs/opencores/arithmetic//double_fpu.v
Parsing SystemVerilog input from `/home/zhigang/raw_data/raw_designs/opencores/arithmetic//double_fpu.v' to AST representation.
Generating RTLIL representation for module `\fpu_add'.
Generating RTLIL representation for module `\fpu_div'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/opencores/arithmetic//double_fpu.v:426.1-482.12 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/opencores/arithmetic//double_fpu.v:484.1-540.12 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\fpu'.
/home/zhigang/raw_data/raw_designs/opencores/arithmetic//double_fpu.v:691: Warning: Identifier `\except_enable' is implicitly declared.
Generating RTLIL representation for module `\fpu_exceptions'.
Generating RTLIL representation for module `\fpu_mul'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/opencores/arithmetic//double_fpu.v:1337.1-1395.9 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\fpu_round'.
Generating RTLIL representation for module `\fpu_sub'.
Note: Assuming pure combinatorial block at /home/zhigang/raw_data/raw_designs/opencores/arithmetic//double_fpu.v:1646.1-1704.9 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: fpu_sub             
root of   0 design levels: fpu_round           
root of   0 design levels: fpu_mul             
root of   0 design levels: fpu_exceptions      
root of   1 design levels: fpu                 
root of   0 design levels: fpu_div             
root of   0 design levels: fpu_add             
Automatically selected fpu as design top module.

2.2. Analyzing design hierarchy..
Top module:  \fpu
Used module:     \fpu_exceptions
Used module:     \fpu_round
Used module:     \fpu_div
Used module:     \fpu_mul
Used module:     \fpu_sub
Used module:     \fpu_add

2.3. Analyzing design hierarchy..
Top module:  \fpu
Used module:     \fpu_exceptions
Used module:     \fpu_round
Used module:     \fpu_div
Used module:     \fpu_mul
Used module:     \fpu_sub
Used module:     \fpu_add
Removed 0 unused modules.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: fa2e190904, CPU: user 0.08s system 0.00s, MEM: 19.12 MB peak
Yosys 0.10+12 (git sha1 72fac04, gcc 7.4.0-1ubuntu1~16.04~ppa1 -fPIC -Os)
Time spent: 95% 2x read_verilog (0 sec), 4% 1x hierarchy (0 sec)
